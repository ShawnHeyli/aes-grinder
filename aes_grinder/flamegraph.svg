<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1750" onload="init(evt)" viewBox="0 0 1200 1750" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1750" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1733.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1733.00"> </text><svg id="frames" x="10" width="1180" total_samples="32511"><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="0.0062%" y="1637" width="0.0154%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="5"/><text x="0.2562%" y="1647.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="0.0062%" y="1621" width="0.0154%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="5"/><text x="0.2562%" y="1631.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="0.0062%" y="1653" width="0.0492%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="16"/><text x="0.2562%" y="1663.50"></text></g><g><title>[unknown] (11 samples, 0.03%)</title><rect x="0.0215%" y="1637" width="0.0338%" height="15" fill="rgb(248,212,6)" fg:x="7" fg:w="11"/><text x="0.2715%" y="1647.50"></text></g><g><title>[[heap]] (18 samples, 0.06%)</title><rect x="0.0031%" y="1669" width="0.0554%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="18"/><text x="0.2531%" y="1679.50"></text></g><g><title>[[stack]] (13 samples, 0.04%)</title><rect x="0.0584%" y="1669" width="0.0400%" height="15" fill="rgb(232,128,0)" fg:x="19" fg:w="13"/><text x="0.3084%" y="1679.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="0.0677%" y="1653" width="0.0308%" height="15" fill="rgb(207,160,47)" fg:x="22" fg:w="10"/><text x="0.3177%" y="1663.50"></text></g><g><title>[unknown] (10 samples, 0.03%)</title><rect x="0.0677%" y="1637" width="0.0308%" height="15" fill="rgb(228,23,34)" fg:x="22" fg:w="10"/><text x="0.3177%" y="1647.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.02%)</title><rect x="0.1015%" y="1653" width="0.0185%" height="15" fill="rgb(218,30,26)" fg:x="33" fg:w="6"/><text x="0.3515%" y="1663.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 0.03%)</title><rect x="0.0984%" y="1669" width="0.0277%" height="15" fill="rgb(220,122,19)" fg:x="32" fg:w="9"/><text x="0.3484%" y="1679.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="0.1261%" y="1653" width="0.0185%" height="15" fill="rgb(250,228,42)" fg:x="41" fg:w="6"/><text x="0.3761%" y="1663.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="0.1261%" y="1637" width="0.0185%" height="15" fill="rgb(240,193,28)" fg:x="41" fg:w="6"/><text x="0.3761%" y="1647.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="0.1261%" y="1669" width="0.0677%" height="15" fill="rgb(216,20,37)" fg:x="41" fg:w="22"/><text x="0.3761%" y="1679.50"></text></g><g><title>[unknown] (16 samples, 0.05%)</title><rect x="0.1446%" y="1653" width="0.0492%" height="15" fill="rgb(206,188,39)" fg:x="47" fg:w="16"/><text x="0.3946%" y="1663.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="0.1722%" y="1637" width="0.0215%" height="15" fill="rgb(217,207,13)" fg:x="56" fg:w="7"/><text x="0.4222%" y="1647.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="0.1938%" y="1653" width="0.0984%" height="15" fill="rgb(231,73,38)" fg:x="63" fg:w="32"/><text x="0.4438%" y="1663.50"></text></g><g><title>[unknown] (30 samples, 0.09%)</title><rect x="0.1999%" y="1637" width="0.0923%" height="15" fill="rgb(225,20,46)" fg:x="65" fg:w="30"/><text x="0.4499%" y="1647.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="0.2707%" y="1621" width="0.0215%" height="15" fill="rgb(210,31,41)" fg:x="88" fg:w="7"/><text x="0.5207%" y="1631.50"></text></g><g><title>[unknown] (35 samples, 0.11%)</title><rect x="0.1938%" y="1669" width="0.1077%" height="15" fill="rgb(221,200,47)" fg:x="63" fg:w="35"/><text x="0.4438%" y="1679.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (4 samples, 0.01%)</title><rect x="0.3076%" y="1029" width="0.0123%" height="15" fill="rgb(226,26,5)" fg:x="100" fg:w="4"/><text x="0.5576%" y="1039.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.3076%" y="1013" width="0.0123%" height="15" fill="rgb(249,33,26)" fg:x="100" fg:w="4"/><text x="0.5576%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="0.3076%" y="1061" width="0.0154%" height="15" fill="rgb(235,183,28)" fg:x="100" fg:w="5"/><text x="0.5576%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="0.3076%" y="1045" width="0.0154%" height="15" fill="rgb(221,5,38)" fg:x="100" fg:w="5"/><text x="0.5576%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="0.3045%" y="1125" width="0.0246%" height="15" fill="rgb(247,18,42)" fg:x="99" fg:w="8"/><text x="0.5545%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="0.3045%" y="1109" width="0.0246%" height="15" fill="rgb(241,131,45)" fg:x="99" fg:w="8"/><text x="0.5545%" y="1119.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.02%)</title><rect x="0.3045%" y="1093" width="0.0246%" height="15" fill="rgb(249,31,29)" fg:x="99" fg:w="8"/><text x="0.5545%" y="1103.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="0.3045%" y="1077" width="0.0246%" height="15" fill="rgb(225,111,53)" fg:x="99" fg:w="8"/><text x="0.5545%" y="1087.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (11 samples, 0.03%)</title><rect x="0.3045%" y="1157" width="0.0338%" height="15" fill="rgb(238,160,17)" fg:x="99" fg:w="11"/><text x="0.5545%" y="1167.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="0.3045%" y="1141" width="0.0338%" height="15" fill="rgb(214,148,48)" fg:x="99" fg:w="11"/><text x="0.5545%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="0.3045%" y="1189" width="0.0369%" height="15" fill="rgb(232,36,49)" fg:x="99" fg:w="12"/><text x="0.5545%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="0.3045%" y="1173" width="0.0369%" height="15" fill="rgb(209,103,24)" fg:x="99" fg:w="12"/><text x="0.5545%" y="1183.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.04%)</title><rect x="0.3045%" y="1221" width="0.0400%" height="15" fill="rgb(229,88,8)" fg:x="99" fg:w="13"/><text x="0.5545%" y="1231.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="0.3045%" y="1205" width="0.0400%" height="15" fill="rgb(213,181,19)" fg:x="99" fg:w="13"/><text x="0.5545%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="0.3045%" y="1253" width="0.0461%" height="15" fill="rgb(254,191,54)" fg:x="99" fg:w="15"/><text x="0.5545%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="0.3045%" y="1237" width="0.0461%" height="15" fill="rgb(241,83,37)" fg:x="99" fg:w="15"/><text x="0.5545%" y="1247.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.05%)</title><rect x="0.3045%" y="1285" width="0.0492%" height="15" fill="rgb(233,36,39)" fg:x="99" fg:w="16"/><text x="0.5545%" y="1295.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="0.3045%" y="1269" width="0.0492%" height="15" fill="rgb(226,3,54)" fg:x="99" fg:w="16"/><text x="0.5545%" y="1279.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="0.3045%" y="1365" width="0.0523%" height="15" fill="rgb(245,192,40)" fg:x="99" fg:w="17"/><text x="0.5545%" y="1375.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (17 samples, 0.05%)</title><rect x="0.3045%" y="1349" width="0.0523%" height="15" fill="rgb(238,167,29)" fg:x="99" fg:w="17"/><text x="0.5545%" y="1359.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="0.3045%" y="1333" width="0.0523%" height="15" fill="rgb(232,182,51)" fg:x="99" fg:w="17"/><text x="0.5545%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="0.3045%" y="1317" width="0.0523%" height="15" fill="rgb(231,60,39)" fg:x="99" fg:w="17"/><text x="0.5545%" y="1327.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="0.3045%" y="1301" width="0.0523%" height="15" fill="rgb(208,69,12)" fg:x="99" fg:w="17"/><text x="0.5545%" y="1311.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="0.3568%" y="1093" width="0.0123%" height="15" fill="rgb(235,93,37)" fg:x="116" fg:w="4"/><text x="0.6068%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="0.3568%" y="1125" width="0.0154%" height="15" fill="rgb(213,116,39)" fg:x="116" fg:w="5"/><text x="0.6068%" y="1135.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="0.3568%" y="1109" width="0.0154%" height="15" fill="rgb(222,207,29)" fg:x="116" fg:w="5"/><text x="0.6068%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="0.3568%" y="1189" width="0.0185%" height="15" fill="rgb(206,96,30)" fg:x="116" fg:w="6"/><text x="0.6068%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="0.3568%" y="1173" width="0.0185%" height="15" fill="rgb(218,138,4)" fg:x="116" fg:w="6"/><text x="0.6068%" y="1183.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="0.3568%" y="1157" width="0.0185%" height="15" fill="rgb(250,191,14)" fg:x="116" fg:w="6"/><text x="0.6068%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="0.3568%" y="1141" width="0.0185%" height="15" fill="rgb(239,60,40)" fg:x="116" fg:w="6"/><text x="0.6068%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="0.3568%" y="1237" width="0.0215%" height="15" fill="rgb(206,27,48)" fg:x="116" fg:w="7"/><text x="0.6068%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="0.3568%" y="1221" width="0.0215%" height="15" fill="rgb(225,35,8)" fg:x="116" fg:w="7"/><text x="0.6068%" y="1231.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="0.3568%" y="1205" width="0.0215%" height="15" fill="rgb(250,213,24)" fg:x="116" fg:w="7"/><text x="0.6068%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="0.3568%" y="1269" width="0.0246%" height="15" fill="rgb(247,123,22)" fg:x="116" fg:w="8"/><text x="0.6068%" y="1279.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="0.3568%" y="1253" width="0.0246%" height="15" fill="rgb(231,138,38)" fg:x="116" fg:w="8"/><text x="0.6068%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (9 samples, 0.03%)</title><rect x="0.3568%" y="1285" width="0.0277%" height="15" fill="rgb(231,145,46)" fg:x="116" fg:w="9"/><text x="0.6068%" y="1295.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="0.3568%" y="1349" width="0.0308%" height="15" fill="rgb(251,118,11)" fg:x="116" fg:w="10"/><text x="0.6068%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="0.3568%" y="1333" width="0.0308%" height="15" fill="rgb(217,147,25)" fg:x="116" fg:w="10"/><text x="0.6068%" y="1343.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="0.3568%" y="1317" width="0.0308%" height="15" fill="rgb(247,81,37)" fg:x="116" fg:w="10"/><text x="0.6068%" y="1327.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="0.3568%" y="1301" width="0.0308%" height="15" fill="rgb(209,12,38)" fg:x="116" fg:w="10"/><text x="0.6068%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (9 samples, 0.03%)</title><rect x="0.3937%" y="1333" width="0.0277%" height="15" fill="rgb(227,1,9)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (9 samples, 0.03%)</title><rect x="0.3937%" y="1317" width="0.0277%" height="15" fill="rgb(248,47,43)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1327.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (9 samples, 0.03%)</title><rect x="0.3937%" y="1301" width="0.0277%" height="15" fill="rgb(221,10,30)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="0.3937%" y="1285" width="0.0277%" height="15" fill="rgb(210,229,1)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="0.3937%" y="1269" width="0.0277%" height="15" fill="rgb(222,148,37)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1279.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (9 samples, 0.03%)</title><rect x="0.3937%" y="1253" width="0.0277%" height="15" fill="rgb(234,67,33)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (9 samples, 0.03%)</title><rect x="0.3937%" y="1237" width="0.0277%" height="15" fill="rgb(247,98,35)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions::_{{closure}} (9 samples, 0.03%)</title><rect x="0.3937%" y="1221" width="0.0277%" height="15" fill="rgb(247,138,52)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1231.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (9 samples, 0.03%)</title><rect x="0.3937%" y="1205" width="0.0277%" height="15" fill="rgb(213,79,30)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1215.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_contained_in (9 samples, 0.03%)</title><rect x="0.3937%" y="1189" width="0.0277%" height="15" fill="rgb(246,177,23)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1199.50"></text></g><g><title>core::str::pattern::simd_contains (9 samples, 0.03%)</title><rect x="0.3937%" y="1173" width="0.0277%" height="15" fill="rgb(230,62,27)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (9 samples, 0.03%)</title><rect x="0.3937%" y="1157" width="0.0277%" height="15" fill="rgb(216,154,8)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.03%)</title><rect x="0.3937%" y="1141" width="0.0277%" height="15" fill="rgb(244,35,45)" fg:x="128" fg:w="9"/><text x="0.6437%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any::check::_{{closure}} (5 samples, 0.02%)</title><rect x="0.4060%" y="1125" width="0.0154%" height="15" fill="rgb(251,115,12)" fg:x="132" fg:w="5"/><text x="0.6560%" y="1135.50"></text></g><g><title>core::str::pattern::simd_contains::_{{closure}} (4 samples, 0.01%)</title><rect x="0.4091%" y="1109" width="0.0123%" height="15" fill="rgb(240,54,50)" fg:x="133" fg:w="4"/><text x="0.6591%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="0.4091%" y="1093" width="0.0123%" height="15" fill="rgb(233,84,52)" fg:x="133" fg:w="4"/><text x="0.6591%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.01%)</title><rect x="0.4091%" y="1077" width="0.0123%" height="15" fill="rgb(207,117,47)" fg:x="133" fg:w="4"/><text x="0.6591%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="0.4091%" y="1061" width="0.0123%" height="15" fill="rgb(249,43,39)" fg:x="133" fg:w="4"/><text x="0.6591%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="0.4245%" y="1221" width="0.0185%" height="15" fill="rgb(209,38,44)" fg:x="138" fg:w="6"/><text x="0.6745%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="0.4245%" y="1253" width="0.0215%" height="15" fill="rgb(236,212,23)" fg:x="138" fg:w="7"/><text x="0.6745%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.02%)</title><rect x="0.4245%" y="1237" width="0.0215%" height="15" fill="rgb(242,79,21)" fg:x="138" fg:w="7"/><text x="0.6745%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_all_variables (9 samples, 0.03%)</title><rect x="0.4214%" y="1333" width="0.0277%" height="15" fill="rgb(211,96,35)" fg:x="137" fg:w="9"/><text x="0.6714%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.03%)</title><rect x="0.4214%" y="1317" width="0.0277%" height="15" fill="rgb(253,215,40)" fg:x="137" fg:w="9"/><text x="0.6714%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="0.4214%" y="1301" width="0.0277%" height="15" fill="rgb(211,81,21)" fg:x="137" fg:w="9"/><text x="0.6714%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="0.4214%" y="1285" width="0.0277%" height="15" fill="rgb(208,190,38)" fg:x="137" fg:w="9"/><text x="0.6714%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.02%)</title><rect x="0.4245%" y="1269" width="0.0246%" height="15" fill="rgb(235,213,38)" fg:x="138" fg:w="8"/><text x="0.6745%" y="1279.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (7 samples, 0.02%)</title><rect x="0.4583%" y="1317" width="0.0215%" height="15" fill="rgb(237,122,38)" fg:x="149" fg:w="7"/><text x="0.7083%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="0.4614%" y="1301" width="0.0185%" height="15" fill="rgb(244,218,35)" fg:x="150" fg:w="6"/><text x="0.7114%" y="1311.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="0.5044%" y="1173" width="0.0215%" height="15" fill="rgb(240,68,47)" fg:x="164" fg:w="7"/><text x="0.7544%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (35 samples, 0.11%)</title><rect x="0.4983%" y="1221" width="0.1077%" height="15" fill="rgb(210,16,53)" fg:x="162" fg:w="35"/><text x="0.7483%" y="1231.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (35 samples, 0.11%)</title><rect x="0.4983%" y="1205" width="0.1077%" height="15" fill="rgb(235,124,12)" fg:x="162" fg:w="35"/><text x="0.7483%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (35 samples, 0.11%)</title><rect x="0.4983%" y="1189" width="0.1077%" height="15" fill="rgb(224,169,11)" fg:x="162" fg:w="35"/><text x="0.7483%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (26 samples, 0.08%)</title><rect x="0.5260%" y="1173" width="0.0800%" height="15" fill="rgb(250,166,2)" fg:x="171" fg:w="26"/><text x="0.7760%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (5 samples, 0.02%)</title><rect x="0.6059%" y="1221" width="0.0154%" height="15" fill="rgb(242,216,29)" fg:x="197" fg:w="5"/><text x="0.8559%" y="1231.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="0.6059%" y="1205" width="0.0154%" height="15" fill="rgb(230,116,27)" fg:x="197" fg:w="5"/><text x="0.8559%" y="1215.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="0.6213%" y="1125" width="0.0369%" height="15" fill="rgb(228,99,48)" fg:x="202" fg:w="12"/><text x="0.8713%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (57 samples, 0.18%)</title><rect x="0.4983%" y="1253" width="0.1753%" height="15" fill="rgb(253,11,6)" fg:x="162" fg:w="57"/><text x="0.7483%" y="1263.50"></text></g><g><title>core::hash::BuildHasher::hash_one (57 samples, 0.18%)</title><rect x="0.4983%" y="1237" width="0.1753%" height="15" fill="rgb(247,143,39)" fg:x="162" fg:w="57"/><text x="0.7483%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.05%)</title><rect x="0.6213%" y="1221" width="0.0523%" height="15" fill="rgb(236,97,10)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (17 samples, 0.05%)</title><rect x="0.6213%" y="1205" width="0.0523%" height="15" fill="rgb(233,208,19)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.05%)</title><rect x="0.6213%" y="1189" width="0.0523%" height="15" fill="rgb(216,164,2)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (17 samples, 0.05%)</title><rect x="0.6213%" y="1173" width="0.0523%" height="15" fill="rgb(220,129,5)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (17 samples, 0.05%)</title><rect x="0.6213%" y="1157" width="0.0523%" height="15" fill="rgb(242,17,10)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (17 samples, 0.05%)</title><rect x="0.6213%" y="1141" width="0.0523%" height="15" fill="rgb(242,107,0)" fg:x="202" fg:w="17"/><text x="0.8713%" y="1151.50"></text></g><g><title>core::hash::Hasher::write_u8 (5 samples, 0.02%)</title><rect x="0.6582%" y="1125" width="0.0154%" height="15" fill="rgb(251,28,31)" fg:x="214" fg:w="5"/><text x="0.9082%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="0.6582%" y="1109" width="0.0154%" height="15" fill="rgb(233,223,10)" fg:x="214" fg:w="5"/><text x="0.9082%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="0.7167%" y="1205" width="0.0215%" height="15" fill="rgb(215,21,27)" fg:x="233" fg:w="7"/><text x="0.9667%" y="1215.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="0.7259%" y="1189" width="0.0123%" height="15" fill="rgb(232,23,21)" fg:x="236" fg:w="4"/><text x="0.9759%" y="1199.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6 samples, 0.02%)</title><rect x="0.7413%" y="1189" width="0.0185%" height="15" fill="rgb(244,5,23)" fg:x="241" fg:w="6"/><text x="0.9913%" y="1199.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.02%)</title><rect x="0.7413%" y="1173" width="0.0185%" height="15" fill="rgb(226,81,46)" fg:x="241" fg:w="6"/><text x="0.9913%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.02%)</title><rect x="0.7413%" y="1157" width="0.0185%" height="15" fill="rgb(247,70,30)" fg:x="241" fg:w="6"/><text x="0.9913%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="0.7413%" y="1141" width="0.0185%" height="15" fill="rgb(212,68,19)" fg:x="241" fg:w="6"/><text x="0.9913%" y="1151.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (6 samples, 0.02%)</title><rect x="0.7413%" y="1125" width="0.0185%" height="15" fill="rgb(240,187,13)" fg:x="241" fg:w="6"/><text x="0.9913%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (11 samples, 0.03%)</title><rect x="0.7382%" y="1205" width="0.0338%" height="15" fill="rgb(223,113,26)" fg:x="240" fg:w="11"/><text x="0.9882%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4 samples, 0.01%)</title><rect x="0.7597%" y="1189" width="0.0123%" height="15" fill="rgb(206,192,2)" fg:x="247" fg:w="4"/><text x="1.0097%" y="1199.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="0.7597%" y="1173" width="0.0123%" height="15" fill="rgb(241,108,4)" fg:x="247" fg:w="4"/><text x="1.0097%" y="1183.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (8 samples, 0.02%)</title><rect x="0.7720%" y="1205" width="0.0246%" height="15" fill="rgb(247,173,49)" fg:x="251" fg:w="8"/><text x="1.0220%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.02%)</title><rect x="0.7782%" y="1189" width="0.0185%" height="15" fill="rgb(224,114,35)" fg:x="253" fg:w="6"/><text x="1.0282%" y="1199.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="0.8059%" y="1189" width="0.0123%" height="15" fill="rgb(245,159,27)" fg:x="262" fg:w="4"/><text x="1.0559%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::ops::index::Index&lt;&amp;Q&gt;&gt;::index (111 samples, 0.34%)</title><rect x="0.4891%" y="1317" width="0.3414%" height="15" fill="rgb(245,172,44)" fg:x="159" fg:w="111"/><text x="0.7391%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (111 samples, 0.34%)</title><rect x="0.4891%" y="1301" width="0.3414%" height="15" fill="rgb(236,23,11)" fg:x="159" fg:w="111"/><text x="0.7391%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (111 samples, 0.34%)</title><rect x="0.4891%" y="1285" width="0.3414%" height="15" fill="rgb(205,117,38)" fg:x="159" fg:w="111"/><text x="0.7391%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (108 samples, 0.33%)</title><rect x="0.4983%" y="1269" width="0.3322%" height="15" fill="rgb(237,72,25)" fg:x="162" fg:w="108"/><text x="0.7483%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (51 samples, 0.16%)</title><rect x="0.6736%" y="1253" width="0.1569%" height="15" fill="rgb(244,70,9)" fg:x="219" fg:w="51"/><text x="0.9236%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48 samples, 0.15%)</title><rect x="0.6828%" y="1237" width="0.1476%" height="15" fill="rgb(217,125,39)" fg:x="222" fg:w="48"/><text x="0.9328%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (42 samples, 0.13%)</title><rect x="0.7013%" y="1221" width="0.1292%" height="15" fill="rgb(235,36,10)" fg:x="228" fg:w="42"/><text x="0.9513%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.03%)</title><rect x="0.7967%" y="1205" width="0.0338%" height="15" fill="rgb(251,123,47)" fg:x="259" fg:w="11"/><text x="1.0467%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.01%)</title><rect x="0.8182%" y="1189" width="0.0123%" height="15" fill="rgb(221,13,13)" fg:x="266" fg:w="4"/><text x="1.0682%" y="1199.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.01%)</title><rect x="0.8182%" y="1173" width="0.0123%" height="15" fill="rgb(238,131,9)" fg:x="266" fg:w="4"/><text x="1.0682%" y="1183.50"></text></g><g><title>aes_grinder::matrix::Matrix::new (5 samples, 0.02%)</title><rect x="0.8305%" y="1317" width="0.0154%" height="15" fill="rgb(211,50,8)" fg:x="270" fg:w="5"/><text x="1.0805%" y="1327.50"></text></g><g><title>alloc::vec::from_elem (5 samples, 0.02%)</title><rect x="0.8305%" y="1301" width="0.0154%" height="15" fill="rgb(245,182,24)" fg:x="270" fg:w="5"/><text x="1.0805%" y="1311.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (5 samples, 0.02%)</title><rect x="0.8305%" y="1285" width="0.0154%" height="15" fill="rgb(242,14,37)" fg:x="270" fg:w="5"/><text x="1.0805%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.8336%" y="1269" width="0.0123%" height="15" fill="rgb(246,228,12)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.8336%" y="1253" width="0.0123%" height="15" fill="rgb(213,55,15)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.01%)</title><rect x="0.8336%" y="1237" width="0.0123%" height="15" fill="rgb(209,9,3)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="0.8336%" y="1221" width="0.0123%" height="15" fill="rgb(230,59,30)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="0.8336%" y="1205" width="0.0123%" height="15" fill="rgb(209,121,21)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="0.8336%" y="1189" width="0.0123%" height="15" fill="rgb(220,109,13)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1199.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="0.8336%" y="1173" width="0.0123%" height="15" fill="rgb(232,18,1)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1183.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.8336%" y="1157" width="0.0123%" height="15" fill="rgb(215,41,42)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1167.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="0.8336%" y="1141" width="0.0123%" height="15" fill="rgb(224,123,36)" fg:x="271" fg:w="4"/><text x="1.0836%" y="1151.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="0.8459%" y="1285" width="0.0123%" height="15" fill="rgb(240,125,3)" fg:x="275" fg:w="4"/><text x="1.0959%" y="1295.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="0.8459%" y="1269" width="0.0123%" height="15" fill="rgb(205,98,50)" fg:x="275" fg:w="4"/><text x="1.0959%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (4 samples, 0.01%)</title><rect x="0.8582%" y="1205" width="0.0123%" height="15" fill="rgb(205,185,37)" fg:x="279" fg:w="4"/><text x="1.1082%" y="1215.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (4 samples, 0.01%)</title><rect x="0.8582%" y="1189" width="0.0123%" height="15" fill="rgb(238,207,15)" fg:x="279" fg:w="4"/><text x="1.1082%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="0.8582%" y="1173" width="0.0123%" height="15" fill="rgb(213,199,42)" fg:x="279" fg:w="4"/><text x="1.1082%" y="1183.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="0.8582%" y="1157" width="0.0123%" height="15" fill="rgb(235,201,11)" fg:x="279" fg:w="4"/><text x="1.1082%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (10 samples, 0.03%)</title><rect x="0.8582%" y="1269" width="0.0308%" height="15" fill="rgb(207,46,11)" fg:x="279" fg:w="10"/><text x="1.1082%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (10 samples, 0.03%)</title><rect x="0.8582%" y="1253" width="0.0308%" height="15" fill="rgb(241,35,35)" fg:x="279" fg:w="10"/><text x="1.1082%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (10 samples, 0.03%)</title><rect x="0.8582%" y="1237" width="0.0308%" height="15" fill="rgb(243,32,47)" fg:x="279" fg:w="10"/><text x="1.1082%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (10 samples, 0.03%)</title><rect x="0.8582%" y="1221" width="0.0308%" height="15" fill="rgb(247,202,23)" fg:x="279" fg:w="10"/><text x="1.1082%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (4 samples, 0.01%)</title><rect x="0.8766%" y="1205" width="0.0123%" height="15" fill="rgb(219,102,11)" fg:x="285" fg:w="4"/><text x="1.1266%" y="1215.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_matrix_generated_by (146 samples, 0.45%)</title><rect x="0.4491%" y="1333" width="0.4491%" height="15" fill="rgb(243,110,44)" fg:x="146" fg:w="146"/><text x="0.6991%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.05%)</title><rect x="0.8459%" y="1317" width="0.0523%" height="15" fill="rgb(222,74,54)" fg:x="275" fg:w="17"/><text x="1.0959%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (17 samples, 0.05%)</title><rect x="0.8459%" y="1301" width="0.0523%" height="15" fill="rgb(216,99,12)" fg:x="275" fg:w="17"/><text x="1.0959%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.04%)</title><rect x="0.8582%" y="1285" width="0.0400%" height="15" fill="rgb(226,22,26)" fg:x="279" fg:w="13"/><text x="1.1082%" y="1295.50"></text></g><g><title>aes_grinder::matrix::Matrix::is_in_echelon_form (18 samples, 0.06%)</title><rect x="0.8982%" y="1333" width="0.0554%" height="15" fill="rgb(217,163,10)" fg:x="292" fg:w="18"/><text x="1.1482%" y="1343.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_row (16 samples, 0.05%)</title><rect x="0.9043%" y="1317" width="0.0492%" height="15" fill="rgb(213,25,53)" fg:x="294" fg:w="16"/><text x="1.1543%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.03%)</title><rect x="0.9197%" y="1301" width="0.0338%" height="15" fill="rgb(252,105,26)" fg:x="299" fg:w="11"/><text x="1.1697%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.03%)</title><rect x="0.9228%" y="1285" width="0.0308%" height="15" fill="rgb(220,39,43)" fg:x="300" fg:w="10"/><text x="1.1728%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="0.9228%" y="1269" width="0.0308%" height="15" fill="rgb(229,68,48)" fg:x="300" fg:w="10"/><text x="1.1728%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.02%)</title><rect x="1.5502%" y="1285" width="0.0246%" height="15" fill="rgb(252,8,32)" fg:x="504" fg:w="8"/><text x="1.8002%" y="1295.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.02%)</title><rect x="1.5502%" y="1269" width="0.0246%" height="15" fill="rgb(223,20,43)" fg:x="504" fg:w="8"/><text x="1.8002%" y="1279.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.02%)</title><rect x="1.5502%" y="1253" width="0.0246%" height="15" fill="rgb(229,81,49)" fg:x="504" fg:w="8"/><text x="1.8002%" y="1263.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (8 samples, 0.02%)</title><rect x="1.5502%" y="1237" width="0.0246%" height="15" fill="rgb(236,28,36)" fg:x="504" fg:w="8"/><text x="1.8002%" y="1247.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (117 samples, 0.36%)</title><rect x="1.3165%" y="1317" width="0.3599%" height="15" fill="rgb(249,185,26)" fg:x="428" fg:w="117"/><text x="1.5665%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (85 samples, 0.26%)</title><rect x="1.4149%" y="1301" width="0.2614%" height="15" fill="rgb(249,174,33)" fg:x="460" fg:w="85"/><text x="1.6649%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (33 samples, 0.10%)</title><rect x="1.5749%" y="1285" width="0.1015%" height="15" fill="rgb(233,201,37)" fg:x="512" fg:w="33"/><text x="1.8249%" y="1295.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (30 samples, 0.09%)</title><rect x="1.5841%" y="1269" width="0.0923%" height="15" fill="rgb(221,78,26)" fg:x="515" fg:w="30"/><text x="1.8341%" y="1279.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (56 samples, 0.17%)</title><rect x="1.6764%" y="1317" width="0.1722%" height="15" fill="rgb(250,127,30)" fg:x="545" fg:w="56"/><text x="1.9264%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (42 samples, 0.13%)</title><rect x="1.7194%" y="1301" width="0.1292%" height="15" fill="rgb(230,49,44)" fg:x="559" fg:w="42"/><text x="1.9694%" y="1311.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (16 samples, 0.05%)</title><rect x="1.7994%" y="1285" width="0.0492%" height="15" fill="rgb(229,67,23)" fg:x="585" fg:w="16"/><text x="2.0494%" y="1295.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (11 samples, 0.03%)</title><rect x="1.8148%" y="1269" width="0.0338%" height="15" fill="rgb(249,83,47)" fg:x="590" fg:w="11"/><text x="2.0648%" y="1279.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::ops::arith::Add&gt;::add (24 samples, 0.07%)</title><rect x="1.8517%" y="1317" width="0.0738%" height="15" fill="rgb(215,43,3)" fg:x="602" fg:w="24"/><text x="2.1017%" y="1327.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::ops::arith::Mul&gt;::mul (116 samples, 0.36%)</title><rect x="1.9255%" y="1317" width="0.3568%" height="15" fill="rgb(238,154,13)" fg:x="626" fg:w="116"/><text x="2.1755%" y="1327.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="2.3807%" y="1157" width="0.0123%" height="15" fill="rgb(219,56,2)" fg:x="774" fg:w="4"/><text x="2.6307%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="2.3561%" y="1189" width="0.0431%" height="15" fill="rgb(233,0,4)" fg:x="766" fg:w="14"/><text x="2.6061%" y="1199.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="2.3777%" y="1173" width="0.0215%" height="15" fill="rgb(235,30,7)" fg:x="773" fg:w="7"/><text x="2.6277%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.10%)</title><rect x="2.3284%" y="1221" width="0.0984%" height="15" fill="rgb(250,79,13)" fg:x="757" fg:w="32"/><text x="2.5784%" y="1231.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (28 samples, 0.09%)</title><rect x="2.3407%" y="1205" width="0.0861%" height="15" fill="rgb(211,146,34)" fg:x="761" fg:w="28"/><text x="2.5907%" y="1215.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (5 samples, 0.02%)</title><rect x="2.4115%" y="1189" width="0.0154%" height="15" fill="rgb(228,22,38)" fg:x="784" fg:w="5"/><text x="2.6615%" y="1199.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="2.4115%" y="1173" width="0.0154%" height="15" fill="rgb(235,168,5)" fg:x="784" fg:w="5"/><text x="2.6615%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="2.4115%" y="1157" width="0.0154%" height="15" fill="rgb(221,155,16)" fg:x="784" fg:w="5"/><text x="2.6615%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.12%)</title><rect x="2.3069%" y="1253" width="0.1230%" height="15" fill="rgb(215,215,53)" fg:x="750" fg:w="40"/><text x="2.5569%" y="1263.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.12%)</title><rect x="2.3069%" y="1237" width="0.1230%" height="15" fill="rgb(223,4,10)" fg:x="750" fg:w="40"/><text x="2.5569%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::swap_columns (53 samples, 0.16%)</title><rect x="2.2823%" y="1269" width="0.1630%" height="15" fill="rgb(234,103,6)" fg:x="742" fg:w="53"/><text x="2.5323%" y="1279.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="2.4453%" y="1221" width="0.0185%" height="15" fill="rgb(227,97,0)" fg:x="795" fg:w="6"/><text x="2.6953%" y="1231.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="2.4453%" y="1205" width="0.0185%" height="15" fill="rgb(234,150,53)" fg:x="795" fg:w="6"/><text x="2.6953%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="2.4515%" y="1189" width="0.0123%" height="15" fill="rgb(228,201,54)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="2.4515%" y="1173" width="0.0123%" height="15" fill="rgb(222,22,37)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="2.4515%" y="1157" width="0.0123%" height="15" fill="rgb(237,53,32)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="2.4515%" y="1141" width="0.0123%" height="15" fill="rgb(233,25,53)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="2.4515%" y="1125" width="0.0123%" height="15" fill="rgb(210,40,34)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="2.4515%" y="1109" width="0.0123%" height="15" fill="rgb(241,220,44)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="2.4515%" y="1093" width="0.0123%" height="15" fill="rgb(235,28,35)" fg:x="797" fg:w="4"/><text x="2.7015%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (60 samples, 0.18%)</title><rect x="2.2823%" y="1301" width="0.1846%" height="15" fill="rgb(210,56,17)" fg:x="742" fg:w="60"/><text x="2.5323%" y="1311.50"></text></g><g><title>aes_grinder::matrix::Matrix::sort_left::_{{closure}} (60 samples, 0.18%)</title><rect x="2.2823%" y="1285" width="0.1846%" height="15" fill="rgb(224,130,29)" fg:x="742" fg:w="60"/><text x="2.5323%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="2.4453%" y="1269" width="0.0215%" height="15" fill="rgb(235,212,8)" fg:x="795" fg:w="7"/><text x="2.6953%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.02%)</title><rect x="2.4453%" y="1253" width="0.0215%" height="15" fill="rgb(223,33,50)" fg:x="795" fg:w="7"/><text x="2.6953%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="2.4453%" y="1237" width="0.0215%" height="15" fill="rgb(219,149,13)" fg:x="795" fg:w="7"/><text x="2.6953%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::sort_left (62 samples, 0.19%)</title><rect x="2.2823%" y="1317" width="0.1907%" height="15" fill="rgb(250,156,29)" fg:x="742" fg:w="62"/><text x="2.5323%" y="1327.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (7 samples, 0.02%)</title><rect x="2.4761%" y="1301" width="0.0215%" height="15" fill="rgb(216,193,19)" fg:x="805" fg:w="7"/><text x="2.7261%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="2.4792%" y="1285" width="0.0185%" height="15" fill="rgb(216,135,14)" fg:x="806" fg:w="6"/><text x="2.7292%" y="1295.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (11 samples, 0.03%)</title><rect x="2.4976%" y="1301" width="0.0338%" height="15" fill="rgb(241,47,5)" fg:x="812" fg:w="11"/><text x="2.7476%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (7 samples, 0.02%)</title><rect x="2.5099%" y="1285" width="0.0215%" height="15" fill="rgb(233,42,35)" fg:x="816" fg:w="7"/><text x="2.7599%" y="1295.50"></text></g><g><title>aes_grinder::matrix::Matrix::swap_lines (21 samples, 0.06%)</title><rect x="2.4730%" y="1317" width="0.0646%" height="15" fill="rgb(231,13,6)" fg:x="804" fg:w="21"/><text x="2.7230%" y="1327.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (27 samples, 0.08%)</title><rect x="2.5376%" y="1317" width="0.0830%" height="15" fill="rgb(207,181,40)" fg:x="825" fg:w="27"/><text x="2.7876%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.08%)</title><rect x="2.5376%" y="1301" width="0.0830%" height="15" fill="rgb(254,173,49)" fg:x="825" fg:w="27"/><text x="2.7876%" y="1311.50"></text></g><g><title>aes_grinder::matrix::Matrix::scale_on (543 samples, 1.67%)</title><rect x="0.9535%" y="1333" width="1.6702%" height="15" fill="rgb(221,1,38)" fg:x="310" fg:w="543"/><text x="1.2035%" y="1343.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="2.6330%" y="1093" width="0.0185%" height="15" fill="rgb(206,124,46)" fg:x="856" fg:w="6"/><text x="2.8830%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="2.6330%" y="1077" width="0.0185%" height="15" fill="rgb(249,21,11)" fg:x="856" fg:w="6"/><text x="2.8830%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="2.6237%" y="1237" width="0.0431%" height="15" fill="rgb(222,201,40)" fg:x="853" fg:w="14"/><text x="2.8737%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="2.6237%" y="1221" width="0.0431%" height="15" fill="rgb(235,61,29)" fg:x="853" fg:w="14"/><text x="2.8737%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (14 samples, 0.04%)</title><rect x="2.6237%" y="1205" width="0.0431%" height="15" fill="rgb(219,207,3)" fg:x="853" fg:w="14"/><text x="2.8737%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.04%)</title><rect x="2.6268%" y="1189" width="0.0400%" height="15" fill="rgb(222,56,46)" fg:x="854" fg:w="13"/><text x="2.8768%" y="1199.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions::_{{closure}} (13 samples, 0.04%)</title><rect x="2.6268%" y="1173" width="0.0400%" height="15" fill="rgb(239,76,54)" fg:x="854" fg:w="13"/><text x="2.8768%" y="1183.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11 samples, 0.03%)</title><rect x="2.6330%" y="1157" width="0.0338%" height="15" fill="rgb(231,124,27)" fg:x="856" fg:w="11"/><text x="2.8830%" y="1167.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11 samples, 0.03%)</title><rect x="2.6330%" y="1141" width="0.0338%" height="15" fill="rgb(249,195,6)" fg:x="856" fg:w="11"/><text x="2.8830%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.03%)</title><rect x="2.6330%" y="1125" width="0.0338%" height="15" fill="rgb(237,174,47)" fg:x="856" fg:w="11"/><text x="2.8830%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="2.6330%" y="1109" width="0.0338%" height="15" fill="rgb(206,201,31)" fg:x="856" fg:w="11"/><text x="2.8830%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.02%)</title><rect x="2.6514%" y="1093" width="0.0154%" height="15" fill="rgb(231,57,52)" fg:x="862" fg:w="5"/><text x="2.9014%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="2.6545%" y="1077" width="0.0123%" height="15" fill="rgb(248,177,22)" fg:x="863" fg:w="4"/><text x="2.9045%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="2.6545%" y="1061" width="0.0123%" height="15" fill="rgb(215,211,37)" fg:x="863" fg:w="4"/><text x="2.9045%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (18 samples, 0.06%)</title><rect x="2.6237%" y="1269" width="0.0554%" height="15" fill="rgb(241,128,51)" fg:x="853" fg:w="18"/><text x="2.8737%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (18 samples, 0.06%)</title><rect x="2.6237%" y="1253" width="0.0554%" height="15" fill="rgb(227,165,31)" fg:x="853" fg:w="18"/><text x="2.8737%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.07%)</title><rect x="2.6237%" y="1333" width="0.0707%" height="15" fill="rgb(228,167,24)" fg:x="853" fg:w="23"/><text x="2.8737%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="2.6237%" y="1317" width="0.0707%" height="15" fill="rgb(228,143,12)" fg:x="853" fg:w="23"/><text x="2.8737%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="2.6237%" y="1301" width="0.0707%" height="15" fill="rgb(249,149,8)" fg:x="853" fg:w="23"/><text x="2.8737%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="2.6237%" y="1285" width="0.0707%" height="15" fill="rgb(243,35,44)" fg:x="853" fg:w="23"/><text x="2.8737%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.6791%" y="1269" width="0.0154%" height="15" fill="rgb(246,89,9)" fg:x="871" fg:w="5"/><text x="2.9291%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.6791%" y="1253" width="0.0154%" height="15" fill="rgb(233,213,13)" fg:x="871" fg:w="5"/><text x="2.9291%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (5 samples, 0.02%)</title><rect x="2.6791%" y="1237" width="0.0154%" height="15" fill="rgb(233,141,41)" fg:x="871" fg:w="5"/><text x="2.9291%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.02%)</title><rect x="2.6791%" y="1221" width="0.0154%" height="15" fill="rgb(239,167,4)" fg:x="871" fg:w="5"/><text x="2.9291%" y="1231.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions::_{{closure}} (5 samples, 0.02%)</title><rect x="2.6791%" y="1205" width="0.0154%" height="15" fill="rgb(209,217,16)" fg:x="871" fg:w="5"/><text x="2.9291%" y="1215.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions (755 samples, 2.32%)</title><rect x="0.3906%" y="1349" width="2.3223%" height="15" fill="rgb(219,88,35)" fg:x="127" fg:w="755"/><text x="0.6406%" y="1359.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="2.6975%" y="1333" width="0.0154%" height="15" fill="rgb(220,193,23)" fg:x="877" fg:w="5"/><text x="2.9475%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="2.6975%" y="1317" width="0.0154%" height="15" fill="rgb(230,90,52)" fg:x="877" fg:w="5"/><text x="2.9475%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (5 samples, 0.02%)</title><rect x="2.6975%" y="1301" width="0.0154%" height="15" fill="rgb(252,106,19)" fg:x="877" fg:w="5"/><text x="2.9475%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.02%)</title><rect x="2.6975%" y="1285" width="0.0154%" height="15" fill="rgb(206,74,20)" fg:x="877" fg:w="5"/><text x="2.9475%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.02%)</title><rect x="2.6975%" y="1269" width="0.0154%" height="15" fill="rgb(230,138,44)" fg:x="877" fg:w="5"/><text x="2.9475%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="2.7006%" y="1253" width="0.0123%" height="15" fill="rgb(235,182,43)" fg:x="878" fg:w="4"/><text x="2.9506%" y="1263.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="2.7006%" y="1237" width="0.0123%" height="15" fill="rgb(242,16,51)" fg:x="878" fg:w="4"/><text x="2.9506%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::set::Union&lt;T,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.7160%" y="1189" width="0.0154%" height="15" fill="rgb(248,9,4)" fg:x="883" fg:w="5"/><text x="2.9660%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.7191%" y="1173" width="0.0123%" height="15" fill="rgb(210,31,22)" fg:x="884" fg:w="4"/><text x="2.9691%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="2.7160%" y="1237" width="0.0246%" height="15" fill="rgb(239,54,39)" fg:x="883" fg:w="8"/><text x="2.9660%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="2.7160%" y="1221" width="0.0246%" height="15" fill="rgb(230,99,41)" fg:x="883" fg:w="8"/><text x="2.9660%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.02%)</title><rect x="2.7160%" y="1205" width="0.0246%" height="15" fill="rgb(253,106,12)" fg:x="883" fg:w="8"/><text x="2.9660%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.04%)</title><rect x="2.7160%" y="1269" width="0.0369%" height="15" fill="rgb(213,46,41)" fg:x="883" fg:w="12"/><text x="2.9660%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.04%)</title><rect x="2.7160%" y="1253" width="0.0369%" height="15" fill="rgb(215,133,35)" fg:x="883" fg:w="12"/><text x="2.9660%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.01%)</title><rect x="2.7406%" y="1237" width="0.0123%" height="15" fill="rgb(213,28,5)" fg:x="891" fg:w="4"/><text x="2.9906%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.04%)</title><rect x="2.7160%" y="1349" width="0.0431%" height="15" fill="rgb(215,77,49)" fg:x="883" fg:w="14"/><text x="2.9660%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="2.7160%" y="1333" width="0.0431%" height="15" fill="rgb(248,100,22)" fg:x="883" fg:w="14"/><text x="2.9660%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="2.7160%" y="1317" width="0.0431%" height="15" fill="rgb(208,67,9)" fg:x="883" fg:w="14"/><text x="2.9660%" y="1327.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="2.7160%" y="1301" width="0.0431%" height="15" fill="rgb(219,133,21)" fg:x="883" fg:w="14"/><text x="2.9660%" y="1311.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="2.7160%" y="1285" width="0.0431%" height="15" fill="rgb(246,46,29)" fg:x="883" fg:w="14"/><text x="2.9660%" y="1295.50"></text></g><g><title>aes_grinder::algo::Algo::fusion_two_algo (782 samples, 2.41%)</title><rect x="0.3568%" y="1365" width="2.4053%" height="15" fill="rgb(246,185,52)" fg:x="116" fg:w="782"/><text x="0.6068%" y="1375.50">ae..</text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.03%)</title><rect x="2.7683%" y="949" width="0.0338%" height="15" fill="rgb(252,136,11)" fg:x="900" fg:w="11"/><text x="3.0183%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="2.7683%" y="933" width="0.0338%" height="15" fill="rgb(219,138,53)" fg:x="900" fg:w="11"/><text x="3.0183%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.03%)</title><rect x="2.7714%" y="917" width="0.0308%" height="15" fill="rgb(211,51,23)" fg:x="901" fg:w="10"/><text x="3.0214%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (10 samples, 0.03%)</title><rect x="2.7714%" y="901" width="0.0308%" height="15" fill="rgb(247,221,28)" fg:x="901" fg:w="10"/><text x="3.0214%" y="911.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (10 samples, 0.03%)</title><rect x="2.7714%" y="885" width="0.0308%" height="15" fill="rgb(251,222,45)" fg:x="901" fg:w="10"/><text x="3.0214%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (10 samples, 0.03%)</title><rect x="2.7714%" y="869" width="0.0308%" height="15" fill="rgb(217,162,53)" fg:x="901" fg:w="10"/><text x="3.0214%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.03%)</title><rect x="2.7714%" y="853" width="0.0308%" height="15" fill="rgb(229,93,14)" fg:x="901" fg:w="10"/><text x="3.0214%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.03%)</title><rect x="2.7714%" y="837" width="0.0308%" height="15" fill="rgb(209,67,49)" fg:x="901" fg:w="10"/><text x="3.0214%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.02%)</title><rect x="2.7775%" y="821" width="0.0246%" height="15" fill="rgb(213,87,29)" fg:x="903" fg:w="8"/><text x="3.0275%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="2.7775%" y="805" width="0.0246%" height="15" fill="rgb(205,151,52)" fg:x="903" fg:w="8"/><text x="3.0275%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="2.7775%" y="789" width="0.0246%" height="15" fill="rgb(253,215,39)" fg:x="903" fg:w="8"/><text x="3.0275%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (15 samples, 0.05%)</title><rect x="2.7621%" y="1205" width="0.0461%" height="15" fill="rgb(221,220,41)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.05%)</title><rect x="2.7621%" y="1189" width="0.0461%" height="15" fill="rgb(218,133,21)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1199.50"></text></g><g><title>aes_grinder::exhaustive_search::set_of_pair_of_algo::_{{closure}}::_{{closure}} (15 samples, 0.05%)</title><rect x="2.7621%" y="1173" width="0.0461%" height="15" fill="rgb(221,193,43)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1183.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (15 samples, 0.05%)</title><rect x="2.7621%" y="1157" width="0.0461%" height="15" fill="rgb(240,128,52)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1167.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (15 samples, 0.05%)</title><rect x="2.7621%" y="1141" width="0.0461%" height="15" fill="rgb(253,114,12)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.05%)</title><rect x="2.7621%" y="1125" width="0.0461%" height="15" fill="rgb(215,223,47)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (15 samples, 0.05%)</title><rect x="2.7621%" y="1109" width="0.0461%" height="15" fill="rgb(248,225,23)" fg:x="898" fg:w="15"/><text x="3.0121%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (14 samples, 0.04%)</title><rect x="2.7652%" y="1093" width="0.0431%" height="15" fill="rgb(250,108,0)" fg:x="899" fg:w="14"/><text x="3.0152%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (14 samples, 0.04%)</title><rect x="2.7652%" y="1077" width="0.0431%" height="15" fill="rgb(228,208,7)" fg:x="899" fg:w="14"/><text x="3.0152%" y="1087.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (14 samples, 0.04%)</title><rect x="2.7652%" y="1061" width="0.0431%" height="15" fill="rgb(244,45,10)" fg:x="899" fg:w="14"/><text x="3.0152%" y="1071.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (14 samples, 0.04%)</title><rect x="2.7652%" y="1045" width="0.0431%" height="15" fill="rgb(207,125,25)" fg:x="899" fg:w="14"/><text x="3.0152%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (14 samples, 0.04%)</title><rect x="2.7652%" y="1029" width="0.0431%" height="15" fill="rgb(210,195,18)" fg:x="899" fg:w="14"/><text x="3.0152%" y="1039.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (13 samples, 0.04%)</title><rect x="2.7683%" y="1013" width="0.0400%" height="15" fill="rgb(249,80,12)" fg:x="900" fg:w="13"/><text x="3.0183%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.04%)</title><rect x="2.7683%" y="997" width="0.0400%" height="15" fill="rgb(221,65,9)" fg:x="900" fg:w="13"/><text x="3.0183%" y="1007.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (13 samples, 0.04%)</title><rect x="2.7683%" y="981" width="0.0400%" height="15" fill="rgb(235,49,36)" fg:x="900" fg:w="13"/><text x="3.0183%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.04%)</title><rect x="2.7683%" y="965" width="0.0400%" height="15" fill="rgb(225,32,20)" fg:x="900" fg:w="13"/><text x="3.0183%" y="975.50"></text></g><g><title>aes_grinder::exhaustive_search::set_of_pair_of_algo (16 samples, 0.05%)</title><rect x="2.7621%" y="1365" width="0.0492%" height="15" fill="rgb(215,141,46)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.05%)</title><rect x="2.7621%" y="1349" width="0.0492%" height="15" fill="rgb(250,160,47)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.05%)</title><rect x="2.7621%" y="1333" width="0.0492%" height="15" fill="rgb(216,222,40)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.05%)</title><rect x="2.7621%" y="1317" width="0.0492%" height="15" fill="rgb(234,217,39)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (16 samples, 0.05%)</title><rect x="2.7621%" y="1301" width="0.0492%" height="15" fill="rgb(207,178,40)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (16 samples, 0.05%)</title><rect x="2.7621%" y="1285" width="0.0492%" height="15" fill="rgb(221,136,13)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1295.50"></text></g><g><title>aes_grinder::exhaustive_search::set_of_pair_of_algo::_{{closure}} (16 samples, 0.05%)</title><rect x="2.7621%" y="1269" width="0.0492%" height="15" fill="rgb(249,199,10)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (16 samples, 0.05%)</title><rect x="2.7621%" y="1253" width="0.0492%" height="15" fill="rgb(249,222,13)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16 samples, 0.05%)</title><rect x="2.7621%" y="1237" width="0.0492%" height="15" fill="rgb(244,185,38)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (16 samples, 0.05%)</title><rect x="2.7621%" y="1221" width="0.0492%" height="15" fill="rgb(236,202,9)" fg:x="898" fg:w="16"/><text x="3.0121%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="2.8206%" y="917" width="0.0123%" height="15" fill="rgb(250,229,37)" fg:x="917" fg:w="4"/><text x="3.0706%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.02%)</title><rect x="2.8206%" y="949" width="0.0185%" height="15" fill="rgb(206,174,23)" fg:x="917" fg:w="6"/><text x="3.0706%" y="959.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="2.8206%" y="933" width="0.0185%" height="15" fill="rgb(211,33,43)" fg:x="917" fg:w="6"/><text x="3.0706%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="2.8206%" y="981" width="0.0215%" height="15" fill="rgb(245,58,50)" fg:x="917" fg:w="7"/><text x="3.0706%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="2.8206%" y="965" width="0.0215%" height="15" fill="rgb(244,68,36)" fg:x="917" fg:w="7"/><text x="3.0706%" y="975.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (11 samples, 0.03%)</title><rect x="2.8206%" y="1013" width="0.0338%" height="15" fill="rgb(232,229,15)" fg:x="917" fg:w="11"/><text x="3.0706%" y="1023.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="2.8206%" y="997" width="0.0338%" height="15" fill="rgb(254,30,23)" fg:x="917" fg:w="11"/><text x="3.0706%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="2.8206%" y="1045" width="0.0369%" height="15" fill="rgb(235,160,14)" fg:x="917" fg:w="12"/><text x="3.0706%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.04%)</title><rect x="2.8206%" y="1029" width="0.0369%" height="15" fill="rgb(212,155,44)" fg:x="917" fg:w="12"/><text x="3.0706%" y="1039.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (17 samples, 0.05%)</title><rect x="2.8206%" y="1141" width="0.0523%" height="15" fill="rgb(226,2,50)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1151.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="2.8206%" y="1125" width="0.0523%" height="15" fill="rgb(234,177,6)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="2.8206%" y="1109" width="0.0523%" height="15" fill="rgb(217,24,9)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="2.8206%" y="1093" width="0.0523%" height="15" fill="rgb(220,13,46)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1103.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (17 samples, 0.05%)</title><rect x="2.8206%" y="1077" width="0.0523%" height="15" fill="rgb(239,221,27)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1087.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="2.8206%" y="1061" width="0.0523%" height="15" fill="rgb(222,198,25)" fg:x="917" fg:w="17"/><text x="3.0706%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="2.8575%" y="1045" width="0.0154%" height="15" fill="rgb(211,99,13)" fg:x="929" fg:w="5"/><text x="3.1075%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="2.8575%" y="1029" width="0.0154%" height="15" fill="rgb(232,111,31)" fg:x="929" fg:w="5"/><text x="3.1075%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="2.8575%" y="1013" width="0.0154%" height="15" fill="rgb(245,82,37)" fg:x="929" fg:w="5"/><text x="3.1075%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="2.8606%" y="997" width="0.0123%" height="15" fill="rgb(227,149,46)" fg:x="930" fg:w="4"/><text x="3.1106%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (4 samples, 0.01%)</title><rect x="2.8606%" y="981" width="0.0123%" height="15" fill="rgb(218,36,50)" fg:x="930" fg:w="4"/><text x="3.1106%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (4 samples, 0.01%)</title><rect x="2.8606%" y="965" width="0.0123%" height="15" fill="rgb(226,80,48)" fg:x="930" fg:w="4"/><text x="3.1106%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.06%)</title><rect x="2.8206%" y="1173" width="0.0584%" height="15" fill="rgb(238,224,15)" fg:x="917" fg:w="19"/><text x="3.0706%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.06%)</title><rect x="2.8206%" y="1157" width="0.0584%" height="15" fill="rgb(241,136,10)" fg:x="917" fg:w="19"/><text x="3.0706%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1301" width="0.0677%" height="15" fill="rgb(208,32,45)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1285" width="0.0677%" height="15" fill="rgb(207,135,9)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1295.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (22 samples, 0.07%)</title><rect x="2.8206%" y="1269" width="0.0677%" height="15" fill="rgb(206,86,44)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1279.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1253" width="0.0677%" height="15" fill="rgb(245,177,15)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1237" width="0.0677%" height="15" fill="rgb(206,64,50)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1221" width="0.0677%" height="15" fill="rgb(234,36,40)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1231.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (22 samples, 0.07%)</title><rect x="2.8206%" y="1205" width="0.0677%" height="15" fill="rgb(213,64,8)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1215.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (22 samples, 0.07%)</title><rect x="2.8206%" y="1189" width="0.0677%" height="15" fill="rgb(210,75,36)" fg:x="917" fg:w="22"/><text x="3.0706%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.07%)</title><rect x="2.8206%" y="1349" width="0.0707%" height="15" fill="rgb(229,88,21)" fg:x="917" fg:w="23"/><text x="3.0706%" y="1359.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (23 samples, 0.07%)</title><rect x="2.8206%" y="1333" width="0.0707%" height="15" fill="rgb(252,204,47)" fg:x="917" fg:w="23"/><text x="3.0706%" y="1343.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (23 samples, 0.07%)</title><rect x="2.8206%" y="1317" width="0.0707%" height="15" fill="rgb(208,77,27)" fg:x="917" fg:w="23"/><text x="3.0706%" y="1327.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.8913%" y="1349" width="0.0154%" height="15" fill="rgb(221,76,26)" fg:x="940" fg:w="5"/><text x="3.1413%" y="1359.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.8913%" y="1333" width="0.0154%" height="15" fill="rgb(225,139,18)" fg:x="940" fg:w="5"/><text x="3.1413%" y="1343.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.8913%" y="1317" width="0.0154%" height="15" fill="rgb(230,137,11)" fg:x="940" fg:w="5"/><text x="3.1413%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="2.8913%" y="1301" width="0.0154%" height="15" fill="rgb(212,28,1)" fg:x="940" fg:w="5"/><text x="3.1413%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.9559%" y="1285" width="0.0123%" height="15" fill="rgb(248,164,17)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1295.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.9559%" y="1269" width="0.0123%" height="15" fill="rgb(222,171,42)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1279.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.9559%" y="1253" width="0.0123%" height="15" fill="rgb(243,84,45)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1263.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.9559%" y="1237" width="0.0123%" height="15" fill="rgb(252,49,23)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="2.9559%" y="1221" width="0.0123%" height="15" fill="rgb(215,19,7)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1231.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (4 samples, 0.01%)</title><rect x="2.9559%" y="1205" width="0.0123%" height="15" fill="rgb(238,81,41)" fg:x="961" fg:w="4"/><text x="3.2059%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="2.9713%" y="1189" width="0.0185%" height="15" fill="rgb(210,199,37)" fg:x="966" fg:w="6"/><text x="3.2213%" y="1199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="2.9713%" y="1173" width="0.0185%" height="15" fill="rgb(244,192,49)" fg:x="966" fg:w="6"/><text x="3.2213%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="2.9775%" y="1157" width="0.0123%" height="15" fill="rgb(226,211,11)" fg:x="968" fg:w="4"/><text x="3.2275%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="2.9775%" y="1141" width="0.0123%" height="15" fill="rgb(236,162,54)" fg:x="968" fg:w="4"/><text x="3.2275%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (20 samples, 0.06%)</title><rect x="2.9559%" y="1317" width="0.0615%" height="15" fill="rgb(220,229,9)" fg:x="961" fg:w="20"/><text x="3.2059%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.06%)</title><rect x="2.9559%" y="1301" width="0.0615%" height="15" fill="rgb(250,87,22)" fg:x="961" fg:w="20"/><text x="3.2059%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.05%)</title><rect x="2.9682%" y="1285" width="0.0492%" height="15" fill="rgb(239,43,17)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (16 samples, 0.05%)</title><rect x="2.9682%" y="1269" width="0.0492%" height="15" fill="rgb(231,177,25)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1279.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (16 samples, 0.05%)</title><rect x="2.9682%" y="1253" width="0.0492%" height="15" fill="rgb(219,179,1)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1263.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (16 samples, 0.05%)</title><rect x="2.9682%" y="1237" width="0.0492%" height="15" fill="rgb(238,219,53)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.05%)</title><rect x="2.9682%" y="1221" width="0.0492%" height="15" fill="rgb(232,167,36)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.05%)</title><rect x="2.9682%" y="1205" width="0.0492%" height="15" fill="rgb(244,19,51)" fg:x="965" fg:w="16"/><text x="3.2182%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.03%)</title><rect x="2.9898%" y="1189" width="0.0277%" height="15" fill="rgb(224,6,22)" fg:x="972" fg:w="9"/><text x="3.2398%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.02%)</title><rect x="2.9928%" y="1173" width="0.0246%" height="15" fill="rgb(224,145,5)" fg:x="973" fg:w="8"/><text x="3.2428%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8 samples, 0.02%)</title><rect x="2.9928%" y="1157" width="0.0246%" height="15" fill="rgb(234,130,49)" fg:x="973" fg:w="8"/><text x="3.2428%" y="1167.50"></text></g><g><title>aes_grinder::algo::Algo::compare1 (40 samples, 0.12%)</title><rect x="2.9067%" y="1349" width="0.1230%" height="15" fill="rgb(254,6,2)" fg:x="945" fg:w="40"/><text x="3.1567%" y="1359.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (40 samples, 0.12%)</title><rect x="2.9067%" y="1333" width="0.1230%" height="15" fill="rgb(208,96,46)" fg:x="945" fg:w="40"/><text x="3.1567%" y="1343.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (4 samples, 0.01%)</title><rect x="3.0174%" y="1317" width="0.0123%" height="15" fill="rgb(239,3,39)" fg:x="981" fg:w="4"/><text x="3.2674%" y="1327.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (8 samples, 0.02%)</title><rect x="3.0913%" y="1061" width="0.0246%" height="15" fill="rgb(233,210,1)" fg:x="1005" fg:w="8"/><text x="3.3413%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (6 samples, 0.02%)</title><rect x="3.1159%" y="1061" width="0.0185%" height="15" fill="rgb(244,137,37)" fg:x="1013" fg:w="6"/><text x="3.3659%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="3.0728%" y="1093" width="0.0646%" height="15" fill="rgb(240,136,2)" fg:x="999" fg:w="21"/><text x="3.3228%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (20 samples, 0.06%)</title><rect x="3.0759%" y="1077" width="0.0615%" height="15" fill="rgb(239,18,37)" fg:x="1000" fg:w="20"/><text x="3.3259%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="3.0513%" y="1157" width="0.0892%" height="15" fill="rgb(218,185,22)" fg:x="992" fg:w="29"/><text x="3.3013%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="3.0513%" y="1141" width="0.0892%" height="15" fill="rgb(225,218,4)" fg:x="992" fg:w="29"/><text x="3.3013%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="3.0513%" y="1125" width="0.0892%" height="15" fill="rgb(230,182,32)" fg:x="992" fg:w="29"/><text x="3.3013%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.08%)</title><rect x="3.0605%" y="1109" width="0.0800%" height="15" fill="rgb(242,56,43)" fg:x="995" fg:w="26"/><text x="3.3105%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (4 samples, 0.01%)</title><rect x="4.0479%" y="245" width="0.0123%" height="15" fill="rgb(233,99,24)" fg:x="1316" fg:w="4"/><text x="4.2979%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (4 samples, 0.01%)</title><rect x="4.0479%" y="229" width="0.0123%" height="15" fill="rgb(234,209,42)" fg:x="1316" fg:w="4"/><text x="4.2979%" y="239.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="4.0325%" y="373" width="0.0308%" height="15" fill="rgb(227,7,12)" fg:x="1311" fg:w="10"/><text x="4.2825%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="4.0386%" y="357" width="0.0246%" height="15" fill="rgb(245,203,43)" fg:x="1313" fg:w="8"/><text x="4.2886%" y="367.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.02%)</title><rect x="4.0386%" y="341" width="0.0246%" height="15" fill="rgb(238,205,33)" fg:x="1313" fg:w="8"/><text x="4.2886%" y="351.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="4.0386%" y="325" width="0.0246%" height="15" fill="rgb(231,56,7)" fg:x="1313" fg:w="8"/><text x="4.2886%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="4.0448%" y="309" width="0.0185%" height="15" fill="rgb(244,186,29)" fg:x="1315" fg:w="6"/><text x="4.2948%" y="319.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="4.0448%" y="293" width="0.0185%" height="15" fill="rgb(234,111,31)" fg:x="1315" fg:w="6"/><text x="4.2948%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="4.0448%" y="277" width="0.0185%" height="15" fill="rgb(241,149,10)" fg:x="1315" fg:w="6"/><text x="4.2948%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="4.0448%" y="261" width="0.0185%" height="15" fill="rgb(249,206,44)" fg:x="1315" fg:w="6"/><text x="4.2948%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.02%)</title><rect x="4.0663%" y="309" width="0.0185%" height="15" fill="rgb(251,153,30)" fg:x="1322" fg:w="6"/><text x="4.3163%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.02%)</title><rect x="4.0663%" y="293" width="0.0185%" height="15" fill="rgb(239,152,38)" fg:x="1322" fg:w="6"/><text x="4.3163%" y="303.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="4.0632%" y="341" width="0.0523%" height="15" fill="rgb(249,139,47)" fg:x="1321" fg:w="17"/><text x="4.3132%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="4.0632%" y="325" width="0.0523%" height="15" fill="rgb(244,64,35)" fg:x="1321" fg:w="17"/><text x="4.3132%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (10 samples, 0.03%)</title><rect x="4.0848%" y="309" width="0.0308%" height="15" fill="rgb(216,46,15)" fg:x="1328" fg:w="10"/><text x="4.3348%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (10 samples, 0.03%)</title><rect x="4.0848%" y="293" width="0.0308%" height="15" fill="rgb(250,74,19)" fg:x="1328" fg:w="10"/><text x="4.3348%" y="303.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (5 samples, 0.02%)</title><rect x="4.1002%" y="277" width="0.0154%" height="15" fill="rgb(249,42,33)" fg:x="1333" fg:w="5"/><text x="4.3502%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="4.1002%" y="261" width="0.0154%" height="15" fill="rgb(242,149,17)" fg:x="1333" fg:w="5"/><text x="4.3502%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="4.1002%" y="245" width="0.0154%" height="15" fill="rgb(244,29,21)" fg:x="1333" fg:w="5"/><text x="4.3502%" y="255.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (28 samples, 0.09%)</title><rect x="4.0325%" y="389" width="0.0861%" height="15" fill="rgb(220,130,37)" fg:x="1311" fg:w="28"/><text x="4.2825%" y="399.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="4.0632%" y="373" width="0.0554%" height="15" fill="rgb(211,67,2)" fg:x="1321" fg:w="18"/><text x="4.3132%" y="383.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="4.0632%" y="357" width="0.0554%" height="15" fill="rgb(235,68,52)" fg:x="1321" fg:w="18"/><text x="4.3132%" y="367.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (29 samples, 0.09%)</title><rect x="4.0325%" y="405" width="0.0892%" height="15" fill="rgb(246,142,3)" fg:x="1311" fg:w="29"/><text x="4.2825%" y="415.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.02%)</title><rect x="4.1278%" y="389" width="0.0185%" height="15" fill="rgb(241,25,7)" fg:x="1342" fg:w="6"/><text x="4.3778%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="4.1309%" y="373" width="0.0154%" height="15" fill="rgb(242,119,39)" fg:x="1343" fg:w="5"/><text x="4.3809%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="4.1309%" y="357" width="0.0154%" height="15" fill="rgb(241,98,45)" fg:x="1343" fg:w="5"/><text x="4.3809%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.12%)</title><rect x="4.0263%" y="437" width="0.1230%" height="15" fill="rgb(254,28,30)" fg:x="1309" fg:w="40"/><text x="4.2763%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.12%)</title><rect x="4.0294%" y="421" width="0.1200%" height="15" fill="rgb(241,142,54)" fg:x="1310" fg:w="39"/><text x="4.2794%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (8 samples, 0.02%)</title><rect x="4.1248%" y="405" width="0.0246%" height="15" fill="rgb(222,85,15)" fg:x="1341" fg:w="8"/><text x="4.3748%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="4.1986%" y="245" width="0.0154%" height="15" fill="rgb(210,85,47)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="4.1986%" y="229" width="0.0154%" height="15" fill="rgb(224,206,25)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="4.1986%" y="213" width="0.0154%" height="15" fill="rgb(243,201,19)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.02%)</title><rect x="4.1986%" y="197" width="0.0154%" height="15" fill="rgb(236,59,4)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.02%)</title><rect x="4.1986%" y="181" width="0.0154%" height="15" fill="rgb(254,179,45)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="191.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.02%)</title><rect x="4.1986%" y="165" width="0.0154%" height="15" fill="rgb(226,14,10)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="175.50"></text></g><g><title>malloc (5 samples, 0.02%)</title><rect x="4.1986%" y="149" width="0.0154%" height="15" fill="rgb(244,27,41)" fg:x="1365" fg:w="5"/><text x="4.4486%" y="159.50"></text></g><g><title>core::clone::Clone::clone (7 samples, 0.02%)</title><rect x="4.1955%" y="341" width="0.0215%" height="15" fill="rgb(235,35,32)" fg:x="1364" fg:w="7"/><text x="4.4455%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="4.1955%" y="325" width="0.0215%" height="15" fill="rgb(218,68,31)" fg:x="1364" fg:w="7"/><text x="4.4455%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="4.1986%" y="309" width="0.0185%" height="15" fill="rgb(207,120,37)" fg:x="1365" fg:w="6"/><text x="4.4486%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="4.1986%" y="293" width="0.0185%" height="15" fill="rgb(227,98,0)" fg:x="1365" fg:w="6"/><text x="4.4486%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="4.1986%" y="277" width="0.0185%" height="15" fill="rgb(207,7,3)" fg:x="1365" fg:w="6"/><text x="4.4486%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="4.1986%" y="261" width="0.0185%" height="15" fill="rgb(206,98,19)" fg:x="1365" fg:w="6"/><text x="4.4486%" y="271.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (6 samples, 0.02%)</title><rect x="4.2170%" y="341" width="0.0185%" height="15" fill="rgb(217,5,26)" fg:x="1371" fg:w="6"/><text x="4.4670%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="4.2170%" y="325" width="0.0185%" height="15" fill="rgb(235,190,38)" fg:x="1371" fg:w="6"/><text x="4.4670%" y="335.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="4.2201%" y="309" width="0.0154%" height="15" fill="rgb(247,86,24)" fg:x="1372" fg:w="5"/><text x="4.4701%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="4.2601%" y="325" width="0.0185%" height="15" fill="rgb(205,101,16)" fg:x="1385" fg:w="6"/><text x="4.5101%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (5 samples, 0.02%)</title><rect x="4.2632%" y="309" width="0.0154%" height="15" fill="rgb(246,168,33)" fg:x="1386" fg:w="5"/><text x="4.5132%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="4.2632%" y="293" width="0.0154%" height="15" fill="rgb(231,114,1)" fg:x="1386" fg:w="5"/><text x="4.5132%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="4.2662%" y="277" width="0.0123%" height="15" fill="rgb(207,184,53)" fg:x="1387" fg:w="4"/><text x="4.5162%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (40 samples, 0.12%)</title><rect x="4.1586%" y="373" width="0.1230%" height="15" fill="rgb(224,95,51)" fg:x="1352" fg:w="40"/><text x="4.4086%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (40 samples, 0.12%)</title><rect x="4.1586%" y="357" width="0.1230%" height="15" fill="rgb(212,188,45)" fg:x="1352" fg:w="40"/><text x="4.4086%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (10 samples, 0.03%)</title><rect x="4.2509%" y="341" width="0.0308%" height="15" fill="rgb(223,154,38)" fg:x="1382" fg:w="10"/><text x="4.5009%" y="351.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (7 samples, 0.02%)</title><rect x="4.3124%" y="341" width="0.0215%" height="15" fill="rgb(251,22,52)" fg:x="1402" fg:w="7"/><text x="4.5624%" y="351.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="4.3401%" y="293" width="0.0215%" height="15" fill="rgb(229,209,22)" fg:x="1411" fg:w="7"/><text x="4.5901%" y="303.50"></text></g><g><title>malloc (7 samples, 0.02%)</title><rect x="4.3401%" y="277" width="0.0215%" height="15" fill="rgb(234,138,34)" fg:x="1411" fg:w="7"/><text x="4.5901%" y="287.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="4.3431%" y="261" width="0.0185%" height="15" fill="rgb(212,95,11)" fg:x="1412" fg:w="6"/><text x="4.5931%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (25 samples, 0.08%)</title><rect x="4.2909%" y="373" width="0.0769%" height="15" fill="rgb(240,179,47)" fg:x="1395" fg:w="25"/><text x="4.5409%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (24 samples, 0.07%)</title><rect x="4.2939%" y="357" width="0.0738%" height="15" fill="rgb(240,163,11)" fg:x="1396" fg:w="24"/><text x="4.5439%" y="367.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.03%)</title><rect x="4.3339%" y="341" width="0.0338%" height="15" fill="rgb(236,37,12)" fg:x="1409" fg:w="11"/><text x="4.5839%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.03%)</title><rect x="4.3370%" y="325" width="0.0308%" height="15" fill="rgb(232,164,16)" fg:x="1410" fg:w="10"/><text x="4.5870%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.03%)</title><rect x="4.3370%" y="309" width="0.0308%" height="15" fill="rgb(244,205,15)" fg:x="1410" fg:w="10"/><text x="4.5870%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (71 samples, 0.22%)</title><rect x="4.1524%" y="389" width="0.2184%" height="15" fill="rgb(223,117,47)" fg:x="1350" fg:w="71"/><text x="4.4024%" y="399.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (74 samples, 0.23%)</title><rect x="4.1524%" y="405" width="0.2276%" height="15" fill="rgb(244,107,35)" fg:x="1350" fg:w="74"/><text x="4.4024%" y="415.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (75 samples, 0.23%)</title><rect x="4.1524%" y="421" width="0.2307%" height="15" fill="rgb(205,140,8)" fg:x="1350" fg:w="75"/><text x="4.4024%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (77 samples, 0.24%)</title><rect x="4.1494%" y="437" width="0.2368%" height="15" fill="rgb(228,84,46)" fg:x="1349" fg:w="77"/><text x="4.3994%" y="447.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (121 samples, 0.37%)</title><rect x="4.0171%" y="469" width="0.3722%" height="15" fill="rgb(254,188,9)" fg:x="1306" fg:w="121"/><text x="4.2671%" y="479.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (121 samples, 0.37%)</title><rect x="4.0171%" y="453" width="0.3722%" height="15" fill="rgb(206,112,54)" fg:x="1306" fg:w="121"/><text x="4.2671%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.03%)</title><rect x="4.3985%" y="437" width="0.0308%" height="15" fill="rgb(216,84,49)" fg:x="1430" fg:w="10"/><text x="4.6485%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.03%)</title><rect x="4.3985%" y="421" width="0.0308%" height="15" fill="rgb(214,194,35)" fg:x="1430" fg:w="10"/><text x="4.6485%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.04%)</title><rect x="4.3893%" y="469" width="0.0431%" height="15" fill="rgb(249,28,3)" fg:x="1427" fg:w="14"/><text x="4.6393%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.04%)</title><rect x="4.3924%" y="453" width="0.0400%" height="15" fill="rgb(222,56,52)" fg:x="1428" fg:w="13"/><text x="4.6424%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (142 samples, 0.44%)</title><rect x="3.9986%" y="501" width="0.4368%" height="15" fill="rgb(245,217,50)" fg:x="1300" fg:w="142"/><text x="4.2486%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (136 samples, 0.42%)</title><rect x="4.0171%" y="485" width="0.4183%" height="15" fill="rgb(213,201,24)" fg:x="1306" fg:w="136"/><text x="4.2671%" y="495.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="4.4600%" y="405" width="0.0123%" height="15" fill="rgb(248,116,28)" fg:x="1450" fg:w="4"/><text x="4.7100%" y="415.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="4.4600%" y="389" width="0.0123%" height="15" fill="rgb(219,72,43)" fg:x="1450" fg:w="4"/><text x="4.7100%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="4.4846%" y="373" width="0.0277%" height="15" fill="rgb(209,138,14)" fg:x="1458" fg:w="9"/><text x="4.7346%" y="383.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="4.5000%" y="357" width="0.0123%" height="15" fill="rgb(222,18,33)" fg:x="1463" fg:w="4"/><text x="4.7500%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.05%)</title><rect x="4.4723%" y="405" width="0.0461%" height="15" fill="rgb(213,199,7)" fg:x="1454" fg:w="15"/><text x="4.7223%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (14 samples, 0.04%)</title><rect x="4.4754%" y="389" width="0.0431%" height="15" fill="rgb(250,110,10)" fg:x="1455" fg:w="14"/><text x="4.7254%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="4.5369%" y="309" width="0.0154%" height="15" fill="rgb(248,123,6)" fg:x="1475" fg:w="5"/><text x="4.7869%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.02%)</title><rect x="4.5369%" y="293" width="0.0154%" height="15" fill="rgb(206,91,31)" fg:x="1475" fg:w="5"/><text x="4.7869%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.02%)</title><rect x="4.5369%" y="277" width="0.0154%" height="15" fill="rgb(211,154,13)" fg:x="1475" fg:w="5"/><text x="4.7869%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="4.5400%" y="261" width="0.0123%" height="15" fill="rgb(225,148,7)" fg:x="1476" fg:w="4"/><text x="4.7900%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="4.5400%" y="245" width="0.0123%" height="15" fill="rgb(220,160,43)" fg:x="1476" fg:w="4"/><text x="4.7900%" y="255.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="4.5400%" y="229" width="0.0123%" height="15" fill="rgb(213,52,39)" fg:x="1476" fg:w="4"/><text x="4.7900%" y="239.50"></text></g><g><title>core::clone::Clone::clone (18 samples, 0.06%)</title><rect x="4.5215%" y="405" width="0.0554%" height="15" fill="rgb(243,137,7)" fg:x="1470" fg:w="18"/><text x="4.7715%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="4.5308%" y="389" width="0.0461%" height="15" fill="rgb(230,79,13)" fg:x="1473" fg:w="15"/><text x="4.7808%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="4.5369%" y="373" width="0.0400%" height="15" fill="rgb(247,105,23)" fg:x="1475" fg:w="13"/><text x="4.7869%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.04%)</title><rect x="4.5369%" y="357" width="0.0400%" height="15" fill="rgb(223,179,41)" fg:x="1475" fg:w="13"/><text x="4.7869%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.04%)</title><rect x="4.5369%" y="341" width="0.0400%" height="15" fill="rgb(218,9,34)" fg:x="1475" fg:w="13"/><text x="4.7869%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.04%)</title><rect x="4.5369%" y="325" width="0.0400%" height="15" fill="rgb(222,106,8)" fg:x="1475" fg:w="13"/><text x="4.7869%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.02%)</title><rect x="4.5523%" y="309" width="0.0246%" height="15" fill="rgb(211,220,0)" fg:x="1480" fg:w="8"/><text x="4.8023%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="4.5523%" y="293" width="0.0246%" height="15" fill="rgb(229,52,16)" fg:x="1480" fg:w="8"/><text x="4.8023%" y="303.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="4.5523%" y="277" width="0.0246%" height="15" fill="rgb(212,155,18)" fg:x="1480" fg:w="8"/><text x="4.8023%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.02%)</title><rect x="4.5831%" y="405" width="0.0185%" height="15" fill="rgb(242,21,14)" fg:x="1490" fg:w="6"/><text x="4.8331%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (4 samples, 0.01%)</title><rect x="4.6015%" y="405" width="0.0123%" height="15" fill="rgb(222,19,48)" fg:x="1496" fg:w="4"/><text x="4.8515%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="4.6015%" y="389" width="0.0123%" height="15" fill="rgb(232,45,27)" fg:x="1496" fg:w="4"/><text x="4.8515%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (10 samples, 0.03%)</title><rect x="4.6138%" y="405" width="0.0308%" height="15" fill="rgb(249,103,42)" fg:x="1500" fg:w="10"/><text x="4.8638%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (9 samples, 0.03%)</title><rect x="4.6169%" y="389" width="0.0277%" height="15" fill="rgb(246,81,33)" fg:x="1501" fg:w="9"/><text x="4.8669%" y="399.50"></text></g><g><title>hashbrown::raw::offset_from (6 samples, 0.02%)</title><rect x="4.6261%" y="373" width="0.0185%" height="15" fill="rgb(252,33,42)" fg:x="1504" fg:w="6"/><text x="4.8761%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (23 samples, 0.07%)</title><rect x="4.6446%" y="405" width="0.0707%" height="15" fill="rgb(209,212,41)" fg:x="1510" fg:w="23"/><text x="4.8946%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="4.6692%" y="389" width="0.0461%" height="15" fill="rgb(207,154,6)" fg:x="1518" fg:w="15"/><text x="4.9192%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (13 samples, 0.04%)</title><rect x="4.6753%" y="373" width="0.0400%" height="15" fill="rgb(223,64,47)" fg:x="1520" fg:w="13"/><text x="4.9253%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (12 samples, 0.04%)</title><rect x="4.6784%" y="357" width="0.0369%" height="15" fill="rgb(211,161,38)" fg:x="1521" fg:w="12"/><text x="4.9284%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.04%)</title><rect x="4.6784%" y="341" width="0.0369%" height="15" fill="rgb(219,138,40)" fg:x="1521" fg:w="12"/><text x="4.9284%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (87 samples, 0.27%)</title><rect x="4.4508%" y="437" width="0.2676%" height="15" fill="rgb(241,228,46)" fg:x="1447" fg:w="87"/><text x="4.7008%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (86 samples, 0.26%)</title><rect x="4.4539%" y="421" width="0.2645%" height="15" fill="rgb(223,209,38)" fg:x="1448" fg:w="86"/><text x="4.7039%" y="431.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (9 samples, 0.03%)</title><rect x="4.7461%" y="405" width="0.0277%" height="15" fill="rgb(236,164,45)" fg:x="1543" fg:w="9"/><text x="4.9961%" y="415.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="4.8045%" y="357" width="0.0185%" height="15" fill="rgb(231,15,5)" fg:x="1562" fg:w="6"/><text x="5.0545%" y="367.50"></text></g><g><title>malloc (6 samples, 0.02%)</title><rect x="4.8045%" y="341" width="0.0185%" height="15" fill="rgb(252,35,15)" fg:x="1562" fg:w="6"/><text x="5.0545%" y="351.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="4.8076%" y="325" width="0.0154%" height="15" fill="rgb(248,181,18)" fg:x="1563" fg:w="5"/><text x="5.0576%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (36 samples, 0.11%)</title><rect x="4.7184%" y="437" width="0.1107%" height="15" fill="rgb(233,39,42)" fg:x="1534" fg:w="36"/><text x="4.9684%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (34 samples, 0.10%)</title><rect x="4.7246%" y="421" width="0.1046%" height="15" fill="rgb(238,110,33)" fg:x="1536" fg:w="34"/><text x="4.9746%" y="431.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.06%)</title><rect x="4.7738%" y="405" width="0.0554%" height="15" fill="rgb(233,195,10)" fg:x="1552" fg:w="18"/><text x="5.0238%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="4.7922%" y="389" width="0.0369%" height="15" fill="rgb(254,105,3)" fg:x="1558" fg:w="12"/><text x="5.0422%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="4.7922%" y="373" width="0.0369%" height="15" fill="rgb(221,225,9)" fg:x="1558" fg:w="12"/><text x="5.0422%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (131 samples, 0.40%)</title><rect x="4.4385%" y="453" width="0.4029%" height="15" fill="rgb(224,227,45)" fg:x="1443" fg:w="131"/><text x="4.6885%" y="463.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (134 samples, 0.41%)</title><rect x="4.4354%" y="469" width="0.4122%" height="15" fill="rgb(229,198,43)" fg:x="1442" fg:w="134"/><text x="4.6854%" y="479.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.42%)</title><rect x="4.4354%" y="485" width="0.4245%" height="15" fill="rgb(206,209,35)" fg:x="1442" fg:w="138"/><text x="4.6854%" y="495.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="4.8476%" y="469" width="0.0123%" height="15" fill="rgb(245,195,53)" fg:x="1576" fg:w="4"/><text x="5.0976%" y="479.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (284 samples, 0.87%)</title><rect x="3.9894%" y="517" width="0.8736%" height="15" fill="rgb(240,92,26)" fg:x="1297" fg:w="284"/><text x="4.2394%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (139 samples, 0.43%)</title><rect x="4.4354%" y="501" width="0.4275%" height="15" fill="rgb(207,40,23)" fg:x="1442" fg:w="139"/><text x="4.6854%" y="511.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (286 samples, 0.88%)</title><rect x="3.9894%" y="533" width="0.8797%" height="15" fill="rgb(223,111,35)" fg:x="1297" fg:w="286"/><text x="4.2394%" y="543.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="4.8876%" y="469" width="0.0338%" height="15" fill="rgb(229,147,28)" fg:x="1589" fg:w="11"/><text x="5.1376%" y="479.50"></text></g><g><title>malloc (10 samples, 0.03%)</title><rect x="4.8907%" y="453" width="0.0308%" height="15" fill="rgb(211,29,28)" fg:x="1590" fg:w="10"/><text x="5.1407%" y="463.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="4.8999%" y="437" width="0.0215%" height="15" fill="rgb(228,72,33)" fg:x="1593" fg:w="7"/><text x="5.1499%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.06%)</title><rect x="4.8753%" y="501" width="0.0554%" height="15" fill="rgb(205,214,31)" fg:x="1585" fg:w="18"/><text x="5.1253%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.06%)</title><rect x="4.8753%" y="485" width="0.0554%" height="15" fill="rgb(224,111,15)" fg:x="1585" fg:w="18"/><text x="5.1253%" y="495.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (21 samples, 0.06%)</title><rect x="4.8691%" y="533" width="0.0646%" height="15" fill="rgb(253,21,26)" fg:x="1583" fg:w="21"/><text x="5.1191%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.06%)</title><rect x="4.8722%" y="517" width="0.0615%" height="15" fill="rgb(245,139,43)" fg:x="1584" fg:w="20"/><text x="5.1222%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (318 samples, 0.98%)</title><rect x="3.9587%" y="565" width="0.9781%" height="15" fill="rgb(252,170,7)" fg:x="1287" fg:w="318"/><text x="4.2087%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (311 samples, 0.96%)</title><rect x="3.9802%" y="549" width="0.9566%" height="15" fill="rgb(231,118,14)" fg:x="1294" fg:w="311"/><text x="4.2302%" y="559.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="4.9737%" y="469" width="0.0154%" height="15" fill="rgb(238,83,0)" fg:x="1617" fg:w="5"/><text x="5.2237%" y="479.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="4.9737%" y="453" width="0.0154%" height="15" fill="rgb(221,39,39)" fg:x="1617" fg:w="5"/><text x="5.2237%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="5.0291%" y="421" width="0.0123%" height="15" fill="rgb(222,119,46)" fg:x="1635" fg:w="4"/><text x="5.2791%" y="431.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="5.0537%" y="405" width="0.0123%" height="15" fill="rgb(222,165,49)" fg:x="1643" fg:w="4"/><text x="5.3037%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="5.0229%" y="437" width="0.0554%" height="15" fill="rgb(219,113,52)" fg:x="1633" fg:w="18"/><text x="5.2729%" y="447.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.04%)</title><rect x="5.0414%" y="421" width="0.0369%" height="15" fill="rgb(214,7,15)" fg:x="1639" fg:w="12"/><text x="5.2914%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (4 samples, 0.01%)</title><rect x="5.0660%" y="405" width="0.0123%" height="15" fill="rgb(235,32,4)" fg:x="1647" fg:w="4"/><text x="5.3160%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (14 samples, 0.04%)</title><rect x="5.0783%" y="437" width="0.0431%" height="15" fill="rgb(238,90,54)" fg:x="1651" fg:w="14"/><text x="5.3283%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="5.1090%" y="421" width="0.0123%" height="15" fill="rgb(213,208,19)" fg:x="1661" fg:w="4"/><text x="5.3590%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.14%)</title><rect x="4.9891%" y="469" width="0.1353%" height="15" fill="rgb(233,156,4)" fg:x="1622" fg:w="44"/><text x="5.2391%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (40 samples, 0.12%)</title><rect x="5.0014%" y="453" width="0.1230%" height="15" fill="rgb(207,194,5)" fg:x="1626" fg:w="40"/><text x="5.2514%" y="463.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="5.1244%" y="469" width="0.0308%" height="15" fill="rgb(206,111,30)" fg:x="1666" fg:w="10"/><text x="5.3744%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="5.1736%" y="373" width="0.0246%" height="15" fill="rgb(243,70,54)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="5.1736%" y="357" width="0.0246%" height="15" fill="rgb(242,28,8)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.02%)</title><rect x="5.1736%" y="341" width="0.0246%" height="15" fill="rgb(219,106,18)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="5.1736%" y="325" width="0.0246%" height="15" fill="rgb(244,222,10)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="5.1736%" y="309" width="0.0246%" height="15" fill="rgb(236,179,52)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="319.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="5.1736%" y="293" width="0.0246%" height="15" fill="rgb(213,23,39)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="303.50"></text></g><g><title>malloc (8 samples, 0.02%)</title><rect x="5.1736%" y="277" width="0.0246%" height="15" fill="rgb(238,48,10)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="287.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="5.1736%" y="261" width="0.0246%" height="15" fill="rgb(251,196,23)" fg:x="1682" fg:w="8"/><text x="5.4236%" y="271.50"></text></g><g><title>core::clone::Clone::clone (22 samples, 0.07%)</title><rect x="5.1552%" y="469" width="0.0677%" height="15" fill="rgb(250,152,24)" fg:x="1676" fg:w="22"/><text x="5.4052%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="5.1706%" y="453" width="0.0523%" height="15" fill="rgb(209,150,17)" fg:x="1681" fg:w="17"/><text x="5.4206%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="5.1736%" y="437" width="0.0492%" height="15" fill="rgb(234,202,34)" fg:x="1682" fg:w="16"/><text x="5.4236%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.05%)</title><rect x="5.1736%" y="421" width="0.0492%" height="15" fill="rgb(253,148,53)" fg:x="1682" fg:w="16"/><text x="5.4236%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.05%)</title><rect x="5.1736%" y="405" width="0.0492%" height="15" fill="rgb(218,129,16)" fg:x="1682" fg:w="16"/><text x="5.4236%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.05%)</title><rect x="5.1736%" y="389" width="0.0492%" height="15" fill="rgb(216,85,19)" fg:x="1682" fg:w="16"/><text x="5.4236%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.02%)</title><rect x="5.1982%" y="373" width="0.0246%" height="15" fill="rgb(235,228,7)" fg:x="1690" fg:w="8"/><text x="5.4482%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="5.1982%" y="357" width="0.0246%" height="15" fill="rgb(245,175,0)" fg:x="1690" fg:w="8"/><text x="5.4482%" y="367.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="5.1982%" y="341" width="0.0246%" height="15" fill="rgb(208,168,36)" fg:x="1690" fg:w="8"/><text x="5.4482%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (5 samples, 0.02%)</title><rect x="5.2228%" y="469" width="0.0154%" height="15" fill="rgb(246,171,24)" fg:x="1698" fg:w="5"/><text x="5.4728%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="5.2228%" y="453" width="0.0154%" height="15" fill="rgb(215,142,24)" fg:x="1698" fg:w="5"/><text x="5.4728%" y="463.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="5.2259%" y="437" width="0.0123%" height="15" fill="rgb(250,187,7)" fg:x="1699" fg:w="4"/><text x="5.4759%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (5 samples, 0.02%)</title><rect x="5.2413%" y="469" width="0.0154%" height="15" fill="rgb(228,66,33)" fg:x="1704" fg:w="5"/><text x="5.4913%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.02%)</title><rect x="5.2413%" y="453" width="0.0154%" height="15" fill="rgb(234,215,21)" fg:x="1704" fg:w="5"/><text x="5.4913%" y="463.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="5.2413%" y="437" width="0.0154%" height="15" fill="rgb(222,191,20)" fg:x="1704" fg:w="5"/><text x="5.4913%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.03%)</title><rect x="5.2628%" y="453" width="0.0277%" height="15" fill="rgb(245,79,54)" fg:x="1711" fg:w="9"/><text x="5.5128%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (12 samples, 0.04%)</title><rect x="5.2567%" y="469" width="0.0369%" height="15" fill="rgb(240,10,37)" fg:x="1709" fg:w="12"/><text x="5.5067%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (5 samples, 0.02%)</title><rect x="5.2967%" y="453" width="0.0154%" height="15" fill="rgb(214,192,32)" fg:x="1722" fg:w="5"/><text x="5.5467%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (7 samples, 0.02%)</title><rect x="5.2936%" y="469" width="0.0215%" height="15" fill="rgb(209,36,54)" fg:x="1721" fg:w="7"/><text x="5.5436%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="5.3213%" y="453" width="0.0154%" height="15" fill="rgb(220,10,11)" fg:x="1730" fg:w="5"/><text x="5.5713%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (20 samples, 0.06%)</title><rect x="5.3151%" y="469" width="0.0615%" height="15" fill="rgb(221,106,17)" fg:x="1728" fg:w="20"/><text x="5.5651%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (13 samples, 0.04%)</title><rect x="5.3367%" y="453" width="0.0400%" height="15" fill="rgb(251,142,44)" fg:x="1735" fg:w="13"/><text x="5.5867%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.04%)</title><rect x="5.3397%" y="437" width="0.0369%" height="15" fill="rgb(238,13,15)" fg:x="1736" fg:w="12"/><text x="5.5897%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (10 samples, 0.03%)</title><rect x="5.3459%" y="421" width="0.0308%" height="15" fill="rgb(208,107,27)" fg:x="1738" fg:w="10"/><text x="5.5959%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.03%)</title><rect x="5.3490%" y="405" width="0.0277%" height="15" fill="rgb(205,136,37)" fg:x="1739" fg:w="9"/><text x="5.5990%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (140 samples, 0.43%)</title><rect x="4.9491%" y="501" width="0.4306%" height="15" fill="rgb(250,205,27)" fg:x="1609" fg:w="140"/><text x="5.1991%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (140 samples, 0.43%)</title><rect x="4.9491%" y="485" width="0.4306%" height="15" fill="rgb(210,80,43)" fg:x="1609" fg:w="140"/><text x="5.1991%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="5.4751%" y="453" width="0.0154%" height="15" fill="rgb(247,160,36)" fg:x="1780" fg:w="5"/><text x="5.7251%" y="463.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (16 samples, 0.05%)</title><rect x="5.4566%" y="469" width="0.0492%" height="15" fill="rgb(234,13,49)" fg:x="1774" fg:w="16"/><text x="5.7066%" y="479.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.05%)</title><rect x="5.5581%" y="421" width="0.0523%" height="15" fill="rgb(234,122,0)" fg:x="1807" fg:w="17"/><text x="5.8081%" y="431.50"></text></g><g><title>malloc (16 samples, 0.05%)</title><rect x="5.5612%" y="405" width="0.0492%" height="15" fill="rgb(207,146,38)" fg:x="1808" fg:w="16"/><text x="5.8112%" y="415.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="5.5766%" y="389" width="0.0338%" height="15" fill="rgb(207,177,25)" fg:x="1813" fg:w="11"/><text x="5.8266%" y="399.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (37 samples, 0.11%)</title><rect x="5.5058%" y="469" width="0.1138%" height="15" fill="rgb(211,178,42)" fg:x="1790" fg:w="37"/><text x="5.7558%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.09%)</title><rect x="5.5335%" y="453" width="0.0861%" height="15" fill="rgb(230,69,54)" fg:x="1799" fg:w="28"/><text x="5.7835%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.09%)</title><rect x="5.5335%" y="437" width="0.0861%" height="15" fill="rgb(214,135,41)" fg:x="1799" fg:w="28"/><text x="5.7835%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (76 samples, 0.23%)</title><rect x="5.3889%" y="501" width="0.2338%" height="15" fill="rgb(237,67,25)" fg:x="1752" fg:w="76"/><text x="5.6389%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (66 samples, 0.20%)</title><rect x="5.4197%" y="485" width="0.2030%" height="15" fill="rgb(222,189,50)" fg:x="1762" fg:w="66"/><text x="5.6697%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (228 samples, 0.70%)</title><rect x="4.9399%" y="517" width="0.7013%" height="15" fill="rgb(245,148,34)" fg:x="1606" fg:w="228"/><text x="5.1899%" y="527.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (234 samples, 0.72%)</title><rect x="4.9368%" y="533" width="0.7198%" height="15" fill="rgb(222,29,6)" fg:x="1605" fg:w="234"/><text x="5.1868%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="5.6412%" y="517" width="0.0154%" height="15" fill="rgb(221,189,43)" fg:x="1834" fg:w="5"/><text x="5.8912%" y="527.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (5 samples, 0.02%)</title><rect x="5.6412%" y="501" width="0.0154%" height="15" fill="rgb(207,36,27)" fg:x="1834" fg:w="5"/><text x="5.8912%" y="511.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (242 samples, 0.74%)</title><rect x="4.9368%" y="549" width="0.7444%" height="15" fill="rgb(217,90,24)" fg:x="1605" fg:w="242"/><text x="5.1868%" y="559.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="5.6565%" y="533" width="0.0246%" height="15" fill="rgb(224,66,35)" fg:x="1839" fg:w="8"/><text x="5.9065%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (243 samples, 0.75%)</title><rect x="4.9368%" y="565" width="0.7474%" height="15" fill="rgb(221,13,50)" fg:x="1605" fg:w="243"/><text x="5.1868%" y="575.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (566 samples, 1.74%)</title><rect x="3.9464%" y="581" width="1.7409%" height="15" fill="rgb(236,68,49)" fg:x="1283" fg:w="566"/><text x="4.1964%" y="591.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="5.6873%" y="549" width="0.0154%" height="15" fill="rgb(229,146,28)" fg:x="1849" fg:w="5"/><text x="5.9373%" y="559.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (572 samples, 1.76%)</title><rect x="3.9464%" y="597" width="1.7594%" height="15" fill="rgb(225,31,38)" fg:x="1283" fg:w="572"/><text x="4.1964%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.02%)</title><rect x="5.6873%" y="581" width="0.0185%" height="15" fill="rgb(250,208,3)" fg:x="1849" fg:w="6"/><text x="5.9373%" y="591.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="5.6873%" y="565" width="0.0185%" height="15" fill="rgb(246,54,23)" fg:x="1849" fg:w="6"/><text x="5.9373%" y="575.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="5.7519%" y="533" width="0.0369%" height="15" fill="rgb(243,76,11)" fg:x="1870" fg:w="12"/><text x="6.0019%" y="543.50"></text></g><g><title>malloc (11 samples, 0.03%)</title><rect x="5.7550%" y="517" width="0.0338%" height="15" fill="rgb(245,21,50)" fg:x="1871" fg:w="11"/><text x="6.0050%" y="527.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="5.7642%" y="501" width="0.0246%" height="15" fill="rgb(228,9,43)" fg:x="1874" fg:w="8"/><text x="6.0142%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.08%)</title><rect x="5.7273%" y="565" width="0.0769%" height="15" fill="rgb(208,100,47)" fg:x="1862" fg:w="25"/><text x="5.9773%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.07%)</title><rect x="5.7304%" y="549" width="0.0738%" height="15" fill="rgb(232,26,8)" fg:x="1863" fg:w="24"/><text x="5.9804%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (36 samples, 0.11%)</title><rect x="5.7058%" y="597" width="0.1107%" height="15" fill="rgb(216,166,38)" fg:x="1855" fg:w="36"/><text x="5.9558%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (35 samples, 0.11%)</title><rect x="5.7088%" y="581" width="0.1077%" height="15" fill="rgb(251,202,51)" fg:x="1856" fg:w="35"/><text x="5.9588%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (4 samples, 0.01%)</title><rect x="5.8165%" y="581" width="0.0123%" height="15" fill="rgb(254,216,34)" fg:x="1891" fg:w="4"/><text x="6.0665%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (632 samples, 1.94%)</title><rect x="3.8879%" y="629" width="1.9440%" height="15" fill="rgb(251,32,27)" fg:x="1264" fg:w="632"/><text x="4.1379%" y="639.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (624 samples, 1.92%)</title><rect x="3.9125%" y="613" width="1.9194%" height="15" fill="rgb(208,127,28)" fg:x="1272" fg:w="624"/><text x="4.1625%" y="623.50">&lt;..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (5 samples, 0.02%)</title><rect x="5.8165%" y="597" width="0.0154%" height="15" fill="rgb(224,137,22)" fg:x="1891" fg:w="5"/><text x="6.0665%" y="607.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.02%)</title><rect x="5.9211%" y="533" width="0.0185%" height="15" fill="rgb(254,70,32)" fg:x="1925" fg:w="6"/><text x="6.1711%" y="543.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="5.9241%" y="517" width="0.0154%" height="15" fill="rgb(229,75,37)" fg:x="1926" fg:w="5"/><text x="6.1741%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="5.9980%" y="485" width="0.0123%" height="15" fill="rgb(252,64,23)" fg:x="1950" fg:w="4"/><text x="6.2480%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.07%)</title><rect x="5.9826%" y="501" width="0.0738%" height="15" fill="rgb(232,162,48)" fg:x="1945" fg:w="24"/><text x="6.2326%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.05%)</title><rect x="6.0103%" y="485" width="0.0461%" height="15" fill="rgb(246,160,12)" fg:x="1954" fg:w="15"/><text x="6.2603%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (8 samples, 0.02%)</title><rect x="6.0318%" y="469" width="0.0246%" height="15" fill="rgb(247,166,0)" fg:x="1961" fg:w="8"/><text x="6.2818%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (19 samples, 0.06%)</title><rect x="6.0595%" y="501" width="0.0584%" height="15" fill="rgb(249,219,21)" fg:x="1970" fg:w="19"/><text x="6.3095%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.02%)</title><rect x="6.0995%" y="485" width="0.0185%" height="15" fill="rgb(205,209,3)" fg:x="1983" fg:w="6"/><text x="6.3495%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.18%)</title><rect x="5.9395%" y="533" width="0.1815%" height="15" fill="rgb(243,44,1)" fg:x="1931" fg:w="59"/><text x="6.1895%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (52 samples, 0.16%)</title><rect x="5.9611%" y="517" width="0.1599%" height="15" fill="rgb(206,159,16)" fg:x="1938" fg:w="52"/><text x="6.2111%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="6.1610%" y="437" width="0.0431%" height="15" fill="rgb(244,77,30)" fg:x="2003" fg:w="14"/><text x="6.4110%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="6.1610%" y="421" width="0.0431%" height="15" fill="rgb(218,69,12)" fg:x="2003" fg:w="14"/><text x="6.4110%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.04%)</title><rect x="6.1610%" y="405" width="0.0431%" height="15" fill="rgb(212,87,7)" fg:x="2003" fg:w="14"/><text x="6.4110%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.04%)</title><rect x="6.1641%" y="389" width="0.0400%" height="15" fill="rgb(245,114,25)" fg:x="2004" fg:w="13"/><text x="6.4141%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.04%)</title><rect x="6.1641%" y="373" width="0.0400%" height="15" fill="rgb(210,61,42)" fg:x="2004" fg:w="13"/><text x="6.4141%" y="383.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.04%)</title><rect x="6.1641%" y="357" width="0.0400%" height="15" fill="rgb(211,52,33)" fg:x="2004" fg:w="13"/><text x="6.4141%" y="367.50"></text></g><g><title>malloc (12 samples, 0.04%)</title><rect x="6.1671%" y="341" width="0.0369%" height="15" fill="rgb(234,58,33)" fg:x="2005" fg:w="12"/><text x="6.4171%" y="351.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="6.1702%" y="325" width="0.0338%" height="15" fill="rgb(220,115,36)" fg:x="2006" fg:w="11"/><text x="6.4202%" y="335.50"></text></g><g><title>core::clone::Clone::clone (41 samples, 0.13%)</title><rect x="6.1302%" y="533" width="0.1261%" height="15" fill="rgb(243,153,54)" fg:x="1993" fg:w="41"/><text x="6.3802%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (37 samples, 0.11%)</title><rect x="6.1425%" y="517" width="0.1138%" height="15" fill="rgb(251,47,18)" fg:x="1997" fg:w="37"/><text x="6.3925%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.10%)</title><rect x="6.1610%" y="501" width="0.0954%" height="15" fill="rgb(242,102,42)" fg:x="2003" fg:w="31"/><text x="6.4110%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.10%)</title><rect x="6.1610%" y="485" width="0.0954%" height="15" fill="rgb(234,31,38)" fg:x="2003" fg:w="31"/><text x="6.4110%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.10%)</title><rect x="6.1610%" y="469" width="0.0954%" height="15" fill="rgb(221,117,51)" fg:x="2003" fg:w="31"/><text x="6.4110%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.10%)</title><rect x="6.1610%" y="453" width="0.0954%" height="15" fill="rgb(212,20,18)" fg:x="2003" fg:w="31"/><text x="6.4110%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (17 samples, 0.05%)</title><rect x="6.2041%" y="437" width="0.0523%" height="15" fill="rgb(245,133,36)" fg:x="2017" fg:w="17"/><text x="6.4541%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.05%)</title><rect x="6.2041%" y="421" width="0.0523%" height="15" fill="rgb(212,6,19)" fg:x="2017" fg:w="17"/><text x="6.4541%" y="431.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="6.2041%" y="405" width="0.0523%" height="15" fill="rgb(218,1,36)" fg:x="2017" fg:w="17"/><text x="6.4541%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (10 samples, 0.03%)</title><rect x="6.2563%" y="533" width="0.0308%" height="15" fill="rgb(246,84,54)" fg:x="2034" fg:w="10"/><text x="6.5063%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="6.2563%" y="517" width="0.0308%" height="15" fill="rgb(242,110,6)" fg:x="2034" fg:w="10"/><text x="6.5063%" y="527.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="6.2594%" y="501" width="0.0277%" height="15" fill="rgb(214,47,5)" fg:x="2035" fg:w="9"/><text x="6.5094%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.02%)</title><rect x="6.2902%" y="517" width="0.0246%" height="15" fill="rgb(218,159,25)" fg:x="2045" fg:w="8"/><text x="6.5402%" y="527.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="6.2902%" y="501" width="0.0246%" height="15" fill="rgb(215,211,28)" fg:x="2045" fg:w="8"/><text x="6.5402%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (10 samples, 0.03%)</title><rect x="6.2902%" y="533" width="0.0308%" height="15" fill="rgb(238,59,32)" fg:x="2045" fg:w="10"/><text x="6.5402%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (15 samples, 0.05%)</title><rect x="6.3209%" y="533" width="0.0461%" height="15" fill="rgb(226,82,3)" fg:x="2055" fg:w="15"/><text x="6.5709%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="6.3332%" y="517" width="0.0338%" height="15" fill="rgb(240,164,32)" fg:x="2059" fg:w="11"/><text x="6.5832%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.02%)</title><rect x="6.3486%" y="501" width="0.0185%" height="15" fill="rgb(232,46,7)" fg:x="2064" fg:w="6"/><text x="6.5986%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (15 samples, 0.05%)</title><rect x="6.3794%" y="517" width="0.0461%" height="15" fill="rgb(229,129,53)" fg:x="2074" fg:w="15"/><text x="6.6294%" y="527.50"></text></g><g><title>hashbrown::raw::offset_from (10 samples, 0.03%)</title><rect x="6.3948%" y="501" width="0.0308%" height="15" fill="rgb(234,188,29)" fg:x="2079" fg:w="10"/><text x="6.6448%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (7 samples, 0.02%)</title><rect x="6.4040%" y="485" width="0.0215%" height="15" fill="rgb(246,141,4)" fg:x="2082" fg:w="7"/><text x="6.6540%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (20 samples, 0.06%)</title><rect x="6.3671%" y="533" width="0.0615%" height="15" fill="rgb(229,23,39)" fg:x="2070" fg:w="20"/><text x="6.6171%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="6.4624%" y="517" width="0.0154%" height="15" fill="rgb(206,12,3)" fg:x="2101" fg:w="5"/><text x="6.7124%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (43 samples, 0.13%)</title><rect x="6.4286%" y="533" width="0.1323%" height="15" fill="rgb(252,226,20)" fg:x="2090" fg:w="43"/><text x="6.6786%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (27 samples, 0.08%)</title><rect x="6.4778%" y="517" width="0.0830%" height="15" fill="rgb(216,123,35)" fg:x="2106" fg:w="27"/><text x="6.7278%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (22 samples, 0.07%)</title><rect x="6.4932%" y="501" width="0.0677%" height="15" fill="rgb(212,68,40)" fg:x="2111" fg:w="22"/><text x="6.7432%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (20 samples, 0.06%)</title><rect x="6.4993%" y="485" width="0.0615%" height="15" fill="rgb(254,125,32)" fg:x="2113" fg:w="20"/><text x="6.7493%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.06%)</title><rect x="6.4993%" y="469" width="0.0615%" height="15" fill="rgb(253,97,22)" fg:x="2113" fg:w="20"/><text x="6.7493%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (228 samples, 0.70%)</title><rect x="5.8657%" y="565" width="0.7013%" height="15" fill="rgb(241,101,14)" fg:x="1907" fg:w="228"/><text x="6.1157%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (228 samples, 0.70%)</title><rect x="5.8657%" y="549" width="0.7013%" height="15" fill="rgb(238,103,29)" fg:x="1907" fg:w="228"/><text x="6.1157%" y="559.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (4 samples, 0.01%)</title><rect x="6.5670%" y="565" width="0.0123%" height="15" fill="rgb(233,195,47)" fg:x="2135" fg:w="4"/><text x="6.8170%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="6.7208%" y="517" width="0.0185%" height="15" fill="rgb(246,218,30)" fg:x="2185" fg:w="6"/><text x="6.9708%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (7 samples, 0.02%)</title><rect x="6.7485%" y="517" width="0.0215%" height="15" fill="rgb(219,145,47)" fg:x="2194" fg:w="7"/><text x="6.9985%" y="527.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (35 samples, 0.11%)</title><rect x="6.6747%" y="533" width="0.1077%" height="15" fill="rgb(243,12,26)" fg:x="2170" fg:w="35"/><text x="6.9247%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (4 samples, 0.01%)</title><rect x="6.7700%" y="517" width="0.0123%" height="15" fill="rgb(214,87,16)" fg:x="2201" fg:w="4"/><text x="7.0200%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="6.8500%" y="485" width="0.0123%" height="15" fill="rgb(208,99,42)" fg:x="2227" fg:w="4"/><text x="7.1000%" y="495.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.08%)</title><rect x="6.8623%" y="485" width="0.0830%" height="15" fill="rgb(253,99,2)" fg:x="2231" fg:w="27"/><text x="7.1123%" y="495.50"></text></g><g><title>malloc (25 samples, 0.08%)</title><rect x="6.8684%" y="469" width="0.0769%" height="15" fill="rgb(220,168,23)" fg:x="2233" fg:w="25"/><text x="7.1184%" y="479.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="6.8838%" y="453" width="0.0615%" height="15" fill="rgb(242,38,24)" fg:x="2238" fg:w="20"/><text x="7.1338%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.9300%" y="437" width="0.0154%" height="15" fill="rgb(225,182,9)" fg:x="2253" fg:w="5"/><text x="7.1800%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.9300%" y="421" width="0.0154%" height="15" fill="rgb(243,178,37)" fg:x="2253" fg:w="5"/><text x="7.1800%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="6.9300%" y="405" width="0.0154%" height="15" fill="rgb(232,139,19)" fg:x="2253" fg:w="5"/><text x="7.1800%" y="415.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="6.9484%" y="485" width="0.0123%" height="15" fill="rgb(225,201,24)" fg:x="2259" fg:w="4"/><text x="7.1984%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.15%)</title><rect x="6.8192%" y="517" width="0.1476%" height="15" fill="rgb(221,47,46)" fg:x="2217" fg:w="48"/><text x="7.0692%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.15%)</title><rect x="6.8192%" y="501" width="0.1476%" height="15" fill="rgb(249,23,13)" fg:x="2217" fg:w="48"/><text x="7.0692%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (126 samples, 0.39%)</title><rect x="6.5824%" y="565" width="0.3876%" height="15" fill="rgb(219,9,5)" fg:x="2140" fg:w="126"/><text x="6.8324%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (116 samples, 0.36%)</title><rect x="6.6131%" y="549" width="0.3568%" height="15" fill="rgb(254,171,16)" fg:x="2150" fg:w="116"/><text x="6.8631%" y="559.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (61 samples, 0.19%)</title><rect x="6.7823%" y="533" width="0.1876%" height="15" fill="rgb(230,171,20)" fg:x="2205" fg:w="61"/><text x="7.0323%" y="543.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="6.9699%" y="549" width="0.0123%" height="15" fill="rgb(210,71,41)" fg:x="2266" fg:w="4"/><text x="7.2199%" y="559.50"></text></g><g><title>hashbrown::scopeguard::ScopeGuard&lt;T,F&gt;::into_inner (5 samples, 0.02%)</title><rect x="6.9699%" y="565" width="0.0154%" height="15" fill="rgb(206,173,20)" fg:x="2266" fg:w="5"/><text x="7.2199%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (380 samples, 1.17%)</title><rect x="5.8349%" y="581" width="1.1688%" height="15" fill="rgb(233,88,34)" fg:x="1897" fg:w="380"/><text x="6.0849%" y="591.50"></text></g><g><title>hashbrown::scopeguard::guard (6 samples, 0.02%)</title><rect x="6.9853%" y="565" width="0.0185%" height="15" fill="rgb(223,209,46)" fg:x="2271" fg:w="6"/><text x="7.2353%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (389 samples, 1.20%)</title><rect x="5.8319%" y="597" width="1.1965%" height="15" fill="rgb(250,43,18)" fg:x="1896" fg:w="389"/><text x="6.0819%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="7.0038%" y="581" width="0.0246%" height="15" fill="rgb(208,13,10)" fg:x="2277" fg:w="8"/><text x="7.2538%" y="591.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (8 samples, 0.02%)</title><rect x="7.0038%" y="565" width="0.0246%" height="15" fill="rgb(212,200,36)" fg:x="2277" fg:w="8"/><text x="7.2538%" y="575.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (392 samples, 1.21%)</title><rect x="5.8319%" y="613" width="1.2057%" height="15" fill="rgb(225,90,30)" fg:x="1896" fg:w="392"/><text x="6.0819%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (393 samples, 1.21%)</title><rect x="5.8319%" y="629" width="1.2088%" height="15" fill="rgb(236,182,39)" fg:x="1896" fg:w="393"/><text x="6.0819%" y="639.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (1,030 samples, 3.17%)</title><rect x="3.8818%" y="645" width="3.1682%" height="15" fill="rgb(212,144,35)" fg:x="1262" fg:w="1030"/><text x="4.1318%" y="655.50">&lt;ae..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1,041 samples, 3.20%)</title><rect x="3.8818%" y="661" width="3.2020%" height="15" fill="rgb(228,63,44)" fg:x="1262" fg:w="1041"/><text x="4.1318%" y="671.50">&lt;T ..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (11 samples, 0.03%)</title><rect x="7.0499%" y="645" width="0.0338%" height="15" fill="rgb(228,109,6)" fg:x="2292" fg:w="11"/><text x="7.2999%" y="655.50"></text></g><g><title>core::ptr::write (11 samples, 0.03%)</title><rect x="7.0499%" y="629" width="0.0338%" height="15" fill="rgb(238,117,24)" fg:x="2292" fg:w="11"/><text x="7.2999%" y="639.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="7.0499%" y="613" width="0.0338%" height="15" fill="rgb(242,26,26)" fg:x="2292" fg:w="11"/><text x="7.2999%" y="623.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.06%)</title><rect x="7.1514%" y="597" width="0.0646%" height="15" fill="rgb(221,92,48)" fg:x="2325" fg:w="21"/><text x="7.4014%" y="607.50"></text></g><g><title>malloc (18 samples, 0.06%)</title><rect x="7.1607%" y="581" width="0.0554%" height="15" fill="rgb(209,209,32)" fg:x="2328" fg:w="18"/><text x="7.4107%" y="591.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="7.1730%" y="565" width="0.0431%" height="15" fill="rgb(221,70,22)" fg:x="2332" fg:w="14"/><text x="7.4230%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.2037%" y="549" width="0.0123%" height="15" fill="rgb(248,145,5)" fg:x="2342" fg:w="4"/><text x="7.4537%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.2037%" y="533" width="0.0123%" height="15" fill="rgb(226,116,26)" fg:x="2342" fg:w="4"/><text x="7.4537%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="7.2160%" y="597" width="0.0123%" height="15" fill="rgb(244,5,17)" fg:x="2346" fg:w="4"/><text x="7.4660%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.13%)</title><rect x="7.1145%" y="629" width="0.1261%" height="15" fill="rgb(252,159,33)" fg:x="2313" fg:w="41"/><text x="7.3645%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.12%)</title><rect x="7.1207%" y="613" width="0.1200%" height="15" fill="rgb(206,71,0)" fg:x="2315" fg:w="39"/><text x="7.3707%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="7.2283%" y="597" width="0.0123%" height="15" fill="rgb(233,118,54)" fg:x="2350" fg:w="4"/><text x="7.4783%" y="607.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.01%)</title><rect x="7.2283%" y="581" width="0.0123%" height="15" fill="rgb(234,83,48)" fg:x="2350" fg:w="4"/><text x="7.4783%" y="591.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="7.2283%" y="565" width="0.0123%" height="15" fill="rgb(228,3,54)" fg:x="2350" fg:w="4"/><text x="7.4783%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="7.2406%" y="629" width="0.0123%" height="15" fill="rgb(226,155,13)" fg:x="2354" fg:w="4"/><text x="7.4906%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (57 samples, 0.18%)</title><rect x="7.0930%" y="645" width="0.1753%" height="15" fill="rgb(241,28,37)" fg:x="2306" fg:w="57"/><text x="7.3430%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (61 samples, 0.19%)</title><rect x="7.0868%" y="661" width="0.1876%" height="15" fill="rgb(233,93,10)" fg:x="2304" fg:w="61"/><text x="7.3368%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,124 samples, 3.46%)</title><rect x="3.8356%" y="693" width="3.4573%" height="15" fill="rgb(225,113,19)" fg:x="1247" fg:w="1124"/><text x="4.0856%" y="703.50">&lt;co..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,116 samples, 3.43%)</title><rect x="3.8602%" y="677" width="3.4327%" height="15" fill="rgb(241,2,18)" fg:x="1255" fg:w="1116"/><text x="4.1102%" y="687.50">&lt;al..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (6 samples, 0.02%)</title><rect x="7.2745%" y="661" width="0.0185%" height="15" fill="rgb(228,207,21)" fg:x="2365" fg:w="6"/><text x="7.5245%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (4 samples, 0.01%)</title><rect x="7.2806%" y="645" width="0.0123%" height="15" fill="rgb(213,211,35)" fg:x="2367" fg:w="4"/><text x="7.5306%" y="655.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.02%)</title><rect x="7.4129%" y="597" width="0.0246%" height="15" fill="rgb(209,83,10)" fg:x="2410" fg:w="8"/><text x="7.6629%" y="607.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="7.4129%" y="581" width="0.0246%" height="15" fill="rgb(209,164,1)" fg:x="2410" fg:w="8"/><text x="7.6629%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="7.5544%" y="549" width="0.0123%" height="15" fill="rgb(213,184,43)" fg:x="2456" fg:w="4"/><text x="7.8044%" y="559.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="7.5882%" y="533" width="0.0215%" height="15" fill="rgb(231,61,34)" fg:x="2467" fg:w="7"/><text x="7.8382%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.10%)</title><rect x="7.5236%" y="565" width="0.1015%" height="15" fill="rgb(235,75,3)" fg:x="2446" fg:w="33"/><text x="7.7736%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (19 samples, 0.06%)</title><rect x="7.5667%" y="549" width="0.0584%" height="15" fill="rgb(220,106,47)" fg:x="2460" fg:w="19"/><text x="7.8167%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (5 samples, 0.02%)</title><rect x="7.6097%" y="533" width="0.0154%" height="15" fill="rgb(210,196,33)" fg:x="2474" fg:w="5"/><text x="7.8597%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.25%)</title><rect x="7.4375%" y="597" width="0.2491%" height="15" fill="rgb(229,154,42)" fg:x="2418" fg:w="81"/><text x="7.6875%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (69 samples, 0.21%)</title><rect x="7.4744%" y="581" width="0.2122%" height="15" fill="rgb(228,114,26)" fg:x="2430" fg:w="69"/><text x="7.7244%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (20 samples, 0.06%)</title><rect x="7.6251%" y="565" width="0.0615%" height="15" fill="rgb(208,144,1)" fg:x="2479" fg:w="20"/><text x="7.8751%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.02%)</title><rect x="7.6651%" y="549" width="0.0215%" height="15" fill="rgb(239,112,37)" fg:x="2492" fg:w="7"/><text x="7.9151%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="7.6743%" y="533" width="0.0123%" height="15" fill="rgb(210,96,50)" fg:x="2495" fg:w="4"/><text x="7.9243%" y="543.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="7.6866%" y="597" width="0.0123%" height="15" fill="rgb(222,178,2)" fg:x="2499" fg:w="4"/><text x="7.9366%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.08%)</title><rect x="7.7328%" y="501" width="0.0830%" height="15" fill="rgb(226,74,18)" fg:x="2514" fg:w="27"/><text x="7.9828%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.08%)</title><rect x="7.7328%" y="485" width="0.0830%" height="15" fill="rgb(225,67,54)" fg:x="2514" fg:w="27"/><text x="7.9828%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.08%)</title><rect x="7.7328%" y="469" width="0.0830%" height="15" fill="rgb(251,92,32)" fg:x="2514" fg:w="27"/><text x="7.9828%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.08%)</title><rect x="7.7389%" y="453" width="0.0769%" height="15" fill="rgb(228,149,22)" fg:x="2516" fg:w="25"/><text x="7.9889%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.08%)</title><rect x="7.7389%" y="437" width="0.0769%" height="15" fill="rgb(243,54,13)" fg:x="2516" fg:w="25"/><text x="7.9889%" y="447.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.08%)</title><rect x="7.7389%" y="421" width="0.0769%" height="15" fill="rgb(243,180,28)" fg:x="2516" fg:w="25"/><text x="7.9889%" y="431.50"></text></g><g><title>malloc (24 samples, 0.07%)</title><rect x="7.7420%" y="405" width="0.0738%" height="15" fill="rgb(208,167,24)" fg:x="2517" fg:w="24"/><text x="7.9920%" y="415.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="7.7605%" y="389" width="0.0554%" height="15" fill="rgb(245,73,45)" fg:x="2523" fg:w="18"/><text x="8.0105%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="7.8004%" y="373" width="0.0154%" height="15" fill="rgb(237,203,48)" fg:x="2536" fg:w="5"/><text x="8.0504%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.8035%" y="357" width="0.0123%" height="15" fill="rgb(211,197,16)" fg:x="2537" fg:w="4"/><text x="8.0535%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.8035%" y="341" width="0.0123%" height="15" fill="rgb(243,99,51)" fg:x="2537" fg:w="4"/><text x="8.0535%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="7.8035%" y="325" width="0.0123%" height="15" fill="rgb(215,123,29)" fg:x="2537" fg:w="4"/><text x="8.0535%" y="335.50"></text></g><g><title>core::clone::Clone::clone (56 samples, 0.17%)</title><rect x="7.6989%" y="597" width="0.1722%" height="15" fill="rgb(239,186,37)" fg:x="2503" fg:w="56"/><text x="7.9489%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (51 samples, 0.16%)</title><rect x="7.7143%" y="581" width="0.1569%" height="15" fill="rgb(252,136,39)" fg:x="2508" fg:w="51"/><text x="7.9643%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (45 samples, 0.14%)</title><rect x="7.7328%" y="565" width="0.1384%" height="15" fill="rgb(223,213,32)" fg:x="2514" fg:w="45"/><text x="7.9828%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (45 samples, 0.14%)</title><rect x="7.7328%" y="549" width="0.1384%" height="15" fill="rgb(233,115,5)" fg:x="2514" fg:w="45"/><text x="7.9828%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (45 samples, 0.14%)</title><rect x="7.7328%" y="533" width="0.1384%" height="15" fill="rgb(207,226,44)" fg:x="2514" fg:w="45"/><text x="7.9828%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (45 samples, 0.14%)</title><rect x="7.7328%" y="517" width="0.1384%" height="15" fill="rgb(208,126,0)" fg:x="2514" fg:w="45"/><text x="7.9828%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (18 samples, 0.06%)</title><rect x="7.8158%" y="501" width="0.0554%" height="15" fill="rgb(244,66,21)" fg:x="2541" fg:w="18"/><text x="8.0658%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.06%)</title><rect x="7.8158%" y="485" width="0.0554%" height="15" fill="rgb(222,97,12)" fg:x="2541" fg:w="18"/><text x="8.0658%" y="495.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="7.8158%" y="469" width="0.0554%" height="15" fill="rgb(219,213,19)" fg:x="2541" fg:w="18"/><text x="8.0658%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (22 samples, 0.07%)</title><rect x="7.8712%" y="597" width="0.0677%" height="15" fill="rgb(252,169,30)" fg:x="2559" fg:w="22"/><text x="8.1212%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.07%)</title><rect x="7.8712%" y="581" width="0.0677%" height="15" fill="rgb(206,32,51)" fg:x="2559" fg:w="22"/><text x="8.1212%" y="591.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="7.8773%" y="565" width="0.0615%" height="15" fill="rgb(250,172,42)" fg:x="2561" fg:w="20"/><text x="8.1273%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (11 samples, 0.03%)</title><rect x="7.9419%" y="581" width="0.0338%" height="15" fill="rgb(209,34,43)" fg:x="2582" fg:w="11"/><text x="8.1919%" y="591.50"></text></g><g><title>core::ptr::write (11 samples, 0.03%)</title><rect x="7.9419%" y="565" width="0.0338%" height="15" fill="rgb(223,11,35)" fg:x="2582" fg:w="11"/><text x="8.1919%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (15 samples, 0.05%)</title><rect x="7.9419%" y="597" width="0.0461%" height="15" fill="rgb(251,219,26)" fg:x="2582" fg:w="15"/><text x="8.1919%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="7.9758%" y="581" width="0.0123%" height="15" fill="rgb(231,119,3)" fg:x="2593" fg:w="4"/><text x="8.2258%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (17 samples, 0.05%)</title><rect x="7.9973%" y="581" width="0.0523%" height="15" fill="rgb(216,97,11)" fg:x="2600" fg:w="17"/><text x="8.2473%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.02%)</title><rect x="8.0311%" y="565" width="0.0185%" height="15" fill="rgb(223,59,9)" fg:x="2611" fg:w="6"/><text x="8.2811%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (21 samples, 0.06%)</title><rect x="7.9881%" y="597" width="0.0646%" height="15" fill="rgb(233,93,31)" fg:x="2597" fg:w="21"/><text x="8.2381%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (22 samples, 0.07%)</title><rect x="8.0619%" y="581" width="0.0677%" height="15" fill="rgb(239,81,33)" fg:x="2621" fg:w="22"/><text x="8.3119%" y="591.50"></text></g><g><title>hashbrown::raw::offset_from (12 samples, 0.04%)</title><rect x="8.0926%" y="565" width="0.0369%" height="15" fill="rgb(213,120,34)" fg:x="2631" fg:w="12"/><text x="8.3426%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (8 samples, 0.02%)</title><rect x="8.1049%" y="549" width="0.0246%" height="15" fill="rgb(243,49,53)" fg:x="2635" fg:w="8"/><text x="8.3549%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (26 samples, 0.08%)</title><rect x="8.0527%" y="597" width="0.0800%" height="15" fill="rgb(247,216,33)" fg:x="2618" fg:w="26"/><text x="8.3027%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.02%)</title><rect x="8.1542%" y="581" width="0.0246%" height="15" fill="rgb(226,26,14)" fg:x="2651" fg:w="8"/><text x="8.4042%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (59 samples, 0.18%)</title><rect x="8.1326%" y="597" width="0.1815%" height="15" fill="rgb(215,49,53)" fg:x="2644" fg:w="59"/><text x="8.3826%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (44 samples, 0.14%)</title><rect x="8.1788%" y="581" width="0.1353%" height="15" fill="rgb(245,162,40)" fg:x="2659" fg:w="44"/><text x="8.4288%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (39 samples, 0.12%)</title><rect x="8.1941%" y="565" width="0.1200%" height="15" fill="rgb(229,68,17)" fg:x="2664" fg:w="39"/><text x="8.4441%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (34 samples, 0.10%)</title><rect x="8.2095%" y="549" width="0.1046%" height="15" fill="rgb(213,182,10)" fg:x="2669" fg:w="34"/><text x="8.4595%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32 samples, 0.10%)</title><rect x="8.2157%" y="533" width="0.0984%" height="15" fill="rgb(245,125,30)" fg:x="2671" fg:w="32"/><text x="8.4657%" y="543.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (5 samples, 0.02%)</title><rect x="8.2987%" y="517" width="0.0154%" height="15" fill="rgb(232,202,2)" fg:x="2698" fg:w="5"/><text x="8.5487%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (312 samples, 0.96%)</title><rect x="7.3606%" y="629" width="0.9597%" height="15" fill="rgb(237,140,51)" fg:x="2393" fg:w="312"/><text x="7.6106%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (311 samples, 0.96%)</title><rect x="7.3637%" y="613" width="0.9566%" height="15" fill="rgb(236,157,25)" fg:x="2394" fg:w="311"/><text x="7.6137%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="8.3818%" y="613" width="0.0123%" height="15" fill="rgb(219,209,0)" fg:x="2725" fg:w="4"/><text x="8.6318%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="8.4556%" y="597" width="0.0123%" height="15" fill="rgb(240,116,54)" fg:x="2749" fg:w="4"/><text x="8.7056%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="8.5110%" y="581" width="0.0185%" height="15" fill="rgb(216,10,36)" fg:x="2767" fg:w="6"/><text x="8.7610%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (16 samples, 0.05%)</title><rect x="8.5386%" y="581" width="0.0492%" height="15" fill="rgb(222,72,44)" fg:x="2776" fg:w="16"/><text x="8.7886%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (7 samples, 0.02%)</title><rect x="8.5663%" y="565" width="0.0215%" height="15" fill="rgb(232,159,9)" fg:x="2785" fg:w="7"/><text x="8.8163%" y="575.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (41 samples, 0.13%)</title><rect x="8.4741%" y="597" width="0.1261%" height="15" fill="rgb(210,39,32)" fg:x="2755" fg:w="41"/><text x="8.7241%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (4 samples, 0.01%)</title><rect x="8.5879%" y="581" width="0.0123%" height="15" fill="rgb(216,194,45)" fg:x="2792" fg:w="4"/><text x="8.8379%" y="591.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.09%)</title><rect x="8.6555%" y="549" width="0.0861%" height="15" fill="rgb(218,18,35)" fg:x="2814" fg:w="28"/><text x="8.9055%" y="559.50"></text></g><g><title>malloc (25 samples, 0.08%)</title><rect x="8.6648%" y="533" width="0.0769%" height="15" fill="rgb(207,83,51)" fg:x="2817" fg:w="25"/><text x="8.9148%" y="543.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="8.6986%" y="517" width="0.0431%" height="15" fill="rgb(225,63,43)" fg:x="2828" fg:w="14"/><text x="8.9486%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="8.7294%" y="501" width="0.0123%" height="15" fill="rgb(207,57,36)" fg:x="2838" fg:w="4"/><text x="8.9794%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.02%)</title><rect x="8.7417%" y="549" width="0.0185%" height="15" fill="rgb(216,99,33)" fg:x="2842" fg:w="6"/><text x="8.9917%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="8.7601%" y="549" width="0.0185%" height="15" fill="rgb(225,42,16)" fg:x="2848" fg:w="6"/><text x="9.0101%" y="559.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (4 samples, 0.01%)</title><rect x="8.7663%" y="533" width="0.0123%" height="15" fill="rgb(220,201,45)" fg:x="2850" fg:w="4"/><text x="9.0163%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (154 samples, 0.47%)</title><rect x="8.3387%" y="629" width="0.4737%" height="15" fill="rgb(225,33,4)" fg:x="2711" fg:w="154"/><text x="8.5887%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (135 samples, 0.42%)</title><rect x="8.3972%" y="613" width="0.4152%" height="15" fill="rgb(224,33,50)" fg:x="2730" fg:w="135"/><text x="8.6472%" y="623.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (69 samples, 0.21%)</title><rect x="8.6002%" y="597" width="0.2122%" height="15" fill="rgb(246,198,51)" fg:x="2796" fg:w="69"/><text x="8.8502%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.20%)</title><rect x="8.6155%" y="581" width="0.1969%" height="15" fill="rgb(205,22,4)" fg:x="2801" fg:w="64"/><text x="8.8655%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.20%)</title><rect x="8.6155%" y="565" width="0.1969%" height="15" fill="rgb(206,3,8)" fg:x="2801" fg:w="64"/><text x="8.8655%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (11 samples, 0.03%)</title><rect x="8.7786%" y="549" width="0.0338%" height="15" fill="rgb(251,23,15)" fg:x="2854" fg:w="11"/><text x="9.0286%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.03%)</title><rect x="8.7847%" y="533" width="0.0277%" height="15" fill="rgb(252,88,28)" fg:x="2856" fg:w="9"/><text x="9.0347%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (8 samples, 0.02%)</title><rect x="8.7878%" y="517" width="0.0246%" height="15" fill="rgb(212,127,14)" fg:x="2857" fg:w="8"/><text x="9.0378%" y="527.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="8.8124%" y="613" width="0.0123%" height="15" fill="rgb(247,145,37)" fg:x="2865" fg:w="4"/><text x="9.0624%" y="623.50"></text></g><g><title>hashbrown::scopeguard::ScopeGuard&lt;T,F&gt;::into_inner (7 samples, 0.02%)</title><rect x="8.8124%" y="629" width="0.0215%" height="15" fill="rgb(209,117,53)" fg:x="2865" fg:w="7"/><text x="9.0624%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (498 samples, 1.53%)</title><rect x="7.3175%" y="645" width="1.5318%" height="15" fill="rgb(212,90,42)" fg:x="2379" fg:w="498"/><text x="7.5675%" y="655.50"></text></g><g><title>hashbrown::scopeguard::guard (5 samples, 0.02%)</title><rect x="8.8339%" y="629" width="0.0154%" height="15" fill="rgb(218,164,37)" fg:x="2872" fg:w="5"/><text x="9.0839%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (526 samples, 1.62%)</title><rect x="7.2929%" y="661" width="1.6179%" height="15" fill="rgb(246,65,34)" fg:x="2371" fg:w="526"/><text x="7.5429%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="8.8493%" y="645" width="0.0615%" height="15" fill="rgb(231,100,33)" fg:x="2877" fg:w="20"/><text x="9.0993%" y="655.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (18 samples, 0.06%)</title><rect x="8.8555%" y="629" width="0.0554%" height="15" fill="rgb(228,126,14)" fg:x="2879" fg:w="18"/><text x="9.1055%" y="639.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (538 samples, 1.65%)</title><rect x="7.2929%" y="677" width="1.6548%" height="15" fill="rgb(215,173,21)" fg:x="2371" fg:w="538"/><text x="7.5429%" y="687.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="8.9108%" y="661" width="0.0369%" height="15" fill="rgb(210,6,40)" fg:x="2897" fg:w="12"/><text x="9.1608%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (541 samples, 1.66%)</title><rect x="7.2929%" y="693" width="1.6641%" height="15" fill="rgb(212,48,18)" fg:x="2371" fg:w="541"/><text x="7.5429%" y="703.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (1,678 samples, 5.16%)</title><rect x="3.8018%" y="709" width="5.1613%" height="15" fill="rgb(230,214,11)" fg:x="1236" fg:w="1678"/><text x="4.0518%" y="719.50">&lt;aes_g..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1,692 samples, 5.20%)</title><rect x="3.7926%" y="725" width="5.2044%" height="15" fill="rgb(254,105,39)" fg:x="1233" fg:w="1692"/><text x="4.0426%" y="735.50">&lt;T as ..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (11 samples, 0.03%)</title><rect x="8.9631%" y="709" width="0.0338%" height="15" fill="rgb(245,158,5)" fg:x="2914" fg:w="11"/><text x="9.2131%" y="719.50"></text></g><g><title>core::ptr::write (11 samples, 0.03%)</title><rect x="8.9631%" y="693" width="0.0338%" height="15" fill="rgb(249,208,11)" fg:x="2914" fg:w="11"/><text x="9.2131%" y="703.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="8.9754%" y="677" width="0.0215%" height="15" fill="rgb(210,39,28)" fg:x="2918" fg:w="7"/><text x="9.2254%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="9.1015%" y="661" width="0.0123%" height="15" fill="rgb(211,56,53)" fg:x="2959" fg:w="4"/><text x="9.3515%" y="671.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.12%)</title><rect x="9.1169%" y="661" width="0.1169%" height="15" fill="rgb(226,201,30)" fg:x="2964" fg:w="38"/><text x="9.3669%" y="671.50"></text></g><g><title>malloc (27 samples, 0.08%)</title><rect x="9.1507%" y="645" width="0.0830%" height="15" fill="rgb(239,101,34)" fg:x="2975" fg:w="27"/><text x="9.4007%" y="655.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="9.1784%" y="629" width="0.0554%" height="15" fill="rgb(226,209,5)" fg:x="2984" fg:w="18"/><text x="9.4284%" y="639.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2153%" y="613" width="0.0185%" height="15" fill="rgb(250,105,47)" fg:x="2996" fg:w="6"/><text x="9.4653%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="9.2153%" y="597" width="0.0185%" height="15" fill="rgb(230,72,3)" fg:x="2996" fg:w="6"/><text x="9.4653%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="9.2215%" y="581" width="0.0123%" height="15" fill="rgb(232,218,39)" fg:x="2998" fg:w="4"/><text x="9.4715%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="9.2215%" y="565" width="0.0123%" height="15" fill="rgb(248,166,6)" fg:x="2998" fg:w="4"/><text x="9.4715%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="9.2461%" y="661" width="0.0123%" height="15" fill="rgb(247,89,20)" fg:x="3006" fg:w="4"/><text x="9.4961%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (69 samples, 0.21%)</title><rect x="9.0615%" y="693" width="0.2122%" height="15" fill="rgb(248,130,54)" fg:x="2946" fg:w="69"/><text x="9.3115%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.21%)</title><rect x="9.0646%" y="677" width="0.2092%" height="15" fill="rgb(234,196,4)" fg:x="2947" fg:w="68"/><text x="9.3146%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (5 samples, 0.02%)</title><rect x="9.2584%" y="661" width="0.0154%" height="15" fill="rgb(250,143,31)" fg:x="3010" fg:w="5"/><text x="9.5084%" y="671.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.02%)</title><rect x="9.2584%" y="645" width="0.0154%" height="15" fill="rgb(211,110,34)" fg:x="3010" fg:w="5"/><text x="9.5084%" y="655.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="9.2615%" y="629" width="0.0123%" height="15" fill="rgb(215,124,48)" fg:x="3011" fg:w="4"/><text x="9.5115%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="9.2738%" y="693" width="0.0215%" height="15" fill="rgb(216,46,13)" fg:x="3015" fg:w="7"/><text x="9.5238%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (96 samples, 0.30%)</title><rect x="9.0123%" y="709" width="0.2953%" height="15" fill="rgb(205,184,25)" fg:x="2930" fg:w="96"/><text x="9.2623%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (103 samples, 0.32%)</title><rect x="8.9970%" y="725" width="0.3168%" height="15" fill="rgb(228,1,10)" fg:x="2925" fg:w="103"/><text x="9.2470%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (7 samples, 0.02%)</title><rect x="9.3138%" y="709" width="0.0215%" height="15" fill="rgb(213,116,27)" fg:x="3028" fg:w="7"/><text x="9.5638%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,830 samples, 5.63%)</title><rect x="3.7218%" y="757" width="5.6289%" height="15" fill="rgb(241,95,50)" fg:x="1210" fg:w="1830"/><text x="3.9718%" y="767.50">&lt;core::..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,816 samples, 5.59%)</title><rect x="3.7649%" y="741" width="5.5858%" height="15" fill="rgb(238,48,32)" fg:x="1224" fg:w="1816"/><text x="4.0149%" y="751.50">&lt;alloc:..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (12 samples, 0.04%)</title><rect x="9.3138%" y="725" width="0.0369%" height="15" fill="rgb(235,113,49)" fg:x="3028" fg:w="12"/><text x="9.5638%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::into_raw_with_allocator (5 samples, 0.02%)</title><rect x="9.3353%" y="709" width="0.0154%" height="15" fill="rgb(205,127,43)" fg:x="3035" fg:w="5"/><text x="9.5853%" y="719.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="9.3353%" y="693" width="0.0154%" height="15" fill="rgb(250,162,2)" fg:x="3035" fg:w="5"/><text x="9.5853%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="9.3353%" y="677" width="0.0154%" height="15" fill="rgb(220,13,41)" fg:x="3035" fg:w="5"/><text x="9.5853%" y="687.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.04%)</title><rect x="9.5352%" y="661" width="0.0400%" height="15" fill="rgb(249,221,25)" fg:x="3100" fg:w="13"/><text x="9.7852%" y="671.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="9.5352%" y="645" width="0.0400%" height="15" fill="rgb(215,208,19)" fg:x="3100" fg:w="13"/><text x="9.7852%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="9.7167%" y="613" width="0.0185%" height="15" fill="rgb(236,175,2)" fg:x="3159" fg:w="6"/><text x="9.9667%" y="623.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (15 samples, 0.05%)</title><rect x="9.7721%" y="597" width="0.0461%" height="15" fill="rgb(241,52,2)" fg:x="3177" fg:w="15"/><text x="10.0221%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (69 samples, 0.21%)</title><rect x="9.6490%" y="629" width="0.2122%" height="15" fill="rgb(248,140,14)" fg:x="3137" fg:w="69"/><text x="9.8990%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (41 samples, 0.13%)</title><rect x="9.7352%" y="613" width="0.1261%" height="15" fill="rgb(253,22,42)" fg:x="3165" fg:w="41"/><text x="9.9852%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (14 samples, 0.04%)</title><rect x="9.8182%" y="597" width="0.0431%" height="15" fill="rgb(234,61,47)" fg:x="3192" fg:w="14"/><text x="10.0682%" y="607.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (4 samples, 0.01%)</title><rect x="9.8490%" y="581" width="0.0123%" height="15" fill="rgb(208,226,15)" fg:x="3202" fg:w="4"/><text x="10.0990%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (29 samples, 0.09%)</title><rect x="9.8613%" y="629" width="0.0892%" height="15" fill="rgb(217,221,4)" fg:x="3206" fg:w="29"/><text x="10.1113%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.03%)</title><rect x="9.9228%" y="613" width="0.0277%" height="15" fill="rgb(212,174,34)" fg:x="3226" fg:w="9"/><text x="10.1728%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="9.9382%" y="597" width="0.0123%" height="15" fill="rgb(253,83,4)" fg:x="3231" fg:w="4"/><text x="10.1882%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 0.38%)</title><rect x="9.5752%" y="661" width="0.3783%" height="15" fill="rgb(250,195,49)" fg:x="3113" fg:w="123"/><text x="9.8252%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (112 samples, 0.34%)</title><rect x="9.6091%" y="645" width="0.3445%" height="15" fill="rgb(241,192,25)" fg:x="3124" fg:w="112"/><text x="9.8591%" y="655.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="9.9536%" y="661" width="0.0308%" height="15" fill="rgb(208,124,10)" fg:x="3236" fg:w="10"/><text x="10.2036%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.11%)</title><rect x="10.0274%" y="565" width="0.1138%" height="15" fill="rgb(222,33,0)" fg:x="3260" fg:w="37"/><text x="10.2774%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.11%)</title><rect x="10.0274%" y="549" width="0.1138%" height="15" fill="rgb(234,209,28)" fg:x="3260" fg:w="37"/><text x="10.2774%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.11%)</title><rect x="10.0274%" y="533" width="0.1138%" height="15" fill="rgb(224,11,23)" fg:x="3260" fg:w="37"/><text x="10.2774%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.11%)</title><rect x="10.0305%" y="517" width="0.1107%" height="15" fill="rgb(232,99,1)" fg:x="3261" fg:w="36"/><text x="10.2805%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.11%)</title><rect x="10.0305%" y="501" width="0.1107%" height="15" fill="rgb(237,95,45)" fg:x="3261" fg:w="36"/><text x="10.2805%" y="511.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.11%)</title><rect x="10.0305%" y="485" width="0.1107%" height="15" fill="rgb(208,109,11)" fg:x="3261" fg:w="36"/><text x="10.2805%" y="495.50"></text></g><g><title>malloc (34 samples, 0.10%)</title><rect x="10.0366%" y="469" width="0.1046%" height="15" fill="rgb(216,190,48)" fg:x="3263" fg:w="34"/><text x="10.2866%" y="479.50"></text></g><g><title>[libc.so.6] (23 samples, 0.07%)</title><rect x="10.0704%" y="453" width="0.0707%" height="15" fill="rgb(251,171,36)" fg:x="3274" fg:w="23"/><text x="10.3204%" y="463.50"></text></g><g><title>core::clone::Clone::clone (99 samples, 0.30%)</title><rect x="9.9843%" y="661" width="0.3045%" height="15" fill="rgb(230,62,22)" fg:x="3246" fg:w="99"/><text x="10.2343%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (92 samples, 0.28%)</title><rect x="10.0058%" y="645" width="0.2830%" height="15" fill="rgb(225,114,35)" fg:x="3253" fg:w="92"/><text x="10.2558%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (85 samples, 0.26%)</title><rect x="10.0274%" y="629" width="0.2614%" height="15" fill="rgb(215,118,42)" fg:x="3260" fg:w="85"/><text x="10.2774%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (85 samples, 0.26%)</title><rect x="10.0274%" y="613" width="0.2614%" height="15" fill="rgb(243,119,21)" fg:x="3260" fg:w="85"/><text x="10.2774%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (85 samples, 0.26%)</title><rect x="10.0274%" y="597" width="0.2614%" height="15" fill="rgb(252,177,53)" fg:x="3260" fg:w="85"/><text x="10.2774%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (85 samples, 0.26%)</title><rect x="10.0274%" y="581" width="0.2614%" height="15" fill="rgb(237,209,29)" fg:x="3260" fg:w="85"/><text x="10.2774%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (48 samples, 0.15%)</title><rect x="10.1412%" y="565" width="0.1476%" height="15" fill="rgb(212,65,23)" fg:x="3297" fg:w="48"/><text x="10.3912%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (48 samples, 0.15%)</title><rect x="10.1412%" y="549" width="0.1476%" height="15" fill="rgb(230,222,46)" fg:x="3297" fg:w="48"/><text x="10.3912%" y="559.50"></text></g><g><title>[libc.so.6] (48 samples, 0.15%)</title><rect x="10.1412%" y="533" width="0.1476%" height="15" fill="rgb(215,135,32)" fg:x="3297" fg:w="48"/><text x="10.3912%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (36 samples, 0.11%)</title><rect x="10.2888%" y="661" width="0.1107%" height="15" fill="rgb(246,101,22)" fg:x="3345" fg:w="36"/><text x="10.5388%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.10%)</title><rect x="10.2950%" y="645" width="0.1046%" height="15" fill="rgb(206,107,13)" fg:x="3347" fg:w="34"/><text x="10.5450%" y="655.50"></text></g><g><title>[libc.so.6] (32 samples, 0.10%)</title><rect x="10.3011%" y="629" width="0.0984%" height="15" fill="rgb(250,100,44)" fg:x="3349" fg:w="32"/><text x="10.5511%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (16 samples, 0.05%)</title><rect x="10.4026%" y="645" width="0.0492%" height="15" fill="rgb(231,147,38)" fg:x="3382" fg:w="16"/><text x="10.6526%" y="655.50"></text></g><g><title>core::ptr::write (16 samples, 0.05%)</title><rect x="10.4026%" y="629" width="0.0492%" height="15" fill="rgb(229,8,40)" fg:x="3382" fg:w="16"/><text x="10.6526%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (22 samples, 0.07%)</title><rect x="10.4026%" y="661" width="0.0677%" height="15" fill="rgb(221,135,30)" fg:x="3382" fg:w="22"/><text x="10.6526%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="10.4518%" y="645" width="0.0185%" height="15" fill="rgb(249,193,18)" fg:x="3398" fg:w="6"/><text x="10.7018%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (35 samples, 0.11%)</title><rect x="10.5041%" y="645" width="0.1077%" height="15" fill="rgb(209,133,39)" fg:x="3415" fg:w="35"/><text x="10.7541%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.02%)</title><rect x="10.5872%" y="629" width="0.0246%" height="15" fill="rgb(232,100,14)" fg:x="3442" fg:w="8"/><text x="10.8372%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="10.5995%" y="613" width="0.0123%" height="15" fill="rgb(224,185,1)" fg:x="3446" fg:w="4"/><text x="10.8495%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (47 samples, 0.14%)</title><rect x="10.4703%" y="661" width="0.1446%" height="15" fill="rgb(223,139,8)" fg:x="3404" fg:w="47"/><text x="10.7203%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (40 samples, 0.12%)</title><rect x="10.6149%" y="661" width="0.1230%" height="15" fill="rgb(232,213,38)" fg:x="3451" fg:w="40"/><text x="10.8649%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (33 samples, 0.10%)</title><rect x="10.6364%" y="645" width="0.1015%" height="15" fill="rgb(207,94,22)" fg:x="3458" fg:w="33"/><text x="10.8864%" y="655.50"></text></g><g><title>hashbrown::raw::offset_from (18 samples, 0.06%)</title><rect x="10.6825%" y="629" width="0.0554%" height="15" fill="rgb(219,183,54)" fg:x="3473" fg:w="18"/><text x="10.9325%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (16 samples, 0.05%)</title><rect x="10.6887%" y="613" width="0.0492%" height="15" fill="rgb(216,185,54)" fg:x="3475" fg:w="16"/><text x="10.9387%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (19 samples, 0.06%)</title><rect x="10.7717%" y="645" width="0.0584%" height="15" fill="rgb(254,217,39)" fg:x="3502" fg:w="19"/><text x="11.0217%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (77 samples, 0.24%)</title><rect x="10.7379%" y="661" width="0.2368%" height="15" fill="rgb(240,178,23)" fg:x="3491" fg:w="77"/><text x="10.9879%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (47 samples, 0.14%)</title><rect x="10.8302%" y="645" width="0.1446%" height="15" fill="rgb(218,11,47)" fg:x="3521" fg:w="47"/><text x="11.0802%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (37 samples, 0.11%)</title><rect x="10.8609%" y="629" width="0.1138%" height="15" fill="rgb(218,51,51)" fg:x="3531" fg:w="37"/><text x="11.1109%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (34 samples, 0.10%)</title><rect x="10.8702%" y="613" width="0.1046%" height="15" fill="rgb(238,126,27)" fg:x="3534" fg:w="34"/><text x="11.1202%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (32 samples, 0.10%)</title><rect x="10.8763%" y="597" width="0.0984%" height="15" fill="rgb(249,202,22)" fg:x="3536" fg:w="32"/><text x="11.1263%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (499 samples, 1.53%)</title><rect x="9.4522%" y="693" width="1.5349%" height="15" fill="rgb(254,195,49)" fg:x="3073" fg:w="499"/><text x="9.7022%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (498 samples, 1.53%)</title><rect x="9.4553%" y="677" width="1.5318%" height="15" fill="rgb(208,123,14)" fg:x="3074" fg:w="498"/><text x="9.7053%" y="687.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (5 samples, 0.02%)</title><rect x="10.9871%" y="693" width="0.0154%" height="15" fill="rgb(224,200,8)" fg:x="3572" fg:w="5"/><text x="11.2371%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="11.0455%" y="677" width="0.0154%" height="15" fill="rgb(217,61,36)" fg:x="3591" fg:w="5"/><text x="11.2955%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="11.1193%" y="661" width="0.0123%" height="15" fill="rgb(206,35,45)" fg:x="3615" fg:w="4"/><text x="11.3693%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.05%)</title><rect x="11.2054%" y="645" width="0.0461%" height="15" fill="rgb(217,65,33)" fg:x="3643" fg:w="15"/><text x="11.4554%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (14 samples, 0.04%)</title><rect x="11.2608%" y="645" width="0.0431%" height="15" fill="rgb(222,158,48)" fg:x="3661" fg:w="14"/><text x="11.5108%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="11.2885%" y="629" width="0.0154%" height="15" fill="rgb(254,2,54)" fg:x="3670" fg:w="5"/><text x="11.5385%" y="639.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (58 samples, 0.18%)</title><rect x="11.1316%" y="661" width="0.1784%" height="15" fill="rgb(250,143,38)" fg:x="3619" fg:w="58"/><text x="11.3816%" y="671.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="11.5069%" y="565" width="0.0123%" height="15" fill="rgb(248,25,0)" fg:x="3741" fg:w="4"/><text x="11.7569%" y="575.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.11%)</title><rect x="11.4238%" y="613" width="0.1107%" height="15" fill="rgb(206,152,27)" fg:x="3714" fg:w="36"/><text x="11.6738%" y="623.50"></text></g><g><title>malloc (34 samples, 0.10%)</title><rect x="11.4300%" y="597" width="0.1046%" height="15" fill="rgb(240,77,30)" fg:x="3716" fg:w="34"/><text x="11.6800%" y="607.50"></text></g><g><title>[libc.so.6] (29 samples, 0.09%)</title><rect x="11.4454%" y="581" width="0.0892%" height="15" fill="rgb(231,5,3)" fg:x="3721" fg:w="29"/><text x="11.6954%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="11.5192%" y="565" width="0.0154%" height="15" fill="rgb(207,226,32)" fg:x="3745" fg:w="5"/><text x="11.7692%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="11.5223%" y="549" width="0.0123%" height="15" fill="rgb(222,207,47)" fg:x="3746" fg:w="4"/><text x="11.7723%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="11.5223%" y="533" width="0.0123%" height="15" fill="rgb(229,115,45)" fg:x="3746" fg:w="4"/><text x="11.7723%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.02%)</title><rect x="11.5346%" y="613" width="0.0154%" height="15" fill="rgb(224,191,6)" fg:x="3750" fg:w="5"/><text x="11.7846%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="11.5499%" y="613" width="0.0154%" height="15" fill="rgb(230,227,24)" fg:x="3755" fg:w="5"/><text x="11.7999%" y="623.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (90 samples, 0.28%)</title><rect x="11.3100%" y="661" width="0.2768%" height="15" fill="rgb(228,80,19)" fg:x="3677" fg:w="90"/><text x="11.5600%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.22%)</title><rect x="11.3685%" y="645" width="0.2184%" height="15" fill="rgb(247,229,0)" fg:x="3696" fg:w="71"/><text x="11.6185%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.22%)</title><rect x="11.3685%" y="629" width="0.2184%" height="15" fill="rgb(237,194,15)" fg:x="3696" fg:w="71"/><text x="11.6185%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (7 samples, 0.02%)</title><rect x="11.5653%" y="613" width="0.0215%" height="15" fill="rgb(219,203,20)" fg:x="3760" fg:w="7"/><text x="11.8153%" y="623.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (7 samples, 0.02%)</title><rect x="11.5653%" y="597" width="0.0215%" height="15" fill="rgb(234,128,8)" fg:x="3760" fg:w="7"/><text x="11.8153%" y="607.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.02%)</title><rect x="11.5653%" y="581" width="0.0215%" height="15" fill="rgb(248,202,8)" fg:x="3760" fg:w="7"/><text x="11.8153%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (188 samples, 0.58%)</title><rect x="11.0117%" y="693" width="0.5783%" height="15" fill="rgb(206,104,37)" fg:x="3580" fg:w="188"/><text x="11.2617%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (172 samples, 0.53%)</title><rect x="11.0609%" y="677" width="0.5291%" height="15" fill="rgb(223,8,27)" fg:x="3596" fg:w="172"/><text x="11.3109%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (733 samples, 2.25%)</title><rect x="9.3661%" y="709" width="2.2546%" height="15" fill="rgb(216,217,28)" fg:x="3045" fg:w="733"/><text x="9.6161%" y="719.50">&lt;..</text></g><g><title>hashbrown::scopeguard::guard (6 samples, 0.02%)</title><rect x="11.6022%" y="693" width="0.0185%" height="15" fill="rgb(249,199,1)" fg:x="3772" fg:w="6"/><text x="11.8522%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (755 samples, 2.32%)</title><rect x="9.3538%" y="725" width="2.3223%" height="15" fill="rgb(240,85,17)" fg:x="3041" fg:w="755"/><text x="9.6038%" y="735.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="11.6207%" y="709" width="0.0554%" height="15" fill="rgb(206,108,45)" fg:x="3778" fg:w="18"/><text x="11.8707%" y="719.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (16 samples, 0.05%)</title><rect x="11.6268%" y="693" width="0.0492%" height="15" fill="rgb(245,210,41)" fg:x="3780" fg:w="16"/><text x="11.8768%" y="703.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (765 samples, 2.35%)</title><rect x="9.3507%" y="741" width="2.3530%" height="15" fill="rgb(206,13,37)" fg:x="3040" fg:w="765"/><text x="9.6007%" y="751.50">&lt;..</text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="11.6760%" y="725" width="0.0277%" height="15" fill="rgb(250,61,18)" fg:x="3796" fg:w="9"/><text x="11.9260%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (770 samples, 2.37%)</title><rect x="9.3507%" y="757" width="2.3684%" height="15" fill="rgb(235,172,48)" fg:x="3040" fg:w="770"/><text x="9.6007%" y="767.50">&lt;s..</text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="11.7037%" y="741" width="0.0154%" height="15" fill="rgb(249,201,17)" fg:x="3805" fg:w="5"/><text x="11.9537%" y="751.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (2,621 samples, 8.06%)</title><rect x="3.6911%" y="773" width="8.0619%" height="15" fill="rgb(219,208,6)" fg:x="1200" fg:w="2621"/><text x="3.9411%" y="783.50">&lt;aes_grinde..</text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="11.7191%" y="757" width="0.0338%" height="15" fill="rgb(248,31,23)" fg:x="3810" fg:w="11"/><text x="11.9691%" y="767.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2,628 samples, 8.08%)</title><rect x="3.6849%" y="789" width="8.0834%" height="15" fill="rgb(245,15,42)" fg:x="1198" fg:w="2628"/><text x="3.9349%" y="799.50">&lt;T as alloc..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.02%)</title><rect x="11.7529%" y="773" width="0.0154%" height="15" fill="rgb(222,217,39)" fg:x="3821" fg:w="5"/><text x="12.0029%" y="783.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="11.7529%" y="757" width="0.0154%" height="15" fill="rgb(210,219,27)" fg:x="3821" fg:w="5"/><text x="12.0029%" y="767.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.18%)</title><rect x="11.9098%" y="725" width="0.1846%" height="15" fill="rgb(252,166,36)" fg:x="3872" fg:w="60"/><text x="12.1598%" y="735.50"></text></g><g><title>malloc (52 samples, 0.16%)</title><rect x="11.9344%" y="709" width="0.1599%" height="15" fill="rgb(245,132,34)" fg:x="3880" fg:w="52"/><text x="12.1844%" y="719.50"></text></g><g><title>[libc.so.6] (37 samples, 0.11%)</title><rect x="11.9806%" y="693" width="0.1138%" height="15" fill="rgb(236,54,3)" fg:x="3895" fg:w="37"/><text x="12.2306%" y="703.50"></text></g><g><title>[unknown] (9 samples, 0.03%)</title><rect x="12.0667%" y="677" width="0.0277%" height="15" fill="rgb(241,173,43)" fg:x="3923" fg:w="9"/><text x="12.3167%" y="687.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="12.0698%" y="661" width="0.0246%" height="15" fill="rgb(215,190,9)" fg:x="3924" fg:w="8"/><text x="12.3198%" y="671.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="12.0728%" y="645" width="0.0215%" height="15" fill="rgb(242,101,16)" fg:x="3925" fg:w="7"/><text x="12.3228%" y="655.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="12.0759%" y="629" width="0.0185%" height="15" fill="rgb(223,190,21)" fg:x="3926" fg:w="6"/><text x="12.3259%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (4 samples, 0.01%)</title><rect x="12.0944%" y="725" width="0.0123%" height="15" fill="rgb(215,228,25)" fg:x="3932" fg:w="4"/><text x="12.3444%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="12.1067%" y="725" width="0.0277%" height="15" fill="rgb(225,36,22)" fg:x="3936" fg:w="9"/><text x="12.3567%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.27%)</title><rect x="11.8791%" y="757" width="0.2738%" height="15" fill="rgb(251,106,46)" fg:x="3862" fg:w="89"/><text x="12.1291%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.27%)</title><rect x="11.8791%" y="741" width="0.2738%" height="15" fill="rgb(208,90,1)" fg:x="3862" fg:w="89"/><text x="12.1291%" y="751.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (6 samples, 0.02%)</title><rect x="12.1344%" y="725" width="0.0185%" height="15" fill="rgb(243,10,4)" fg:x="3945" fg:w="6"/><text x="12.3844%" y="735.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (6 samples, 0.02%)</title><rect x="12.1344%" y="709" width="0.0185%" height="15" fill="rgb(212,137,27)" fg:x="3945" fg:w="6"/><text x="12.3844%" y="719.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (6 samples, 0.02%)</title><rect x="12.1344%" y="693" width="0.0185%" height="15" fill="rgb(231,220,49)" fg:x="3945" fg:w="6"/><text x="12.3844%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (6 samples, 0.02%)</title><rect x="12.1620%" y="757" width="0.0185%" height="15" fill="rgb(237,96,20)" fg:x="3954" fg:w="6"/><text x="12.4120%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (127 samples, 0.39%)</title><rect x="11.8052%" y="773" width="0.3906%" height="15" fill="rgb(239,229,30)" fg:x="3838" fg:w="127"/><text x="12.0552%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::new (5 samples, 0.02%)</title><rect x="12.1805%" y="757" width="0.0154%" height="15" fill="rgb(219,65,33)" fg:x="3960" fg:w="5"/><text x="12.4305%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (140 samples, 0.43%)</title><rect x="11.7714%" y="789" width="0.4306%" height="15" fill="rgb(243,134,7)" fg:x="3827" fg:w="140"/><text x="12.0214%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (7 samples, 0.02%)</title><rect x="12.2020%" y="773" width="0.0215%" height="15" fill="rgb(216,177,54)" fg:x="3967" fg:w="7"/><text x="12.4520%" y="783.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (6 samples, 0.02%)</title><rect x="12.2051%" y="757" width="0.0185%" height="15" fill="rgb(211,160,20)" fg:x="3968" fg:w="6"/><text x="12.4551%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,810 samples, 8.64%)</title><rect x="3.5834%" y="821" width="8.6432%" height="15" fill="rgb(239,85,39)" fg:x="1165" fg:w="2810"/><text x="3.8334%" y="831.50">&lt;core::optio..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,791 samples, 8.58%)</title><rect x="3.6418%" y="805" width="8.5848%" height="15" fill="rgb(232,125,22)" fg:x="1184" fg:w="2791"/><text x="3.8918%" y="815.50">&lt;alloc::boxe..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (8 samples, 0.02%)</title><rect x="12.2020%" y="789" width="0.0246%" height="15" fill="rgb(244,57,34)" fg:x="3967" fg:w="8"/><text x="12.4520%" y="799.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.03%)</title><rect x="12.3743%" y="725" width="0.0308%" height="15" fill="rgb(214,203,32)" fg:x="4023" fg:w="10"/><text x="12.6243%" y="735.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="12.3773%" y="709" width="0.0277%" height="15" fill="rgb(207,58,43)" fg:x="4024" fg:w="9"/><text x="12.6273%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.03%)</title><rect x="12.6357%" y="677" width="0.0338%" height="15" fill="rgb(215,193,15)" fg:x="4108" fg:w="11"/><text x="12.8857%" y="687.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="12.7218%" y="661" width="0.0215%" height="15" fill="rgb(232,15,44)" fg:x="4136" fg:w="7"/><text x="12.9718%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.22%)</title><rect x="12.5588%" y="693" width="0.2215%" height="15" fill="rgb(212,3,48)" fg:x="4083" fg:w="72"/><text x="12.8088%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (36 samples, 0.11%)</title><rect x="12.6696%" y="677" width="0.1107%" height="15" fill="rgb(218,128,7)" fg:x="4119" fg:w="36"/><text x="12.9196%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (12 samples, 0.04%)</title><rect x="12.7434%" y="661" width="0.0369%" height="15" fill="rgb(226,216,39)" fg:x="4143" fg:w="12"/><text x="12.9934%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.03%)</title><rect x="12.8818%" y="677" width="0.0308%" height="15" fill="rgb(243,47,51)" fg:x="4188" fg:w="10"/><text x="13.1318%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (43 samples, 0.13%)</title><rect x="12.7834%" y="693" width="0.1323%" height="15" fill="rgb(241,183,40)" fg:x="4156" fg:w="43"/><text x="13.0334%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 0.51%)</title><rect x="12.4050%" y="725" width="0.5137%" height="15" fill="rgb(231,217,32)" fg:x="4033" fg:w="167"/><text x="12.6550%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (140 samples, 0.43%)</title><rect x="12.4881%" y="709" width="0.4306%" height="15" fill="rgb(229,61,38)" fg:x="4060" fg:w="140"/><text x="12.7381%" y="719.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="12.9187%" y="725" width="0.0123%" height="15" fill="rgb(225,210,5)" fg:x="4200" fg:w="4"/><text x="13.1687%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (50 samples, 0.15%)</title><rect x="12.9894%" y="629" width="0.1538%" height="15" fill="rgb(231,79,45)" fg:x="4223" fg:w="50"/><text x="13.2394%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.15%)</title><rect x="12.9894%" y="613" width="0.1538%" height="15" fill="rgb(224,100,7)" fg:x="4223" fg:w="50"/><text x="13.2394%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.15%)</title><rect x="12.9894%" y="597" width="0.1538%" height="15" fill="rgb(241,198,18)" fg:x="4223" fg:w="50"/><text x="13.2394%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (47 samples, 0.14%)</title><rect x="12.9987%" y="581" width="0.1446%" height="15" fill="rgb(252,97,53)" fg:x="4226" fg:w="47"/><text x="13.2487%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (47 samples, 0.14%)</title><rect x="12.9987%" y="565" width="0.1446%" height="15" fill="rgb(220,88,7)" fg:x="4226" fg:w="47"/><text x="13.2487%" y="575.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.14%)</title><rect x="12.9987%" y="549" width="0.1446%" height="15" fill="rgb(213,176,14)" fg:x="4226" fg:w="47"/><text x="13.2487%" y="559.50"></text></g><g><title>malloc (44 samples, 0.14%)</title><rect x="13.0079%" y="533" width="0.1353%" height="15" fill="rgb(246,73,7)" fg:x="4229" fg:w="44"/><text x="13.2579%" y="543.50"></text></g><g><title>[libc.so.6] (34 samples, 0.10%)</title><rect x="13.0387%" y="517" width="0.1046%" height="15" fill="rgb(245,64,36)" fg:x="4239" fg:w="34"/><text x="13.2887%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="13.1309%" y="501" width="0.0123%" height="15" fill="rgb(245,80,10)" fg:x="4269" fg:w="4"/><text x="13.3809%" y="511.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="13.1309%" y="485" width="0.0123%" height="15" fill="rgb(232,107,50)" fg:x="4269" fg:w="4"/><text x="13.3809%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (117 samples, 0.36%)</title><rect x="12.9495%" y="709" width="0.3599%" height="15" fill="rgb(253,3,0)" fg:x="4210" fg:w="117"/><text x="13.1995%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (104 samples, 0.32%)</title><rect x="12.9894%" y="693" width="0.3199%" height="15" fill="rgb(212,99,53)" fg:x="4223" fg:w="104"/><text x="13.2394%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (104 samples, 0.32%)</title><rect x="12.9894%" y="677" width="0.3199%" height="15" fill="rgb(249,111,54)" fg:x="4223" fg:w="104"/><text x="13.2394%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (104 samples, 0.32%)</title><rect x="12.9894%" y="661" width="0.3199%" height="15" fill="rgb(249,55,30)" fg:x="4223" fg:w="104"/><text x="13.2394%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (104 samples, 0.32%)</title><rect x="12.9894%" y="645" width="0.3199%" height="15" fill="rgb(237,47,42)" fg:x="4223" fg:w="104"/><text x="13.2394%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (54 samples, 0.17%)</title><rect x="13.1432%" y="629" width="0.1661%" height="15" fill="rgb(211,20,18)" fg:x="4273" fg:w="54"/><text x="13.3932%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.17%)</title><rect x="13.1432%" y="613" width="0.1661%" height="15" fill="rgb(231,203,46)" fg:x="4273" fg:w="54"/><text x="13.3932%" y="623.50"></text></g><g><title>[libc.so.6] (53 samples, 0.16%)</title><rect x="13.1463%" y="597" width="0.1630%" height="15" fill="rgb(237,142,3)" fg:x="4274" fg:w="53"/><text x="13.3963%" y="607.50"></text></g><g><title>core::clone::Clone::clone (125 samples, 0.38%)</title><rect x="12.9310%" y="725" width="0.3845%" height="15" fill="rgb(241,107,1)" fg:x="4204" fg:w="125"/><text x="13.1810%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (29 samples, 0.09%)</title><rect x="13.3155%" y="725" width="0.0892%" height="15" fill="rgb(229,83,13)" fg:x="4329" fg:w="29"/><text x="13.5655%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.09%)</title><rect x="13.3155%" y="709" width="0.0892%" height="15" fill="rgb(241,91,40)" fg:x="4329" fg:w="29"/><text x="13.5655%" y="719.50"></text></g><g><title>[libc.so.6] (29 samples, 0.09%)</title><rect x="13.3155%" y="693" width="0.0892%" height="15" fill="rgb(225,3,45)" fg:x="4329" fg:w="29"/><text x="13.5655%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (18 samples, 0.06%)</title><rect x="13.4108%" y="709" width="0.0554%" height="15" fill="rgb(244,223,14)" fg:x="4360" fg:w="18"/><text x="13.6608%" y="719.50"></text></g><g><title>core::ptr::write (18 samples, 0.06%)</title><rect x="13.4108%" y="693" width="0.0554%" height="15" fill="rgb(224,124,37)" fg:x="4360" fg:w="18"/><text x="13.6608%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (23 samples, 0.07%)</title><rect x="13.4078%" y="725" width="0.0707%" height="15" fill="rgb(251,171,30)" fg:x="4359" fg:w="23"/><text x="13.6578%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="13.4662%" y="709" width="0.0123%" height="15" fill="rgb(236,46,54)" fg:x="4378" fg:w="4"/><text x="13.7162%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (37 samples, 0.11%)</title><rect x="13.5031%" y="709" width="0.1138%" height="15" fill="rgb(245,213,5)" fg:x="4390" fg:w="37"/><text x="13.7531%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.04%)</title><rect x="13.5739%" y="693" width="0.0431%" height="15" fill="rgb(230,144,27)" fg:x="4413" fg:w="14"/><text x="13.8239%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="13.6046%" y="677" width="0.0123%" height="15" fill="rgb(220,86,6)" fg:x="4423" fg:w="4"/><text x="13.8546%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (46 samples, 0.14%)</title><rect x="13.4785%" y="725" width="0.1415%" height="15" fill="rgb(240,20,13)" fg:x="4382" fg:w="46"/><text x="13.7285%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (44 samples, 0.14%)</title><rect x="13.6200%" y="725" width="0.1353%" height="15" fill="rgb(217,89,34)" fg:x="4428" fg:w="44"/><text x="13.8700%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (40 samples, 0.12%)</title><rect x="13.6323%" y="709" width="0.1230%" height="15" fill="rgb(229,13,5)" fg:x="4432" fg:w="40"/><text x="13.8823%" y="719.50"></text></g><g><title>hashbrown::raw::offset_from (21 samples, 0.06%)</title><rect x="13.6908%" y="693" width="0.0646%" height="15" fill="rgb(244,67,35)" fg:x="4451" fg:w="21"/><text x="13.9408%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (17 samples, 0.05%)</title><rect x="13.7031%" y="677" width="0.0523%" height="15" fill="rgb(221,40,2)" fg:x="4455" fg:w="17"/><text x="13.9531%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="13.7892%" y="709" width="0.0338%" height="15" fill="rgb(237,157,21)" fg:x="4483" fg:w="11"/><text x="14.0392%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.01%)</title><rect x="13.8445%" y="693" width="0.0123%" height="15" fill="rgb(222,94,11)" fg:x="4501" fg:w="4"/><text x="14.0945%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (64 samples, 0.20%)</title><rect x="13.7553%" y="725" width="0.1969%" height="15" fill="rgb(249,113,6)" fg:x="4472" fg:w="64"/><text x="14.0053%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (42 samples, 0.13%)</title><rect x="13.8230%" y="709" width="0.1292%" height="15" fill="rgb(238,137,36)" fg:x="4494" fg:w="42"/><text x="14.0730%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (31 samples, 0.10%)</title><rect x="13.8568%" y="693" width="0.0954%" height="15" fill="rgb(210,102,26)" fg:x="4505" fg:w="31"/><text x="14.1068%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (27 samples, 0.08%)</title><rect x="13.8692%" y="677" width="0.0830%" height="15" fill="rgb(218,30,30)" fg:x="4509" fg:w="27"/><text x="14.1192%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (26 samples, 0.08%)</title><rect x="13.8722%" y="661" width="0.0800%" height="15" fill="rgb(214,67,26)" fg:x="4510" fg:w="26"/><text x="14.1222%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (542 samples, 1.67%)</title><rect x="12.2912%" y="757" width="1.6671%" height="15" fill="rgb(251,9,53)" fg:x="3996" fg:w="542"/><text x="12.5412%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (542 samples, 1.67%)</title><rect x="12.2912%" y="741" width="1.6671%" height="15" fill="rgb(228,204,25)" fg:x="3996" fg:w="542"/><text x="12.5412%" y="751.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="13.9676%" y="757" width="0.0185%" height="15" fill="rgb(207,153,8)" fg:x="4541" fg:w="6"/><text x="14.2176%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="14.0076%" y="741" width="0.0123%" height="15" fill="rgb(242,9,16)" fg:x="4554" fg:w="4"/><text x="14.2576%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="14.1829%" y="709" width="0.0215%" height="15" fill="rgb(217,211,10)" fg:x="4611" fg:w="7"/><text x="14.4329%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (5 samples, 0.02%)</title><rect x="14.2044%" y="709" width="0.0154%" height="15" fill="rgb(219,228,52)" fg:x="4618" fg:w="5"/><text x="14.4544%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (18 samples, 0.06%)</title><rect x="14.2198%" y="709" width="0.0554%" height="15" fill="rgb(231,92,29)" fg:x="4623" fg:w="18"/><text x="14.4698%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (5 samples, 0.02%)</title><rect x="14.2598%" y="693" width="0.0154%" height="15" fill="rgb(232,8,23)" fg:x="4636" fg:w="5"/><text x="14.5098%" y="703.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (55 samples, 0.17%)</title><rect x="14.1121%" y="725" width="0.1692%" height="15" fill="rgb(216,211,34)" fg:x="4588" fg:w="55"/><text x="14.3621%" y="735.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.10%)</title><rect x="14.3705%" y="677" width="0.1015%" height="15" fill="rgb(236,151,0)" fg:x="4672" fg:w="33"/><text x="14.6205%" y="687.50"></text></g><g><title>malloc (32 samples, 0.10%)</title><rect x="14.3736%" y="661" width="0.0984%" height="15" fill="rgb(209,168,3)" fg:x="4673" fg:w="32"/><text x="14.6236%" y="671.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="14.3951%" y="645" width="0.0769%" height="15" fill="rgb(208,129,28)" fg:x="4680" fg:w="25"/><text x="14.6451%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="14.4566%" y="629" width="0.0154%" height="15" fill="rgb(229,78,22)" fg:x="4700" fg:w="5"/><text x="14.7066%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.4597%" y="613" width="0.0123%" height="15" fill="rgb(228,187,13)" fg:x="4701" fg:w="4"/><text x="14.7097%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.4597%" y="597" width="0.0123%" height="15" fill="rgb(240,119,24)" fg:x="4701" fg:w="4"/><text x="14.7097%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.4597%" y="581" width="0.0123%" height="15" fill="rgb(209,194,42)" fg:x="4701" fg:w="4"/><text x="14.7097%" y="591.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="14.4751%" y="677" width="0.0277%" height="15" fill="rgb(247,200,46)" fg:x="4706" fg:w="9"/><text x="14.7251%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (172 samples, 0.53%)</title><rect x="13.9860%" y="757" width="0.5291%" height="15" fill="rgb(218,76,16)" fg:x="4547" fg:w="172"/><text x="14.2360%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (161 samples, 0.50%)</title><rect x="14.0199%" y="741" width="0.4952%" height="15" fill="rgb(225,21,48)" fg:x="4558" fg:w="161"/><text x="14.2699%" y="751.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (76 samples, 0.23%)</title><rect x="14.2813%" y="725" width="0.2338%" height="15" fill="rgb(239,223,50)" fg:x="4643" fg:w="76"/><text x="14.5313%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.19%)</title><rect x="14.3275%" y="709" width="0.1876%" height="15" fill="rgb(244,45,21)" fg:x="4658" fg:w="61"/><text x="14.5775%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.19%)</title><rect x="14.3275%" y="693" width="0.1876%" height="15" fill="rgb(232,33,43)" fg:x="4658" fg:w="61"/><text x="14.5775%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="14.5028%" y="677" width="0.0123%" height="15" fill="rgb(209,8,3)" fg:x="4715" fg:w="4"/><text x="14.7528%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.01%)</title><rect x="14.5028%" y="661" width="0.0123%" height="15" fill="rgb(214,25,53)" fg:x="4715" fg:w="4"/><text x="14.7528%" y="671.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="14.5028%" y="645" width="0.0123%" height="15" fill="rgb(254,186,54)" fg:x="4715" fg:w="4"/><text x="14.7528%" y="655.50"></text></g><g><title>hashbrown::scopeguard::ScopeGuard&lt;T,F&gt;::into_inner (6 samples, 0.02%)</title><rect x="14.5212%" y="757" width="0.0185%" height="15" fill="rgb(208,174,49)" fg:x="4721" fg:w="6"/><text x="14.7712%" y="767.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="14.5274%" y="741" width="0.0123%" height="15" fill="rgb(233,191,51)" fg:x="4723" fg:w="4"/><text x="14.7774%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (749 samples, 2.30%)</title><rect x="12.2420%" y="773" width="2.3038%" height="15" fill="rgb(222,134,10)" fg:x="3980" fg:w="749"/><text x="12.4920%" y="783.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (771 samples, 2.37%)</title><rect x="12.2297%" y="789" width="2.3715%" height="15" fill="rgb(230,226,20)" fg:x="3976" fg:w="771"/><text x="12.4797%" y="799.50">&lt;h..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (18 samples, 0.06%)</title><rect x="14.5458%" y="773" width="0.0554%" height="15" fill="rgb(251,111,25)" fg:x="4729" fg:w="18"/><text x="14.7958%" y="783.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (18 samples, 0.06%)</title><rect x="14.5458%" y="757" width="0.0554%" height="15" fill="rgb(224,40,46)" fg:x="4729" fg:w="18"/><text x="14.7958%" y="767.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="14.6012%" y="789" width="0.0246%" height="15" fill="rgb(236,108,47)" fg:x="4747" fg:w="8"/><text x="14.8512%" y="799.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (780 samples, 2.40%)</title><rect x="12.2297%" y="805" width="2.3992%" height="15" fill="rgb(234,93,0)" fg:x="3976" fg:w="780"/><text x="12.4797%" y="815.50">&lt;h..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (784 samples, 2.41%)</title><rect x="12.2266%" y="821" width="2.4115%" height="15" fill="rgb(224,213,32)" fg:x="3975" fg:w="784"/><text x="12.4766%" y="831.50">&lt;s..</text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="14.6381%" y="821" width="0.0123%" height="15" fill="rgb(251,11,48)" fg:x="4759" fg:w="4"/><text x="14.8881%" y="831.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (3,610 samples, 11.10%)</title><rect x="3.5496%" y="837" width="11.1039%" height="15" fill="rgb(236,173,5)" fg:x="1154" fg:w="3610"/><text x="3.7996%" y="847.50">&lt;aes_grinder::al..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (3,624 samples, 11.15%)</title><rect x="3.5250%" y="853" width="11.1470%" height="15" fill="rgb(230,95,12)" fg:x="1146" fg:w="3624"/><text x="3.7750%" y="863.50">&lt;T as alloc::all..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.02%)</title><rect x="14.6535%" y="837" width="0.0185%" height="15" fill="rgb(232,209,1)" fg:x="4764" fg:w="6"/><text x="14.9035%" y="847.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="14.6535%" y="821" width="0.0185%" height="15" fill="rgb(232,6,1)" fg:x="4764" fg:w="6"/><text x="14.9035%" y="831.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="14.6597%" y="805" width="0.0123%" height="15" fill="rgb(210,224,50)" fg:x="4766" fg:w="4"/><text x="14.9097%" y="815.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.11%)</title><rect x="14.8165%" y="789" width="0.1107%" height="15" fill="rgb(228,127,35)" fg:x="4817" fg:w="36"/><text x="15.0665%" y="799.50"></text></g><g><title>malloc (32 samples, 0.10%)</title><rect x="14.8288%" y="773" width="0.0984%" height="15" fill="rgb(245,102,45)" fg:x="4821" fg:w="32"/><text x="15.0788%" y="783.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="14.8504%" y="757" width="0.0769%" height="15" fill="rgb(214,1,49)" fg:x="4828" fg:w="25"/><text x="15.1004%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="14.9057%" y="741" width="0.0215%" height="15" fill="rgb(226,163,40)" fg:x="4846" fg:w="7"/><text x="15.1557%" y="751.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="14.9057%" y="725" width="0.0215%" height="15" fill="rgb(239,212,28)" fg:x="4846" fg:w="7"/><text x="15.1557%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="14.9088%" y="709" width="0.0185%" height="15" fill="rgb(220,20,13)" fg:x="4847" fg:w="6"/><text x="15.1588%" y="719.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="14.9150%" y="693" width="0.0123%" height="15" fill="rgb(210,164,35)" fg:x="4849" fg:w="4"/><text x="15.1650%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (5 samples, 0.02%)</title><rect x="14.9273%" y="789" width="0.0154%" height="15" fill="rgb(248,109,41)" fg:x="4853" fg:w="5"/><text x="15.1773%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="14.9426%" y="789" width="0.0154%" height="15" fill="rgb(238,23,50)" fg:x="4858" fg:w="5"/><text x="15.1926%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.21%)</title><rect x="14.7704%" y="821" width="0.2061%" height="15" fill="rgb(211,48,49)" fg:x="4802" fg:w="67"/><text x="15.0204%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.21%)</title><rect x="14.7704%" y="805" width="0.2061%" height="15" fill="rgb(223,36,21)" fg:x="4802" fg:w="67"/><text x="15.0204%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (6 samples, 0.02%)</title><rect x="14.9580%" y="789" width="0.0185%" height="15" fill="rgb(207,123,46)" fg:x="4863" fg:w="6"/><text x="15.2080%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.02%)</title><rect x="14.9611%" y="773" width="0.0154%" height="15" fill="rgb(240,218,32)" fg:x="4864" fg:w="5"/><text x="15.2111%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="14.9611%" y="757" width="0.0154%" height="15" fill="rgb(252,5,43)" fg:x="4864" fg:w="5"/><text x="15.2111%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (94 samples, 0.29%)</title><rect x="14.7089%" y="837" width="0.2891%" height="15" fill="rgb(252,84,19)" fg:x="4782" fg:w="94"/><text x="14.9589%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (107 samples, 0.33%)</title><rect x="14.6812%" y="853" width="0.3291%" height="15" fill="rgb(243,152,39)" fg:x="4773" fg:w="107"/><text x="14.9312%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::new (4 samples, 0.01%)</title><rect x="14.9980%" y="837" width="0.0123%" height="15" fill="rgb(234,160,15)" fg:x="4876" fg:w="4"/><text x="15.2480%" y="847.50"></text></g><g><title>core::alloc::layout::size_align (4 samples, 0.01%)</title><rect x="14.9980%" y="821" width="0.0123%" height="15" fill="rgb(237,34,20)" fg:x="4876" fg:w="4"/><text x="15.2480%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (9 samples, 0.03%)</title><rect x="15.0103%" y="837" width="0.0277%" height="15" fill="rgb(229,97,13)" fg:x="4880" fg:w="9"/><text x="15.2603%" y="847.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (8 samples, 0.02%)</title><rect x="15.0134%" y="821" width="0.0246%" height="15" fill="rgb(234,71,50)" fg:x="4881" fg:w="8"/><text x="15.2634%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3,768 samples, 11.59%)</title><rect x="3.4542%" y="885" width="11.5899%" height="15" fill="rgb(253,155,4)" fg:x="1123" fg:w="3768"/><text x="3.7042%" y="895.50">&lt;core::option::Op..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,758 samples, 11.56%)</title><rect x="3.4850%" y="869" width="11.5592%" height="15" fill="rgb(222,185,37)" fg:x="1133" fg:w="3758"/><text x="3.7350%" y="879.50">&lt;alloc::boxed::Bo..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (11 samples, 0.03%)</title><rect x="15.0103%" y="853" width="0.0338%" height="15" fill="rgb(251,177,13)" fg:x="4880" fg:w="11"/><text x="15.2603%" y="863.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.04%)</title><rect x="15.1826%" y="789" width="0.0400%" height="15" fill="rgb(250,179,40)" fg:x="4936" fg:w="13"/><text x="15.4326%" y="799.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="15.1887%" y="773" width="0.0338%" height="15" fill="rgb(242,44,2)" fg:x="4938" fg:w="11"/><text x="15.4387%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (19 samples, 0.06%)</title><rect x="15.4132%" y="741" width="0.0584%" height="15" fill="rgb(216,177,13)" fg:x="5011" fg:w="19"/><text x="15.6632%" y="751.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (16 samples, 0.05%)</title><rect x="15.5055%" y="725" width="0.0492%" height="15" fill="rgb(216,106,43)" fg:x="5041" fg:w="16"/><text x="15.7555%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.26%)</title><rect x="15.3302%" y="757" width="0.2553%" height="15" fill="rgb(216,183,2)" fg:x="4984" fg:w="83"/><text x="15.5802%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (37 samples, 0.11%)</title><rect x="15.4717%" y="741" width="0.1138%" height="15" fill="rgb(249,75,3)" fg:x="5030" fg:w="37"/><text x="15.7217%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (10 samples, 0.03%)</title><rect x="15.5547%" y="725" width="0.0308%" height="15" fill="rgb(219,67,39)" fg:x="5057" fg:w="10"/><text x="15.8047%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (43 samples, 0.13%)</title><rect x="15.5916%" y="757" width="0.1323%" height="15" fill="rgb(253,228,2)" fg:x="5069" fg:w="43"/><text x="15.8416%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.05%)</title><rect x="15.6778%" y="741" width="0.0461%" height="15" fill="rgb(235,138,27)" fg:x="5097" fg:w="15"/><text x="15.9278%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.02%)</title><rect x="15.7024%" y="725" width="0.0215%" height="15" fill="rgb(236,97,51)" fg:x="5105" fg:w="7"/><text x="15.9524%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (164 samples, 0.50%)</title><rect x="15.2225%" y="789" width="0.5044%" height="15" fill="rgb(240,80,30)" fg:x="4949" fg:w="164"/><text x="15.4725%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (152 samples, 0.47%)</title><rect x="15.2595%" y="773" width="0.4675%" height="15" fill="rgb(230,178,19)" fg:x="4961" fg:w="152"/><text x="15.5095%" y="783.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="15.7270%" y="789" width="0.0277%" height="15" fill="rgb(210,190,27)" fg:x="5113" fg:w="9"/><text x="15.9770%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (42 samples, 0.13%)</title><rect x="15.8469%" y="693" width="0.1292%" height="15" fill="rgb(222,107,31)" fg:x="5152" fg:w="42"/><text x="16.0969%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (42 samples, 0.13%)</title><rect x="15.8469%" y="677" width="0.1292%" height="15" fill="rgb(216,127,34)" fg:x="5152" fg:w="42"/><text x="16.0969%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (42 samples, 0.13%)</title><rect x="15.8469%" y="661" width="0.1292%" height="15" fill="rgb(234,116,52)" fg:x="5152" fg:w="42"/><text x="16.0969%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.12%)</title><rect x="15.8562%" y="645" width="0.1200%" height="15" fill="rgb(222,124,15)" fg:x="5155" fg:w="39"/><text x="16.1062%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.12%)</title><rect x="15.8562%" y="629" width="0.1200%" height="15" fill="rgb(231,179,28)" fg:x="5155" fg:w="39"/><text x="16.1062%" y="639.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.12%)</title><rect x="15.8562%" y="613" width="0.1200%" height="15" fill="rgb(226,93,45)" fg:x="5155" fg:w="39"/><text x="16.1062%" y="623.50"></text></g><g><title>malloc (36 samples, 0.11%)</title><rect x="15.8654%" y="597" width="0.1107%" height="15" fill="rgb(215,8,51)" fg:x="5158" fg:w="36"/><text x="16.1154%" y="607.50"></text></g><g><title>[libc.so.6] (24 samples, 0.07%)</title><rect x="15.9023%" y="581" width="0.0738%" height="15" fill="rgb(223,106,5)" fg:x="5170" fg:w="24"/><text x="16.1523%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="15.9608%" y="565" width="0.0154%" height="15" fill="rgb(250,191,5)" fg:x="5189" fg:w="5"/><text x="16.2108%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="15.9608%" y="549" width="0.0154%" height="15" fill="rgb(242,132,44)" fg:x="5189" fg:w="5"/><text x="16.2108%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="15.9608%" y="533" width="0.0154%" height="15" fill="rgb(251,152,29)" fg:x="5189" fg:w="5"/><text x="16.2108%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="15.9608%" y="517" width="0.0154%" height="15" fill="rgb(218,179,5)" fg:x="5189" fg:w="5"/><text x="16.2108%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="15.9638%" y="501" width="0.0123%" height="15" fill="rgb(227,67,19)" fg:x="5190" fg:w="4"/><text x="16.2138%" y="511.50"></text></g><g><title>core::clone::Clone::clone (129 samples, 0.40%)</title><rect x="15.7547%" y="789" width="0.3968%" height="15" fill="rgb(233,119,31)" fg:x="5122" fg:w="129"/><text x="16.0047%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (124 samples, 0.38%)</title><rect x="15.7700%" y="773" width="0.3814%" height="15" fill="rgb(241,120,22)" fg:x="5127" fg:w="124"/><text x="16.0200%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (99 samples, 0.30%)</title><rect x="15.8469%" y="757" width="0.3045%" height="15" fill="rgb(224,102,30)" fg:x="5152" fg:w="99"/><text x="16.0969%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (99 samples, 0.30%)</title><rect x="15.8469%" y="741" width="0.3045%" height="15" fill="rgb(210,164,37)" fg:x="5152" fg:w="99"/><text x="16.0969%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (99 samples, 0.30%)</title><rect x="15.8469%" y="725" width="0.3045%" height="15" fill="rgb(226,191,16)" fg:x="5152" fg:w="99"/><text x="16.0969%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (99 samples, 0.30%)</title><rect x="15.8469%" y="709" width="0.3045%" height="15" fill="rgb(214,40,45)" fg:x="5152" fg:w="99"/><text x="16.0969%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (57 samples, 0.18%)</title><rect x="15.9761%" y="693" width="0.1753%" height="15" fill="rgb(244,29,26)" fg:x="5194" fg:w="57"/><text x="16.2261%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.18%)</title><rect x="15.9761%" y="677" width="0.1753%" height="15" fill="rgb(216,16,5)" fg:x="5194" fg:w="57"/><text x="16.2261%" y="687.50"></text></g><g><title>[libc.so.6] (57 samples, 0.18%)</title><rect x="15.9761%" y="661" width="0.1753%" height="15" fill="rgb(249,76,35)" fg:x="5194" fg:w="57"/><text x="16.2261%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (34 samples, 0.10%)</title><rect x="16.1515%" y="789" width="0.1046%" height="15" fill="rgb(207,11,44)" fg:x="5251" fg:w="34"/><text x="16.4015%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.10%)</title><rect x="16.1515%" y="773" width="0.1046%" height="15" fill="rgb(228,190,49)" fg:x="5251" fg:w="34"/><text x="16.4015%" y="783.50"></text></g><g><title>[libc.so.6] (34 samples, 0.10%)</title><rect x="16.1515%" y="757" width="0.1046%" height="15" fill="rgb(214,173,12)" fg:x="5251" fg:w="34"/><text x="16.4015%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12 samples, 0.04%)</title><rect x="16.2591%" y="773" width="0.0369%" height="15" fill="rgb(218,26,35)" fg:x="5286" fg:w="12"/><text x="16.5091%" y="783.50"></text></g><g><title>core::ptr::write (12 samples, 0.04%)</title><rect x="16.2591%" y="757" width="0.0369%" height="15" fill="rgb(220,200,19)" fg:x="5286" fg:w="12"/><text x="16.5091%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (18 samples, 0.06%)</title><rect x="16.2591%" y="789" width="0.0554%" height="15" fill="rgb(239,95,49)" fg:x="5286" fg:w="18"/><text x="16.5091%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="16.2960%" y="773" width="0.0185%" height="15" fill="rgb(235,85,53)" fg:x="5298" fg:w="6"/><text x="16.5460%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (40 samples, 0.12%)</title><rect x="16.3422%" y="773" width="0.1230%" height="15" fill="rgb(233,133,31)" fg:x="5313" fg:w="40"/><text x="16.5922%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.04%)</title><rect x="16.4283%" y="757" width="0.0369%" height="15" fill="rgb(218,25,20)" fg:x="5341" fg:w="12"/><text x="16.6783%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.02%)</title><rect x="16.4498%" y="741" width="0.0154%" height="15" fill="rgb(252,210,38)" fg:x="5348" fg:w="5"/><text x="16.6998%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (50 samples, 0.15%)</title><rect x="16.3145%" y="789" width="0.1538%" height="15" fill="rgb(242,134,21)" fg:x="5304" fg:w="50"/><text x="16.5645%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (36 samples, 0.11%)</title><rect x="16.4744%" y="773" width="0.1107%" height="15" fill="rgb(213,28,48)" fg:x="5356" fg:w="36"/><text x="16.7244%" y="783.50"></text></g><g><title>hashbrown::raw::offset_from (21 samples, 0.06%)</title><rect x="16.5206%" y="757" width="0.0646%" height="15" fill="rgb(250,196,2)" fg:x="5371" fg:w="21"/><text x="16.7706%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (17 samples, 0.05%)</title><rect x="16.5329%" y="741" width="0.0523%" height="15" fill="rgb(227,5,17)" fg:x="5375" fg:w="17"/><text x="16.7829%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (40 samples, 0.12%)</title><rect x="16.4683%" y="789" width="0.1230%" height="15" fill="rgb(221,226,24)" fg:x="5354" fg:w="40"/><text x="16.7183%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="16.6159%" y="773" width="0.0338%" height="15" fill="rgb(211,5,48)" fg:x="5402" fg:w="11"/><text x="16.8659%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.02%)</title><rect x="16.6559%" y="757" width="0.0185%" height="15" fill="rgb(219,150,6)" fg:x="5415" fg:w="6"/><text x="16.9059%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (50 samples, 0.15%)</title><rect x="16.6497%" y="773" width="0.1538%" height="15" fill="rgb(251,46,16)" fg:x="5413" fg:w="50"/><text x="16.8997%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (39 samples, 0.12%)</title><rect x="16.6836%" y="757" width="0.1200%" height="15" fill="rgb(220,204,40)" fg:x="5424" fg:w="39"/><text x="16.9336%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (30 samples, 0.09%)</title><rect x="16.7113%" y="741" width="0.0923%" height="15" fill="rgb(211,85,2)" fg:x="5433" fg:w="30"/><text x="16.9613%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (25 samples, 0.08%)</title><rect x="16.7266%" y="725" width="0.0769%" height="15" fill="rgb(229,17,7)" fg:x="5438" fg:w="25"/><text x="16.9766%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (71 samples, 0.22%)</title><rect x="16.5913%" y="789" width="0.2184%" height="15" fill="rgb(239,72,28)" fg:x="5394" fg:w="71"/><text x="16.8413%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (552 samples, 1.70%)</title><rect x="15.1149%" y="821" width="1.6979%" height="15" fill="rgb(230,47,54)" fg:x="4914" fg:w="552"/><text x="15.3649%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (552 samples, 1.70%)</title><rect x="15.1149%" y="805" width="1.6979%" height="15" fill="rgb(214,50,8)" fg:x="4914" fg:w="552"/><text x="15.3649%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="16.8651%" y="805" width="0.0185%" height="15" fill="rgb(216,198,43)" fg:x="5483" fg:w="6"/><text x="17.1151%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="16.9881%" y="773" width="0.0185%" height="15" fill="rgb(234,20,35)" fg:x="5523" fg:w="6"/><text x="17.2381%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.04%)</title><rect x="17.0158%" y="773" width="0.0400%" height="15" fill="rgb(254,45,19)" fg:x="5532" fg:w="13"/><text x="17.2658%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (7 samples, 0.02%)</title><rect x="17.0342%" y="757" width="0.0215%" height="15" fill="rgb(219,14,44)" fg:x="5538" fg:w="7"/><text x="17.2842%" y="767.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (40 samples, 0.12%)</title><rect x="16.9358%" y="789" width="0.1230%" height="15" fill="rgb(217,220,26)" fg:x="5506" fg:w="40"/><text x="17.1858%" y="799.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.10%)</title><rect x="17.1603%" y="741" width="0.0984%" height="15" fill="rgb(213,158,28)" fg:x="5579" fg:w="32"/><text x="17.4103%" y="751.50"></text></g><g><title>malloc (31 samples, 0.10%)</title><rect x="17.1634%" y="725" width="0.0954%" height="15" fill="rgb(252,51,52)" fg:x="5580" fg:w="31"/><text x="17.4134%" y="735.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="17.1726%" y="709" width="0.0861%" height="15" fill="rgb(246,89,16)" fg:x="5583" fg:w="28"/><text x="17.4226%" y="719.50"></text></g><g><title>[unknown] (8 samples, 0.02%)</title><rect x="17.2342%" y="693" width="0.0246%" height="15" fill="rgb(216,158,49)" fg:x="5603" fg:w="8"/><text x="17.4842%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="17.2403%" y="677" width="0.0185%" height="15" fill="rgb(236,107,19)" fg:x="5605" fg:w="6"/><text x="17.4903%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.2434%" y="661" width="0.0154%" height="15" fill="rgb(228,185,30)" fg:x="5606" fg:w="5"/><text x="17.4934%" y="671.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="17.2434%" y="645" width="0.0154%" height="15" fill="rgb(246,134,8)" fg:x="5606" fg:w="5"/><text x="17.4934%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (146 samples, 0.45%)</title><rect x="16.8312%" y="821" width="0.4491%" height="15" fill="rgb(214,143,50)" fg:x="5472" fg:w="146"/><text x="17.0812%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (129 samples, 0.40%)</title><rect x="16.8835%" y="805" width="0.3968%" height="15" fill="rgb(228,75,8)" fg:x="5489" fg:w="129"/><text x="17.1335%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (72 samples, 0.22%)</title><rect x="17.0588%" y="789" width="0.2215%" height="15" fill="rgb(207,175,4)" fg:x="5546" fg:w="72"/><text x="17.3088%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.17%)</title><rect x="17.1111%" y="773" width="0.1692%" height="15" fill="rgb(205,108,24)" fg:x="5563" fg:w="55"/><text x="17.3611%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.17%)</title><rect x="17.1111%" y="757" width="0.1692%" height="15" fill="rgb(244,120,49)" fg:x="5563" fg:w="55"/><text x="17.3611%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (733 samples, 2.25%)</title><rect x="15.0441%" y="837" width="2.2546%" height="15" fill="rgb(223,47,38)" fg:x="4891" fg:w="733"/><text x="15.2941%" y="847.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (758 samples, 2.33%)</title><rect x="15.0441%" y="853" width="2.3315%" height="15" fill="rgb(229,179,11)" fg:x="4891" fg:w="758"/><text x="15.2941%" y="863.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (25 samples, 0.08%)</title><rect x="17.2988%" y="837" width="0.0769%" height="15" fill="rgb(231,122,1)" fg:x="5624" fg:w="25"/><text x="17.5488%" y="847.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (25 samples, 0.08%)</title><rect x="17.2988%" y="821" width="0.0769%" height="15" fill="rgb(245,119,9)" fg:x="5624" fg:w="25"/><text x="17.5488%" y="831.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="17.3757%" y="853" width="0.0369%" height="15" fill="rgb(241,163,25)" fg:x="5649" fg:w="12"/><text x="17.6257%" y="863.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (771 samples, 2.37%)</title><rect x="15.0441%" y="869" width="2.3715%" height="15" fill="rgb(217,214,3)" fg:x="4891" fg:w="771"/><text x="15.2941%" y="879.50">&lt;h..</text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.4156%" y="869" width="0.0123%" height="15" fill="rgb(240,86,28)" fg:x="5662" fg:w="4"/><text x="17.6656%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (776 samples, 2.39%)</title><rect x="15.0441%" y="885" width="2.3869%" height="15" fill="rgb(215,47,9)" fg:x="4891" fg:w="776"/><text x="15.2941%" y="895.50">&lt;s..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (4,566 samples, 14.04%)</title><rect x="3.4050%" y="901" width="14.0445%" height="15" fill="rgb(252,25,45)" fg:x="1107" fg:w="4566"/><text x="3.6550%" y="911.50">&lt;aes_grinder::algo::A..</text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="17.4310%" y="885" width="0.0185%" height="15" fill="rgb(251,164,9)" fg:x="5667" fg:w="6"/><text x="17.6810%" y="895.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (4,576 samples, 14.08%)</title><rect x="3.3988%" y="917" width="14.0752%" height="15" fill="rgb(233,194,0)" fg:x="1105" fg:w="4576"/><text x="3.6488%" y="927.50">&lt;T as alloc::alloc::W..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.02%)</title><rect x="17.4495%" y="901" width="0.0246%" height="15" fill="rgb(249,111,24)" fg:x="5673" fg:w="8"/><text x="17.6995%" y="911.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="17.4495%" y="885" width="0.0246%" height="15" fill="rgb(250,223,3)" fg:x="5673" fg:w="8"/><text x="17.6995%" y="895.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="17.4526%" y="869" width="0.0215%" height="15" fill="rgb(236,178,37)" fg:x="5674" fg:w="7"/><text x="17.7026%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="17.5602%" y="853" width="0.0123%" height="15" fill="rgb(241,158,50)" fg:x="5709" fg:w="4"/><text x="17.8102%" y="863.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.09%)</title><rect x="17.5725%" y="853" width="0.0861%" height="15" fill="rgb(213,121,41)" fg:x="5713" fg:w="28"/><text x="17.8225%" y="863.50"></text></g><g><title>malloc (22 samples, 0.07%)</title><rect x="17.5910%" y="837" width="0.0677%" height="15" fill="rgb(240,92,3)" fg:x="5719" fg:w="22"/><text x="17.8410%" y="847.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="17.6094%" y="821" width="0.0492%" height="15" fill="rgb(205,123,3)" fg:x="5725" fg:w="16"/><text x="17.8594%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="17.6463%" y="805" width="0.0123%" height="15" fill="rgb(205,97,47)" fg:x="5737" fg:w="4"/><text x="17.8963%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="17.6679%" y="853" width="0.0246%" height="15" fill="rgb(247,152,14)" fg:x="5744" fg:w="8"/><text x="17.9179%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.17%)</title><rect x="17.5356%" y="885" width="0.1692%" height="15" fill="rgb(248,195,53)" fg:x="5701" fg:w="55"/><text x="17.7856%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (54 samples, 0.17%)</title><rect x="17.5387%" y="869" width="0.1661%" height="15" fill="rgb(226,201,16)" fg:x="5702" fg:w="54"/><text x="17.7887%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="17.6925%" y="853" width="0.0123%" height="15" fill="rgb(205,98,0)" fg:x="5752" fg:w="4"/><text x="17.9425%" y="863.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (4 samples, 0.01%)</title><rect x="17.6925%" y="837" width="0.0123%" height="15" fill="rgb(214,191,48)" fg:x="5752" fg:w="4"/><text x="17.9425%" y="847.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (4 samples, 0.01%)</title><rect x="17.6925%" y="821" width="0.0123%" height="15" fill="rgb(237,112,39)" fg:x="5752" fg:w="4"/><text x="17.9425%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (6 samples, 0.02%)</title><rect x="17.7109%" y="885" width="0.0185%" height="15" fill="rgb(247,203,27)" fg:x="5758" fg:w="6"/><text x="17.9609%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (78 samples, 0.24%)</title><rect x="17.4925%" y="901" width="0.2399%" height="15" fill="rgb(235,124,28)" fg:x="5687" fg:w="78"/><text x="17.7425%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (84 samples, 0.26%)</title><rect x="17.4802%" y="917" width="0.2584%" height="15" fill="rgb(208,207,46)" fg:x="5683" fg:w="84"/><text x="17.7302%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (6 samples, 0.02%)</title><rect x="17.7386%" y="901" width="0.0185%" height="15" fill="rgb(234,176,4)" fg:x="5767" fg:w="6"/><text x="17.9886%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4,689 samples, 14.42%)</title><rect x="3.3404%" y="949" width="14.4228%" height="15" fill="rgb(230,133,28)" fg:x="1086" fg:w="4689"/><text x="3.5904%" y="959.50">&lt;core::option::Option&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (4,680 samples, 14.40%)</title><rect x="3.3681%" y="933" width="14.3951%" height="15" fill="rgb(211,137,40)" fg:x="1095" fg:w="4680"/><text x="3.6181%" y="943.50">&lt;alloc::boxed::Box&lt;T,A..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (8 samples, 0.02%)</title><rect x="17.7386%" y="917" width="0.0246%" height="15" fill="rgb(254,35,13)" fg:x="5767" fg:w="8"/><text x="17.9886%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="17.8555%" y="853" width="0.0123%" height="15" fill="rgb(225,49,51)" fg:x="5805" fg:w="4"/><text x="18.1055%" y="863.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="17.8555%" y="837" width="0.0123%" height="15" fill="rgb(251,10,15)" fg:x="5805" fg:w="4"/><text x="18.1055%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.03%)</title><rect x="18.0185%" y="805" width="0.0308%" height="15" fill="rgb(228,207,15)" fg:x="5858" fg:w="10"/><text x="18.2685%" y="815.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (16 samples, 0.05%)</title><rect x="18.0893%" y="789" width="0.0492%" height="15" fill="rgb(241,99,19)" fg:x="5881" fg:w="16"/><text x="18.3393%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (39 samples, 0.12%)</title><rect x="18.0493%" y="805" width="0.1200%" height="15" fill="rgb(207,104,49)" fg:x="5868" fg:w="39"/><text x="18.2993%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (10 samples, 0.03%)</title><rect x="18.1385%" y="789" width="0.0308%" height="15" fill="rgb(234,99,18)" fg:x="5897" fg:w="10"/><text x="18.3885%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.19%)</title><rect x="17.9785%" y="821" width="0.1938%" height="15" fill="rgb(213,191,49)" fg:x="5845" fg:w="63"/><text x="18.2285%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (42 samples, 0.13%)</title><rect x="18.1723%" y="821" width="0.1292%" height="15" fill="rgb(210,226,19)" fg:x="5908" fg:w="42"/><text x="18.4223%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (9 samples, 0.03%)</title><rect x="18.2738%" y="805" width="0.0277%" height="15" fill="rgb(229,97,18)" fg:x="5941" fg:w="9"/><text x="18.5238%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (143 samples, 0.44%)</title><rect x="17.8678%" y="853" width="0.4399%" height="15" fill="rgb(211,167,15)" fg:x="5809" fg:w="143"/><text x="18.1178%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (129 samples, 0.40%)</title><rect x="17.9109%" y="837" width="0.3968%" height="15" fill="rgb(210,169,34)" fg:x="5823" fg:w="129"/><text x="18.1609%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="18.3076%" y="853" width="0.0154%" height="15" fill="rgb(241,121,31)" fg:x="5952" fg:w="5"/><text x="18.5576%" y="863.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="18.4245%" y="661" width="0.0123%" height="15" fill="rgb(232,40,11)" fg:x="5990" fg:w="4"/><text x="18.6745%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (44 samples, 0.14%)</title><rect x="18.4061%" y="757" width="0.1353%" height="15" fill="rgb(205,86,26)" fg:x="5984" fg:w="44"/><text x="18.6561%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.14%)</title><rect x="18.4061%" y="741" width="0.1353%" height="15" fill="rgb(231,126,28)" fg:x="5984" fg:w="44"/><text x="18.6561%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.14%)</title><rect x="18.4061%" y="725" width="0.1353%" height="15" fill="rgb(219,221,18)" fg:x="5984" fg:w="44"/><text x="18.6561%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.12%)</title><rect x="18.4245%" y="709" width="0.1169%" height="15" fill="rgb(211,40,0)" fg:x="5990" fg:w="38"/><text x="18.6745%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (38 samples, 0.12%)</title><rect x="18.4245%" y="693" width="0.1169%" height="15" fill="rgb(239,85,43)" fg:x="5990" fg:w="38"/><text x="18.6745%" y="703.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.12%)</title><rect x="18.4245%" y="677" width="0.1169%" height="15" fill="rgb(231,55,21)" fg:x="5990" fg:w="38"/><text x="18.6745%" y="687.50"></text></g><g><title>malloc (34 samples, 0.10%)</title><rect x="18.4368%" y="661" width="0.1046%" height="15" fill="rgb(225,184,43)" fg:x="5994" fg:w="34"/><text x="18.6868%" y="671.50"></text></g><g><title>[libc.so.6] (25 samples, 0.08%)</title><rect x="18.4645%" y="645" width="0.0769%" height="15" fill="rgb(251,158,41)" fg:x="6003" fg:w="25"/><text x="18.7145%" y="655.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="18.5199%" y="629" width="0.0215%" height="15" fill="rgb(234,159,37)" fg:x="6021" fg:w="7"/><text x="18.7699%" y="639.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="18.5199%" y="613" width="0.0215%" height="15" fill="rgb(216,204,22)" fg:x="6021" fg:w="7"/><text x="18.7699%" y="623.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="18.5230%" y="597" width="0.0185%" height="15" fill="rgb(214,17,3)" fg:x="6022" fg:w="6"/><text x="18.7730%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.02%)</title><rect x="18.5260%" y="581" width="0.0154%" height="15" fill="rgb(212,111,17)" fg:x="6023" fg:w="5"/><text x="18.7760%" y="591.50"></text></g><g><title>core::clone::Clone::clone (144 samples, 0.44%)</title><rect x="18.3230%" y="853" width="0.4429%" height="15" fill="rgb(221,157,24)" fg:x="5957" fg:w="144"/><text x="18.5730%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (139 samples, 0.43%)</title><rect x="18.3384%" y="837" width="0.4275%" height="15" fill="rgb(252,16,13)" fg:x="5962" fg:w="139"/><text x="18.5884%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (117 samples, 0.36%)</title><rect x="18.4061%" y="821" width="0.3599%" height="15" fill="rgb(221,62,2)" fg:x="5984" fg:w="117"/><text x="18.6561%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (117 samples, 0.36%)</title><rect x="18.4061%" y="805" width="0.3599%" height="15" fill="rgb(247,87,22)" fg:x="5984" fg:w="117"/><text x="18.6561%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (117 samples, 0.36%)</title><rect x="18.4061%" y="789" width="0.3599%" height="15" fill="rgb(215,73,9)" fg:x="5984" fg:w="117"/><text x="18.6561%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (117 samples, 0.36%)</title><rect x="18.4061%" y="773" width="0.3599%" height="15" fill="rgb(207,175,33)" fg:x="5984" fg:w="117"/><text x="18.6561%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (73 samples, 0.22%)</title><rect x="18.5414%" y="757" width="0.2245%" height="15" fill="rgb(243,129,54)" fg:x="6028" fg:w="73"/><text x="18.7914%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73 samples, 0.22%)</title><rect x="18.5414%" y="741" width="0.2245%" height="15" fill="rgb(227,119,45)" fg:x="6028" fg:w="73"/><text x="18.7914%" y="751.50"></text></g><g><title>[libc.so.6] (73 samples, 0.22%)</title><rect x="18.5414%" y="725" width="0.2245%" height="15" fill="rgb(205,109,36)" fg:x="6028" fg:w="73"/><text x="18.7914%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (27 samples, 0.08%)</title><rect x="18.7660%" y="853" width="0.0830%" height="15" fill="rgb(205,6,39)" fg:x="6101" fg:w="27"/><text x="19.0160%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.08%)</title><rect x="18.7660%" y="837" width="0.0830%" height="15" fill="rgb(221,32,16)" fg:x="6101" fg:w="27"/><text x="19.0160%" y="847.50"></text></g><g><title>[libc.so.6] (27 samples, 0.08%)</title><rect x="18.7660%" y="821" width="0.0830%" height="15" fill="rgb(228,144,50)" fg:x="6101" fg:w="27"/><text x="19.0160%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (16 samples, 0.05%)</title><rect x="18.8582%" y="837" width="0.0492%" height="15" fill="rgb(229,201,53)" fg:x="6131" fg:w="16"/><text x="19.1082%" y="847.50"></text></g><g><title>core::ptr::write (16 samples, 0.05%)</title><rect x="18.8582%" y="821" width="0.0492%" height="15" fill="rgb(249,153,27)" fg:x="6131" fg:w="16"/><text x="19.1082%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (23 samples, 0.07%)</title><rect x="18.8582%" y="853" width="0.0707%" height="15" fill="rgb(227,106,25)" fg:x="6131" fg:w="23"/><text x="19.1082%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (7 samples, 0.02%)</title><rect x="18.9074%" y="837" width="0.0215%" height="15" fill="rgb(230,65,29)" fg:x="6147" fg:w="7"/><text x="19.1574%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (45 samples, 0.14%)</title><rect x="18.9290%" y="853" width="0.1384%" height="15" fill="rgb(221,57,46)" fg:x="6154" fg:w="45"/><text x="19.1790%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (40 samples, 0.12%)</title><rect x="18.9444%" y="837" width="0.1230%" height="15" fill="rgb(229,161,17)" fg:x="6159" fg:w="40"/><text x="19.1944%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.03%)</title><rect x="19.0336%" y="821" width="0.0338%" height="15" fill="rgb(222,213,11)" fg:x="6188" fg:w="11"/><text x="19.2836%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="19.0551%" y="805" width="0.0123%" height="15" fill="rgb(235,35,13)" fg:x="6195" fg:w="4"/><text x="19.3051%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (34 samples, 0.10%)</title><rect x="19.1074%" y="837" width="0.1046%" height="15" fill="rgb(233,158,34)" fg:x="6212" fg:w="34"/><text x="19.3574%" y="847.50"></text></g><g><title>hashbrown::raw::offset_from (19 samples, 0.06%)</title><rect x="19.1535%" y="821" width="0.0584%" height="15" fill="rgb(215,151,48)" fg:x="6227" fg:w="19"/><text x="19.4035%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (16 samples, 0.05%)</title><rect x="19.1627%" y="805" width="0.0492%" height="15" fill="rgb(229,84,14)" fg:x="6230" fg:w="16"/><text x="19.4127%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (48 samples, 0.15%)</title><rect x="19.0674%" y="853" width="0.1476%" height="15" fill="rgb(229,68,14)" fg:x="6199" fg:w="48"/><text x="19.3174%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.02%)</title><rect x="19.2335%" y="837" width="0.0246%" height="15" fill="rgb(243,106,26)" fg:x="6253" fg:w="8"/><text x="19.4835%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (45 samples, 0.14%)</title><rect x="19.2150%" y="853" width="0.1384%" height="15" fill="rgb(206,45,38)" fg:x="6247" fg:w="45"/><text x="19.4650%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (31 samples, 0.10%)</title><rect x="19.2581%" y="837" width="0.0954%" height="15" fill="rgb(226,6,15)" fg:x="6261" fg:w="31"/><text x="19.5081%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (22 samples, 0.07%)</title><rect x="19.2858%" y="821" width="0.0677%" height="15" fill="rgb(232,22,54)" fg:x="6270" fg:w="22"/><text x="19.5358%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (17 samples, 0.05%)</title><rect x="19.3012%" y="805" width="0.0523%" height="15" fill="rgb(229,222,32)" fg:x="6275" fg:w="17"/><text x="19.5512%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.05%)</title><rect x="19.3042%" y="789" width="0.0492%" height="15" fill="rgb(228,62,29)" fg:x="6276" fg:w="16"/><text x="19.5542%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (509 samples, 1.57%)</title><rect x="17.7940%" y="885" width="1.5656%" height="15" fill="rgb(251,103,34)" fg:x="5785" fg:w="509"/><text x="18.0440%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (508 samples, 1.56%)</title><rect x="17.7971%" y="869" width="1.5625%" height="15" fill="rgb(233,12,30)" fg:x="5786" fg:w="508"/><text x="18.0471%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="19.5011%" y="837" width="0.0154%" height="15" fill="rgb(238,52,0)" fg:x="6340" fg:w="5"/><text x="19.7511%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.02%)</title><rect x="19.5257%" y="837" width="0.0185%" height="15" fill="rgb(223,98,5)" fg:x="6348" fg:w="6"/><text x="19.7757%" y="847.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (31 samples, 0.10%)</title><rect x="19.4611%" y="853" width="0.0954%" height="15" fill="rgb(228,75,37)" fg:x="6327" fg:w="31"/><text x="19.7111%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (4 samples, 0.01%)</title><rect x="19.5442%" y="837" width="0.0123%" height="15" fill="rgb(205,115,49)" fg:x="6354" fg:w="4"/><text x="19.7942%" y="847.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.07%)</title><rect x="19.5995%" y="805" width="0.0738%" height="15" fill="rgb(250,154,43)" fg:x="6372" fg:w="24"/><text x="19.8495%" y="815.50"></text></g><g><title>malloc (23 samples, 0.07%)</title><rect x="19.6026%" y="789" width="0.0707%" height="15" fill="rgb(226,43,29)" fg:x="6373" fg:w="23"/><text x="19.8526%" y="799.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="19.6149%" y="773" width="0.0584%" height="15" fill="rgb(249,228,39)" fg:x="6377" fg:w="19"/><text x="19.8649%" y="783.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="19.6518%" y="757" width="0.0215%" height="15" fill="rgb(216,79,43)" fg:x="6389" fg:w="7"/><text x="19.9018%" y="767.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="19.6518%" y="741" width="0.0215%" height="15" fill="rgb(228,95,12)" fg:x="6389" fg:w="7"/><text x="19.9018%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="19.6549%" y="725" width="0.0185%" height="15" fill="rgb(249,221,15)" fg:x="6390" fg:w="6"/><text x="19.9049%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="19.6549%" y="709" width="0.0185%" height="15" fill="rgb(233,34,13)" fg:x="6390" fg:w="6"/><text x="19.9049%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (5 samples, 0.02%)</title><rect x="19.6826%" y="805" width="0.0154%" height="15" fill="rgb(214,103,39)" fg:x="6399" fg:w="5"/><text x="19.9326%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (107 samples, 0.33%)</title><rect x="19.3781%" y="885" width="0.3291%" height="15" fill="rgb(251,126,39)" fg:x="6300" fg:w="107"/><text x="19.6281%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (99 samples, 0.30%)</title><rect x="19.4027%" y="869" width="0.3045%" height="15" fill="rgb(214,216,36)" fg:x="6308" fg:w="99"/><text x="19.6527%" y="879.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (49 samples, 0.15%)</title><rect x="19.5565%" y="853" width="0.1507%" height="15" fill="rgb(220,221,8)" fg:x="6358" fg:w="49"/><text x="19.8065%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.13%)</title><rect x="19.5749%" y="837" width="0.1323%" height="15" fill="rgb(240,216,3)" fg:x="6364" fg:w="43"/><text x="19.8249%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.13%)</title><rect x="19.5749%" y="821" width="0.1323%" height="15" fill="rgb(232,218,17)" fg:x="6364" fg:w="43"/><text x="19.8249%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (633 samples, 1.95%)</title><rect x="17.7694%" y="901" width="1.9470%" height="15" fill="rgb(229,163,45)" fg:x="5777" fg:w="633"/><text x="18.0194%" y="911.50">&lt;..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (652 samples, 2.01%)</title><rect x="17.7694%" y="917" width="2.0055%" height="15" fill="rgb(231,110,42)" fg:x="5777" fg:w="652"/><text x="18.0194%" y="927.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (19 samples, 0.06%)</title><rect x="19.7164%" y="901" width="0.0584%" height="15" fill="rgb(208,170,48)" fg:x="6410" fg:w="19"/><text x="19.9664%" y="911.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (19 samples, 0.06%)</title><rect x="19.7164%" y="885" width="0.0584%" height="15" fill="rgb(239,116,25)" fg:x="6410" fg:w="19"/><text x="19.9664%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (658 samples, 2.02%)</title><rect x="17.7663%" y="933" width="2.0239%" height="15" fill="rgb(219,200,50)" fg:x="5776" fg:w="658"/><text x="18.0163%" y="943.50">&lt;..</text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="19.7748%" y="917" width="0.0154%" height="15" fill="rgb(245,200,0)" fg:x="6429" fg:w="5"/><text x="20.0248%" y="927.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (5,361 samples, 16.49%)</title><rect x="3.3066%" y="965" width="16.4898%" height="15" fill="rgb(245,119,33)" fg:x="1075" fg:w="5361"/><text x="3.5566%" y="975.50">&lt;aes_grinder::algo::Algo ..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (661 samples, 2.03%)</title><rect x="17.7632%" y="949" width="2.0332%" height="15" fill="rgb(231,125,12)" fg:x="5775" fg:w="661"/><text x="18.0132%" y="959.50">&lt;..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5,369 samples, 16.51%)</title><rect x="3.3035%" y="981" width="16.5144%" height="15" fill="rgb(216,96,41)" fg:x="1074" fg:w="5369"/><text x="3.5535%" y="991.50">&lt;T as alloc::alloc::Write..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.02%)</title><rect x="19.7964%" y="965" width="0.0215%" height="15" fill="rgb(248,43,45)" fg:x="6436" fg:w="7"/><text x="20.0464%" y="975.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="19.7964%" y="949" width="0.0215%" height="15" fill="rgb(217,222,7)" fg:x="6436" fg:w="7"/><text x="20.0464%" y="959.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="19.7964%" y="933" width="0.0215%" height="15" fill="rgb(233,28,6)" fg:x="6436" fg:w="7"/><text x="20.0464%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="19.8917%" y="917" width="0.0123%" height="15" fill="rgb(231,218,15)" fg:x="6467" fg:w="4"/><text x="20.1417%" y="927.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.08%)</title><rect x="19.9040%" y="917" width="0.0830%" height="15" fill="rgb(226,171,48)" fg:x="6471" fg:w="27"/><text x="20.1540%" y="927.50"></text></g><g><title>malloc (23 samples, 0.07%)</title><rect x="19.9163%" y="901" width="0.0707%" height="15" fill="rgb(235,201,9)" fg:x="6475" fg:w="23"/><text x="20.1663%" y="911.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="19.9379%" y="885" width="0.0492%" height="15" fill="rgb(217,80,15)" fg:x="6482" fg:w="16"/><text x="20.1879%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="19.9748%" y="869" width="0.0123%" height="15" fill="rgb(219,152,8)" fg:x="6494" fg:w="4"/><text x="20.2248%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="19.9748%" y="853" width="0.0123%" height="15" fill="rgb(243,107,38)" fg:x="6494" fg:w="4"/><text x="20.2248%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (49 samples, 0.15%)</title><rect x="19.8579%" y="949" width="0.1507%" height="15" fill="rgb(231,17,5)" fg:x="6456" fg:w="49"/><text x="20.1079%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (49 samples, 0.15%)</title><rect x="19.8579%" y="933" width="0.1507%" height="15" fill="rgb(209,25,54)" fg:x="6456" fg:w="49"/><text x="20.1079%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (57 samples, 0.18%)</title><rect x="19.8425%" y="965" width="0.1753%" height="15" fill="rgb(219,0,2)" fg:x="6451" fg:w="57"/><text x="20.0925%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (65 samples, 0.20%)</title><rect x="19.8210%" y="981" width="0.1999%" height="15" fill="rgb(246,9,5)" fg:x="6444" fg:w="65"/><text x="20.0710%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5,455 samples, 16.78%)</title><rect x="3.2604%" y="1013" width="16.7789%" height="15" fill="rgb(226,159,4)" fg:x="1060" fg:w="5455"/><text x="3.5104%" y="1023.50">&lt;core::option::Option&lt;T&gt; a..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (5,451 samples, 16.77%)</title><rect x="3.2727%" y="997" width="16.7666%" height="15" fill="rgb(219,175,34)" fg:x="1064" fg:w="5451"/><text x="3.5227%" y="1007.50">&lt;alloc::boxed::Box&lt;T,A&gt; as..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (6 samples, 0.02%)</title><rect x="20.0209%" y="981" width="0.0185%" height="15" fill="rgb(236,10,46)" fg:x="6509" fg:w="6"/><text x="20.2709%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="20.2701%" y="869" width="0.0246%" height="15" fill="rgb(240,211,16)" fg:x="6590" fg:w="8"/><text x="20.5201%" y="879.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (11 samples, 0.03%)</title><rect x="20.3224%" y="853" width="0.0338%" height="15" fill="rgb(205,3,43)" fg:x="6607" fg:w="11"/><text x="20.5724%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.15%)</title><rect x="20.2301%" y="885" width="0.1538%" height="15" fill="rgb(245,7,22)" fg:x="6577" fg:w="50"/><text x="20.4801%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (29 samples, 0.09%)</title><rect x="20.2947%" y="869" width="0.0892%" height="15" fill="rgb(239,132,32)" fg:x="6598" fg:w="29"/><text x="20.5447%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (9 samples, 0.03%)</title><rect x="20.3562%" y="853" width="0.0277%" height="15" fill="rgb(228,202,34)" fg:x="6618" fg:w="9"/><text x="20.6062%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (126 samples, 0.39%)</title><rect x="20.1286%" y="917" width="0.3876%" height="15" fill="rgb(254,200,22)" fg:x="6544" fg:w="126"/><text x="20.3786%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (113 samples, 0.35%)</title><rect x="20.1686%" y="901" width="0.3476%" height="15" fill="rgb(219,10,39)" fg:x="6557" fg:w="113"/><text x="20.4186%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (42 samples, 0.13%)</title><rect x="20.3869%" y="885" width="0.1292%" height="15" fill="rgb(226,210,39)" fg:x="6628" fg:w="42"/><text x="20.6369%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.02%)</title><rect x="20.4946%" y="869" width="0.0215%" height="15" fill="rgb(208,219,16)" fg:x="6663" fg:w="7"/><text x="20.7446%" y="879.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="20.5161%" y="917" width="0.0123%" height="15" fill="rgb(216,158,51)" fg:x="6670" fg:w="4"/><text x="20.7661%" y="927.50"></text></g><g><title>__rust_alloc (5 samples, 0.02%)</title><rect x="20.6330%" y="725" width="0.0154%" height="15" fill="rgb(233,14,44)" fg:x="6708" fg:w="5"/><text x="20.8830%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.10%)</title><rect x="20.6207%" y="821" width="0.0954%" height="15" fill="rgb(237,97,39)" fg:x="6704" fg:w="31"/><text x="20.8707%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.10%)</title><rect x="20.6207%" y="805" width="0.0954%" height="15" fill="rgb(218,198,43)" fg:x="6704" fg:w="31"/><text x="20.8707%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.10%)</title><rect x="20.6207%" y="789" width="0.0954%" height="15" fill="rgb(231,104,20)" fg:x="6704" fg:w="31"/><text x="20.8707%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.09%)</title><rect x="20.6299%" y="773" width="0.0861%" height="15" fill="rgb(254,36,13)" fg:x="6707" fg:w="28"/><text x="20.8799%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.09%)</title><rect x="20.6299%" y="757" width="0.0861%" height="15" fill="rgb(248,14,50)" fg:x="6707" fg:w="28"/><text x="20.8799%" y="767.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.09%)</title><rect x="20.6299%" y="741" width="0.0861%" height="15" fill="rgb(217,107,29)" fg:x="6707" fg:w="28"/><text x="20.8799%" y="751.50"></text></g><g><title>malloc (22 samples, 0.07%)</title><rect x="20.6484%" y="725" width="0.0677%" height="15" fill="rgb(251,169,33)" fg:x="6713" fg:w="22"/><text x="20.8984%" y="735.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="20.6576%" y="709" width="0.0584%" height="15" fill="rgb(217,108,32)" fg:x="6716" fg:w="19"/><text x="20.9076%" y="719.50"></text></g><g><title>core::clone::Clone::clone (134 samples, 0.41%)</title><rect x="20.5284%" y="917" width="0.4122%" height="15" fill="rgb(219,66,42)" fg:x="6674" fg:w="134"/><text x="20.7784%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (130 samples, 0.40%)</title><rect x="20.5407%" y="901" width="0.3999%" height="15" fill="rgb(206,180,7)" fg:x="6678" fg:w="130"/><text x="20.7907%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (104 samples, 0.32%)</title><rect x="20.6207%" y="885" width="0.3199%" height="15" fill="rgb(208,226,31)" fg:x="6704" fg:w="104"/><text x="20.8707%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (104 samples, 0.32%)</title><rect x="20.6207%" y="869" width="0.3199%" height="15" fill="rgb(218,26,49)" fg:x="6704" fg:w="104"/><text x="20.8707%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (104 samples, 0.32%)</title><rect x="20.6207%" y="853" width="0.3199%" height="15" fill="rgb(233,197,48)" fg:x="6704" fg:w="104"/><text x="20.8707%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (104 samples, 0.32%)</title><rect x="20.6207%" y="837" width="0.3199%" height="15" fill="rgb(252,181,51)" fg:x="6704" fg:w="104"/><text x="20.8707%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (73 samples, 0.22%)</title><rect x="20.7161%" y="821" width="0.2245%" height="15" fill="rgb(253,90,19)" fg:x="6735" fg:w="73"/><text x="20.9661%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73 samples, 0.22%)</title><rect x="20.7161%" y="805" width="0.2245%" height="15" fill="rgb(215,171,30)" fg:x="6735" fg:w="73"/><text x="20.9661%" y="815.50"></text></g><g><title>[libc.so.6] (72 samples, 0.22%)</title><rect x="20.7191%" y="789" width="0.2215%" height="15" fill="rgb(214,222,9)" fg:x="6736" fg:w="72"/><text x="20.9691%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (27 samples, 0.08%)</title><rect x="20.9406%" y="917" width="0.0830%" height="15" fill="rgb(223,3,22)" fg:x="6808" fg:w="27"/><text x="21.1906%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.08%)</title><rect x="20.9406%" y="901" width="0.0830%" height="15" fill="rgb(225,196,46)" fg:x="6808" fg:w="27"/><text x="21.1906%" y="911.50"></text></g><g><title>[libc.so.6] (27 samples, 0.08%)</title><rect x="20.9406%" y="885" width="0.0830%" height="15" fill="rgb(209,110,37)" fg:x="6808" fg:w="27"/><text x="21.1906%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (12 samples, 0.04%)</title><rect x="21.0298%" y="901" width="0.0369%" height="15" fill="rgb(249,89,12)" fg:x="6837" fg:w="12"/><text x="21.2798%" y="911.50"></text></g><g><title>core::ptr::write (12 samples, 0.04%)</title><rect x="21.0298%" y="885" width="0.0369%" height="15" fill="rgb(226,27,33)" fg:x="6837" fg:w="12"/><text x="21.2798%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (15 samples, 0.05%)</title><rect x="21.0298%" y="917" width="0.0461%" height="15" fill="rgb(213,82,22)" fg:x="6837" fg:w="15"/><text x="21.2798%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (27 samples, 0.08%)</title><rect x="21.0975%" y="901" width="0.0830%" height="15" fill="rgb(248,140,0)" fg:x="6859" fg:w="27"/><text x="21.3475%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (37 samples, 0.11%)</title><rect x="21.0759%" y="917" width="0.1138%" height="15" fill="rgb(228,106,3)" fg:x="6852" fg:w="37"/><text x="21.3259%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (35 samples, 0.11%)</title><rect x="21.1898%" y="917" width="0.1077%" height="15" fill="rgb(209,23,37)" fg:x="6889" fg:w="35"/><text x="21.4398%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (29 samples, 0.09%)</title><rect x="21.2082%" y="901" width="0.0892%" height="15" fill="rgb(241,93,50)" fg:x="6895" fg:w="29"/><text x="21.4582%" y="911.50"></text></g><g><title>hashbrown::raw::offset_from (17 samples, 0.05%)</title><rect x="21.2451%" y="885" width="0.0523%" height="15" fill="rgb(253,46,43)" fg:x="6907" fg:w="17"/><text x="21.4951%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (12 samples, 0.04%)</title><rect x="21.2605%" y="869" width="0.0369%" height="15" fill="rgb(226,206,43)" fg:x="6912" fg:w="12"/><text x="21.5105%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (15 samples, 0.05%)</title><rect x="21.3097%" y="901" width="0.0461%" height="15" fill="rgb(217,54,7)" fg:x="6928" fg:w="15"/><text x="21.5597%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (10 samples, 0.03%)</title><rect x="21.3251%" y="885" width="0.0308%" height="15" fill="rgb(223,5,52)" fg:x="6933" fg:w="10"/><text x="21.5751%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.03%)</title><rect x="21.3282%" y="869" width="0.0277%" height="15" fill="rgb(206,52,46)" fg:x="6934" fg:w="9"/><text x="21.5782%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.02%)</title><rect x="21.3312%" y="853" width="0.0246%" height="15" fill="rgb(253,136,11)" fg:x="6935" fg:w="8"/><text x="21.5812%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (20 samples, 0.06%)</title><rect x="21.2974%" y="917" width="0.0615%" height="15" fill="rgb(208,106,33)" fg:x="6924" fg:w="20"/><text x="21.5474%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (422 samples, 1.30%)</title><rect x="20.0640%" y="949" width="1.2980%" height="15" fill="rgb(206,54,4)" fg:x="6523" fg:w="422"/><text x="20.3140%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (422 samples, 1.30%)</title><rect x="20.0640%" y="933" width="1.2980%" height="15" fill="rgb(213,3,15)" fg:x="6523" fg:w="422"/><text x="20.3140%" y="943.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (15 samples, 0.05%)</title><rect x="21.4020%" y="917" width="0.0461%" height="15" fill="rgb(252,211,39)" fg:x="6958" fg:w="15"/><text x="21.6520%" y="927.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.05%)</title><rect x="21.4697%" y="869" width="0.0492%" height="15" fill="rgb(223,6,36)" fg:x="6980" fg:w="16"/><text x="21.7197%" y="879.50"></text></g><g><title>malloc (16 samples, 0.05%)</title><rect x="21.4697%" y="853" width="0.0492%" height="15" fill="rgb(252,169,45)" fg:x="6980" fg:w="16"/><text x="21.7197%" y="863.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="21.4727%" y="837" width="0.0461%" height="15" fill="rgb(212,48,26)" fg:x="6981" fg:w="15"/><text x="21.7227%" y="847.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="21.4973%" y="821" width="0.0215%" height="15" fill="rgb(251,102,48)" fg:x="6989" fg:w="7"/><text x="21.7473%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.02%)</title><rect x="21.5004%" y="805" width="0.0185%" height="15" fill="rgb(243,208,16)" fg:x="6990" fg:w="6"/><text x="21.7504%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (53 samples, 0.16%)</title><rect x="21.3682%" y="949" width="0.1630%" height="15" fill="rgb(219,96,24)" fg:x="6947" fg:w="53"/><text x="21.6182%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (48 samples, 0.15%)</title><rect x="21.3835%" y="933" width="0.1476%" height="15" fill="rgb(219,33,29)" fg:x="6952" fg:w="48"/><text x="21.6335%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (27 samples, 0.08%)</title><rect x="21.4481%" y="917" width="0.0830%" height="15" fill="rgb(223,176,5)" fg:x="6973" fg:w="27"/><text x="21.6981%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.08%)</title><rect x="21.4543%" y="901" width="0.0769%" height="15" fill="rgb(228,140,14)" fg:x="6975" fg:w="25"/><text x="21.7043%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.08%)</title><rect x="21.4543%" y="885" width="0.0769%" height="15" fill="rgb(217,179,31)" fg:x="6975" fg:w="25"/><text x="21.7043%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (485 samples, 1.49%)</title><rect x="20.0455%" y="965" width="1.4918%" height="15" fill="rgb(230,9,30)" fg:x="6517" fg:w="485"/><text x="20.2955%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (502 samples, 1.54%)</title><rect x="20.0424%" y="981" width="1.5441%" height="15" fill="rgb(230,136,20)" fg:x="6516" fg:w="502"/><text x="20.2924%" y="991.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="21.5373%" y="965" width="0.0492%" height="15" fill="rgb(215,210,22)" fg:x="7002" fg:w="16"/><text x="21.7873%" y="975.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (15 samples, 0.05%)</title><rect x="21.5404%" y="949" width="0.0461%" height="15" fill="rgb(218,43,5)" fg:x="7003" fg:w="15"/><text x="21.7904%" y="959.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (510 samples, 1.57%)</title><rect x="20.0394%" y="997" width="1.5687%" height="15" fill="rgb(216,11,5)" fg:x="6515" fg:w="510"/><text x="20.2894%" y="1007.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="21.5865%" y="981" width="0.0215%" height="15" fill="rgb(209,82,29)" fg:x="7018" fg:w="7"/><text x="21.8365%" y="991.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (5,974 samples, 18.38%)</title><rect x="3.2358%" y="1029" width="18.3753%" height="15" fill="rgb(244,115,12)" fg:x="1052" fg:w="5974"/><text x="3.4858%" y="1039.50">&lt;aes_grinder::algo::Algo as c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (511 samples, 1.57%)</title><rect x="20.0394%" y="1013" width="1.5718%" height="15" fill="rgb(222,82,18)" fg:x="6515" fg:w="511"/><text x="20.2894%" y="1023.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5,977 samples, 18.38%)</title><rect x="3.2358%" y="1045" width="18.3845%" height="15" fill="rgb(249,227,8)" fg:x="1052" fg:w="5977"/><text x="3.4858%" y="1055.50">&lt;T as alloc::alloc::WriteClon..</text></g><g><title>alloc::alloc::alloc (12 samples, 0.04%)</title><rect x="21.6542%" y="981" width="0.0369%" height="15" fill="rgb(253,141,45)" fg:x="7040" fg:w="12"/><text x="21.9042%" y="991.50"></text></g><g><title>malloc (10 samples, 0.03%)</title><rect x="21.6604%" y="965" width="0.0308%" height="15" fill="rgb(234,184,4)" fg:x="7042" fg:w="10"/><text x="21.9104%" y="975.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="21.6665%" y="949" width="0.0246%" height="15" fill="rgb(218,194,23)" fg:x="7044" fg:w="8"/><text x="21.9165%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.06%)</title><rect x="21.6388%" y="1013" width="0.0646%" height="15" fill="rgb(235,66,41)" fg:x="7035" fg:w="21"/><text x="21.8888%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.06%)</title><rect x="21.6388%" y="997" width="0.0646%" height="15" fill="rgb(245,217,1)" fg:x="7035" fg:w="21"/><text x="21.8888%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (31 samples, 0.10%)</title><rect x="21.6235%" y="1045" width="0.0954%" height="15" fill="rgb(229,91,1)" fg:x="7030" fg:w="31"/><text x="21.8735%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (31 samples, 0.10%)</title><rect x="21.6235%" y="1029" width="0.0954%" height="15" fill="rgb(207,101,30)" fg:x="7030" fg:w="31"/><text x="21.8735%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (4 samples, 0.01%)</title><rect x="21.7188%" y="1029" width="0.0123%" height="15" fill="rgb(223,82,49)" fg:x="7061" fg:w="4"/><text x="21.9688%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6,022 samples, 18.52%)</title><rect x="3.2143%" y="1077" width="18.5230%" height="15" fill="rgb(218,167,17)" fg:x="1045" fg:w="6022"/><text x="3.4643%" y="1087.50">&lt;core::option::Option&lt;T&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,018 samples, 18.51%)</title><rect x="3.2266%" y="1061" width="18.5107%" height="15" fill="rgb(208,103,14)" fg:x="1049" fg:w="6018"/><text x="3.4766%" y="1071.50">&lt;alloc::boxed::Box&lt;T,A&gt; as co..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (6 samples, 0.02%)</title><rect x="21.7188%" y="1045" width="0.0185%" height="15" fill="rgb(238,20,8)" fg:x="7061" fg:w="6"/><text x="21.9688%" y="1055.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.03%)</title><rect x="21.9649%" y="917" width="0.0277%" height="15" fill="rgb(218,80,54)" fg:x="7141" fg:w="9"/><text x="22.2149%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.14%)</title><rect x="21.8726%" y="949" width="0.1384%" height="15" fill="rgb(240,144,17)" fg:x="7111" fg:w="45"/><text x="22.1226%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (27 samples, 0.08%)</title><rect x="21.9280%" y="933" width="0.0830%" height="15" fill="rgb(245,27,50)" fg:x="7129" fg:w="27"/><text x="22.1780%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (6 samples, 0.02%)</title><rect x="21.9926%" y="917" width="0.0185%" height="15" fill="rgb(251,51,7)" fg:x="7150" fg:w="6"/><text x="22.2426%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (19 samples, 0.06%)</title><rect x="22.0141%" y="949" width="0.0584%" height="15" fill="rgb(245,217,29)" fg:x="7157" fg:w="19"/><text x="22.2641%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="22.0571%" y="933" width="0.0154%" height="15" fill="rgb(221,176,29)" fg:x="7171" fg:w="5"/><text x="22.3071%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.29%)</title><rect x="21.7834%" y="981" width="0.2922%" height="15" fill="rgb(212,180,24)" fg:x="7082" fg:w="95"/><text x="22.0334%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (78 samples, 0.24%)</title><rect x="21.8357%" y="965" width="0.2399%" height="15" fill="rgb(254,24,2)" fg:x="7099" fg:w="78"/><text x="22.0857%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="22.0910%" y="885" width="0.0523%" height="15" fill="rgb(230,100,2)" fg:x="7182" fg:w="17"/><text x="22.3410%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="22.0910%" y="869" width="0.0523%" height="15" fill="rgb(219,142,25)" fg:x="7182" fg:w="17"/><text x="22.3410%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.05%)</title><rect x="22.0910%" y="853" width="0.0523%" height="15" fill="rgb(240,73,43)" fg:x="7182" fg:w="17"/><text x="22.3410%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.05%)</title><rect x="22.0941%" y="837" width="0.0492%" height="15" fill="rgb(214,114,15)" fg:x="7183" fg:w="16"/><text x="22.3441%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.05%)</title><rect x="22.0941%" y="821" width="0.0492%" height="15" fill="rgb(207,130,4)" fg:x="7183" fg:w="16"/><text x="22.3441%" y="831.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.05%)</title><rect x="22.0941%" y="805" width="0.0492%" height="15" fill="rgb(221,25,40)" fg:x="7183" fg:w="16"/><text x="22.3441%" y="815.50"></text></g><g><title>malloc (14 samples, 0.04%)</title><rect x="22.1002%" y="789" width="0.0431%" height="15" fill="rgb(241,184,7)" fg:x="7185" fg:w="14"/><text x="22.3502%" y="799.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="22.1125%" y="773" width="0.0308%" height="15" fill="rgb(235,159,4)" fg:x="7189" fg:w="10"/><text x="22.3625%" y="783.50"></text></g><g><title>core::clone::Clone::clone (23 samples, 0.07%)</title><rect x="22.0818%" y="981" width="0.0707%" height="15" fill="rgb(214,87,48)" fg:x="7179" fg:w="23"/><text x="22.3318%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="22.0910%" y="965" width="0.0615%" height="15" fill="rgb(246,198,24)" fg:x="7182" fg:w="20"/><text x="22.3410%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="22.0910%" y="949" width="0.0615%" height="15" fill="rgb(209,66,40)" fg:x="7182" fg:w="20"/><text x="22.3410%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.06%)</title><rect x="22.0910%" y="933" width="0.0615%" height="15" fill="rgb(233,147,39)" fg:x="7182" fg:w="20"/><text x="22.3410%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.06%)</title><rect x="22.0910%" y="917" width="0.0615%" height="15" fill="rgb(231,145,52)" fg:x="7182" fg:w="20"/><text x="22.3410%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.06%)</title><rect x="22.0910%" y="901" width="0.0615%" height="15" fill="rgb(206,20,26)" fg:x="7182" fg:w="20"/><text x="22.3410%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.03%)</title><rect x="22.1587%" y="965" width="0.0277%" height="15" fill="rgb(238,220,4)" fg:x="7204" fg:w="9"/><text x="22.4087%" y="975.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="22.1587%" y="949" width="0.0277%" height="15" fill="rgb(252,195,42)" fg:x="7204" fg:w="9"/><text x="22.4087%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (16 samples, 0.05%)</title><rect x="22.1587%" y="981" width="0.0492%" height="15" fill="rgb(209,10,6)" fg:x="7204" fg:w="16"/><text x="22.4087%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (7 samples, 0.02%)</title><rect x="22.1863%" y="965" width="0.0215%" height="15" fill="rgb(229,3,52)" fg:x="7213" fg:w="7"/><text x="22.4363%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (21 samples, 0.06%)</title><rect x="22.2294%" y="965" width="0.0646%" height="15" fill="rgb(253,49,37)" fg:x="7227" fg:w="21"/><text x="22.4794%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="22.2817%" y="949" width="0.0123%" height="15" fill="rgb(240,103,49)" fg:x="7244" fg:w="4"/><text x="22.5317%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (29 samples, 0.09%)</title><rect x="22.2079%" y="981" width="0.0892%" height="15" fill="rgb(250,182,30)" fg:x="7220" fg:w="29"/><text x="22.4579%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (36 samples, 0.11%)</title><rect x="22.2971%" y="981" width="0.1107%" height="15" fill="rgb(248,8,30)" fg:x="7249" fg:w="36"/><text x="22.5471%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (34 samples, 0.10%)</title><rect x="22.3032%" y="965" width="0.1046%" height="15" fill="rgb(237,120,30)" fg:x="7251" fg:w="34"/><text x="22.5532%" y="975.50"></text></g><g><title>hashbrown::raw::offset_from (21 samples, 0.06%)</title><rect x="22.3432%" y="949" width="0.0646%" height="15" fill="rgb(221,146,34)" fg:x="7264" fg:w="21"/><text x="22.5932%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (13 samples, 0.04%)</title><rect x="22.3678%" y="933" width="0.0400%" height="15" fill="rgb(242,55,13)" fg:x="7272" fg:w="13"/><text x="22.6178%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="22.4140%" y="965" width="0.0123%" height="15" fill="rgb(242,112,31)" fg:x="7287" fg:w="4"/><text x="22.6640%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="22.4263%" y="965" width="0.0185%" height="15" fill="rgb(249,192,27)" fg:x="7291" fg:w="6"/><text x="22.6763%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (13 samples, 0.04%)</title><rect x="22.4078%" y="981" width="0.0400%" height="15" fill="rgb(208,204,44)" fg:x="7285" fg:w="13"/><text x="22.6578%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (231 samples, 0.71%)</title><rect x="21.7403%" y="1013" width="0.7105%" height="15" fill="rgb(208,93,54)" fg:x="7068" fg:w="231"/><text x="21.9903%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (231 samples, 0.71%)</title><rect x="21.7403%" y="997" width="0.7105%" height="15" fill="rgb(242,1,31)" fg:x="7068" fg:w="231"/><text x="21.9903%" y="1007.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (4 samples, 0.01%)</title><rect x="22.4816%" y="981" width="0.0123%" height="15" fill="rgb(241,83,25)" fg:x="7309" fg:w="4"/><text x="22.7316%" y="991.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="22.4970%" y="933" width="0.0123%" height="15" fill="rgb(205,169,50)" fg:x="7314" fg:w="4"/><text x="22.7470%" y="943.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="22.4970%" y="917" width="0.0123%" height="15" fill="rgb(239,186,37)" fg:x="7314" fg:w="4"/><text x="22.7470%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="22.5093%" y="933" width="0.0123%" height="15" fill="rgb(205,221,10)" fg:x="7318" fg:w="4"/><text x="22.7593%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (22 samples, 0.07%)</title><rect x="22.4570%" y="1013" width="0.0677%" height="15" fill="rgb(218,196,15)" fg:x="7301" fg:w="22"/><text x="22.7070%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (17 samples, 0.05%)</title><rect x="22.4724%" y="997" width="0.0523%" height="15" fill="rgb(218,196,35)" fg:x="7306" fg:w="17"/><text x="22.7224%" y="1007.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (10 samples, 0.03%)</title><rect x="22.4939%" y="981" width="0.0308%" height="15" fill="rgb(233,63,24)" fg:x="7313" fg:w="10"/><text x="22.7439%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.03%)</title><rect x="22.4939%" y="965" width="0.0308%" height="15" fill="rgb(225,8,4)" fg:x="7313" fg:w="10"/><text x="22.7439%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.03%)</title><rect x="22.4939%" y="949" width="0.0308%" height="15" fill="rgb(234,105,35)" fg:x="7313" fg:w="10"/><text x="22.7439%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (260 samples, 0.80%)</title><rect x="21.7373%" y="1029" width="0.7997%" height="15" fill="rgb(236,21,32)" fg:x="7067" fg:w="260"/><text x="21.9873%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (261 samples, 0.80%)</title><rect x="21.7373%" y="1045" width="0.8028%" height="15" fill="rgb(228,109,6)" fg:x="7067" fg:w="261"/><text x="21.9873%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (263 samples, 0.81%)</title><rect x="21.7373%" y="1061" width="0.8090%" height="15" fill="rgb(229,215,31)" fg:x="7067" fg:w="263"/><text x="21.9873%" y="1071.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6,289 samples, 19.34%)</title><rect x="3.2081%" y="1093" width="19.3442%" height="15" fill="rgb(221,52,54)" fg:x="1043" fg:w="6289"/><text x="3.4581%" y="1103.50">&lt;aes_grinder::algo::Algo as co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (265 samples, 0.82%)</title><rect x="21.7373%" y="1077" width="0.8151%" height="15" fill="rgb(252,129,43)" fg:x="7067" fg:w="265"/><text x="21.9873%" y="1087.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6,293 samples, 19.36%)</title><rect x="3.2020%" y="1109" width="19.3565%" height="15" fill="rgb(248,183,27)" fg:x="1041" fg:w="6293"/><text x="3.4520%" y="1119.50">&lt;T as alloc::alloc::WriteClone..</text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="22.5708%" y="1045" width="0.0246%" height="15" fill="rgb(250,0,22)" fg:x="7338" fg:w="8"/><text x="22.8208%" y="1055.50"></text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="22.5831%" y="1029" width="0.0123%" height="15" fill="rgb(213,166,10)" fg:x="7342" fg:w="4"/><text x="22.8331%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (14 samples, 0.04%)</title><rect x="22.5585%" y="1109" width="0.0431%" height="15" fill="rgb(207,163,36)" fg:x="7334" fg:w="14"/><text x="22.8085%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.04%)</title><rect x="22.5616%" y="1093" width="0.0400%" height="15" fill="rgb(208,122,22)" fg:x="7335" fg:w="13"/><text x="22.8116%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.04%)</title><rect x="22.5647%" y="1077" width="0.0369%" height="15" fill="rgb(207,104,49)" fg:x="7336" fg:w="12"/><text x="22.8147%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.04%)</title><rect x="22.5647%" y="1061" width="0.0369%" height="15" fill="rgb(248,211,50)" fg:x="7336" fg:w="12"/><text x="22.8147%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6,315 samples, 19.42%)</title><rect x="3.1897%" y="1125" width="19.4242%" height="15" fill="rgb(217,13,45)" fg:x="1037" fg:w="6315"/><text x="3.4397%" y="1135.50">&lt;alloc::boxed::Box&lt;T,A&gt; as cor..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (4 samples, 0.01%)</title><rect x="22.6016%" y="1109" width="0.0123%" height="15" fill="rgb(211,216,49)" fg:x="7348" fg:w="4"/><text x="22.8516%" y="1119.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (7 samples, 0.02%)</title><rect x="22.6969%" y="1013" width="0.0215%" height="15" fill="rgb(221,58,53)" fg:x="7379" fg:w="7"/><text x="22.9469%" y="1023.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (7 samples, 0.02%)</title><rect x="22.6969%" y="997" width="0.0215%" height="15" fill="rgb(220,112,41)" fg:x="7379" fg:w="7"/><text x="22.9469%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (28 samples, 0.09%)</title><rect x="22.6508%" y="1077" width="0.0861%" height="15" fill="rgb(236,38,28)" fg:x="7364" fg:w="28"/><text x="22.9008%" y="1087.50"></text></g><g><title>std::collections::hash::map::RandomState::new (28 samples, 0.09%)</title><rect x="22.6508%" y="1061" width="0.0861%" height="15" fill="rgb(227,195,22)" fg:x="7364" fg:w="28"/><text x="22.9008%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.09%)</title><rect x="22.6508%" y="1045" width="0.0861%" height="15" fill="rgb(214,55,33)" fg:x="7364" fg:w="28"/><text x="22.9008%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.08%)</title><rect x="22.6600%" y="1029" width="0.0769%" height="15" fill="rgb(248,80,13)" fg:x="7367" fg:w="25"/><text x="22.9100%" y="1039.50"></text></g><g><title>std::collections::hash::map::RandomState::new::_{{closure}} (6 samples, 0.02%)</title><rect x="22.7185%" y="1013" width="0.0185%" height="15" fill="rgb(238,52,6)" fg:x="7386" fg:w="6"/><text x="22.9685%" y="1023.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="22.7369%" y="1045" width="0.0215%" height="15" fill="rgb(224,198,47)" fg:x="7392" fg:w="7"/><text x="22.9869%" y="1055.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="22.7369%" y="1029" width="0.0215%" height="15" fill="rgb(233,171,20)" fg:x="7392" fg:w="7"/><text x="22.9869%" y="1039.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="22.7892%" y="1029" width="0.0123%" height="15" fill="rgb(241,30,25)" fg:x="7409" fg:w="4"/><text x="23.0392%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="23.5705%" y="837" width="0.0185%" height="15" fill="rgb(207,171,38)" fg:x="7663" fg:w="6"/><text x="23.8205%" y="847.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (31 samples, 0.10%)</title><rect x="23.6535%" y="821" width="0.0954%" height="15" fill="rgb(234,70,1)" fg:x="7690" fg:w="31"/><text x="23.9035%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.34%)</title><rect x="23.4721%" y="853" width="0.3414%" height="15" fill="rgb(232,178,18)" fg:x="7631" fg:w="111"/><text x="23.7221%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (73 samples, 0.22%)</title><rect x="23.5889%" y="837" width="0.2245%" height="15" fill="rgb(241,78,40)" fg:x="7669" fg:w="73"/><text x="23.8389%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (21 samples, 0.06%)</title><rect x="23.7489%" y="821" width="0.0646%" height="15" fill="rgb(222,35,25)" fg:x="7721" fg:w="21"/><text x="23.9989%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (61 samples, 0.19%)</title><rect x="23.8135%" y="853" width="0.1876%" height="15" fill="rgb(207,92,16)" fg:x="7742" fg:w="61"/><text x="24.0635%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (19 samples, 0.06%)</title><rect x="23.9427%" y="837" width="0.0584%" height="15" fill="rgb(216,59,51)" fg:x="7784" fg:w="19"/><text x="24.1927%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.02%)</title><rect x="23.9765%" y="821" width="0.0246%" height="15" fill="rgb(213,80,28)" fg:x="7795" fg:w="8"/><text x="24.2265%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (237 samples, 0.73%)</title><rect x="23.2844%" y="885" width="0.7290%" height="15" fill="rgb(220,93,7)" fg:x="7570" fg:w="237"/><text x="23.5344%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (217 samples, 0.67%)</title><rect x="23.3459%" y="869" width="0.6675%" height="15" fill="rgb(225,24,44)" fg:x="7590" fg:w="217"/><text x="23.5959%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (346 samples, 1.06%)</title><rect x="23.0045%" y="949" width="1.0643%" height="15" fill="rgb(243,74,40)" fg:x="7479" fg:w="346"/><text x="23.2545%" y="959.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (345 samples, 1.06%)</title><rect x="23.0076%" y="933" width="1.0612%" height="15" fill="rgb(228,39,7)" fg:x="7480" fg:w="345"/><text x="23.2576%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 1.06%)</title><rect x="23.0107%" y="917" width="1.0581%" height="15" fill="rgb(227,79,8)" fg:x="7481" fg:w="344"/><text x="23.2607%" y="927.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (312 samples, 0.96%)</title><rect x="23.1091%" y="901" width="0.9597%" height="15" fill="rgb(236,58,11)" fg:x="7513" fg:w="312"/><text x="23.3591%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (18 samples, 0.06%)</title><rect x="24.0134%" y="885" width="0.0554%" height="15" fill="rgb(249,63,35)" fg:x="7807" fg:w="18"/><text x="24.2634%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.03%)</title><rect x="24.0380%" y="869" width="0.0308%" height="15" fill="rgb(252,114,16)" fg:x="7815" fg:w="10"/><text x="24.2880%" y="879.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (15 samples, 0.05%)</title><rect x="24.4533%" y="917" width="0.0461%" height="15" fill="rgb(254,151,24)" fg:x="7950" fg:w="15"/><text x="24.7033%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.03%)</title><rect x="25.1853%" y="773" width="0.0277%" height="15" fill="rgb(253,54,39)" fg:x="8188" fg:w="9"/><text x="25.4353%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (101 samples, 0.31%)</title><rect x="24.9054%" y="789" width="0.3107%" height="15" fill="rgb(243,25,45)" fg:x="8097" fg:w="101"/><text x="25.1554%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.07%)</title><rect x="26.0835%" y="773" width="0.0738%" height="15" fill="rgb(234,134,9)" fg:x="8480" fg:w="24"/><text x="26.3335%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (456 samples, 1.40%)</title><rect x="24.7578%" y="837" width="1.4026%" height="15" fill="rgb(227,166,31)" fg:x="8049" fg:w="456"/><text x="25.0078%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (455 samples, 1.40%)</title><rect x="24.7609%" y="821" width="1.3995%" height="15" fill="rgb(245,143,41)" fg:x="8050" fg:w="455"/><text x="25.0109%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (455 samples, 1.40%)</title><rect x="24.7609%" y="805" width="1.3995%" height="15" fill="rgb(238,181,32)" fg:x="8050" fg:w="455"/><text x="25.0109%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (307 samples, 0.94%)</title><rect x="25.2161%" y="789" width="0.9443%" height="15" fill="rgb(224,113,18)" fg:x="8198" fg:w="307"/><text x="25.4661%" y="799.50"></text></g><g><title>[libc.so.6] (61 samples, 0.19%)</title><rect x="26.1911%" y="821" width="0.1876%" height="15" fill="rgb(240,229,28)" fg:x="8515" fg:w="61"/><text x="26.4411%" y="831.50"></text></g><g><title>[libc.so.6] (69 samples, 0.21%)</title><rect x="26.3818%" y="805" width="0.2122%" height="15" fill="rgb(250,185,3)" fg:x="8577" fg:w="69"/><text x="26.6318%" y="815.50"></text></g><g><title>[libc.so.6] (100 samples, 0.31%)</title><rect x="26.6095%" y="789" width="0.3076%" height="15" fill="rgb(212,59,25)" fg:x="8651" fg:w="100"/><text x="26.8595%" y="799.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (18 samples, 0.06%)</title><rect x="26.9170%" y="789" width="0.0554%" height="15" fill="rgb(221,87,20)" fg:x="8751" fg:w="18"/><text x="27.1670%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (265 samples, 0.82%)</title><rect x="26.1604%" y="837" width="0.8151%" height="15" fill="rgb(213,74,28)" fg:x="8505" fg:w="265"/><text x="26.4104%" y="847.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (194 samples, 0.60%)</title><rect x="26.3788%" y="821" width="0.5967%" height="15" fill="rgb(224,132,34)" fg:x="8576" fg:w="194"/><text x="26.6288%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (124 samples, 0.38%)</title><rect x="26.5941%" y="805" width="0.3814%" height="15" fill="rgb(222,101,24)" fg:x="8646" fg:w="124"/><text x="26.8441%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="26.9847%" y="805" width="0.0154%" height="15" fill="rgb(254,142,4)" fg:x="8773" fg:w="5"/><text x="27.2347%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="26.9847%" y="789" width="0.0154%" height="15" fill="rgb(230,229,49)" fg:x="8773" fg:w="5"/><text x="27.2347%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (99 samples, 0.30%)</title><rect x="27.3292%" y="725" width="0.3045%" height="15" fill="rgb(238,70,47)" fg:x="8885" fg:w="99"/><text x="27.5792%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.02%)</title><rect x="27.6122%" y="709" width="0.0215%" height="15" fill="rgb(231,160,17)" fg:x="8977" fg:w="7"/><text x="27.8622%" y="719.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="27.6337%" y="725" width="0.0123%" height="15" fill="rgb(218,68,53)" fg:x="8984" fg:w="4"/><text x="27.8837%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (208 samples, 0.64%)</title><rect x="27.0216%" y="741" width="0.6398%" height="15" fill="rgb(236,111,10)" fg:x="8785" fg:w="208"/><text x="27.2716%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="27.6460%" y="725" width="0.0154%" height="15" fill="rgb(224,34,41)" fg:x="8988" fg:w="5"/><text x="27.8960%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.03%)</title><rect x="27.9844%" y="693" width="0.0338%" height="15" fill="rgb(241,118,19)" fg:x="9098" fg:w="11"/><text x="28.2344%" y="703.50"></text></g><g><title>hashbrown::map::make_hash (1,082 samples, 3.33%)</title><rect x="24.6963%" y="869" width="3.3281%" height="15" fill="rgb(238,129,25)" fg:x="8029" fg:w="1082"/><text x="24.9463%" y="879.50">has..</text></g><g><title>core::hash::BuildHasher::hash_one (1,082 samples, 3.33%)</title><rect x="24.6963%" y="853" width="3.3281%" height="15" fill="rgb(238,22,31)" fg:x="8029" fg:w="1082"/><text x="24.9463%" y="863.50">cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (341 samples, 1.05%)</title><rect x="26.9755%" y="837" width="1.0489%" height="15" fill="rgb(222,174,48)" fg:x="8770" fg:w="341"/><text x="27.2255%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (341 samples, 1.05%)</title><rect x="26.9755%" y="821" width="1.0489%" height="15" fill="rgb(206,152,40)" fg:x="8770" fg:w="341"/><text x="27.2255%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (333 samples, 1.02%)</title><rect x="27.0001%" y="805" width="1.0243%" height="15" fill="rgb(218,99,54)" fg:x="8778" fg:w="333"/><text x="27.2501%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (333 samples, 1.02%)</title><rect x="27.0001%" y="789" width="1.0243%" height="15" fill="rgb(220,174,26)" fg:x="8778" fg:w="333"/><text x="27.2501%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (329 samples, 1.01%)</title><rect x="27.0124%" y="773" width="1.0120%" height="15" fill="rgb(245,116,9)" fg:x="8782" fg:w="329"/><text x="27.2624%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (326 samples, 1.00%)</title><rect x="27.0216%" y="757" width="1.0027%" height="15" fill="rgb(209,72,35)" fg:x="8785" fg:w="326"/><text x="27.2716%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u8 (118 samples, 0.36%)</title><rect x="27.6614%" y="741" width="0.3630%" height="15" fill="rgb(226,126,21)" fg:x="8993" fg:w="118"/><text x="27.9114%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (116 samples, 0.36%)</title><rect x="27.6676%" y="725" width="0.3568%" height="15" fill="rgb(227,192,1)" fg:x="8995" fg:w="116"/><text x="27.9176%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (77 samples, 0.24%)</title><rect x="27.7875%" y="709" width="0.2368%" height="15" fill="rgb(237,180,29)" fg:x="9034" fg:w="77"/><text x="28.0375%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="28.0613%" y="853" width="0.0400%" height="15" fill="rgb(230,197,35)" fg:x="9123" fg:w="13"/><text x="28.3113%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.06%)</title><rect x="28.3258%" y="837" width="0.0615%" height="15" fill="rgb(246,193,31)" fg:x="9209" fg:w="20"/><text x="28.5758%" y="847.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (6 samples, 0.02%)</title><rect x="28.4611%" y="805" width="0.0185%" height="15" fill="rgb(241,36,4)" fg:x="9253" fg:w="6"/><text x="28.7111%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.10%)</title><rect x="28.3873%" y="837" width="0.0984%" height="15" fill="rgb(241,130,17)" fg:x="9229" fg:w="32"/><text x="28.6373%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.03%)</title><rect x="28.4581%" y="821" width="0.0277%" height="15" fill="rgb(206,137,32)" fg:x="9252" fg:w="9"/><text x="28.7081%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.01%)</title><rect x="28.5073%" y="741" width="0.0123%" height="15" fill="rgb(237,228,51)" fg:x="9268" fg:w="4"/><text x="28.7573%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (10 samples, 0.03%)</title><rect x="28.4919%" y="837" width="0.0308%" height="15" fill="rgb(243,6,42)" fg:x="9263" fg:w="10"/><text x="28.7419%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (9 samples, 0.03%)</title><rect x="28.4950%" y="821" width="0.0277%" height="15" fill="rgb(251,74,28)" fg:x="9264" fg:w="9"/><text x="28.7450%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (9 samples, 0.03%)</title><rect x="28.4950%" y="805" width="0.0277%" height="15" fill="rgb(218,20,49)" fg:x="9264" fg:w="9"/><text x="28.7450%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.02%)</title><rect x="28.5011%" y="789" width="0.0215%" height="15" fill="rgb(238,28,14)" fg:x="9266" fg:w="7"/><text x="28.7511%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="28.5042%" y="773" width="0.0185%" height="15" fill="rgb(229,40,46)" fg:x="9267" fg:w="6"/><text x="28.7542%" y="783.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (6 samples, 0.02%)</title><rect x="28.5042%" y="757" width="0.0185%" height="15" fill="rgb(244,195,20)" fg:x="9267" fg:w="6"/><text x="28.7542%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (15 samples, 0.05%)</title><rect x="28.5227%" y="837" width="0.0461%" height="15" fill="rgb(253,56,35)" fg:x="9273" fg:w="15"/><text x="28.7727%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (15 samples, 0.05%)</title><rect x="28.5227%" y="821" width="0.0461%" height="15" fill="rgb(210,149,44)" fg:x="9273" fg:w="15"/><text x="28.7727%" y="831.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (31 samples, 0.10%)</title><rect x="28.7564%" y="805" width="0.0954%" height="15" fill="rgb(240,135,12)" fg:x="9349" fg:w="31"/><text x="29.0064%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (72 samples, 0.22%)</title><rect x="28.6888%" y="821" width="0.2215%" height="15" fill="rgb(251,24,50)" fg:x="9327" fg:w="72"/><text x="28.9388%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (19 samples, 0.06%)</title><rect x="28.8518%" y="805" width="0.0584%" height="15" fill="rgb(243,200,47)" fg:x="9380" fg:w="19"/><text x="29.1018%" y="815.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (6 samples, 0.02%)</title><rect x="28.8918%" y="789" width="0.0185%" height="15" fill="rgb(224,166,26)" fg:x="9393" fg:w="6"/><text x="29.1418%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (251 samples, 0.77%)</title><rect x="28.5688%" y="837" width="0.7720%" height="15" fill="rgb(233,0,47)" fg:x="9288" fg:w="251"/><text x="28.8188%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (140 samples, 0.43%)</title><rect x="28.9102%" y="821" width="0.4306%" height="15" fill="rgb(253,80,5)" fg:x="9399" fg:w="140"/><text x="29.1602%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (140 samples, 0.43%)</title><rect x="28.9102%" y="805" width="0.4306%" height="15" fill="rgb(214,133,25)" fg:x="9399" fg:w="140"/><text x="29.1602%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (11 samples, 0.03%)</title><rect x="29.3408%" y="837" width="0.0338%" height="15" fill="rgb(209,27,14)" fg:x="9539" fg:w="11"/><text x="29.5908%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (117 samples, 0.36%)</title><rect x="29.3839%" y="837" width="0.3599%" height="15" fill="rgb(219,102,51)" fg:x="9553" fg:w="117"/><text x="29.6339%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (100 samples, 0.31%)</title><rect x="29.4362%" y="821" width="0.3076%" height="15" fill="rgb(237,18,16)" fg:x="9570" fg:w="100"/><text x="29.6862%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="29.7315%" y="805" width="0.0123%" height="15" fill="rgb(241,85,17)" fg:x="9666" fg:w="4"/><text x="29.9815%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (47 samples, 0.14%)</title><rect x="29.9314%" y="821" width="0.1446%" height="15" fill="rgb(236,90,42)" fg:x="9731" fg:w="47"/><text x="30.1814%" y="831.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (14 samples, 0.04%)</title><rect x="30.0329%" y="805" width="0.0431%" height="15" fill="rgb(249,57,21)" fg:x="9764" fg:w="14"/><text x="30.2829%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (7 samples, 0.02%)</title><rect x="30.4420%" y="805" width="0.0215%" height="15" fill="rgb(243,12,36)" fg:x="9897" fg:w="7"/><text x="30.6920%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (135 samples, 0.42%)</title><rect x="30.0760%" y="821" width="0.4152%" height="15" fill="rgb(253,128,47)" fg:x="9778" fg:w="135"/><text x="30.3260%" y="831.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (9 samples, 0.03%)</title><rect x="30.4635%" y="805" width="0.0277%" height="15" fill="rgb(207,33,20)" fg:x="9904" fg:w="9"/><text x="30.7135%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (327 samples, 1.01%)</title><rect x="29.7438%" y="837" width="1.0058%" height="15" fill="rgb(233,215,35)" fg:x="9670" fg:w="327"/><text x="29.9938%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (84 samples, 0.26%)</title><rect x="30.4912%" y="821" width="0.2584%" height="15" fill="rgb(249,188,52)" fg:x="9913" fg:w="84"/><text x="30.7412%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (84 samples, 0.26%)</title><rect x="30.4912%" y="805" width="0.2584%" height="15" fill="rgb(225,12,32)" fg:x="9913" fg:w="84"/><text x="30.7412%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (35 samples, 0.11%)</title><rect x="30.8972%" y="805" width="0.1077%" height="15" fill="rgb(247,98,14)" fg:x="10045" fg:w="35"/><text x="31.1472%" y="815.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (8 samples, 0.02%)</title><rect x="30.9803%" y="789" width="0.0246%" height="15" fill="rgb(247,219,48)" fg:x="10072" fg:w="8"/><text x="31.2303%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (5 samples, 0.02%)</title><rect x="31.3186%" y="789" width="0.0154%" height="15" fill="rgb(253,60,48)" fg:x="10182" fg:w="5"/><text x="31.5686%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (114 samples, 0.35%)</title><rect x="31.0049%" y="805" width="0.3507%" height="15" fill="rgb(245,15,52)" fg:x="10080" fg:w="114"/><text x="31.2549%" y="815.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.02%)</title><rect x="31.3340%" y="789" width="0.0215%" height="15" fill="rgb(220,133,28)" fg:x="10187" fg:w="7"/><text x="31.5840%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,166 samples, 3.59%)</title><rect x="28.0244%" y="869" width="3.5865%" height="15" fill="rgb(217,180,4)" fg:x="9111" fg:w="1166"/><text x="28.2744%" y="879.50">hash..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (1,141 samples, 3.51%)</title><rect x="28.1013%" y="853" width="3.5096%" height="15" fill="rgb(251,24,1)" fg:x="9136" fg:w="1141"/><text x="28.3513%" y="863.50">has..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (280 samples, 0.86%)</title><rect x="30.7496%" y="837" width="0.8612%" height="15" fill="rgb(212,185,49)" fg:x="9997" fg:w="280"/><text x="30.9996%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (278 samples, 0.86%)</title><rect x="30.7557%" y="821" width="0.8551%" height="15" fill="rgb(215,175,22)" fg:x="9999" fg:w="278"/><text x="31.0057%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (83 samples, 0.26%)</title><rect x="31.3555%" y="805" width="0.2553%" height="15" fill="rgb(250,205,14)" fg:x="10194" fg:w="83"/><text x="31.6055%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (80 samples, 0.25%)</title><rect x="31.3648%" y="789" width="0.2461%" height="15" fill="rgb(225,211,22)" fg:x="10197" fg:w="80"/><text x="31.6148%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.02%)</title><rect x="31.5924%" y="773" width="0.0185%" height="15" fill="rgb(251,179,42)" fg:x="10271" fg:w="6"/><text x="31.8424%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (27 samples, 0.08%)</title><rect x="31.6447%" y="837" width="0.0830%" height="15" fill="rgb(208,216,51)" fg:x="10288" fg:w="27"/><text x="31.8947%" y="847.50"></text></g><g><title>core::ptr::write (27 samples, 0.08%)</title><rect x="31.6447%" y="821" width="0.0830%" height="15" fill="rgb(235,36,11)" fg:x="10288" fg:w="27"/><text x="31.8947%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (67 samples, 0.21%)</title><rect x="31.6447%" y="853" width="0.2061%" height="15" fill="rgb(213,189,28)" fg:x="10288" fg:w="67"/><text x="31.8947%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (40 samples, 0.12%)</title><rect x="31.7277%" y="837" width="0.1230%" height="15" fill="rgb(227,203,42)" fg:x="10315" fg:w="40"/><text x="31.9777%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (35 samples, 0.11%)</title><rect x="31.7431%" y="821" width="0.1077%" height="15" fill="rgb(244,72,36)" fg:x="10320" fg:w="35"/><text x="31.9931%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (35 samples, 0.11%)</title><rect x="31.7431%" y="805" width="0.1077%" height="15" fill="rgb(213,53,17)" fg:x="10320" fg:w="35"/><text x="31.9931%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (78 samples, 0.24%)</title><rect x="31.9369%" y="837" width="0.2399%" height="15" fill="rgb(207,167,3)" fg:x="10383" fg:w="78"/><text x="32.1869%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.02%)</title><rect x="32.1553%" y="821" width="0.0215%" height="15" fill="rgb(216,98,30)" fg:x="10454" fg:w="7"/><text x="32.4053%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (112 samples, 0.34%)</title><rect x="31.8508%" y="853" width="0.3445%" height="15" fill="rgb(236,123,15)" fg:x="10355" fg:w="112"/><text x="32.1008%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (6 samples, 0.02%)</title><rect x="32.1768%" y="837" width="0.0185%" height="15" fill="rgb(248,81,50)" fg:x="10461" fg:w="6"/><text x="32.4268%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (5 samples, 0.02%)</title><rect x="32.1953%" y="853" width="0.0154%" height="15" fill="rgb(214,120,4)" fg:x="10467" fg:w="5"/><text x="32.4453%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (13 samples, 0.04%)</title><rect x="32.2229%" y="821" width="0.0400%" height="15" fill="rgb(208,179,34)" fg:x="10476" fg:w="13"/><text x="32.4729%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (5 samples, 0.02%)</title><rect x="32.2475%" y="805" width="0.0154%" height="15" fill="rgb(227,140,7)" fg:x="10484" fg:w="5"/><text x="32.4975%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,604 samples, 8.01%)</title><rect x="24.2626%" y="933" width="8.0096%" height="15" fill="rgb(214,22,6)" fg:x="7888" fg:w="2604"/><text x="24.5126%" y="943.50">core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (2,526 samples, 7.77%)</title><rect x="24.5025%" y="917" width="7.7697%" height="15" fill="rgb(207,137,27)" fg:x="7966" fg:w="2526"/><text x="24.7525%" y="927.50">core::iter:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (2,511 samples, 7.72%)</title><rect x="24.5486%" y="901" width="7.7235%" height="15" fill="rgb(210,8,46)" fg:x="7981" fg:w="2511"/><text x="24.7986%" y="911.50">&lt;hashbrown:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2,495 samples, 7.67%)</title><rect x="24.5978%" y="885" width="7.6743%" height="15" fill="rgb(240,16,54)" fg:x="7997" fg:w="2495"/><text x="24.8478%" y="895.50">hashbrown::..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (215 samples, 0.66%)</title><rect x="31.6108%" y="869" width="0.6613%" height="15" fill="rgb(211,209,29)" fg:x="10277" fg:w="215"/><text x="31.8608%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (20 samples, 0.06%)</title><rect x="32.2106%" y="853" width="0.0615%" height="15" fill="rgb(226,228,24)" fg:x="10472" fg:w="20"/><text x="32.4606%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (16 samples, 0.05%)</title><rect x="32.2229%" y="837" width="0.0492%" height="15" fill="rgb(222,84,9)" fg:x="10476" fg:w="16"/><text x="32.4729%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.15%)</title><rect x="32.4383%" y="837" width="0.1476%" height="15" fill="rgb(234,203,30)" fg:x="10546" fg:w="48"/><text x="32.6883%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.15%)</title><rect x="32.4383%" y="821" width="0.1476%" height="15" fill="rgb(238,109,14)" fg:x="10546" fg:w="48"/><text x="32.6883%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.15%)</title><rect x="32.4383%" y="805" width="0.1476%" height="15" fill="rgb(233,206,34)" fg:x="10546" fg:w="48"/><text x="32.6883%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.14%)</title><rect x="32.4444%" y="789" width="0.1415%" height="15" fill="rgb(220,167,47)" fg:x="10548" fg:w="46"/><text x="32.6944%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.14%)</title><rect x="32.4444%" y="773" width="0.1415%" height="15" fill="rgb(238,105,10)" fg:x="10548" fg:w="46"/><text x="32.6944%" y="783.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.14%)</title><rect x="32.4444%" y="757" width="0.1415%" height="15" fill="rgb(213,227,17)" fg:x="10548" fg:w="46"/><text x="32.6944%" y="767.50"></text></g><g><title>malloc (39 samples, 0.12%)</title><rect x="32.4659%" y="741" width="0.1200%" height="15" fill="rgb(217,132,38)" fg:x="10555" fg:w="39"/><text x="32.7159%" y="751.50"></text></g><g><title>[libc.so.6] (28 samples, 0.09%)</title><rect x="32.4998%" y="725" width="0.0861%" height="15" fill="rgb(242,146,4)" fg:x="10566" fg:w="28"/><text x="32.7498%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,300 samples, 10.15%)</title><rect x="22.8477%" y="981" width="10.1504%" height="15" fill="rgb(212,61,9)" fg:x="7428" fg:w="3300"/><text x="23.0977%" y="991.50">&lt;core::iter::ad..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (3,296 samples, 10.14%)</title><rect x="22.8600%" y="965" width="10.1381%" height="15" fill="rgb(247,126,22)" fg:x="7432" fg:w="3296"/><text x="23.1100%" y="975.50">core::iter::tra..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (2,903 samples, 8.93%)</title><rect x="24.0688%" y="949" width="8.9293%" height="15" fill="rgb(220,196,2)" fg:x="7825" fg:w="2903"/><text x="24.3188%" y="959.50">core::iter::a..</text></g><g><title>core::ops::function::FnMut::call_mut (236 samples, 0.73%)</title><rect x="32.2722%" y="933" width="0.7259%" height="15" fill="rgb(208,46,4)" fg:x="10492" fg:w="236"/><text x="32.5222%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (218 samples, 0.67%)</title><rect x="32.3275%" y="917" width="0.6705%" height="15" fill="rgb(252,104,46)" fg:x="10510" fg:w="218"/><text x="32.5775%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (182 samples, 0.56%)</title><rect x="32.4383%" y="901" width="0.5598%" height="15" fill="rgb(237,152,48)" fg:x="10546" fg:w="182"/><text x="32.6883%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (182 samples, 0.56%)</title><rect x="32.4383%" y="885" width="0.5598%" height="15" fill="rgb(221,59,37)" fg:x="10546" fg:w="182"/><text x="32.6883%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (182 samples, 0.56%)</title><rect x="32.4383%" y="869" width="0.5598%" height="15" fill="rgb(209,202,51)" fg:x="10546" fg:w="182"/><text x="32.6883%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (182 samples, 0.56%)</title><rect x="32.4383%" y="853" width="0.5598%" height="15" fill="rgb(228,81,30)" fg:x="10546" fg:w="182"/><text x="32.6883%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (134 samples, 0.41%)</title><rect x="32.5859%" y="837" width="0.4122%" height="15" fill="rgb(227,42,39)" fg:x="10594" fg:w="134"/><text x="32.8359%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (134 samples, 0.41%)</title><rect x="32.5859%" y="821" width="0.4122%" height="15" fill="rgb(221,26,2)" fg:x="10594" fg:w="134"/><text x="32.8359%" y="831.50"></text></g><g><title>[libc.so.6] (134 samples, 0.41%)</title><rect x="32.5859%" y="805" width="0.4122%" height="15" fill="rgb(254,61,31)" fg:x="10594" fg:w="134"/><text x="32.8359%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,316 samples, 10.20%)</title><rect x="22.8015%" y="1029" width="10.1996%" height="15" fill="rgb(222,173,38)" fg:x="7413" fg:w="3316"/><text x="23.0515%" y="1039.50">core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,310 samples, 10.18%)</title><rect x="22.8200%" y="1013" width="10.1812%" height="15" fill="rgb(218,50,12)" fg:x="7419" fg:w="3310"/><text x="23.0700%" y="1023.50">&lt;core::iter::ad..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,308 samples, 10.18%)</title><rect x="22.8261%" y="997" width="10.1750%" height="15" fill="rgb(223,88,40)" fg:x="7421" fg:w="3308"/><text x="23.0761%" y="1007.50">&lt;core::iter::ad..</text></g><g><title>core::cmp::Ord::max (7 samples, 0.02%)</title><rect x="33.0534%" y="965" width="0.0215%" height="15" fill="rgb(237,54,19)" fg:x="10746" fg:w="7"/><text x="33.3034%" y="975.50"></text></g><g><title>core::cmp::max_by (7 samples, 0.02%)</title><rect x="33.0534%" y="949" width="0.0215%" height="15" fill="rgb(251,129,25)" fg:x="10746" fg:w="7"/><text x="33.3034%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="33.0996%" y="949" width="0.0123%" height="15" fill="rgb(238,97,19)" fg:x="10761" fg:w="4"/><text x="33.3496%" y="959.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.0996%" y="933" width="0.0123%" height="15" fill="rgb(240,169,18)" fg:x="10761" fg:w="4"/><text x="33.3496%" y="943.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.1119%" y="949" width="0.0123%" height="15" fill="rgb(230,187,49)" fg:x="10765" fg:w="4"/><text x="33.3619%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="33.1580%" y="933" width="0.0154%" height="15" fill="rgb(209,44,26)" fg:x="10780" fg:w="5"/><text x="33.4080%" y="943.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.1734%" y="933" width="0.0123%" height="15" fill="rgb(244,0,6)" fg:x="10785" fg:w="4"/><text x="33.4234%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="33.2564%" y="901" width="0.0154%" height="15" fill="rgb(248,18,21)" fg:x="10812" fg:w="5"/><text x="33.5064%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.04%)</title><rect x="33.3118%" y="885" width="0.0400%" height="15" fill="rgb(245,180,19)" fg:x="10830" fg:w="13"/><text x="33.5618%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.01%)</title><rect x="33.3395%" y="869" width="0.0123%" height="15" fill="rgb(252,118,36)" fg:x="10839" fg:w="4"/><text x="33.5895%" y="879.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (32 samples, 0.10%)</title><rect x="33.2718%" y="901" width="0.0984%" height="15" fill="rgb(210,224,19)" fg:x="10817" fg:w="32"/><text x="33.5218%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (6 samples, 0.02%)</title><rect x="33.3518%" y="885" width="0.0185%" height="15" fill="rgb(218,30,24)" fg:x="10843" fg:w="6"/><text x="33.6018%" y="895.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.4871%" y="805" width="0.0123%" height="15" fill="rgb(219,75,50)" fg:x="10887" fg:w="4"/><text x="33.7371%" y="815.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.07%)</title><rect x="33.4379%" y="853" width="0.0738%" height="15" fill="rgb(234,72,50)" fg:x="10871" fg:w="24"/><text x="33.6879%" y="863.50"></text></g><g><title>malloc (24 samples, 0.07%)</title><rect x="33.4379%" y="837" width="0.0738%" height="15" fill="rgb(219,100,48)" fg:x="10871" fg:w="24"/><text x="33.6879%" y="847.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="33.4687%" y="821" width="0.0431%" height="15" fill="rgb(253,5,41)" fg:x="10881" fg:w="14"/><text x="33.7187%" y="831.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="33.4994%" y="805" width="0.0123%" height="15" fill="rgb(247,181,11)" fg:x="10891" fg:w="4"/><text x="33.7494%" y="815.50"></text></g><g><title>[unknown] (4 samples, 0.01%)</title><rect x="33.4994%" y="789" width="0.0123%" height="15" fill="rgb(222,223,25)" fg:x="10891" fg:w="4"/><text x="33.7494%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (99 samples, 0.30%)</title><rect x="33.2257%" y="917" width="0.3045%" height="15" fill="rgb(214,198,28)" fg:x="10802" fg:w="99"/><text x="33.4757%" y="927.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (52 samples, 0.16%)</title><rect x="33.3702%" y="901" width="0.1599%" height="15" fill="rgb(230,46,43)" fg:x="10849" fg:w="52"/><text x="33.6202%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.12%)</title><rect x="33.4072%" y="885" width="0.1230%" height="15" fill="rgb(233,65,53)" fg:x="10861" fg:w="40"/><text x="33.6572%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.12%)</title><rect x="33.4102%" y="869" width="0.1200%" height="15" fill="rgb(221,121,27)" fg:x="10862" fg:w="39"/><text x="33.6602%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (135 samples, 0.42%)</title><rect x="33.1396%" y="949" width="0.4152%" height="15" fill="rgb(247,70,47)" fg:x="10774" fg:w="135"/><text x="33.3896%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (120 samples, 0.37%)</title><rect x="33.1857%" y="933" width="0.3691%" height="15" fill="rgb(228,85,35)" fg:x="10789" fg:w="120"/><text x="33.4357%" y="943.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (8 samples, 0.02%)</title><rect x="33.5302%" y="917" width="0.0246%" height="15" fill="rgb(209,50,18)" fg:x="10901" fg:w="8"/><text x="33.7802%" y="927.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,511 samples, 10.80%)</title><rect x="22.7585%" y="1045" width="10.7994%" height="15" fill="rgb(250,19,35)" fg:x="7399" fg:w="3511"/><text x="23.0085%" y="1055.50">&lt;hashbrown::map:..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (181 samples, 0.56%)</title><rect x="33.0011%" y="1029" width="0.5567%" height="15" fill="rgb(253,107,29)" fg:x="10729" fg:w="181"/><text x="33.2511%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (181 samples, 0.56%)</title><rect x="33.0011%" y="1013" width="0.5567%" height="15" fill="rgb(252,179,29)" fg:x="10729" fg:w="181"/><text x="33.2511%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (172 samples, 0.53%)</title><rect x="33.0288%" y="997" width="0.5291%" height="15" fill="rgb(238,194,6)" fg:x="10738" fg:w="172"/><text x="33.2788%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (170 samples, 0.52%)</title><rect x="33.0350%" y="981" width="0.5229%" height="15" fill="rgb(238,164,29)" fg:x="10740" fg:w="170"/><text x="33.2850%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (155 samples, 0.48%)</title><rect x="33.0811%" y="965" width="0.4768%" height="15" fill="rgb(224,25,9)" fg:x="10755" fg:w="155"/><text x="33.3311%" y="975.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,522 samples, 10.83%)</title><rect x="22.7369%" y="1077" width="10.8333%" height="15" fill="rgb(244,153,23)" fg:x="7392" fg:w="3522"/><text x="22.9869%" y="1087.50">&lt;std::collection..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (3,522 samples, 10.83%)</title><rect x="22.7369%" y="1061" width="10.8333%" height="15" fill="rgb(212,203,14)" fg:x="7392" fg:w="3522"/><text x="22.9869%" y="1071.50">&lt;hashbrown::set:..</text></g><g><title>core::iter::traits::iterator::Iterator::map (4 samples, 0.01%)</title><rect x="33.5579%" y="1045" width="0.0123%" height="15" fill="rgb(220,164,20)" fg:x="10910" fg:w="4"/><text x="33.8079%" y="1055.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (4 samples, 0.01%)</title><rect x="33.5579%" y="1029" width="0.0123%" height="15" fill="rgb(222,203,48)" fg:x="10910" fg:w="4"/><text x="33.8079%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.5579%" y="1013" width="0.0123%" height="15" fill="rgb(215,159,22)" fg:x="10910" fg:w="4"/><text x="33.8079%" y="1023.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.5702%" y="1077" width="0.0123%" height="15" fill="rgb(216,183,47)" fg:x="10914" fg:w="4"/><text x="33.8202%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,572 samples, 10.99%)</title><rect x="22.6293%" y="1109" width="10.9871%" height="15" fill="rgb(229,195,25)" fg:x="7357" fg:w="3572"/><text x="22.8793%" y="1119.50">core::iter::trai..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,571 samples, 10.98%)</title><rect x="22.6323%" y="1093" width="10.9840%" height="15" fill="rgb(224,132,51)" fg:x="7358" fg:w="3571"/><text x="22.8823%" y="1103.50">&lt;std::collection..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (11 samples, 0.03%)</title><rect x="33.5825%" y="1077" width="0.0338%" height="15" fill="rgb(240,63,7)" fg:x="10918" fg:w="11"/><text x="33.8325%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_hasher (9 samples, 0.03%)</title><rect x="33.5886%" y="1061" width="0.0277%" height="15" fill="rgb(249,182,41)" fg:x="10920" fg:w="9"/><text x="33.8386%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (8 samples, 0.02%)</title><rect x="33.5917%" y="1045" width="0.0246%" height="15" fill="rgb(243,47,26)" fg:x="10921" fg:w="8"/><text x="33.8417%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="33.5979%" y="1029" width="0.0185%" height="15" fill="rgb(233,48,2)" fg:x="10923" fg:w="6"/><text x="33.8479%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="33.6194%" y="1093" width="0.0123%" height="15" fill="rgb(244,165,34)" fg:x="10930" fg:w="4"/><text x="33.8694%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.02%)</title><rect x="33.6748%" y="1029" width="0.0215%" height="15" fill="rgb(207,89,7)" fg:x="10948" fg:w="7"/><text x="33.9248%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (30 samples, 0.09%)</title><rect x="33.7086%" y="1013" width="0.0923%" height="15" fill="rgb(244,117,36)" fg:x="10959" fg:w="30"/><text x="33.9586%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (29 samples, 0.09%)</title><rect x="33.7117%" y="997" width="0.0892%" height="15" fill="rgb(226,144,34)" fg:x="10960" fg:w="29"/><text x="33.9617%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (53 samples, 0.16%)</title><rect x="33.6963%" y="1029" width="0.1630%" height="15" fill="rgb(213,23,19)" fg:x="10955" fg:w="53"/><text x="33.9463%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (19 samples, 0.06%)</title><rect x="33.8009%" y="1013" width="0.0584%" height="15" fill="rgb(217,75,12)" fg:x="10989" fg:w="19"/><text x="34.0509%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (14 samples, 0.04%)</title><rect x="33.8162%" y="997" width="0.0431%" height="15" fill="rgb(224,159,17)" fg:x="10994" fg:w="14"/><text x="34.0662%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.04%)</title><rect x="33.8193%" y="981" width="0.0400%" height="15" fill="rgb(217,118,1)" fg:x="10995" fg:w="13"/><text x="34.0693%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (95 samples, 0.29%)</title><rect x="33.6471%" y="1061" width="0.2922%" height="15" fill="rgb(232,180,48)" fg:x="10939" fg:w="95"/><text x="33.8971%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (92 samples, 0.28%)</title><rect x="33.6563%" y="1045" width="0.2830%" height="15" fill="rgb(230,27,33)" fg:x="10942" fg:w="92"/><text x="33.9063%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (26 samples, 0.08%)</title><rect x="33.8593%" y="1029" width="0.0800%" height="15" fill="rgb(205,31,21)" fg:x="11008" fg:w="26"/><text x="34.1093%" y="1039.50"></text></g><g><title>aes_grinder::algo::Algo::get_all_variables (3,683 samples, 11.33%)</title><rect x="22.6139%" y="1125" width="11.3285%" height="15" fill="rgb(253,59,4)" fg:x="7352" fg:w="3683"/><text x="22.8639%" y="1135.50">aes_grinder::algo..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (106 samples, 0.33%)</title><rect x="33.6163%" y="1109" width="0.3260%" height="15" fill="rgb(224,201,9)" fg:x="10929" fg:w="106"/><text x="33.8663%" y="1119.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (101 samples, 0.31%)</title><rect x="33.6317%" y="1093" width="0.3107%" height="15" fill="rgb(229,206,30)" fg:x="10934" fg:w="101"/><text x="33.8817%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (98 samples, 0.30%)</title><rect x="33.6409%" y="1077" width="0.3014%" height="15" fill="rgb(212,67,47)" fg:x="10937" fg:w="98"/><text x="33.8909%" y="1087.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.01%)</title><rect x="34.0408%" y="1029" width="0.0123%" height="15" fill="rgb(211,96,50)" fg:x="11067" fg:w="4"/><text x="34.2908%" y="1039.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="34.0408%" y="1013" width="0.0123%" height="15" fill="rgb(252,114,18)" fg:x="11067" fg:w="4"/><text x="34.2908%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.07%)</title><rect x="34.4345%" y="981" width="0.0707%" height="15" fill="rgb(223,58,37)" fg:x="11195" fg:w="23"/><text x="34.6845%" y="991.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (32 samples, 0.10%)</title><rect x="34.5760%" y="965" width="0.0984%" height="15" fill="rgb(237,70,4)" fg:x="11241" fg:w="32"/><text x="34.8260%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.45%)</title><rect x="34.2869%" y="997" width="0.4522%" height="15" fill="rgb(244,85,46)" fg:x="11147" fg:w="147"/><text x="34.5369%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (76 samples, 0.23%)</title><rect x="34.5052%" y="981" width="0.2338%" height="15" fill="rgb(223,39,52)" fg:x="11218" fg:w="76"/><text x="34.7552%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (21 samples, 0.06%)</title><rect x="34.6744%" y="965" width="0.0646%" height="15" fill="rgb(218,200,14)" fg:x="11273" fg:w="21"/><text x="34.9244%" y="975.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (4 samples, 0.01%)</title><rect x="34.7267%" y="949" width="0.0123%" height="15" fill="rgb(208,171,16)" fg:x="11290" fg:w="4"/><text x="34.9767%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (25 samples, 0.08%)</title><rect x="34.8805%" y="981" width="0.0769%" height="15" fill="rgb(234,200,18)" fg:x="11340" fg:w="25"/><text x="35.1305%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="34.9389%" y="965" width="0.0185%" height="15" fill="rgb(228,45,11)" fg:x="11359" fg:w="6"/><text x="35.1889%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (69 samples, 0.21%)</title><rect x="34.7482%" y="997" width="0.2122%" height="15" fill="rgb(237,182,11)" fg:x="11297" fg:w="69"/><text x="34.9982%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (299 samples, 0.92%)</title><rect x="34.0531%" y="1029" width="0.9197%" height="15" fill="rgb(241,175,49)" fg:x="11071" fg:w="299"/><text x="34.3031%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (264 samples, 0.81%)</title><rect x="34.1607%" y="1013" width="0.8120%" height="15" fill="rgb(247,38,35)" fg:x="11106" fg:w="264"/><text x="34.4107%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (4 samples, 0.01%)</title><rect x="34.9605%" y="997" width="0.0123%" height="15" fill="rgb(228,39,49)" fg:x="11366" fg:w="4"/><text x="35.2105%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="35.0989%" y="949" width="0.0584%" height="15" fill="rgb(226,101,26)" fg:x="11411" fg:w="19"/><text x="35.3489%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (16 samples, 0.05%)</title><rect x="35.1081%" y="933" width="0.0492%" height="15" fill="rgb(206,141,19)" fg:x="11414" fg:w="16"/><text x="35.3581%" y="943.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.05%)</title><rect x="35.1081%" y="917" width="0.0492%" height="15" fill="rgb(211,200,13)" fg:x="11414" fg:w="16"/><text x="35.3581%" y="927.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="35.2957%" y="885" width="0.0123%" height="15" fill="rgb(241,121,6)" fg:x="11475" fg:w="4"/><text x="35.5457%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (78 samples, 0.24%)</title><rect x="35.2527%" y="917" width="0.2399%" height="15" fill="rgb(234,221,29)" fg:x="11461" fg:w="78"/><text x="35.5027%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 0.20%)</title><rect x="35.2927%" y="901" width="0.1999%" height="15" fill="rgb(229,136,5)" fg:x="11474" fg:w="65"/><text x="35.5427%" y="911.50"></text></g><g><title>cfree (60 samples, 0.18%)</title><rect x="35.3080%" y="885" width="0.1846%" height="15" fill="rgb(238,36,11)" fg:x="11479" fg:w="60"/><text x="35.5580%" y="895.50"></text></g><g><title>[libc.so.6] (50 samples, 0.15%)</title><rect x="35.3388%" y="869" width="0.1538%" height="15" fill="rgb(251,55,41)" fg:x="11489" fg:w="50"/><text x="35.5888%" y="879.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.04%)</title><rect x="35.5910%" y="901" width="0.0369%" height="15" fill="rgb(242,34,40)" fg:x="11571" fg:w="12"/><text x="35.8410%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (12 samples, 0.04%)</title><rect x="35.5910%" y="885" width="0.0369%" height="15" fill="rgb(215,42,17)" fg:x="11571" fg:w="12"/><text x="35.8410%" y="895.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (11 samples, 0.03%)</title><rect x="35.5941%" y="869" width="0.0338%" height="15" fill="rgb(207,44,46)" fg:x="11572" fg:w="11"/><text x="35.8441%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (11 samples, 0.03%)</title><rect x="35.5941%" y="853" width="0.0338%" height="15" fill="rgb(211,206,28)" fg:x="11572" fg:w="11"/><text x="35.8441%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (219 samples, 0.67%)</title><rect x="34.9851%" y="1013" width="0.6736%" height="15" fill="rgb(237,167,16)" fg:x="11374" fg:w="219"/><text x="35.2351%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (203 samples, 0.62%)</title><rect x="35.0343%" y="997" width="0.6244%" height="15" fill="rgb(233,66,6)" fg:x="11390" fg:w="203"/><text x="35.2843%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (198 samples, 0.61%)</title><rect x="35.0497%" y="981" width="0.6090%" height="15" fill="rgb(246,123,29)" fg:x="11395" fg:w="198"/><text x="35.2997%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (190 samples, 0.58%)</title><rect x="35.0743%" y="965" width="0.5844%" height="15" fill="rgb(209,62,40)" fg:x="11403" fg:w="190"/><text x="35.3243%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (163 samples, 0.50%)</title><rect x="35.1573%" y="949" width="0.5014%" height="15" fill="rgb(218,4,25)" fg:x="11430" fg:w="163"/><text x="35.4073%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (148 samples, 0.46%)</title><rect x="35.2035%" y="933" width="0.4552%" height="15" fill="rgb(253,91,49)" fg:x="11445" fg:w="148"/><text x="35.4535%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (54 samples, 0.17%)</title><rect x="35.4926%" y="917" width="0.1661%" height="15" fill="rgb(228,155,29)" fg:x="11539" fg:w="54"/><text x="35.7426%" y="927.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (6 samples, 0.02%)</title><rect x="35.6402%" y="901" width="0.0185%" height="15" fill="rgb(243,57,37)" fg:x="11587" fg:w="6"/><text x="35.8902%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="35.6402%" y="885" width="0.0185%" height="15" fill="rgb(244,167,17)" fg:x="11587" fg:w="6"/><text x="35.8902%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (239 samples, 0.74%)</title><rect x="34.9820%" y="1029" width="0.7351%" height="15" fill="rgb(207,181,38)" fg:x="11373" fg:w="239"/><text x="35.2320%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (19 samples, 0.06%)</title><rect x="35.6587%" y="1013" width="0.0584%" height="15" fill="rgb(211,8,23)" fg:x="11593" fg:w="19"/><text x="35.9087%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.04%)</title><rect x="35.6802%" y="997" width="0.0369%" height="15" fill="rgb(235,11,44)" fg:x="11600" fg:w="12"/><text x="35.9302%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.03%)</title><rect x="35.6864%" y="981" width="0.0308%" height="15" fill="rgb(248,18,52)" fg:x="11602" fg:w="10"/><text x="35.9364%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.02%)</title><rect x="35.7387%" y="1013" width="0.0185%" height="15" fill="rgb(208,4,7)" fg:x="11619" fg:w="6"/><text x="35.9887%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (599 samples, 1.84%)</title><rect x="33.9700%" y="1045" width="1.8425%" height="15" fill="rgb(240,17,39)" fg:x="11044" fg:w="599"/><text x="34.2200%" y="1055.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (31 samples, 0.10%)</title><rect x="35.7171%" y="1029" width="0.0954%" height="15" fill="rgb(207,170,3)" fg:x="11612" fg:w="31"/><text x="35.9671%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.06%)</title><rect x="35.7571%" y="1013" width="0.0554%" height="15" fill="rgb(236,100,52)" fg:x="11625" fg:w="18"/><text x="36.0071%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (14 samples, 0.04%)</title><rect x="35.7694%" y="997" width="0.0431%" height="15" fill="rgb(246,78,51)" fg:x="11629" fg:w="14"/><text x="36.0194%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.04%)</title><rect x="35.7725%" y="981" width="0.0400%" height="15" fill="rgb(211,17,15)" fg:x="11630" fg:w="13"/><text x="36.0225%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.03%)</title><rect x="35.7787%" y="965" width="0.0338%" height="15" fill="rgb(209,59,46)" fg:x="11632" fg:w="11"/><text x="36.0287%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="35.8217%" y="1013" width="0.0123%" height="15" fill="rgb(210,92,25)" fg:x="11646" fg:w="4"/><text x="36.0717%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="35.8863%" y="981" width="0.0154%" height="15" fill="rgb(238,174,52)" fg:x="11667" fg:w="5"/><text x="36.1363%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (5 samples, 0.02%)</title><rect x="35.9017%" y="981" width="0.0154%" height="15" fill="rgb(230,73,7)" fg:x="11672" fg:w="5"/><text x="36.1517%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (645 samples, 1.98%)</title><rect x="33.9424%" y="1125" width="1.9839%" height="15" fill="rgb(243,124,40)" fg:x="11035" fg:w="645"/><text x="34.1924%" y="1135.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (644 samples, 1.98%)</title><rect x="33.9454%" y="1109" width="1.9809%" height="15" fill="rgb(244,170,11)" fg:x="11036" fg:w="644"/><text x="34.1954%" y="1119.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (640 samples, 1.97%)</title><rect x="33.9577%" y="1093" width="1.9686%" height="15" fill="rgb(207,114,54)" fg:x="11040" fg:w="640"/><text x="34.2077%" y="1103.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (639 samples, 1.97%)</title><rect x="33.9608%" y="1077" width="1.9655%" height="15" fill="rgb(205,42,20)" fg:x="11041" fg:w="639"/><text x="34.2108%" y="1087.50">c..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (639 samples, 1.97%)</title><rect x="33.9608%" y="1061" width="1.9655%" height="15" fill="rgb(230,30,28)" fg:x="11041" fg:w="639"/><text x="34.2108%" y="1071.50">&lt;..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (37 samples, 0.11%)</title><rect x="35.8125%" y="1045" width="0.1138%" height="15" fill="rgb(205,73,54)" fg:x="11643" fg:w="37"/><text x="36.0625%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (37 samples, 0.11%)</title><rect x="35.8125%" y="1029" width="0.1138%" height="15" fill="rgb(254,227,23)" fg:x="11643" fg:w="37"/><text x="36.0625%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::allocation_info (30 samples, 0.09%)</title><rect x="35.8340%" y="1013" width="0.0923%" height="15" fill="rgb(228,202,34)" fg:x="11650" fg:w="30"/><text x="36.0840%" y="1023.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (25 samples, 0.08%)</title><rect x="35.8494%" y="997" width="0.0769%" height="15" fill="rgb(222,225,37)" fg:x="11655" fg:w="25"/><text x="36.0994%" y="1007.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="35.9263%" y="1093" width="0.0123%" height="15" fill="rgb(221,14,54)" fg:x="11680" fg:w="4"/><text x="36.1763%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="36.0309%" y="981" width="0.0215%" height="15" fill="rgb(254,102,2)" fg:x="11714" fg:w="7"/><text x="36.2809%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.06%)</title><rect x="36.0032%" y="1013" width="0.0615%" height="15" fill="rgb(232,104,17)" fg:x="11705" fg:w="20"/><text x="36.2532%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (17 samples, 0.05%)</title><rect x="36.0124%" y="997" width="0.0523%" height="15" fill="rgb(250,220,14)" fg:x="11708" fg:w="17"/><text x="36.2624%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (4 samples, 0.01%)</title><rect x="36.0524%" y="981" width="0.0123%" height="15" fill="rgb(241,158,9)" fg:x="11721" fg:w="4"/><text x="36.3024%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="35.9817%" y="1077" width="0.0892%" height="15" fill="rgb(246,9,43)" fg:x="11698" fg:w="29"/><text x="36.2317%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="35.9817%" y="1061" width="0.0892%" height="15" fill="rgb(206,73,33)" fg:x="11698" fg:w="29"/><text x="36.2317%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.09%)</title><rect x="35.9817%" y="1045" width="0.0892%" height="15" fill="rgb(222,79,8)" fg:x="11698" fg:w="29"/><text x="36.2317%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.08%)</title><rect x="35.9878%" y="1029" width="0.0830%" height="15" fill="rgb(234,8,54)" fg:x="11700" fg:w="27"/><text x="36.2378%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="36.1139%" y="901" width="0.0185%" height="15" fill="rgb(209,134,38)" fg:x="11741" fg:w="6"/><text x="36.3639%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (55 samples, 0.17%)</title><rect x="36.0924%" y="949" width="0.1692%" height="15" fill="rgb(230,127,29)" fg:x="11734" fg:w="55"/><text x="36.3424%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (55 samples, 0.17%)</title><rect x="36.0924%" y="933" width="0.1692%" height="15" fill="rgb(242,44,41)" fg:x="11734" fg:w="55"/><text x="36.3424%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (55 samples, 0.17%)</title><rect x="36.0924%" y="917" width="0.1692%" height="15" fill="rgb(222,56,43)" fg:x="11734" fg:w="55"/><text x="36.3424%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (42 samples, 0.13%)</title><rect x="36.1324%" y="901" width="0.1292%" height="15" fill="rgb(238,39,47)" fg:x="11747" fg:w="42"/><text x="36.3824%" y="911.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="36.2646%" y="933" width="0.0185%" height="15" fill="rgb(226,79,43)" fg:x="11790" fg:w="6"/><text x="36.5146%" y="943.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="36.2831%" y="917" width="0.0246%" height="15" fill="rgb(242,105,53)" fg:x="11796" fg:w="8"/><text x="36.5331%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (23 samples, 0.07%)</title><rect x="36.2616%" y="949" width="0.0707%" height="15" fill="rgb(251,132,46)" fg:x="11789" fg:w="23"/><text x="36.5116%" y="959.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (16 samples, 0.05%)</title><rect x="36.2831%" y="933" width="0.0492%" height="15" fill="rgb(231,77,14)" fg:x="11796" fg:w="16"/><text x="36.5331%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (8 samples, 0.02%)</title><rect x="36.3077%" y="917" width="0.0246%" height="15" fill="rgb(240,135,9)" fg:x="11804" fg:w="8"/><text x="36.5577%" y="927.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="36.3108%" y="901" width="0.0215%" height="15" fill="rgb(248,109,14)" fg:x="11805" fg:w="7"/><text x="36.5608%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (16 samples, 0.05%)</title><rect x="36.3723%" y="837" width="0.0492%" height="15" fill="rgb(227,146,52)" fg:x="11825" fg:w="16"/><text x="36.6223%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="36.3415%" y="853" width="0.0892%" height="15" fill="rgb(232,54,3)" fg:x="11815" fg:w="29"/><text x="36.5915%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (119 samples, 0.37%)</title><rect x="36.0893%" y="981" width="0.3660%" height="15" fill="rgb(229,201,43)" fg:x="11733" fg:w="119"/><text x="36.3393%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (119 samples, 0.37%)</title><rect x="36.0893%" y="965" width="0.3660%" height="15" fill="rgb(252,161,33)" fg:x="11733" fg:w="119"/><text x="36.3393%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (40 samples, 0.12%)</title><rect x="36.3323%" y="949" width="0.1230%" height="15" fill="rgb(226,146,40)" fg:x="11812" fg:w="40"/><text x="36.5823%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (39 samples, 0.12%)</title><rect x="36.3354%" y="933" width="0.1200%" height="15" fill="rgb(219,47,25)" fg:x="11813" fg:w="39"/><text x="36.5854%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (38 samples, 0.12%)</title><rect x="36.3385%" y="917" width="0.1169%" height="15" fill="rgb(250,135,13)" fg:x="11814" fg:w="38"/><text x="36.5885%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (38 samples, 0.12%)</title><rect x="36.3385%" y="901" width="0.1169%" height="15" fill="rgb(219,229,18)" fg:x="11814" fg:w="38"/><text x="36.5885%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (37 samples, 0.11%)</title><rect x="36.3415%" y="885" width="0.1138%" height="15" fill="rgb(217,152,27)" fg:x="11815" fg:w="37"/><text x="36.5915%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (37 samples, 0.11%)</title><rect x="36.3415%" y="869" width="0.1138%" height="15" fill="rgb(225,71,47)" fg:x="11815" fg:w="37"/><text x="36.5915%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u8 (8 samples, 0.02%)</title><rect x="36.4307%" y="853" width="0.0246%" height="15" fill="rgb(220,139,14)" fg:x="11844" fg:w="8"/><text x="36.6807%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="36.4307%" y="837" width="0.0246%" height="15" fill="rgb(247,54,32)" fg:x="11844" fg:w="8"/><text x="36.6807%" y="847.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="36.4431%" y="821" width="0.0123%" height="15" fill="rgb(252,131,39)" fg:x="11848" fg:w="4"/><text x="36.6931%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.02%)</title><rect x="36.4892%" y="949" width="0.0154%" height="15" fill="rgb(210,108,39)" fg:x="11863" fg:w="5"/><text x="36.7392%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="36.4892%" y="933" width="0.0154%" height="15" fill="rgb(205,23,29)" fg:x="11863" fg:w="5"/><text x="36.7392%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="36.5476%" y="933" width="0.0215%" height="15" fill="rgb(246,139,46)" fg:x="11882" fg:w="7"/><text x="36.7976%" y="943.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="36.5938%" y="901" width="0.0123%" height="15" fill="rgb(250,81,26)" fg:x="11897" fg:w="4"/><text x="36.8438%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.05%)</title><rect x="36.5692%" y="933" width="0.0492%" height="15" fill="rgb(214,104,7)" fg:x="11889" fg:w="16"/><text x="36.8192%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.04%)</title><rect x="36.5815%" y="917" width="0.0369%" height="15" fill="rgb(233,189,8)" fg:x="11893" fg:w="12"/><text x="36.8315%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (4 samples, 0.01%)</title><rect x="36.6061%" y="901" width="0.0123%" height="15" fill="rgb(228,141,17)" fg:x="11901" fg:w="4"/><text x="36.8561%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="36.6399%" y="837" width="0.0215%" height="15" fill="rgb(247,157,1)" fg:x="11912" fg:w="7"/><text x="36.8899%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (25 samples, 0.08%)</title><rect x="36.6307%" y="917" width="0.0769%" height="15" fill="rgb(249,225,5)" fg:x="11909" fg:w="25"/><text x="36.8807%" y="927.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (25 samples, 0.08%)</title><rect x="36.6307%" y="901" width="0.0769%" height="15" fill="rgb(242,55,13)" fg:x="11909" fg:w="25"/><text x="36.8807%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (23 samples, 0.07%)</title><rect x="36.6368%" y="885" width="0.0707%" height="15" fill="rgb(230,49,50)" fg:x="11911" fg:w="23"/><text x="36.8868%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (22 samples, 0.07%)</title><rect x="36.6399%" y="869" width="0.0677%" height="15" fill="rgb(241,111,38)" fg:x="11912" fg:w="22"/><text x="36.8899%" y="879.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (22 samples, 0.07%)</title><rect x="36.6399%" y="853" width="0.0677%" height="15" fill="rgb(252,155,4)" fg:x="11912" fg:w="22"/><text x="36.8899%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (15 samples, 0.05%)</title><rect x="36.6614%" y="837" width="0.0461%" height="15" fill="rgb(212,69,32)" fg:x="11919" fg:w="15"/><text x="36.9114%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (15 samples, 0.05%)</title><rect x="36.6614%" y="821" width="0.0461%" height="15" fill="rgb(243,107,47)" fg:x="11919" fg:w="15"/><text x="36.9114%" y="831.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="36.6922%" y="805" width="0.0154%" height="15" fill="rgb(247,130,12)" fg:x="11929" fg:w="5"/><text x="36.9422%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (37 samples, 0.11%)</title><rect x="36.6184%" y="933" width="0.1138%" height="15" fill="rgb(233,74,16)" fg:x="11905" fg:w="37"/><text x="36.8684%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.02%)</title><rect x="36.7168%" y="917" width="0.0154%" height="15" fill="rgb(208,58,18)" fg:x="11937" fg:w="5"/><text x="36.9668%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="36.7168%" y="901" width="0.0154%" height="15" fill="rgb(242,225,1)" fg:x="11937" fg:w="5"/><text x="36.9668%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.03%)</title><rect x="36.7322%" y="933" width="0.0308%" height="15" fill="rgb(249,39,40)" fg:x="11942" fg:w="10"/><text x="36.9822%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.03%)</title><rect x="36.7353%" y="917" width="0.0277%" height="15" fill="rgb(207,72,44)" fg:x="11943" fg:w="9"/><text x="36.9853%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (5 samples, 0.02%)</title><rect x="36.7783%" y="917" width="0.0154%" height="15" fill="rgb(215,193,12)" fg:x="11957" fg:w="5"/><text x="37.0283%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.04%)</title><rect x="36.7937%" y="917" width="0.0431%" height="15" fill="rgb(248,41,39)" fg:x="11962" fg:w="14"/><text x="37.0437%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (28 samples, 0.09%)</title><rect x="36.7629%" y="933" width="0.0861%" height="15" fill="rgb(253,85,4)" fg:x="11952" fg:w="28"/><text x="37.0129%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.01%)</title><rect x="36.8368%" y="917" width="0.0123%" height="15" fill="rgb(243,70,31)" fg:x="11976" fg:w="4"/><text x="37.0868%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.01%)</title><rect x="36.8368%" y="901" width="0.0123%" height="15" fill="rgb(253,195,26)" fg:x="11976" fg:w="4"/><text x="37.0868%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (304 samples, 0.94%)</title><rect x="35.9263%" y="1109" width="0.9351%" height="15" fill="rgb(243,42,11)" fg:x="11680" fg:w="304"/><text x="36.1763%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (300 samples, 0.92%)</title><rect x="35.9386%" y="1093" width="0.9228%" height="15" fill="rgb(239,66,17)" fg:x="11684" fg:w="300"/><text x="36.1886%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (257 samples, 0.79%)</title><rect x="36.0709%" y="1077" width="0.7905%" height="15" fill="rgb(217,132,21)" fg:x="11727" fg:w="257"/><text x="36.3209%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset::_{{closure}} (255 samples, 0.78%)</title><rect x="36.0770%" y="1061" width="0.7843%" height="15" fill="rgb(252,202,21)" fg:x="11729" fg:w="255"/><text x="36.3270%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (255 samples, 0.78%)</title><rect x="36.0770%" y="1045" width="0.7843%" height="15" fill="rgb(233,98,36)" fg:x="11729" fg:w="255"/><text x="36.3270%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (255 samples, 0.78%)</title><rect x="36.0770%" y="1029" width="0.7843%" height="15" fill="rgb(216,153,54)" fg:x="11729" fg:w="255"/><text x="36.3270%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (255 samples, 0.78%)</title><rect x="36.0770%" y="1013" width="0.7843%" height="15" fill="rgb(250,99,7)" fg:x="11729" fg:w="255"/><text x="36.3270%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (252 samples, 0.78%)</title><rect x="36.0862%" y="997" width="0.7751%" height="15" fill="rgb(207,56,50)" fg:x="11732" fg:w="252"/><text x="36.3362%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (132 samples, 0.41%)</title><rect x="36.4554%" y="981" width="0.4060%" height="15" fill="rgb(244,61,34)" fg:x="11852" fg:w="132"/><text x="36.7054%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (129 samples, 0.40%)</title><rect x="36.4646%" y="965" width="0.3968%" height="15" fill="rgb(241,50,38)" fg:x="11855" fg:w="129"/><text x="36.7146%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (116 samples, 0.36%)</title><rect x="36.5046%" y="949" width="0.3568%" height="15" fill="rgb(212,166,30)" fg:x="11868" fg:w="116"/><text x="36.7546%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (4 samples, 0.01%)</title><rect x="36.8491%" y="933" width="0.0123%" height="15" fill="rgb(249,127,32)" fg:x="11980" fg:w="4"/><text x="37.0991%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="36.8491%" y="917" width="0.0123%" height="15" fill="rgb(209,103,0)" fg:x="11980" fg:w="4"/><text x="37.0991%" y="927.50"></text></g><g><title>aes_grinder::exhaustive_search::add_new_pairs_no_doublon::_{{closure}} (10,969 samples, 33.74%)</title><rect x="3.1466%" y="1141" width="33.7393%" height="15" fill="rgb(238,209,51)" fg:x="1023" fg:w="10969"/><text x="3.3966%" y="1151.50">aes_grinder::exhaustive_search::add_new_pairs_no_doublo..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset (312 samples, 0.96%)</title><rect x="35.9263%" y="1125" width="0.9597%" height="15" fill="rgb(237,56,23)" fg:x="11680" fg:w="312"/><text x="36.1763%" y="1135.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (8 samples, 0.02%)</title><rect x="36.8614%" y="1109" width="0.0246%" height="15" fill="rgb(215,153,46)" fg:x="11984" fg:w="8"/><text x="37.1114%" y="1119.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (8 samples, 0.02%)</title><rect x="36.8614%" y="1093" width="0.0246%" height="15" fill="rgb(224,49,31)" fg:x="11984" fg:w="8"/><text x="37.1114%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (7 samples, 0.02%)</title><rect x="36.8644%" y="1077" width="0.0215%" height="15" fill="rgb(250,18,42)" fg:x="11985" fg:w="7"/><text x="37.1144%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (6 samples, 0.02%)</title><rect x="36.8675%" y="1061" width="0.0185%" height="15" fill="rgb(215,176,39)" fg:x="11986" fg:w="6"/><text x="37.1175%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (5 samples, 0.02%)</title><rect x="36.8706%" y="1045" width="0.0154%" height="15" fill="rgb(223,77,29)" fg:x="11987" fg:w="5"/><text x="37.1206%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="36.9321%" y="981" width="0.0215%" height="15" fill="rgb(234,94,52)" fg:x="12007" fg:w="7"/><text x="37.1821%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="36.9321%" y="965" width="0.0215%" height="15" fill="rgb(220,154,50)" fg:x="12007" fg:w="7"/><text x="37.1821%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.02%)</title><rect x="36.9321%" y="949" width="0.0215%" height="15" fill="rgb(212,11,10)" fg:x="12007" fg:w="7"/><text x="37.1821%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.02%)</title><rect x="36.9352%" y="933" width="0.0185%" height="15" fill="rgb(205,166,19)" fg:x="12008" fg:w="6"/><text x="37.1852%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (9 samples, 0.03%)</title><rect x="36.9536%" y="981" width="0.0277%" height="15" fill="rgb(244,198,16)" fg:x="12014" fg:w="9"/><text x="37.2036%" y="991.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="36.9659%" y="965" width="0.0154%" height="15" fill="rgb(219,69,12)" fg:x="12018" fg:w="5"/><text x="37.2159%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="37.4981%" y="277" width="0.0123%" height="15" fill="rgb(245,30,7)" fg:x="12191" fg:w="4"/><text x="37.7481%" y="287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (12 samples, 0.04%)</title><rect x="37.4765%" y="389" width="0.0369%" height="15" fill="rgb(218,221,48)" fg:x="12184" fg:w="12"/><text x="37.7265%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (9 samples, 0.03%)</title><rect x="37.4858%" y="373" width="0.0277%" height="15" fill="rgb(216,66,15)" fg:x="12187" fg:w="9"/><text x="37.7358%" y="383.50"></text></g><g><title>core::hash::Hasher::write_isize (9 samples, 0.03%)</title><rect x="37.4858%" y="357" width="0.0277%" height="15" fill="rgb(226,122,50)" fg:x="12187" fg:w="9"/><text x="37.7358%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.02%)</title><rect x="37.4888%" y="341" width="0.0246%" height="15" fill="rgb(239,156,16)" fg:x="12188" fg:w="8"/><text x="37.7388%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="37.4919%" y="325" width="0.0215%" height="15" fill="rgb(224,27,38)" fg:x="12189" fg:w="7"/><text x="37.7419%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="37.4950%" y="309" width="0.0185%" height="15" fill="rgb(224,39,27)" fg:x="12190" fg:w="6"/><text x="37.7450%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="37.4950%" y="293" width="0.0185%" height="15" fill="rgb(215,92,29)" fg:x="12190" fg:w="6"/><text x="37.7450%" y="303.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (19 samples, 0.06%)</title><rect x="37.4765%" y="421" width="0.0584%" height="15" fill="rgb(207,159,16)" fg:x="12184" fg:w="19"/><text x="37.7265%" y="431.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (19 samples, 0.06%)</title><rect x="37.4765%" y="405" width="0.0584%" height="15" fill="rgb(238,163,47)" fg:x="12184" fg:w="19"/><text x="37.7265%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.01%)</title><rect x="37.5227%" y="389" width="0.0123%" height="15" fill="rgb(219,91,49)" fg:x="12199" fg:w="4"/><text x="37.7727%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.01%)</title><rect x="37.5227%" y="373" width="0.0123%" height="15" fill="rgb(227,167,31)" fg:x="12199" fg:w="4"/><text x="37.7727%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="37.5227%" y="357" width="0.0123%" height="15" fill="rgb(234,80,54)" fg:x="12199" fg:w="4"/><text x="37.7727%" y="367.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="37.5565%" y="325" width="0.0123%" height="15" fill="rgb(212,114,2)" fg:x="12210" fg:w="4"/><text x="37.8065%" y="335.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="37.5565%" y="309" width="0.0123%" height="15" fill="rgb(234,50,24)" fg:x="12210" fg:w="4"/><text x="37.8065%" y="319.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="37.5565%" y="293" width="0.0123%" height="15" fill="rgb(221,68,8)" fg:x="12210" fg:w="4"/><text x="37.8065%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (32 samples, 0.10%)</title><rect x="37.4765%" y="437" width="0.0984%" height="15" fill="rgb(254,180,31)" fg:x="12184" fg:w="32"/><text x="37.7265%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (13 samples, 0.04%)</title><rect x="37.5350%" y="421" width="0.0400%" height="15" fill="rgb(247,130,50)" fg:x="12203" fg:w="13"/><text x="37.7850%" y="431.50"></text></g><g><title>core::hash::Hasher::write_isize (13 samples, 0.04%)</title><rect x="37.5350%" y="405" width="0.0400%" height="15" fill="rgb(211,109,4)" fg:x="12203" fg:w="13"/><text x="37.7850%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (13 samples, 0.04%)</title><rect x="37.5350%" y="389" width="0.0400%" height="15" fill="rgb(238,50,21)" fg:x="12203" fg:w="13"/><text x="37.7850%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="37.5350%" y="373" width="0.0400%" height="15" fill="rgb(225,57,45)" fg:x="12203" fg:w="13"/><text x="37.7850%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="37.5381%" y="357" width="0.0369%" height="15" fill="rgb(209,196,50)" fg:x="12204" fg:w="12"/><text x="37.7881%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="37.5411%" y="341" width="0.0338%" height="15" fill="rgb(242,140,13)" fg:x="12205" fg:w="11"/><text x="37.7911%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 0.02%)</title><rect x="37.5750%" y="437" width="0.0246%" height="15" fill="rgb(217,111,7)" fg:x="12216" fg:w="8"/><text x="37.8250%" y="447.50"></text></g><g><title>core::hash::Hasher::write_u32 (8 samples, 0.02%)</title><rect x="37.5750%" y="421" width="0.0246%" height="15" fill="rgb(253,193,51)" fg:x="12216" fg:w="8"/><text x="37.8250%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="37.5781%" y="405" width="0.0215%" height="15" fill="rgb(252,70,29)" fg:x="12217" fg:w="7"/><text x="37.8281%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="37.5781%" y="389" width="0.0215%" height="15" fill="rgb(232,127,12)" fg:x="12217" fg:w="7"/><text x="37.8281%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="37.5781%" y="373" width="0.0215%" height="15" fill="rgb(211,180,21)" fg:x="12217" fg:w="7"/><text x="37.8281%" y="383.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="37.5873%" y="357" width="0.0123%" height="15" fill="rgb(229,72,13)" fg:x="12220" fg:w="4"/><text x="37.8373%" y="367.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="37.5873%" y="341" width="0.0123%" height="15" fill="rgb(240,211,49)" fg:x="12220" fg:w="4"/><text x="37.8373%" y="351.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="37.5873%" y="325" width="0.0123%" height="15" fill="rgb(219,149,40)" fg:x="12220" fg:w="4"/><text x="37.8373%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="37.6150%" y="357" width="0.0308%" height="15" fill="rgb(210,127,46)" fg:x="12229" fg:w="10"/><text x="37.8650%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (56 samples, 0.17%)</title><rect x="37.4765%" y="469" width="0.1722%" height="15" fill="rgb(220,106,7)" fg:x="12184" fg:w="56"/><text x="37.7265%" y="479.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (56 samples, 0.17%)</title><rect x="37.4765%" y="453" width="0.1722%" height="15" fill="rgb(249,31,22)" fg:x="12184" fg:w="56"/><text x="37.7265%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (16 samples, 0.05%)</title><rect x="37.5996%" y="437" width="0.0492%" height="15" fill="rgb(253,1,49)" fg:x="12224" fg:w="16"/><text x="37.8496%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (16 samples, 0.05%)</title><rect x="37.5996%" y="421" width="0.0492%" height="15" fill="rgb(227,144,33)" fg:x="12224" fg:w="16"/><text x="37.8496%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.05%)</title><rect x="37.6027%" y="405" width="0.0461%" height="15" fill="rgb(249,163,44)" fg:x="12225" fg:w="15"/><text x="37.8527%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.05%)</title><rect x="37.6027%" y="389" width="0.0461%" height="15" fill="rgb(234,15,39)" fg:x="12225" fg:w="15"/><text x="37.8527%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.05%)</title><rect x="37.6027%" y="373" width="0.0461%" height="15" fill="rgb(207,66,16)" fg:x="12225" fg:w="15"/><text x="37.8527%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="37.6980%" y="373" width="0.0185%" height="15" fill="rgb(233,112,24)" fg:x="12256" fg:w="6"/><text x="37.9480%" y="383.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="37.7165%" y="373" width="0.0123%" height="15" fill="rgb(230,90,22)" fg:x="12262" fg:w="4"/><text x="37.9665%" y="383.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="37.7165%" y="357" width="0.0123%" height="15" fill="rgb(229,61,13)" fg:x="12262" fg:w="4"/><text x="37.9665%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (88 samples, 0.27%)</title><rect x="37.4673%" y="485" width="0.2707%" height="15" fill="rgb(225,57,24)" fg:x="12181" fg:w="88"/><text x="37.7173%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (29 samples, 0.09%)</title><rect x="37.6488%" y="469" width="0.0892%" height="15" fill="rgb(208,169,48)" fg:x="12240" fg:w="29"/><text x="37.8988%" y="479.50"></text></g><g><title>core::hash::Hasher::write_isize (29 samples, 0.09%)</title><rect x="37.6488%" y="453" width="0.0892%" height="15" fill="rgb(244,218,51)" fg:x="12240" fg:w="29"/><text x="37.8988%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (29 samples, 0.09%)</title><rect x="37.6488%" y="437" width="0.0892%" height="15" fill="rgb(214,148,10)" fg:x="12240" fg:w="29"/><text x="37.8988%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="37.6488%" y="421" width="0.0892%" height="15" fill="rgb(225,174,27)" fg:x="12240" fg:w="29"/><text x="37.8988%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="37.6519%" y="405" width="0.0861%" height="15" fill="rgb(230,96,26)" fg:x="12241" fg:w="28"/><text x="37.9019%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.08%)</title><rect x="37.6611%" y="389" width="0.0769%" height="15" fill="rgb(232,10,30)" fg:x="12244" fg:w="25"/><text x="37.9111%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.02%)</title><rect x="37.7565%" y="405" width="0.0154%" height="15" fill="rgb(222,8,50)" fg:x="12275" fg:w="5"/><text x="38.0065%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (12 samples, 0.04%)</title><rect x="37.7380%" y="485" width="0.0369%" height="15" fill="rgb(213,81,27)" fg:x="12269" fg:w="12"/><text x="37.9880%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u32 (12 samples, 0.04%)</title><rect x="37.7380%" y="469" width="0.0369%" height="15" fill="rgb(245,50,10)" fg:x="12269" fg:w="12"/><text x="37.9880%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="37.7380%" y="453" width="0.0369%" height="15" fill="rgb(216,100,18)" fg:x="12269" fg:w="12"/><text x="37.9880%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="37.7411%" y="437" width="0.0338%" height="15" fill="rgb(236,147,54)" fg:x="12270" fg:w="11"/><text x="37.9911%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="37.7411%" y="421" width="0.0338%" height="15" fill="rgb(205,143,26)" fg:x="12270" fg:w="11"/><text x="37.9911%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="37.7964%" y="405" width="0.0308%" height="15" fill="rgb(236,26,9)" fg:x="12288" fg:w="10"/><text x="38.0464%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (126 samples, 0.39%)</title><rect x="37.4581%" y="517" width="0.3876%" height="15" fill="rgb(221,165,53)" fg:x="12178" fg:w="126"/><text x="37.7081%" y="527.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (125 samples, 0.38%)</title><rect x="37.4612%" y="501" width="0.3845%" height="15" fill="rgb(214,110,17)" fg:x="12179" fg:w="125"/><text x="37.7112%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (23 samples, 0.07%)</title><rect x="37.7749%" y="485" width="0.0707%" height="15" fill="rgb(237,197,12)" fg:x="12281" fg:w="23"/><text x="38.0249%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.07%)</title><rect x="37.7780%" y="469" width="0.0677%" height="15" fill="rgb(205,84,17)" fg:x="12282" fg:w="22"/><text x="38.0280%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (22 samples, 0.07%)</title><rect x="37.7780%" y="453" width="0.0677%" height="15" fill="rgb(237,18,45)" fg:x="12282" fg:w="22"/><text x="38.0280%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (22 samples, 0.07%)</title><rect x="37.7780%" y="437" width="0.0677%" height="15" fill="rgb(221,87,14)" fg:x="12282" fg:w="22"/><text x="38.0280%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 0.07%)</title><rect x="37.7780%" y="421" width="0.0677%" height="15" fill="rgb(238,186,15)" fg:x="12282" fg:w="22"/><text x="38.0280%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.05%)</title><rect x="37.9010%" y="421" width="0.0523%" height="15" fill="rgb(208,115,11)" fg:x="12322" fg:w="17"/><text x="38.1510%" y="431.50"></text></g><g><title>core::cmp::min (10 samples, 0.03%)</title><rect x="37.9533%" y="421" width="0.0308%" height="15" fill="rgb(254,175,0)" fg:x="12339" fg:w="10"/><text x="38.2033%" y="431.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.03%)</title><rect x="37.9533%" y="405" width="0.0308%" height="15" fill="rgb(227,24,42)" fg:x="12339" fg:w="10"/><text x="38.2033%" y="415.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.03%)</title><rect x="37.9533%" y="389" width="0.0308%" height="15" fill="rgb(223,211,37)" fg:x="12339" fg:w="10"/><text x="38.2033%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="37.9687%" y="373" width="0.0154%" height="15" fill="rgb(235,49,27)" fg:x="12344" fg:w="5"/><text x="38.2187%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="37.9841%" y="421" width="0.0246%" height="15" fill="rgb(254,97,51)" fg:x="12349" fg:w="8"/><text x="38.2341%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (185 samples, 0.57%)</title><rect x="37.4458%" y="533" width="0.5690%" height="15" fill="rgb(249,51,40)" fg:x="12174" fg:w="185"/><text x="37.6958%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (55 samples, 0.17%)</title><rect x="37.8457%" y="517" width="0.1692%" height="15" fill="rgb(210,128,45)" fg:x="12304" fg:w="55"/><text x="38.0957%" y="527.50"></text></g><g><title>core::hash::Hasher::write_isize (55 samples, 0.17%)</title><rect x="37.8457%" y="501" width="0.1692%" height="15" fill="rgb(224,137,50)" fg:x="12304" fg:w="55"/><text x="38.0957%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (55 samples, 0.17%)</title><rect x="37.8457%" y="485" width="0.1692%" height="15" fill="rgb(242,15,9)" fg:x="12304" fg:w="55"/><text x="38.0957%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (54 samples, 0.17%)</title><rect x="37.8487%" y="469" width="0.1661%" height="15" fill="rgb(233,187,41)" fg:x="12305" fg:w="54"/><text x="38.0987%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (54 samples, 0.17%)</title><rect x="37.8487%" y="453" width="0.1661%" height="15" fill="rgb(227,2,29)" fg:x="12305" fg:w="54"/><text x="38.0987%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 samples, 0.17%)</title><rect x="37.8487%" y="437" width="0.1661%" height="15" fill="rgb(222,70,3)" fg:x="12305" fg:w="54"/><text x="38.0987%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.02%)</title><rect x="38.0425%" y="453" width="0.0154%" height="15" fill="rgb(213,11,42)" fg:x="12368" fg:w="5"/><text x="38.2925%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (15 samples, 0.05%)</title><rect x="38.0148%" y="533" width="0.0461%" height="15" fill="rgb(225,150,9)" fg:x="12359" fg:w="15"/><text x="38.2648%" y="543.50"></text></g><g><title>core::hash::Hasher::write_u32 (15 samples, 0.05%)</title><rect x="38.0148%" y="517" width="0.0461%" height="15" fill="rgb(230,162,45)" fg:x="12359" fg:w="15"/><text x="38.2648%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="38.0179%" y="501" width="0.0431%" height="15" fill="rgb(222,14,52)" fg:x="12360" fg:w="14"/><text x="38.2679%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="38.0179%" y="485" width="0.0431%" height="15" fill="rgb(254,198,14)" fg:x="12360" fg:w="14"/><text x="38.2679%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (14 samples, 0.04%)</title><rect x="38.0179%" y="469" width="0.0431%" height="15" fill="rgb(220,217,30)" fg:x="12360" fg:w="14"/><text x="38.2679%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.06%)</title><rect x="38.1163%" y="453" width="0.0584%" height="15" fill="rgb(215,146,41)" fg:x="12392" fg:w="19"/><text x="38.3663%" y="463.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="38.1748%" y="453" width="0.0154%" height="15" fill="rgb(217,27,36)" fg:x="12411" fg:w="5"/><text x="38.4248%" y="463.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="38.1748%" y="437" width="0.0154%" height="15" fill="rgb(219,218,39)" fg:x="12411" fg:w="5"/><text x="38.4248%" y="447.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.02%)</title><rect x="38.1748%" y="421" width="0.0154%" height="15" fill="rgb(219,4,42)" fg:x="12411" fg:w="5"/><text x="38.4248%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (254 samples, 0.78%)</title><rect x="37.4212%" y="565" width="0.7813%" height="15" fill="rgb(249,119,36)" fg:x="12166" fg:w="254"/><text x="37.6712%" y="575.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (251 samples, 0.77%)</title><rect x="37.4304%" y="549" width="0.7720%" height="15" fill="rgb(209,23,33)" fg:x="12169" fg:w="251"/><text x="37.6804%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (46 samples, 0.14%)</title><rect x="38.0610%" y="533" width="0.1415%" height="15" fill="rgb(211,10,0)" fg:x="12374" fg:w="46"/><text x="38.3110%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (43 samples, 0.13%)</title><rect x="38.0702%" y="517" width="0.1323%" height="15" fill="rgb(208,99,37)" fg:x="12377" fg:w="43"/><text x="38.3202%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (43 samples, 0.13%)</title><rect x="38.0702%" y="501" width="0.1323%" height="15" fill="rgb(213,132,31)" fg:x="12377" fg:w="43"/><text x="38.3202%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (43 samples, 0.13%)</title><rect x="38.0702%" y="485" width="0.1323%" height="15" fill="rgb(243,129,40)" fg:x="12377" fg:w="43"/><text x="38.3202%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (43 samples, 0.13%)</title><rect x="38.0702%" y="469" width="0.1323%" height="15" fill="rgb(210,66,33)" fg:x="12377" fg:w="43"/><text x="38.3202%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="38.1902%" y="453" width="0.0123%" height="15" fill="rgb(209,189,4)" fg:x="12416" fg:w="4"/><text x="38.4402%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (30 samples, 0.09%)</title><rect x="38.2763%" y="469" width="0.0923%" height="15" fill="rgb(214,107,37)" fg:x="12444" fg:w="30"/><text x="38.5263%" y="479.50"></text></g><g><title>core::cmp::min (16 samples, 0.05%)</title><rect x="38.3686%" y="469" width="0.0492%" height="15" fill="rgb(245,88,54)" fg:x="12474" fg:w="16"/><text x="38.6186%" y="479.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.05%)</title><rect x="38.3686%" y="453" width="0.0492%" height="15" fill="rgb(205,146,20)" fg:x="12474" fg:w="16"/><text x="38.6186%" y="463.50"></text></g><g><title>core::cmp::min_by (16 samples, 0.05%)</title><rect x="38.3686%" y="437" width="0.0492%" height="15" fill="rgb(220,161,25)" fg:x="12474" fg:w="16"/><text x="38.6186%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="38.3962%" y="421" width="0.0215%" height="15" fill="rgb(215,152,15)" fg:x="12483" fg:w="7"/><text x="38.6462%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="38.4178%" y="469" width="0.0277%" height="15" fill="rgb(233,192,44)" fg:x="12490" fg:w="9"/><text x="38.6678%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="38.2055%" y="517" width="0.2430%" height="15" fill="rgb(240,170,46)" fg:x="12421" fg:w="79"/><text x="38.4555%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="38.2055%" y="501" width="0.2430%" height="15" fill="rgb(207,104,33)" fg:x="12421" fg:w="79"/><text x="38.4555%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.23%)</title><rect x="38.2178%" y="485" width="0.2307%" height="15" fill="rgb(219,21,39)" fg:x="12425" fg:w="75"/><text x="38.4678%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (345 samples, 1.06%)</title><rect x="37.3904%" y="581" width="1.0612%" height="15" fill="rgb(214,133,29)" fg:x="12156" fg:w="345"/><text x="37.6404%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (81 samples, 0.25%)</title><rect x="38.2025%" y="565" width="0.2491%" height="15" fill="rgb(226,93,6)" fg:x="12420" fg:w="81"/><text x="38.4525%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (81 samples, 0.25%)</title><rect x="38.2025%" y="549" width="0.2491%" height="15" fill="rgb(252,222,34)" fg:x="12420" fg:w="81"/><text x="38.4525%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (81 samples, 0.25%)</title><rect x="38.2025%" y="533" width="0.2491%" height="15" fill="rgb(252,92,48)" fg:x="12420" fg:w="81"/><text x="38.4525%" y="543.50"></text></g><g><title>core::cmp::min (8 samples, 0.02%)</title><rect x="38.5008%" y="501" width="0.0246%" height="15" fill="rgb(245,223,24)" fg:x="12517" fg:w="8"/><text x="38.7508%" y="511.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="38.5008%" y="485" width="0.0246%" height="15" fill="rgb(205,176,3)" fg:x="12517" fg:w="8"/><text x="38.7508%" y="495.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.02%)</title><rect x="38.5008%" y="469" width="0.0246%" height="15" fill="rgb(235,151,15)" fg:x="12517" fg:w="8"/><text x="38.7508%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="38.5039%" y="453" width="0.0215%" height="15" fill="rgb(237,209,11)" fg:x="12518" fg:w="7"/><text x="38.7539%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (31 samples, 0.10%)</title><rect x="38.4516%" y="581" width="0.0954%" height="15" fill="rgb(243,227,24)" fg:x="12501" fg:w="31"/><text x="38.7016%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (28 samples, 0.09%)</title><rect x="38.4608%" y="565" width="0.0861%" height="15" fill="rgb(239,193,16)" fg:x="12504" fg:w="28"/><text x="38.7108%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="38.4608%" y="549" width="0.0861%" height="15" fill="rgb(231,27,9)" fg:x="12504" fg:w="28"/><text x="38.7108%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="38.4608%" y="533" width="0.0861%" height="15" fill="rgb(219,169,10)" fg:x="12504" fg:w="28"/><text x="38.7108%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="38.4608%" y="517" width="0.0861%" height="15" fill="rgb(244,229,43)" fg:x="12504" fg:w="28"/><text x="38.7108%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="38.5254%" y="501" width="0.0215%" height="15" fill="rgb(254,38,20)" fg:x="12525" fg:w="7"/><text x="38.7754%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.08%)</title><rect x="38.6454%" y="501" width="0.0800%" height="15" fill="rgb(250,47,30)" fg:x="12564" fg:w="26"/><text x="38.8954%" y="511.50"></text></g><g><title>core::cmp::min (17 samples, 0.05%)</title><rect x="38.7254%" y="501" width="0.0523%" height="15" fill="rgb(224,124,36)" fg:x="12590" fg:w="17"/><text x="38.9754%" y="511.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.05%)</title><rect x="38.7254%" y="485" width="0.0523%" height="15" fill="rgb(246,68,51)" fg:x="12590" fg:w="17"/><text x="38.9754%" y="495.50"></text></g><g><title>core::cmp::min_by (17 samples, 0.05%)</title><rect x="38.7254%" y="469" width="0.0523%" height="15" fill="rgb(253,43,49)" fg:x="12590" fg:w="17"/><text x="38.9754%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="38.7653%" y="453" width="0.0123%" height="15" fill="rgb(219,54,36)" fg:x="12603" fg:w="4"/><text x="39.0153%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (4 samples, 0.01%)</title><rect x="38.7653%" y="437" width="0.0123%" height="15" fill="rgb(227,133,34)" fg:x="12603" fg:w="4"/><text x="39.0153%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="38.7776%" y="501" width="0.0277%" height="15" fill="rgb(247,227,15)" fg:x="12607" fg:w="9"/><text x="39.0276%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (85 samples, 0.26%)</title><rect x="38.5470%" y="581" width="0.2614%" height="15" fill="rgb(229,96,14)" fg:x="12532" fg:w="85"/><text x="38.7970%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (80 samples, 0.25%)</title><rect x="38.5623%" y="565" width="0.2461%" height="15" fill="rgb(220,79,17)" fg:x="12537" fg:w="80"/><text x="38.8123%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (80 samples, 0.25%)</title><rect x="38.5623%" y="549" width="0.2461%" height="15" fill="rgb(205,131,53)" fg:x="12537" fg:w="80"/><text x="38.8123%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="38.5654%" y="533" width="0.2430%" height="15" fill="rgb(209,50,29)" fg:x="12538" fg:w="79"/><text x="38.8154%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="38.5654%" y="517" width="0.2430%" height="15" fill="rgb(245,86,46)" fg:x="12538" fg:w="79"/><text x="38.8154%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (467 samples, 1.44%)</title><rect x="37.3750%" y="613" width="1.4364%" height="15" fill="rgb(235,66,46)" fg:x="12151" fg:w="467"/><text x="37.6250%" y="623.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (465 samples, 1.43%)</title><rect x="37.3812%" y="597" width="1.4303%" height="15" fill="rgb(232,148,31)" fg:x="12153" fg:w="465"/><text x="37.6312%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34 samples, 0.10%)</title><rect x="38.9068%" y="517" width="0.1046%" height="15" fill="rgb(217,149,8)" fg:x="12649" fg:w="34"/><text x="39.1568%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="38.9991%" y="501" width="0.0123%" height="15" fill="rgb(209,183,11)" fg:x="12679" fg:w="4"/><text x="39.2491%" y="511.50"></text></g><g><title>core::cmp::min (18 samples, 0.06%)</title><rect x="39.0114%" y="517" width="0.0554%" height="15" fill="rgb(208,55,20)" fg:x="12683" fg:w="18"/><text x="39.2614%" y="527.50"></text></g><g><title>core::cmp::Ord::min (18 samples, 0.06%)</title><rect x="39.0114%" y="501" width="0.0554%" height="15" fill="rgb(218,39,14)" fg:x="12683" fg:w="18"/><text x="39.2614%" y="511.50"></text></g><g><title>core::cmp::min_by (18 samples, 0.06%)</title><rect x="39.0114%" y="485" width="0.0554%" height="15" fill="rgb(216,169,33)" fg:x="12683" fg:w="18"/><text x="39.2614%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="39.0329%" y="469" width="0.0338%" height="15" fill="rgb(233,80,24)" fg:x="12690" fg:w="11"/><text x="39.2829%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.02%)</title><rect x="39.0452%" y="453" width="0.0215%" height="15" fill="rgb(213,179,31)" fg:x="12694" fg:w="7"/><text x="39.2952%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.05%)</title><rect x="39.0668%" y="517" width="0.0523%" height="15" fill="rgb(209,19,5)" fg:x="12701" fg:w="17"/><text x="39.3168%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (577 samples, 1.77%)</title><rect x="37.3474%" y="629" width="1.7748%" height="15" fill="rgb(219,18,35)" fg:x="12142" fg:w="577"/><text x="37.5974%" y="639.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (101 samples, 0.31%)</title><rect x="38.8115%" y="613" width="0.3107%" height="15" fill="rgb(209,169,16)" fg:x="12618" fg:w="101"/><text x="39.0615%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (101 samples, 0.31%)</title><rect x="38.8115%" y="597" width="0.3107%" height="15" fill="rgb(245,90,51)" fg:x="12618" fg:w="101"/><text x="39.0615%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (99 samples, 0.30%)</title><rect x="38.8176%" y="581" width="0.3045%" height="15" fill="rgb(220,99,45)" fg:x="12620" fg:w="99"/><text x="39.0676%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (98 samples, 0.30%)</title><rect x="38.8207%" y="565" width="0.3014%" height="15" fill="rgb(249,89,25)" fg:x="12621" fg:w="98"/><text x="39.0707%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (96 samples, 0.30%)</title><rect x="38.8269%" y="549" width="0.2953%" height="15" fill="rgb(239,193,0)" fg:x="12623" fg:w="96"/><text x="39.0769%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (96 samples, 0.30%)</title><rect x="38.8269%" y="533" width="0.2953%" height="15" fill="rgb(231,126,1)" fg:x="12623" fg:w="96"/><text x="39.0769%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.02%)</title><rect x="39.1744%" y="549" width="0.0246%" height="15" fill="rgb(243,166,3)" fg:x="12736" fg:w="8"/><text x="39.4244%" y="559.50"></text></g><g><title>core::cmp::min (8 samples, 0.02%)</title><rect x="39.1990%" y="549" width="0.0246%" height="15" fill="rgb(223,22,34)" fg:x="12744" fg:w="8"/><text x="39.4490%" y="559.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="39.1990%" y="533" width="0.0246%" height="15" fill="rgb(251,52,51)" fg:x="12744" fg:w="8"/><text x="39.4490%" y="543.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.02%)</title><rect x="39.1990%" y="517" width="0.0246%" height="15" fill="rgb(221,165,28)" fg:x="12744" fg:w="8"/><text x="39.4490%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="39.2052%" y="501" width="0.0185%" height="15" fill="rgb(218,121,47)" fg:x="12746" fg:w="6"/><text x="39.4552%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (46 samples, 0.14%)</title><rect x="39.1221%" y="629" width="0.1415%" height="15" fill="rgb(209,120,9)" fg:x="12719" fg:w="46"/><text x="39.3721%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u32 (43 samples, 0.13%)</title><rect x="39.1314%" y="613" width="0.1323%" height="15" fill="rgb(236,68,12)" fg:x="12722" fg:w="43"/><text x="39.3814%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="39.1344%" y="597" width="0.1292%" height="15" fill="rgb(225,194,26)" fg:x="12723" fg:w="42"/><text x="39.3844%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (41 samples, 0.13%)</title><rect x="39.1375%" y="581" width="0.1261%" height="15" fill="rgb(231,84,39)" fg:x="12724" fg:w="41"/><text x="39.3875%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.13%)</title><rect x="39.1375%" y="565" width="0.1261%" height="15" fill="rgb(210,11,45)" fg:x="12724" fg:w="41"/><text x="39.3875%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.04%)</title><rect x="39.2236%" y="549" width="0.0400%" height="15" fill="rgb(224,54,52)" fg:x="12752" fg:w="13"/><text x="39.4736%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (57 samples, 0.18%)</title><rect x="39.3805%" y="549" width="0.1753%" height="15" fill="rgb(238,102,14)" fg:x="12803" fg:w="57"/><text x="39.6305%" y="559.50"></text></g><g><title>core::cmp::min (23 samples, 0.07%)</title><rect x="39.5558%" y="549" width="0.0707%" height="15" fill="rgb(243,160,52)" fg:x="12860" fg:w="23"/><text x="39.8058%" y="559.50"></text></g><g><title>core::cmp::Ord::min (23 samples, 0.07%)</title><rect x="39.5558%" y="533" width="0.0707%" height="15" fill="rgb(216,114,19)" fg:x="12860" fg:w="23"/><text x="39.8058%" y="543.50"></text></g><g><title>core::cmp::min_by (23 samples, 0.07%)</title><rect x="39.5558%" y="517" width="0.0707%" height="15" fill="rgb(244,166,37)" fg:x="12860" fg:w="23"/><text x="39.8058%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="39.6051%" y="501" width="0.0215%" height="15" fill="rgb(246,29,44)" fg:x="12876" fg:w="7"/><text x="39.8551%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.02%)</title><rect x="39.6112%" y="485" width="0.0154%" height="15" fill="rgb(215,56,53)" fg:x="12878" fg:w="5"/><text x="39.8612%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (762 samples, 2.34%)</title><rect x="37.3228%" y="661" width="2.3438%" height="15" fill="rgb(217,60,2)" fg:x="12134" fg:w="762"/><text x="37.5728%" y="671.50">&lt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (759 samples, 2.33%)</title><rect x="37.3320%" y="645" width="2.3346%" height="15" fill="rgb(207,26,24)" fg:x="12137" fg:w="759"/><text x="37.5820%" y="655.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (131 samples, 0.40%)</title><rect x="39.2636%" y="629" width="0.4029%" height="15" fill="rgb(252,210,15)" fg:x="12765" fg:w="131"/><text x="39.5136%" y="639.50"></text></g><g><title>core::hash::Hasher::write_usize (125 samples, 0.38%)</title><rect x="39.2821%" y="613" width="0.3845%" height="15" fill="rgb(253,209,26)" fg:x="12771" fg:w="125"/><text x="39.5321%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (124 samples, 0.38%)</title><rect x="39.2852%" y="597" width="0.3814%" height="15" fill="rgb(238,170,14)" fg:x="12772" fg:w="124"/><text x="39.5352%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (120 samples, 0.37%)</title><rect x="39.2975%" y="581" width="0.3691%" height="15" fill="rgb(216,178,15)" fg:x="12776" fg:w="120"/><text x="39.5475%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (120 samples, 0.37%)</title><rect x="39.2975%" y="565" width="0.3691%" height="15" fill="rgb(250,197,2)" fg:x="12776" fg:w="120"/><text x="39.5475%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.04%)</title><rect x="39.6266%" y="549" width="0.0400%" height="15" fill="rgb(212,70,42)" fg:x="12883" fg:w="13"/><text x="39.8766%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.12%)</title><rect x="39.7773%" y="565" width="0.1200%" height="15" fill="rgb(227,213,9)" fg:x="12932" fg:w="39"/><text x="40.0273%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="39.8850%" y="549" width="0.0123%" height="15" fill="rgb(245,99,25)" fg:x="12967" fg:w="4"/><text x="40.1350%" y="559.50"></text></g><g><title>core::cmp::min (12 samples, 0.04%)</title><rect x="39.8973%" y="565" width="0.0369%" height="15" fill="rgb(250,82,29)" fg:x="12971" fg:w="12"/><text x="40.1473%" y="575.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.04%)</title><rect x="39.8973%" y="549" width="0.0369%" height="15" fill="rgb(241,226,54)" fg:x="12971" fg:w="12"/><text x="40.1473%" y="559.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.04%)</title><rect x="39.8973%" y="533" width="0.0369%" height="15" fill="rgb(221,99,41)" fg:x="12971" fg:w="12"/><text x="40.1473%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="39.9126%" y="517" width="0.0215%" height="15" fill="rgb(213,90,21)" fg:x="12976" fg:w="7"/><text x="40.1626%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.02%)</title><rect x="39.9126%" y="501" width="0.0215%" height="15" fill="rgb(205,208,24)" fg:x="12976" fg:w="7"/><text x="40.1626%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.06%)</title><rect x="39.9342%" y="565" width="0.0554%" height="15" fill="rgb(246,31,12)" fg:x="12983" fg:w="18"/><text x="40.1842%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (882 samples, 2.71%)</title><rect x="37.2858%" y="677" width="2.7129%" height="15" fill="rgb(213,154,6)" fg:x="12122" fg:w="882"/><text x="37.5358%" y="687.50">&lt;c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (108 samples, 0.33%)</title><rect x="39.6666%" y="661" width="0.3322%" height="15" fill="rgb(222,163,29)" fg:x="12896" fg:w="108"/><text x="39.9166%" y="671.50"></text></g><g><title>core::hash::Hasher::write_isize (108 samples, 0.33%)</title><rect x="39.6666%" y="645" width="0.3322%" height="15" fill="rgb(227,201,8)" fg:x="12896" fg:w="108"/><text x="39.9166%" y="655.50"></text></g><g><title>core::hash::Hasher::write_usize (105 samples, 0.32%)</title><rect x="39.6758%" y="629" width="0.3230%" height="15" fill="rgb(233,9,32)" fg:x="12899" fg:w="105"/><text x="39.9258%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (103 samples, 0.32%)</title><rect x="39.6820%" y="613" width="0.3168%" height="15" fill="rgb(217,54,24)" fg:x="12901" fg:w="103"/><text x="39.9320%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (103 samples, 0.32%)</title><rect x="39.6820%" y="597" width="0.3168%" height="15" fill="rgb(235,192,0)" fg:x="12901" fg:w="103"/><text x="39.9320%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (101 samples, 0.31%)</title><rect x="39.6881%" y="581" width="0.3107%" height="15" fill="rgb(235,45,9)" fg:x="12903" fg:w="101"/><text x="39.9381%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.04%)</title><rect x="40.0480%" y="597" width="0.0400%" height="15" fill="rgb(246,42,40)" fg:x="13020" fg:w="13"/><text x="40.2980%" y="607.50"></text></g><g><title>core::cmp::min (8 samples, 0.02%)</title><rect x="40.0880%" y="597" width="0.0246%" height="15" fill="rgb(248,111,24)" fg:x="13033" fg:w="8"/><text x="40.3380%" y="607.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.02%)</title><rect x="40.0880%" y="581" width="0.0246%" height="15" fill="rgb(249,65,22)" fg:x="13033" fg:w="8"/><text x="40.3380%" y="591.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.02%)</title><rect x="40.0880%" y="565" width="0.0246%" height="15" fill="rgb(238,111,51)" fg:x="13033" fg:w="8"/><text x="40.3380%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.03%)</title><rect x="40.1126%" y="597" width="0.0308%" height="15" fill="rgb(250,118,22)" fg:x="13041" fg:w="10"/><text x="40.3626%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (50 samples, 0.15%)</title><rect x="39.9988%" y="677" width="0.1538%" height="15" fill="rgb(234,84,26)" fg:x="13004" fg:w="50"/><text x="40.2488%" y="687.50"></text></g><g><title>core::hash::Hasher::write_u32 (47 samples, 0.14%)</title><rect x="40.0080%" y="661" width="0.1446%" height="15" fill="rgb(243,172,12)" fg:x="13007" fg:w="47"/><text x="40.2580%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (46 samples, 0.14%)</title><rect x="40.0111%" y="645" width="0.1415%" height="15" fill="rgb(236,150,49)" fg:x="13008" fg:w="46"/><text x="40.2611%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (44 samples, 0.14%)</title><rect x="40.0172%" y="629" width="0.1353%" height="15" fill="rgb(225,197,26)" fg:x="13010" fg:w="44"/><text x="40.2672%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (44 samples, 0.14%)</title><rect x="40.0172%" y="613" width="0.1353%" height="15" fill="rgb(214,17,42)" fg:x="13010" fg:w="44"/><text x="40.2672%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (55 samples, 0.17%)</title><rect x="40.2756%" y="597" width="0.1692%" height="15" fill="rgb(224,165,40)" fg:x="13094" fg:w="55"/><text x="40.5256%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="40.4325%" y="581" width="0.0123%" height="15" fill="rgb(246,100,4)" fg:x="13145" fg:w="4"/><text x="40.6825%" y="591.50"></text></g><g><title>core::cmp::min (27 samples, 0.08%)</title><rect x="40.4448%" y="597" width="0.0830%" height="15" fill="rgb(222,103,0)" fg:x="13149" fg:w="27"/><text x="40.6948%" y="607.50"></text></g><g><title>core::cmp::Ord::min (27 samples, 0.08%)</title><rect x="40.4448%" y="581" width="0.0830%" height="15" fill="rgb(227,189,26)" fg:x="13149" fg:w="27"/><text x="40.6948%" y="591.50"></text></g><g><title>core::cmp::min_by (24 samples, 0.07%)</title><rect x="40.4540%" y="565" width="0.0738%" height="15" fill="rgb(214,202,17)" fg:x="13152" fg:w="24"/><text x="40.7040%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="40.5032%" y="549" width="0.0246%" height="15" fill="rgb(229,111,3)" fg:x="13168" fg:w="8"/><text x="40.7532%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.02%)</title><rect x="40.5094%" y="533" width="0.0185%" height="15" fill="rgb(229,172,15)" fg:x="13170" fg:w="6"/><text x="40.7594%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (18 samples, 0.06%)</title><rect x="40.5278%" y="597" width="0.0554%" height="15" fill="rgb(230,224,35)" fg:x="13176" fg:w="18"/><text x="40.7778%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,086 samples, 3.34%)</title><rect x="37.2489%" y="709" width="3.3404%" height="15" fill="rgb(251,141,6)" fg:x="12110" fg:w="1086"/><text x="37.4989%" y="719.50">&lt;al..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,083 samples, 3.33%)</title><rect x="37.2582%" y="693" width="3.3312%" height="15" fill="rgb(225,208,6)" fg:x="12113" fg:w="1083"/><text x="37.5082%" y="703.50">&lt;ae..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (142 samples, 0.44%)</title><rect x="40.1526%" y="677" width="0.4368%" height="15" fill="rgb(246,181,16)" fg:x="13054" fg:w="142"/><text x="40.4026%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (134 samples, 0.41%)</title><rect x="40.1772%" y="661" width="0.4122%" height="15" fill="rgb(227,129,36)" fg:x="13062" fg:w="134"/><text x="40.4272%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (134 samples, 0.41%)</title><rect x="40.1772%" y="645" width="0.4122%" height="15" fill="rgb(248,117,24)" fg:x="13062" fg:w="134"/><text x="40.4272%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (133 samples, 0.41%)</title><rect x="40.1802%" y="629" width="0.4091%" height="15" fill="rgb(214,185,35)" fg:x="13063" fg:w="133"/><text x="40.4302%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (133 samples, 0.41%)</title><rect x="40.1802%" y="613" width="0.4091%" height="15" fill="rgb(236,150,34)" fg:x="13063" fg:w="133"/><text x="40.4302%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (46 samples, 0.14%)</title><rect x="40.7431%" y="613" width="0.1415%" height="15" fill="rgb(243,228,27)" fg:x="13246" fg:w="46"/><text x="40.9931%" y="623.50"></text></g><g><title>core::cmp::min (18 samples, 0.06%)</title><rect x="40.8846%" y="613" width="0.0554%" height="15" fill="rgb(245,77,44)" fg:x="13292" fg:w="18"/><text x="41.1346%" y="623.50"></text></g><g><title>core::cmp::Ord::min (18 samples, 0.06%)</title><rect x="40.8846%" y="597" width="0.0554%" height="15" fill="rgb(235,214,42)" fg:x="13292" fg:w="18"/><text x="41.1346%" y="607.50"></text></g><g><title>core::cmp::min_by (18 samples, 0.06%)</title><rect x="40.8846%" y="581" width="0.0554%" height="15" fill="rgb(221,74,3)" fg:x="13292" fg:w="18"/><text x="41.1346%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="40.9154%" y="565" width="0.0246%" height="15" fill="rgb(206,121,29)" fg:x="13302" fg:w="8"/><text x="41.1654%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.04%)</title><rect x="40.9400%" y="613" width="0.0369%" height="15" fill="rgb(249,131,53)" fg:x="13310" fg:w="12"/><text x="41.1900%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,232 samples, 3.79%)</title><rect x="37.1905%" y="725" width="3.7895%" height="15" fill="rgb(236,170,29)" fg:x="12091" fg:w="1232"/><text x="37.4405%" y="735.50">&lt;cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (127 samples, 0.39%)</title><rect x="40.5893%" y="709" width="0.3906%" height="15" fill="rgb(247,96,15)" fg:x="13196" fg:w="127"/><text x="40.8393%" y="719.50"></text></g><g><title>core::hash::Hasher::write_isize (127 samples, 0.39%)</title><rect x="40.5893%" y="693" width="0.3906%" height="15" fill="rgb(211,210,7)" fg:x="13196" fg:w="127"/><text x="40.8393%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (123 samples, 0.38%)</title><rect x="40.6016%" y="677" width="0.3783%" height="15" fill="rgb(240,88,50)" fg:x="13200" fg:w="123"/><text x="40.8516%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (119 samples, 0.37%)</title><rect x="40.6139%" y="661" width="0.3660%" height="15" fill="rgb(209,229,26)" fg:x="13204" fg:w="119"/><text x="40.8639%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (118 samples, 0.36%)</title><rect x="40.6170%" y="645" width="0.3630%" height="15" fill="rgb(210,68,23)" fg:x="13205" fg:w="118"/><text x="40.8670%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (115 samples, 0.35%)</title><rect x="40.6262%" y="629" width="0.3537%" height="15" fill="rgb(229,180,13)" fg:x="13208" fg:w="115"/><text x="40.8762%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="41.0415%" y="645" width="0.0308%" height="15" fill="rgb(236,53,44)" fg:x="13343" fg:w="10"/><text x="41.2915%" y="655.50"></text></g><g><title>core::cmp::min (9 samples, 0.03%)</title><rect x="41.0723%" y="645" width="0.0277%" height="15" fill="rgb(244,214,29)" fg:x="13353" fg:w="9"/><text x="41.3223%" y="655.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.03%)</title><rect x="41.0723%" y="629" width="0.0277%" height="15" fill="rgb(220,75,29)" fg:x="13353" fg:w="9"/><text x="41.3223%" y="639.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.02%)</title><rect x="41.0753%" y="613" width="0.0246%" height="15" fill="rgb(214,183,37)" fg:x="13354" fg:w="8"/><text x="41.3253%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="41.0876%" y="597" width="0.0123%" height="15" fill="rgb(239,117,29)" fg:x="13358" fg:w="4"/><text x="41.3376%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.04%)</title><rect x="41.0999%" y="645" width="0.0369%" height="15" fill="rgb(237,171,35)" fg:x="13362" fg:w="12"/><text x="41.3499%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (52 samples, 0.16%)</title><rect x="40.9800%" y="725" width="0.1599%" height="15" fill="rgb(229,178,53)" fg:x="13323" fg:w="52"/><text x="41.2300%" y="735.50"></text></g><g><title>core::hash::Hasher::write_u32 (50 samples, 0.15%)</title><rect x="40.9861%" y="709" width="0.1538%" height="15" fill="rgb(210,102,19)" fg:x="13325" fg:w="50"/><text x="41.2361%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (49 samples, 0.15%)</title><rect x="40.9892%" y="693" width="0.1507%" height="15" fill="rgb(235,127,22)" fg:x="13326" fg:w="49"/><text x="41.2392%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (48 samples, 0.15%)</title><rect x="40.9923%" y="677" width="0.1476%" height="15" fill="rgb(244,31,31)" fg:x="13327" fg:w="48"/><text x="41.2423%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.15%)</title><rect x="40.9923%" y="661" width="0.1476%" height="15" fill="rgb(231,43,21)" fg:x="13327" fg:w="48"/><text x="41.2423%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.11%)</title><rect x="41.2507%" y="645" width="0.1138%" height="15" fill="rgb(217,131,35)" fg:x="13411" fg:w="37"/><text x="41.5007%" y="655.50"></text></g><g><title>core::cmp::min (20 samples, 0.06%)</title><rect x="41.3645%" y="645" width="0.0615%" height="15" fill="rgb(221,149,4)" fg:x="13448" fg:w="20"/><text x="41.6145%" y="655.50"></text></g><g><title>core::cmp::Ord::min (20 samples, 0.06%)</title><rect x="41.3645%" y="629" width="0.0615%" height="15" fill="rgb(232,170,28)" fg:x="13448" fg:w="20"/><text x="41.6145%" y="639.50"></text></g><g><title>core::cmp::min_by (20 samples, 0.06%)</title><rect x="41.3645%" y="613" width="0.0615%" height="15" fill="rgb(238,56,10)" fg:x="13448" fg:w="20"/><text x="41.6145%" y="623.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.05%)</title><rect x="41.4260%" y="645" width="0.0492%" height="15" fill="rgb(235,196,14)" fg:x="13468" fg:w="16"/><text x="41.6760%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (113 samples, 0.35%)</title><rect x="41.1399%" y="725" width="0.3476%" height="15" fill="rgb(216,45,48)" fg:x="13375" fg:w="113"/><text x="41.3899%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (108 samples, 0.33%)</title><rect x="41.1553%" y="709" width="0.3322%" height="15" fill="rgb(238,213,17)" fg:x="13380" fg:w="108"/><text x="41.4053%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (108 samples, 0.33%)</title><rect x="41.1553%" y="693" width="0.3322%" height="15" fill="rgb(212,13,2)" fg:x="13380" fg:w="108"/><text x="41.4053%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (106 samples, 0.33%)</title><rect x="41.1615%" y="677" width="0.3260%" height="15" fill="rgb(240,114,20)" fg:x="13382" fg:w="106"/><text x="41.4115%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (106 samples, 0.33%)</title><rect x="41.1615%" y="661" width="0.3260%" height="15" fill="rgb(228,41,40)" fg:x="13382" fg:w="106"/><text x="41.4115%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="41.4752%" y="645" width="0.0123%" height="15" fill="rgb(244,132,35)" fg:x="13484" fg:w="4"/><text x="41.7252%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,406 samples, 4.32%)</title><rect x="37.1690%" y="757" width="4.3247%" height="15" fill="rgb(253,189,4)" fg:x="12084" fg:w="1406"/><text x="37.4190%" y="767.50">&lt;allo..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,404 samples, 4.32%)</title><rect x="37.1751%" y="741" width="4.3185%" height="15" fill="rgb(224,37,19)" fg:x="12086" fg:w="1404"/><text x="37.4251%" y="751.50">&lt;aes_..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.13%)</title><rect x="41.5890%" y="661" width="0.1323%" height="15" fill="rgb(235,223,18)" fg:x="13521" fg:w="43"/><text x="41.8390%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="41.7090%" y="645" width="0.0123%" height="15" fill="rgb(235,163,25)" fg:x="13560" fg:w="4"/><text x="41.9590%" y="655.50"></text></g><g><title>core::cmp::min (26 samples, 0.08%)</title><rect x="41.7213%" y="661" width="0.0800%" height="15" fill="rgb(217,145,28)" fg:x="13564" fg:w="26"/><text x="41.9713%" y="671.50"></text></g><g><title>core::cmp::Ord::min (26 samples, 0.08%)</title><rect x="41.7213%" y="645" width="0.0800%" height="15" fill="rgb(223,223,32)" fg:x="13564" fg:w="26"/><text x="41.9713%" y="655.50"></text></g><g><title>core::cmp::min_by (25 samples, 0.08%)</title><rect x="41.7243%" y="629" width="0.0769%" height="15" fill="rgb(227,189,39)" fg:x="13565" fg:w="25"/><text x="41.9743%" y="639.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="41.7766%" y="613" width="0.0246%" height="15" fill="rgb(248,10,22)" fg:x="13582" fg:w="8"/><text x="42.0266%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.02%)</title><rect x="41.7797%" y="597" width="0.0215%" height="15" fill="rgb(248,46,39)" fg:x="13583" fg:w="7"/><text x="42.0297%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.03%)</title><rect x="41.8012%" y="661" width="0.0308%" height="15" fill="rgb(248,113,48)" fg:x="13590" fg:w="10"/><text x="42.0512%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,534 samples, 4.72%)</title><rect x="37.1259%" y="773" width="4.7184%" height="15" fill="rgb(245,16,25)" fg:x="12070" fg:w="1534"/><text x="37.3759%" y="783.50">&lt;core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (114 samples, 0.35%)</title><rect x="41.4936%" y="757" width="0.3507%" height="15" fill="rgb(249,152,16)" fg:x="13490" fg:w="114"/><text x="41.7436%" y="767.50"></text></g><g><title>core::hash::Hasher::write_isize (114 samples, 0.35%)</title><rect x="41.4936%" y="741" width="0.3507%" height="15" fill="rgb(250,16,1)" fg:x="13490" fg:w="114"/><text x="41.7436%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (114 samples, 0.35%)</title><rect x="41.4936%" y="725" width="0.3507%" height="15" fill="rgb(249,138,3)" fg:x="13490" fg:w="114"/><text x="41.7436%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (113 samples, 0.35%)</title><rect x="41.4967%" y="709" width="0.3476%" height="15" fill="rgb(227,71,41)" fg:x="13491" fg:w="113"/><text x="41.7467%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (111 samples, 0.34%)</title><rect x="41.5029%" y="693" width="0.3414%" height="15" fill="rgb(209,184,23)" fg:x="13493" fg:w="111"/><text x="41.7529%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (110 samples, 0.34%)</title><rect x="41.5060%" y="677" width="0.3383%" height="15" fill="rgb(223,215,31)" fg:x="13494" fg:w="110"/><text x="41.7560%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.03%)</title><rect x="41.8874%" y="693" width="0.0277%" height="15" fill="rgb(210,146,28)" fg:x="13618" fg:w="9"/><text x="42.1374%" y="703.50"></text></g><g><title>core::cmp::min (12 samples, 0.04%)</title><rect x="41.9150%" y="693" width="0.0369%" height="15" fill="rgb(209,183,41)" fg:x="13627" fg:w="12"/><text x="42.1650%" y="703.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.04%)</title><rect x="41.9150%" y="677" width="0.0369%" height="15" fill="rgb(209,224,45)" fg:x="13627" fg:w="12"/><text x="42.1650%" y="687.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.04%)</title><rect x="41.9150%" y="661" width="0.0369%" height="15" fill="rgb(224,209,51)" fg:x="13627" fg:w="12"/><text x="42.1650%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="41.9366%" y="645" width="0.0154%" height="15" fill="rgb(223,17,39)" fg:x="13634" fg:w="5"/><text x="42.1866%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.02%)</title><rect x="41.9366%" y="629" width="0.0154%" height="15" fill="rgb(234,204,37)" fg:x="13634" fg:w="5"/><text x="42.1866%" y="639.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="41.9520%" y="693" width="0.0277%" height="15" fill="rgb(236,120,5)" fg:x="13639" fg:w="9"/><text x="42.2020%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (45 samples, 0.14%)</title><rect x="41.8443%" y="773" width="0.1384%" height="15" fill="rgb(248,97,27)" fg:x="13604" fg:w="45"/><text x="42.0943%" y="783.50"></text></g><g><title>core::hash::Hasher::write_u32 (42 samples, 0.13%)</title><rect x="41.8535%" y="757" width="0.1292%" height="15" fill="rgb(240,66,17)" fg:x="13607" fg:w="42"/><text x="42.1035%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="41.8535%" y="741" width="0.1292%" height="15" fill="rgb(210,79,3)" fg:x="13607" fg:w="42"/><text x="42.1035%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="41.8535%" y="725" width="0.1292%" height="15" fill="rgb(214,176,27)" fg:x="13607" fg:w="42"/><text x="42.1035%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.13%)</title><rect x="41.8566%" y="709" width="0.1261%" height="15" fill="rgb(235,185,3)" fg:x="13608" fg:w="41"/><text x="42.1066%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.10%)</title><rect x="42.0627%" y="693" width="0.1015%" height="15" fill="rgb(227,24,12)" fg:x="13675" fg:w="33"/><text x="42.3127%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="42.1519%" y="677" width="0.0123%" height="15" fill="rgb(252,169,48)" fg:x="13704" fg:w="4"/><text x="42.4019%" y="687.50"></text></g><g><title>core::cmp::min (18 samples, 0.06%)</title><rect x="42.1642%" y="693" width="0.0554%" height="15" fill="rgb(212,65,1)" fg:x="13708" fg:w="18"/><text x="42.4142%" y="703.50"></text></g><g><title>core::cmp::Ord::min (18 samples, 0.06%)</title><rect x="42.1642%" y="677" width="0.0554%" height="15" fill="rgb(242,39,24)" fg:x="13708" fg:w="18"/><text x="42.4142%" y="687.50"></text></g><g><title>core::cmp::min_by (18 samples, 0.06%)</title><rect x="42.1642%" y="661" width="0.0554%" height="15" fill="rgb(249,32,23)" fg:x="13708" fg:w="18"/><text x="42.4142%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.03%)</title><rect x="42.1919%" y="645" width="0.0277%" height="15" fill="rgb(251,195,23)" fg:x="13717" fg:w="9"/><text x="42.4419%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.02%)</title><rect x="42.2011%" y="629" width="0.0185%" height="15" fill="rgb(236,174,8)" fg:x="13720" fg:w="6"/><text x="42.4511%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.02%)</title><rect x="42.2472%" y="677" width="0.0154%" height="15" fill="rgb(220,197,8)" fg:x="13735" fg:w="5"/><text x="42.4972%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.05%)</title><rect x="42.2196%" y="693" width="0.0461%" height="15" fill="rgb(240,108,37)" fg:x="13726" fg:w="15"/><text x="42.4696%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,683 samples, 5.18%)</title><rect x="37.0951%" y="805" width="5.1767%" height="15" fill="rgb(232,176,24)" fg:x="12060" fg:w="1683"/><text x="37.3451%" y="815.50">&lt;alloc..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,680 samples, 5.17%)</title><rect x="37.1044%" y="789" width="5.1675%" height="15" fill="rgb(243,35,29)" fg:x="12063" fg:w="1680"/><text x="37.3544%" y="799.50">&lt;aes_g..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (94 samples, 0.29%)</title><rect x="41.9827%" y="773" width="0.2891%" height="15" fill="rgb(210,37,18)" fg:x="13649" fg:w="94"/><text x="42.2327%" y="783.50"></text></g><g><title>core::hash::Hasher::write_usize (90 samples, 0.28%)</title><rect x="41.9950%" y="757" width="0.2768%" height="15" fill="rgb(224,184,40)" fg:x="13653" fg:w="90"/><text x="42.2450%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (86 samples, 0.26%)</title><rect x="42.0073%" y="741" width="0.2645%" height="15" fill="rgb(236,39,29)" fg:x="13657" fg:w="86"/><text x="42.2573%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (84 samples, 0.26%)</title><rect x="42.0135%" y="725" width="0.2584%" height="15" fill="rgb(232,48,39)" fg:x="13659" fg:w="84"/><text x="42.2635%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (83 samples, 0.26%)</title><rect x="42.0165%" y="709" width="0.2553%" height="15" fill="rgb(236,34,42)" fg:x="13660" fg:w="83"/><text x="42.2665%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.07%)</title><rect x="42.3211%" y="709" width="0.0707%" height="15" fill="rgb(243,106,37)" fg:x="13759" fg:w="23"/><text x="42.5711%" y="719.50"></text></g><g><title>core::cmp::min (11 samples, 0.03%)</title><rect x="42.3918%" y="709" width="0.0338%" height="15" fill="rgb(218,96,6)" fg:x="13782" fg:w="11"/><text x="42.6418%" y="719.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.03%)</title><rect x="42.3918%" y="693" width="0.0338%" height="15" fill="rgb(235,130,12)" fg:x="13782" fg:w="11"/><text x="42.6418%" y="703.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.03%)</title><rect x="42.3918%" y="677" width="0.0338%" height="15" fill="rgb(231,95,0)" fg:x="13782" fg:w="11"/><text x="42.6418%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="42.4133%" y="661" width="0.0123%" height="15" fill="rgb(228,12,23)" fg:x="13789" fg:w="4"/><text x="42.6633%" y="671.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.03%)</title><rect x="42.4256%" y="709" width="0.0277%" height="15" fill="rgb(216,12,1)" fg:x="13793" fg:w="9"/><text x="42.6756%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,753 samples, 5.39%)</title><rect x="37.0705%" y="821" width="5.3920%" height="15" fill="rgb(219,59,3)" fg:x="12052" fg:w="1753"/><text x="37.3205%" y="831.50">&lt;core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (62 samples, 0.19%)</title><rect x="42.2718%" y="805" width="0.1907%" height="15" fill="rgb(215,208,46)" fg:x="13743" fg:w="62"/><text x="42.5218%" y="815.50"></text></g><g><title>core::hash::Hasher::write_isize (62 samples, 0.19%)</title><rect x="42.2718%" y="789" width="0.1907%" height="15" fill="rgb(254,224,29)" fg:x="13743" fg:w="62"/><text x="42.5218%" y="799.50"></text></g><g><title>core::hash::Hasher::write_usize (61 samples, 0.19%)</title><rect x="42.2749%" y="773" width="0.1876%" height="15" fill="rgb(232,14,29)" fg:x="13744" fg:w="61"/><text x="42.5249%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (60 samples, 0.18%)</title><rect x="42.2780%" y="757" width="0.1846%" height="15" fill="rgb(208,45,52)" fg:x="13745" fg:w="60"/><text x="42.5280%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (60 samples, 0.18%)</title><rect x="42.2780%" y="741" width="0.1846%" height="15" fill="rgb(234,191,28)" fg:x="13745" fg:w="60"/><text x="42.5280%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 samples, 0.18%)</title><rect x="42.2811%" y="725" width="0.1815%" height="15" fill="rgb(244,67,43)" fg:x="13746" fg:w="59"/><text x="42.5311%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="42.4902%" y="741" width="0.0154%" height="15" fill="rgb(236,189,24)" fg:x="13814" fg:w="5"/><text x="42.7402%" y="751.50"></text></g><g><title>core::cmp::min (7 samples, 0.02%)</title><rect x="42.5056%" y="741" width="0.0215%" height="15" fill="rgb(239,214,33)" fg:x="13819" fg:w="7"/><text x="42.7556%" y="751.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.02%)</title><rect x="42.5056%" y="725" width="0.0215%" height="15" fill="rgb(226,176,41)" fg:x="13819" fg:w="7"/><text x="42.7556%" y="735.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.02%)</title><rect x="42.5056%" y="709" width="0.0215%" height="15" fill="rgb(248,47,8)" fg:x="13819" fg:w="7"/><text x="42.7556%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (25 samples, 0.08%)</title><rect x="42.4626%" y="821" width="0.0769%" height="15" fill="rgb(218,81,44)" fg:x="13805" fg:w="25"/><text x="42.7126%" y="831.50"></text></g><g><title>core::hash::Hasher::write_u32 (21 samples, 0.06%)</title><rect x="42.4749%" y="805" width="0.0646%" height="15" fill="rgb(213,98,6)" fg:x="13809" fg:w="21"/><text x="42.7249%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (21 samples, 0.06%)</title><rect x="42.4749%" y="789" width="0.0646%" height="15" fill="rgb(222,85,22)" fg:x="13809" fg:w="21"/><text x="42.7249%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="42.4779%" y="773" width="0.0615%" height="15" fill="rgb(239,46,39)" fg:x="13810" fg:w="20"/><text x="42.7279%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="42.4779%" y="757" width="0.0615%" height="15" fill="rgb(237,12,29)" fg:x="13810" fg:w="20"/><text x="42.7279%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.08%)</title><rect x="42.6102%" y="741" width="0.0800%" height="15" fill="rgb(214,77,8)" fg:x="13853" fg:w="26"/><text x="42.8602%" y="751.50"></text></g><g><title>core::cmp::min (12 samples, 0.04%)</title><rect x="42.6902%" y="741" width="0.0369%" height="15" fill="rgb(217,168,37)" fg:x="13879" fg:w="12"/><text x="42.9402%" y="751.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.04%)</title><rect x="42.6902%" y="725" width="0.0369%" height="15" fill="rgb(221,217,23)" fg:x="13879" fg:w="12"/><text x="42.9402%" y="735.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.04%)</title><rect x="42.6902%" y="709" width="0.0369%" height="15" fill="rgb(243,229,36)" fg:x="13879" fg:w="12"/><text x="42.9402%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="42.7486%" y="725" width="0.0123%" height="15" fill="rgb(251,163,40)" fg:x="13898" fg:w="4"/><text x="42.9986%" y="735.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.04%)</title><rect x="42.7271%" y="741" width="0.0369%" height="15" fill="rgb(237,222,12)" fg:x="13891" fg:w="12"/><text x="42.9771%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,859 samples, 5.72%)</title><rect x="37.0552%" y="853" width="5.7181%" height="15" fill="rgb(248,132,6)" fg:x="12047" fg:w="1859"/><text x="37.3052%" y="863.50">&lt;alloc:..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,859 samples, 5.72%)</title><rect x="37.0552%" y="837" width="5.7181%" height="15" fill="rgb(227,167,50)" fg:x="12047" fg:w="1859"/><text x="37.3052%" y="847.50">&lt;aes_gr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (76 samples, 0.23%)</title><rect x="42.5394%" y="821" width="0.2338%" height="15" fill="rgb(242,84,37)" fg:x="13830" fg:w="76"/><text x="42.7894%" y="831.50"></text></g><g><title>core::hash::Hasher::write_usize (73 samples, 0.22%)</title><rect x="42.5487%" y="805" width="0.2245%" height="15" fill="rgb(212,4,50)" fg:x="13833" fg:w="73"/><text x="42.7987%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (73 samples, 0.22%)</title><rect x="42.5487%" y="789" width="0.2245%" height="15" fill="rgb(230,228,32)" fg:x="13833" fg:w="73"/><text x="42.7987%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (72 samples, 0.22%)</title><rect x="42.5518%" y="773" width="0.2215%" height="15" fill="rgb(248,217,23)" fg:x="13834" fg:w="72"/><text x="42.8018%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 samples, 0.22%)</title><rect x="42.5518%" y="757" width="0.2215%" height="15" fill="rgb(238,197,32)" fg:x="13834" fg:w="72"/><text x="42.8018%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.03%)</title><rect x="42.8009%" y="757" width="0.0338%" height="15" fill="rgb(236,106,1)" fg:x="13915" fg:w="11"/><text x="43.0509%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,893 samples, 5.82%)</title><rect x="37.0398%" y="869" width="5.8226%" height="15" fill="rgb(219,228,13)" fg:x="12042" fg:w="1893"/><text x="37.2898%" y="879.50">&lt;core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (29 samples, 0.09%)</title><rect x="42.7732%" y="853" width="0.0892%" height="15" fill="rgb(238,30,35)" fg:x="13906" fg:w="29"/><text x="43.0232%" y="863.50"></text></g><g><title>core::hash::Hasher::write_isize (29 samples, 0.09%)</title><rect x="42.7732%" y="837" width="0.0892%" height="15" fill="rgb(236,70,23)" fg:x="13906" fg:w="29"/><text x="43.0232%" y="847.50"></text></g><g><title>core::hash::Hasher::write_usize (29 samples, 0.09%)</title><rect x="42.7732%" y="821" width="0.0892%" height="15" fill="rgb(249,104,48)" fg:x="13906" fg:w="29"/><text x="43.0232%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="42.7794%" y="805" width="0.0830%" height="15" fill="rgb(254,117,50)" fg:x="13908" fg:w="27"/><text x="43.0294%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="42.7794%" y="789" width="0.0830%" height="15" fill="rgb(223,152,4)" fg:x="13908" fg:w="27"/><text x="43.0294%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="42.7794%" y="773" width="0.0830%" height="15" fill="rgb(245,6,2)" fg:x="13908" fg:w="27"/><text x="43.0294%" y="783.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="42.8409%" y="757" width="0.0215%" height="15" fill="rgb(249,150,24)" fg:x="13928" fg:w="7"/><text x="43.0909%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (13 samples, 0.04%)</title><rect x="42.8624%" y="869" width="0.0400%" height="15" fill="rgb(228,185,42)" fg:x="13935" fg:w="13"/><text x="43.1124%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u32 (13 samples, 0.04%)</title><rect x="42.8624%" y="853" width="0.0400%" height="15" fill="rgb(226,39,33)" fg:x="13935" fg:w="13"/><text x="43.1124%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="42.8624%" y="837" width="0.0400%" height="15" fill="rgb(221,166,19)" fg:x="13935" fg:w="13"/><text x="43.1124%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="42.8655%" y="821" width="0.0369%" height="15" fill="rgb(209,109,2)" fg:x="13936" fg:w="12"/><text x="43.1155%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="42.8655%" y="805" width="0.0369%" height="15" fill="rgb(252,216,26)" fg:x="13936" fg:w="12"/><text x="43.1155%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="42.8809%" y="789" width="0.0215%" height="15" fill="rgb(227,173,36)" fg:x="13941" fg:w="7"/><text x="43.1309%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.05%)</title><rect x="42.9547%" y="789" width="0.0523%" height="15" fill="rgb(209,90,7)" fg:x="13965" fg:w="17"/><text x="43.2047%" y="799.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="43.0070%" y="789" width="0.0154%" height="15" fill="rgb(250,194,11)" fg:x="13982" fg:w="5"/><text x="43.2570%" y="799.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="43.0070%" y="773" width="0.0154%" height="15" fill="rgb(220,72,50)" fg:x="13982" fg:w="5"/><text x="43.2570%" y="783.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.02%)</title><rect x="43.0070%" y="757" width="0.0154%" height="15" fill="rgb(222,106,48)" fg:x="13982" fg:w="5"/><text x="43.2570%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,958 samples, 6.02%)</title><rect x="37.0213%" y="901" width="6.0226%" height="15" fill="rgb(216,220,45)" fg:x="12036" fg:w="1958"/><text x="37.2713%" y="911.50">&lt;alloc::..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,956 samples, 6.02%)</title><rect x="37.0275%" y="885" width="6.0164%" height="15" fill="rgb(234,112,18)" fg:x="12038" fg:w="1956"/><text x="37.2775%" y="895.50">&lt;aes_gri..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (46 samples, 0.14%)</title><rect x="42.9024%" y="869" width="0.1415%" height="15" fill="rgb(206,179,9)" fg:x="13948" fg:w="46"/><text x="43.1524%" y="879.50"></text></g><g><title>core::hash::Hasher::write_usize (42 samples, 0.13%)</title><rect x="42.9147%" y="853" width="0.1292%" height="15" fill="rgb(215,115,40)" fg:x="13952" fg:w="42"/><text x="43.1647%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="42.9147%" y="837" width="0.1292%" height="15" fill="rgb(222,69,34)" fg:x="13952" fg:w="42"/><text x="43.1647%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="42.9147%" y="821" width="0.1292%" height="15" fill="rgb(209,161,10)" fg:x="13952" fg:w="42"/><text x="43.1647%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="42.9147%" y="805" width="0.1292%" height="15" fill="rgb(217,6,38)" fg:x="13952" fg:w="42"/><text x="43.1647%" y="815.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="43.0224%" y="789" width="0.0215%" height="15" fill="rgb(229,229,48)" fg:x="13987" fg:w="7"/><text x="43.2724%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="43.0500%" y="805" width="0.0215%" height="15" fill="rgb(225,21,28)" fg:x="13996" fg:w="7"/><text x="43.3000%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,977 samples, 6.08%)</title><rect x="37.0059%" y="917" width="6.0810%" height="15" fill="rgb(206,33,13)" fg:x="12031" fg:w="1977"/><text x="37.2559%" y="927.50">&lt;core::o..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (14 samples, 0.04%)</title><rect x="43.0439%" y="901" width="0.0431%" height="15" fill="rgb(242,178,17)" fg:x="13994" fg:w="14"/><text x="43.2939%" y="911.50"></text></g><g><title>core::hash::Hasher::write_isize (14 samples, 0.04%)</title><rect x="43.0439%" y="885" width="0.0431%" height="15" fill="rgb(220,162,5)" fg:x="13994" fg:w="14"/><text x="43.2939%" y="895.50"></text></g><g><title>core::hash::Hasher::write_usize (14 samples, 0.04%)</title><rect x="43.0439%" y="869" width="0.0431%" height="15" fill="rgb(210,33,43)" fg:x="13994" fg:w="14"/><text x="43.2939%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="43.0470%" y="853" width="0.0400%" height="15" fill="rgb(216,116,54)" fg:x="13995" fg:w="13"/><text x="43.2970%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="43.0470%" y="837" width="0.0400%" height="15" fill="rgb(249,92,24)" fg:x="13995" fg:w="13"/><text x="43.2970%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="43.0470%" y="821" width="0.0400%" height="15" fill="rgb(231,189,14)" fg:x="13995" fg:w="13"/><text x="43.2970%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (9 samples, 0.03%)</title><rect x="43.0870%" y="917" width="0.0277%" height="15" fill="rgb(230,8,41)" fg:x="14008" fg:w="9"/><text x="43.3370%" y="927.50"></text></g><g><title>core::hash::Hasher::write_u32 (7 samples, 0.02%)</title><rect x="43.0931%" y="901" width="0.0215%" height="15" fill="rgb(249,7,27)" fg:x="14010" fg:w="7"/><text x="43.3431%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="43.0962%" y="885" width="0.0185%" height="15" fill="rgb(232,86,5)" fg:x="14011" fg:w="6"/><text x="43.3462%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="43.0993%" y="869" width="0.0154%" height="15" fill="rgb(224,175,18)" fg:x="14012" fg:w="5"/><text x="43.3493%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="43.0993%" y="853" width="0.0154%" height="15" fill="rgb(220,129,12)" fg:x="14012" fg:w="5"/><text x="43.3493%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="43.1300%" y="837" width="0.0215%" height="15" fill="rgb(210,19,36)" fg:x="14022" fg:w="7"/><text x="43.3800%" y="847.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="43.1515%" y="837" width="0.0154%" height="15" fill="rgb(219,96,14)" fg:x="14029" fg:w="5"/><text x="43.4015%" y="847.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="43.1515%" y="821" width="0.0154%" height="15" fill="rgb(249,106,1)" fg:x="14029" fg:w="5"/><text x="43.4015%" y="831.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="43.1546%" y="805" width="0.0123%" height="15" fill="rgb(249,155,20)" fg:x="14030" fg:w="4"/><text x="43.4046%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (2,030 samples, 6.24%)</title><rect x="36.9290%" y="1013" width="6.2440%" height="15" fill="rgb(244,168,9)" fg:x="12006" fg:w="2030"/><text x="37.1790%" y="1023.50">hashbrow..</text></g><g><title>core::hash::BuildHasher::hash_one (2,029 samples, 6.24%)</title><rect x="36.9321%" y="997" width="6.2410%" height="15" fill="rgb(216,23,50)" fg:x="12007" fg:w="2029"/><text x="37.1821%" y="1007.50">core::ha..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,013 samples, 6.19%)</title><rect x="36.9813%" y="981" width="6.1918%" height="15" fill="rgb(224,219,20)" fg:x="12023" fg:w="2013"/><text x="37.2313%" y="991.50">core::ha..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (2,012 samples, 6.19%)</title><rect x="36.9844%" y="965" width="6.1887%" height="15" fill="rgb(222,156,15)" fg:x="12024" fg:w="2012"/><text x="37.2344%" y="975.50">core::ha..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (2,010 samples, 6.18%)</title><rect x="36.9906%" y="949" width="6.1825%" height="15" fill="rgb(231,97,17)" fg:x="12026" fg:w="2010"/><text x="37.2406%" y="959.50">&lt;alloc::..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (2,009 samples, 6.18%)</title><rect x="36.9936%" y="933" width="6.1794%" height="15" fill="rgb(218,70,48)" fg:x="12027" fg:w="2009"/><text x="37.2436%" y="943.50">&lt;aes_gri..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (19 samples, 0.06%)</title><rect x="43.1146%" y="917" width="0.0584%" height="15" fill="rgb(212,196,52)" fg:x="14017" fg:w="19"/><text x="43.3646%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.06%)</title><rect x="43.1146%" y="901" width="0.0584%" height="15" fill="rgb(243,203,18)" fg:x="14017" fg:w="19"/><text x="43.3646%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="43.1208%" y="885" width="0.0523%" height="15" fill="rgb(252,125,41)" fg:x="14019" fg:w="17"/><text x="43.3708%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="43.1208%" y="869" width="0.0523%" height="15" fill="rgb(223,180,33)" fg:x="14019" fg:w="17"/><text x="43.3708%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (17 samples, 0.05%)</title><rect x="43.1208%" y="853" width="0.0523%" height="15" fill="rgb(254,159,46)" fg:x="14019" fg:w="17"/><text x="43.3708%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="43.1915%" y="869" width="0.0154%" height="15" fill="rgb(254,38,10)" fg:x="14042" fg:w="5"/><text x="43.4415%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="43.1915%" y="853" width="0.0154%" height="15" fill="rgb(208,217,32)" fg:x="14042" fg:w="5"/><text x="43.4415%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.02%)</title><rect x="43.1915%" y="837" width="0.0154%" height="15" fill="rgb(221,120,13)" fg:x="14042" fg:w="5"/><text x="43.4415%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="43.2069%" y="869" width="0.0185%" height="15" fill="rgb(246,54,52)" fg:x="14047" fg:w="6"/><text x="43.4569%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="43.2100%" y="853" width="0.0154%" height="15" fill="rgb(242,34,25)" fg:x="14048" fg:w="5"/><text x="43.4600%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="43.5514%" y="277" width="0.0123%" height="15" fill="rgb(247,209,9)" fg:x="14159" fg:w="4"/><text x="43.8014%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="43.5514%" y="309" width="0.0246%" height="15" fill="rgb(228,71,26)" fg:x="14159" fg:w="8"/><text x="43.8014%" y="319.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="43.5514%" y="293" width="0.0246%" height="15" fill="rgb(222,145,49)" fg:x="14159" fg:w="8"/><text x="43.8014%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (12 samples, 0.04%)</title><rect x="43.5514%" y="325" width="0.0369%" height="15" fill="rgb(218,121,17)" fg:x="14159" fg:w="12"/><text x="43.8014%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (4 samples, 0.01%)</title><rect x="43.5760%" y="309" width="0.0123%" height="15" fill="rgb(244,50,7)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="319.50"></text></g><g><title>core::hash::Hasher::write_isize (4 samples, 0.01%)</title><rect x="43.5760%" y="293" width="0.0123%" height="15" fill="rgb(246,229,37)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.01%)</title><rect x="43.5760%" y="277" width="0.0123%" height="15" fill="rgb(225,18,5)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.5760%" y="261" width="0.0123%" height="15" fill="rgb(213,204,8)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.5760%" y="245" width="0.0123%" height="15" fill="rgb(238,103,6)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.5760%" y="229" width="0.0123%" height="15" fill="rgb(222,25,35)" fg:x="14167" fg:w="4"/><text x="43.8260%" y="239.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (24 samples, 0.07%)</title><rect x="43.5483%" y="357" width="0.0738%" height="15" fill="rgb(213,203,35)" fg:x="14158" fg:w="24"/><text x="43.7983%" y="367.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (24 samples, 0.07%)</title><rect x="43.5483%" y="341" width="0.0738%" height="15" fill="rgb(221,79,53)" fg:x="14158" fg:w="24"/><text x="43.7983%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (9 samples, 0.03%)</title><rect x="43.5945%" y="325" width="0.0277%" height="15" fill="rgb(243,200,35)" fg:x="14173" fg:w="9"/><text x="43.8445%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.01%)</title><rect x="43.6099%" y="309" width="0.0123%" height="15" fill="rgb(248,60,25)" fg:x="14178" fg:w="4"/><text x="43.8599%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.6099%" y="293" width="0.0123%" height="15" fill="rgb(227,53,46)" fg:x="14178" fg:w="4"/><text x="43.8599%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.6099%" y="277" width="0.0123%" height="15" fill="rgb(216,120,32)" fg:x="14178" fg:w="4"/><text x="43.8599%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="43.6099%" y="261" width="0.0123%" height="15" fill="rgb(220,134,1)" fg:x="14178" fg:w="4"/><text x="43.8599%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="43.6437%" y="261" width="0.0185%" height="15" fill="rgb(237,168,5)" fg:x="14189" fg:w="6"/><text x="43.8937%" y="271.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="43.6621%" y="261" width="0.0154%" height="15" fill="rgb(231,100,33)" fg:x="14195" fg:w="5"/><text x="43.9121%" y="271.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="43.6621%" y="245" width="0.0154%" height="15" fill="rgb(236,177,47)" fg:x="14195" fg:w="5"/><text x="43.9121%" y="255.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.02%)</title><rect x="43.6621%" y="229" width="0.0154%" height="15" fill="rgb(235,7,49)" fg:x="14195" fg:w="5"/><text x="43.9121%" y="239.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (43 samples, 0.13%)</title><rect x="43.5483%" y="373" width="0.1323%" height="15" fill="rgb(232,119,22)" fg:x="14158" fg:w="43"/><text x="43.7983%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (19 samples, 0.06%)</title><rect x="43.6222%" y="357" width="0.0584%" height="15" fill="rgb(254,73,53)" fg:x="14182" fg:w="19"/><text x="43.8722%" y="367.50"></text></g><g><title>core::hash::Hasher::write_isize (19 samples, 0.06%)</title><rect x="43.6222%" y="341" width="0.0584%" height="15" fill="rgb(251,35,20)" fg:x="14182" fg:w="19"/><text x="43.8722%" y="351.50"></text></g><g><title>core::hash::Hasher::write_usize (19 samples, 0.06%)</title><rect x="43.6222%" y="325" width="0.0584%" height="15" fill="rgb(241,119,20)" fg:x="14182" fg:w="19"/><text x="43.8722%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="43.6222%" y="309" width="0.0584%" height="15" fill="rgb(207,102,14)" fg:x="14182" fg:w="19"/><text x="43.8722%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (18 samples, 0.06%)</title><rect x="43.6252%" y="293" width="0.0554%" height="15" fill="rgb(248,201,50)" fg:x="14183" fg:w="18"/><text x="43.8752%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.06%)</title><rect x="43.6252%" y="277" width="0.0554%" height="15" fill="rgb(222,185,44)" fg:x="14183" fg:w="18"/><text x="43.8752%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 0.02%)</title><rect x="43.6806%" y="373" width="0.0246%" height="15" fill="rgb(218,107,18)" fg:x="14201" fg:w="8"/><text x="43.9306%" y="383.50"></text></g><g><title>core::hash::Hasher::write_u32 (5 samples, 0.02%)</title><rect x="43.6898%" y="357" width="0.0154%" height="15" fill="rgb(237,177,39)" fg:x="14204" fg:w="5"/><text x="43.9398%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="43.6898%" y="341" width="0.0154%" height="15" fill="rgb(246,69,6)" fg:x="14204" fg:w="5"/><text x="43.9398%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="43.6898%" y="325" width="0.0154%" height="15" fill="rgb(234,208,37)" fg:x="14204" fg:w="5"/><text x="43.9398%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.02%)</title><rect x="43.6898%" y="309" width="0.0154%" height="15" fill="rgb(225,4,6)" fg:x="14204" fg:w="5"/><text x="43.9398%" y="319.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (75 samples, 0.23%)</title><rect x="43.5422%" y="405" width="0.2307%" height="15" fill="rgb(233,45,0)" fg:x="14156" fg:w="75"/><text x="43.7922%" y="415.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (75 samples, 0.23%)</title><rect x="43.5422%" y="389" width="0.2307%" height="15" fill="rgb(226,136,5)" fg:x="14156" fg:w="75"/><text x="43.7922%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (22 samples, 0.07%)</title><rect x="43.7052%" y="373" width="0.0677%" height="15" fill="rgb(211,91,47)" fg:x="14209" fg:w="22"/><text x="43.9552%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.02%)</title><rect x="43.7483%" y="357" width="0.0246%" height="15" fill="rgb(242,88,51)" fg:x="14223" fg:w="8"/><text x="43.9983%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="43.7483%" y="341" width="0.0246%" height="15" fill="rgb(230,91,28)" fg:x="14223" fg:w="8"/><text x="43.9983%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="43.7483%" y="325" width="0.0246%" height="15" fill="rgb(254,186,29)" fg:x="14223" fg:w="8"/><text x="43.9983%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="43.7483%" y="309" width="0.0246%" height="15" fill="rgb(238,6,4)" fg:x="14223" fg:w="8"/><text x="43.9983%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.04%)</title><rect x="43.7821%" y="309" width="0.0369%" height="15" fill="rgb(221,151,16)" fg:x="14234" fg:w="12"/><text x="44.0321%" y="319.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (99 samples, 0.30%)</title><rect x="43.5391%" y="421" width="0.3045%" height="15" fill="rgb(251,143,52)" fg:x="14155" fg:w="99"/><text x="43.7891%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (23 samples, 0.07%)</title><rect x="43.7729%" y="405" width="0.0707%" height="15" fill="rgb(206,90,15)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="415.50"></text></g><g><title>core::hash::Hasher::write_isize (23 samples, 0.07%)</title><rect x="43.7729%" y="389" width="0.0707%" height="15" fill="rgb(218,35,8)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (23 samples, 0.07%)</title><rect x="43.7729%" y="373" width="0.0707%" height="15" fill="rgb(239,215,6)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (23 samples, 0.07%)</title><rect x="43.7729%" y="357" width="0.0707%" height="15" fill="rgb(245,116,39)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (23 samples, 0.07%)</title><rect x="43.7729%" y="341" width="0.0707%" height="15" fill="rgb(242,65,28)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (23 samples, 0.07%)</title><rect x="43.7729%" y="325" width="0.0707%" height="15" fill="rgb(252,132,53)" fg:x="14231" fg:w="23"/><text x="44.0229%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.02%)</title><rect x="43.8282%" y="309" width="0.0154%" height="15" fill="rgb(224,159,50)" fg:x="14249" fg:w="5"/><text x="44.0782%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (11 samples, 0.03%)</title><rect x="43.8436%" y="421" width="0.0338%" height="15" fill="rgb(224,93,4)" fg:x="14254" fg:w="11"/><text x="44.0936%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u32 (9 samples, 0.03%)</title><rect x="43.8498%" y="405" width="0.0277%" height="15" fill="rgb(208,81,34)" fg:x="14256" fg:w="9"/><text x="44.0998%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="43.8498%" y="389" width="0.0277%" height="15" fill="rgb(233,92,54)" fg:x="14256" fg:w="9"/><text x="44.0998%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="43.8498%" y="373" width="0.0277%" height="15" fill="rgb(237,21,14)" fg:x="14256" fg:w="9"/><text x="44.0998%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="43.8498%" y="357" width="0.0277%" height="15" fill="rgb(249,128,51)" fg:x="14256" fg:w="9"/><text x="44.0998%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.02%)</title><rect x="43.9759%" y="341" width="0.0246%" height="15" fill="rgb(223,129,24)" fg:x="14297" fg:w="8"/><text x="44.2259%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="44.0036%" y="341" width="0.0123%" height="15" fill="rgb(231,168,25)" fg:x="14306" fg:w="4"/><text x="44.2536%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (46 samples, 0.14%)</title><rect x="43.8775%" y="421" width="0.1415%" height="15" fill="rgb(224,39,20)" fg:x="14265" fg:w="46"/><text x="44.1275%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.07%)</title><rect x="43.9513%" y="405" width="0.0677%" height="15" fill="rgb(225,152,53)" fg:x="14289" fg:w="22"/><text x="44.2013%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="43.9574%" y="389" width="0.0615%" height="15" fill="rgb(252,17,24)" fg:x="14291" fg:w="20"/><text x="44.2074%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="43.9574%" y="373" width="0.0615%" height="15" fill="rgb(250,114,30)" fg:x="14291" fg:w="20"/><text x="44.2074%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="43.9574%" y="357" width="0.0615%" height="15" fill="rgb(229,5,4)" fg:x="14291" fg:w="20"/><text x="44.2074%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (159 samples, 0.49%)</title><rect x="43.5330%" y="453" width="0.4891%" height="15" fill="rgb(225,176,49)" fg:x="14153" fg:w="159"/><text x="43.7830%" y="463.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (158 samples, 0.49%)</title><rect x="43.5360%" y="437" width="0.4860%" height="15" fill="rgb(224,221,49)" fg:x="14154" fg:w="158"/><text x="43.7860%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.05%)</title><rect x="44.0682%" y="357" width="0.0461%" height="15" fill="rgb(253,169,27)" fg:x="14327" fg:w="15"/><text x="44.3182%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (197 samples, 0.61%)</title><rect x="43.5237%" y="469" width="0.6059%" height="15" fill="rgb(211,206,16)" fg:x="14150" fg:w="197"/><text x="43.7737%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (35 samples, 0.11%)</title><rect x="44.0220%" y="453" width="0.1077%" height="15" fill="rgb(244,87,35)" fg:x="14312" fg:w="35"/><text x="44.2720%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (35 samples, 0.11%)</title><rect x="44.0220%" y="437" width="0.1077%" height="15" fill="rgb(246,28,10)" fg:x="14312" fg:w="35"/><text x="44.2720%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (35 samples, 0.11%)</title><rect x="44.0220%" y="421" width="0.1077%" height="15" fill="rgb(229,12,44)" fg:x="14312" fg:w="35"/><text x="44.2720%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (33 samples, 0.10%)</title><rect x="44.0282%" y="405" width="0.1015%" height="15" fill="rgb(210,145,37)" fg:x="14314" fg:w="33"/><text x="44.2782%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (32 samples, 0.10%)</title><rect x="44.0313%" y="389" width="0.0984%" height="15" fill="rgb(227,112,52)" fg:x="14315" fg:w="32"/><text x="44.2813%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (32 samples, 0.10%)</title><rect x="44.0313%" y="373" width="0.0984%" height="15" fill="rgb(238,155,34)" fg:x="14315" fg:w="32"/><text x="44.2813%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="44.1697%" y="389" width="0.0154%" height="15" fill="rgb(239,226,36)" fg:x="14360" fg:w="5"/><text x="44.4197%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.02%)</title><rect x="44.1850%" y="389" width="0.0154%" height="15" fill="rgb(230,16,23)" fg:x="14365" fg:w="5"/><text x="44.4350%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (24 samples, 0.07%)</title><rect x="44.1297%" y="469" width="0.0738%" height="15" fill="rgb(236,171,36)" fg:x="14347" fg:w="24"/><text x="44.3797%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u32 (16 samples, 0.05%)</title><rect x="44.1543%" y="453" width="0.0492%" height="15" fill="rgb(221,22,14)" fg:x="14355" fg:w="16"/><text x="44.4043%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.05%)</title><rect x="44.1543%" y="437" width="0.0492%" height="15" fill="rgb(242,43,11)" fg:x="14355" fg:w="16"/><text x="44.4043%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="44.1635%" y="421" width="0.0400%" height="15" fill="rgb(232,69,23)" fg:x="14358" fg:w="13"/><text x="44.4135%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.04%)</title><rect x="44.1635%" y="405" width="0.0400%" height="15" fill="rgb(216,180,54)" fg:x="14358" fg:w="13"/><text x="44.4135%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.06%)</title><rect x="44.3419%" y="389" width="0.0615%" height="15" fill="rgb(216,5,24)" fg:x="14416" fg:w="20"/><text x="44.5919%" y="399.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="44.4034%" y="389" width="0.0123%" height="15" fill="rgb(225,89,9)" fg:x="14436" fg:w="4"/><text x="44.6534%" y="399.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="44.4034%" y="373" width="0.0123%" height="15" fill="rgb(243,75,33)" fg:x="14436" fg:w="4"/><text x="44.6534%" y="383.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="44.4034%" y="357" width="0.0123%" height="15" fill="rgb(247,141,45)" fg:x="14436" fg:w="4"/><text x="44.6534%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="44.4157%" y="389" width="0.0246%" height="15" fill="rgb(232,177,36)" fg:x="14440" fg:w="8"/><text x="44.6657%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (305 samples, 0.94%)</title><rect x="43.5053%" y="501" width="0.9381%" height="15" fill="rgb(219,125,36)" fg:x="14144" fg:w="305"/><text x="43.7553%" y="511.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (303 samples, 0.93%)</title><rect x="43.5114%" y="485" width="0.9320%" height="15" fill="rgb(227,94,9)" fg:x="14146" fg:w="303"/><text x="43.7614%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (78 samples, 0.24%)</title><rect x="44.2035%" y="469" width="0.2399%" height="15" fill="rgb(240,34,52)" fg:x="14371" fg:w="78"/><text x="44.4535%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (53 samples, 0.16%)</title><rect x="44.2804%" y="453" width="0.1630%" height="15" fill="rgb(216,45,12)" fg:x="14396" fg:w="53"/><text x="44.5304%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (53 samples, 0.16%)</title><rect x="44.2804%" y="437" width="0.1630%" height="15" fill="rgb(246,21,19)" fg:x="14396" fg:w="53"/><text x="44.5304%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (52 samples, 0.16%)</title><rect x="44.2835%" y="421" width="0.1599%" height="15" fill="rgb(213,98,42)" fg:x="14397" fg:w="52"/><text x="44.5335%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.16%)</title><rect x="44.2835%" y="405" width="0.1599%" height="15" fill="rgb(250,136,47)" fg:x="14397" fg:w="52"/><text x="44.5335%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (23 samples, 0.07%)</title><rect x="44.5049%" y="405" width="0.0707%" height="15" fill="rgb(251,124,27)" fg:x="14469" fg:w="23"/><text x="44.7549%" y="415.50"></text></g><g><title>core::cmp::min (16 samples, 0.05%)</title><rect x="44.5757%" y="405" width="0.0492%" height="15" fill="rgb(229,180,14)" fg:x="14492" fg:w="16"/><text x="44.8257%" y="415.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.05%)</title><rect x="44.5757%" y="389" width="0.0492%" height="15" fill="rgb(245,216,25)" fg:x="14492" fg:w="16"/><text x="44.8257%" y="399.50"></text></g><g><title>core::cmp::min_by (16 samples, 0.05%)</title><rect x="44.5757%" y="373" width="0.0492%" height="15" fill="rgb(251,43,5)" fg:x="14492" fg:w="16"/><text x="44.8257%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.03%)</title><rect x="44.5972%" y="357" width="0.0277%" height="15" fill="rgb(250,128,24)" fg:x="14499" fg:w="9"/><text x="44.8472%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.02%)</title><rect x="44.6064%" y="341" width="0.0185%" height="15" fill="rgb(217,117,27)" fg:x="14502" fg:w="6"/><text x="44.8564%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="44.6249%" y="405" width="0.0246%" height="15" fill="rgb(245,147,4)" fg:x="14508" fg:w="8"/><text x="44.8749%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (380 samples, 1.17%)</title><rect x="43.4899%" y="517" width="1.1688%" height="15" fill="rgb(242,201,35)" fg:x="14139" fg:w="380"/><text x="43.7399%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (70 samples, 0.22%)</title><rect x="44.4434%" y="501" width="0.2153%" height="15" fill="rgb(218,181,1)" fg:x="14449" fg:w="70"/><text x="44.6934%" y="511.50"></text></g><g><title>core::hash::Hasher::write_isize (69 samples, 0.21%)</title><rect x="44.4465%" y="485" width="0.2122%" height="15" fill="rgb(222,6,29)" fg:x="14450" fg:w="69"/><text x="44.6965%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (69 samples, 0.21%)</title><rect x="44.4465%" y="469" width="0.2122%" height="15" fill="rgb(208,186,3)" fg:x="14450" fg:w="69"/><text x="44.6965%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (69 samples, 0.21%)</title><rect x="44.4465%" y="453" width="0.2122%" height="15" fill="rgb(216,36,26)" fg:x="14450" fg:w="69"/><text x="44.6965%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (68 samples, 0.21%)</title><rect x="44.4496%" y="437" width="0.2092%" height="15" fill="rgb(248,201,23)" fg:x="14451" fg:w="68"/><text x="44.6996%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (68 samples, 0.21%)</title><rect x="44.4496%" y="421" width="0.2092%" height="15" fill="rgb(251,170,31)" fg:x="14451" fg:w="68"/><text x="44.6996%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="44.7233%" y="437" width="0.0215%" height="15" fill="rgb(207,110,25)" fg:x="14540" fg:w="7"/><text x="44.9733%" y="447.50"></text></g><g><title>core::cmp::min (6 samples, 0.02%)</title><rect x="44.7449%" y="437" width="0.0185%" height="15" fill="rgb(250,54,15)" fg:x="14547" fg:w="6"/><text x="44.9949%" y="447.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.02%)</title><rect x="44.7449%" y="421" width="0.0185%" height="15" fill="rgb(227,68,33)" fg:x="14547" fg:w="6"/><text x="44.9949%" y="431.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.02%)</title><rect x="44.7449%" y="405" width="0.0185%" height="15" fill="rgb(238,34,41)" fg:x="14547" fg:w="6"/><text x="44.9949%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (38 samples, 0.12%)</title><rect x="44.6587%" y="517" width="0.1169%" height="15" fill="rgb(220,11,15)" fg:x="14519" fg:w="38"/><text x="44.9087%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u32 (27 samples, 0.08%)</title><rect x="44.6926%" y="501" width="0.0830%" height="15" fill="rgb(246,111,35)" fg:x="14530" fg:w="27"/><text x="44.9426%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="44.6926%" y="485" width="0.0830%" height="15" fill="rgb(209,88,53)" fg:x="14530" fg:w="27"/><text x="44.9426%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.08%)</title><rect x="44.6987%" y="469" width="0.0769%" height="15" fill="rgb(231,185,47)" fg:x="14532" fg:w="25"/><text x="44.9487%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.08%)</title><rect x="44.6987%" y="453" width="0.0769%" height="15" fill="rgb(233,154,1)" fg:x="14532" fg:w="25"/><text x="44.9487%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="44.7633%" y="437" width="0.0123%" height="15" fill="rgb(225,15,46)" fg:x="14553" fg:w="4"/><text x="45.0133%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31 samples, 0.10%)</title><rect x="44.9786%" y="437" width="0.0954%" height="15" fill="rgb(211,135,41)" fg:x="14623" fg:w="31"/><text x="45.2286%" y="447.50"></text></g><g><title>core::cmp::min (13 samples, 0.04%)</title><rect x="45.0740%" y="437" width="0.0400%" height="15" fill="rgb(208,54,0)" fg:x="14654" fg:w="13"/><text x="45.3240%" y="447.50"></text></g><g><title>core::cmp::Ord::min (13 samples, 0.04%)</title><rect x="45.0740%" y="421" width="0.0400%" height="15" fill="rgb(244,136,14)" fg:x="14654" fg:w="13"/><text x="45.3240%" y="431.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.04%)</title><rect x="45.0771%" y="405" width="0.0369%" height="15" fill="rgb(241,56,14)" fg:x="14655" fg:w="12"/><text x="45.3271%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="45.0986%" y="389" width="0.0154%" height="15" fill="rgb(205,80,24)" fg:x="14662" fg:w="5"/><text x="45.3486%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.02%)</title><rect x="45.0986%" y="373" width="0.0154%" height="15" fill="rgb(220,57,4)" fg:x="14662" fg:w="5"/><text x="45.3486%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (118 samples, 0.36%)</title><rect x="44.7756%" y="517" width="0.3630%" height="15" fill="rgb(226,193,50)" fg:x="14557" fg:w="118"/><text x="45.0256%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (73 samples, 0.22%)</title><rect x="44.9140%" y="501" width="0.2245%" height="15" fill="rgb(231,168,22)" fg:x="14602" fg:w="73"/><text x="45.1640%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (71 samples, 0.22%)</title><rect x="44.9202%" y="485" width="0.2184%" height="15" fill="rgb(254,215,14)" fg:x="14604" fg:w="71"/><text x="45.1702%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.22%)</title><rect x="44.9202%" y="469" width="0.2184%" height="15" fill="rgb(211,115,16)" fg:x="14604" fg:w="71"/><text x="45.1702%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.22%)</title><rect x="44.9202%" y="453" width="0.2184%" height="15" fill="rgb(236,210,16)" fg:x="14604" fg:w="71"/><text x="45.1702%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="45.1140%" y="437" width="0.0246%" height="15" fill="rgb(221,94,12)" fg:x="14667" fg:w="8"/><text x="45.3640%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (539 samples, 1.66%)</title><rect x="43.4837%" y="549" width="1.6579%" height="15" fill="rgb(235,218,49)" fg:x="14137" fg:w="539"/><text x="43.7337%" y="559.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (538 samples, 1.65%)</title><rect x="43.4868%" y="533" width="1.6548%" height="15" fill="rgb(217,114,14)" fg:x="14138" fg:w="538"/><text x="43.7368%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.08%)</title><rect x="45.2062%" y="453" width="0.0800%" height="15" fill="rgb(216,145,22)" fg:x="14697" fg:w="26"/><text x="45.4562%" y="463.50"></text></g><g><title>core::cmp::min (11 samples, 0.03%)</title><rect x="45.2862%" y="453" width="0.0338%" height="15" fill="rgb(217,112,39)" fg:x="14723" fg:w="11"/><text x="45.5362%" y="463.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.03%)</title><rect x="45.2862%" y="437" width="0.0338%" height="15" fill="rgb(225,85,32)" fg:x="14723" fg:w="11"/><text x="45.5362%" y="447.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.03%)</title><rect x="45.2893%" y="421" width="0.0308%" height="15" fill="rgb(245,209,47)" fg:x="14724" fg:w="10"/><text x="45.5393%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.05%)</title><rect x="45.3200%" y="453" width="0.0461%" height="15" fill="rgb(218,220,15)" fg:x="14734" fg:w="15"/><text x="45.5700%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (629 samples, 1.93%)</title><rect x="43.4376%" y="565" width="1.9347%" height="15" fill="rgb(222,202,31)" fg:x="14122" fg:w="629"/><text x="43.6876%" y="575.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (75 samples, 0.23%)</title><rect x="45.1416%" y="549" width="0.2307%" height="15" fill="rgb(243,203,4)" fg:x="14676" fg:w="75"/><text x="45.3916%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (74 samples, 0.23%)</title><rect x="45.1447%" y="533" width="0.2276%" height="15" fill="rgb(237,92,17)" fg:x="14677" fg:w="74"/><text x="45.3947%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (74 samples, 0.23%)</title><rect x="45.1447%" y="517" width="0.2276%" height="15" fill="rgb(231,119,7)" fg:x="14677" fg:w="74"/><text x="45.3947%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (74 samples, 0.23%)</title><rect x="45.1447%" y="501" width="0.2276%" height="15" fill="rgb(237,82,41)" fg:x="14677" fg:w="74"/><text x="45.3947%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (70 samples, 0.22%)</title><rect x="45.1570%" y="485" width="0.2153%" height="15" fill="rgb(226,81,48)" fg:x="14681" fg:w="70"/><text x="45.4070%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (70 samples, 0.22%)</title><rect x="45.1570%" y="469" width="0.2153%" height="15" fill="rgb(234,70,51)" fg:x="14681" fg:w="70"/><text x="45.4070%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (17 samples, 0.05%)</title><rect x="45.4523%" y="485" width="0.0523%" height="15" fill="rgb(251,86,4)" fg:x="14777" fg:w="17"/><text x="45.7023%" y="495.50"></text></g><g><title>core::cmp::min (10 samples, 0.03%)</title><rect x="45.5046%" y="485" width="0.0308%" height="15" fill="rgb(244,144,28)" fg:x="14794" fg:w="10"/><text x="45.7546%" y="495.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.03%)</title><rect x="45.5046%" y="469" width="0.0308%" height="15" fill="rgb(232,161,39)" fg:x="14794" fg:w="10"/><text x="45.7546%" y="479.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.03%)</title><rect x="45.5046%" y="453" width="0.0308%" height="15" fill="rgb(247,34,51)" fg:x="14794" fg:w="10"/><text x="45.7546%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="45.5231%" y="437" width="0.0123%" height="15" fill="rgb(225,132,2)" fg:x="14800" fg:w="4"/><text x="45.7731%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (59 samples, 0.18%)</title><rect x="45.3723%" y="565" width="0.1815%" height="15" fill="rgb(209,159,44)" fg:x="14751" fg:w="59"/><text x="45.6223%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (45 samples, 0.14%)</title><rect x="45.4154%" y="549" width="0.1384%" height="15" fill="rgb(251,214,1)" fg:x="14765" fg:w="45"/><text x="45.6654%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (42 samples, 0.13%)</title><rect x="45.4246%" y="533" width="0.1292%" height="15" fill="rgb(247,84,47)" fg:x="14768" fg:w="42"/><text x="45.6746%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (41 samples, 0.13%)</title><rect x="45.4277%" y="517" width="0.1261%" height="15" fill="rgb(240,111,43)" fg:x="14769" fg:w="41"/><text x="45.6777%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.13%)</title><rect x="45.4277%" y="501" width="0.1261%" height="15" fill="rgb(215,214,35)" fg:x="14769" fg:w="41"/><text x="45.6777%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.02%)</title><rect x="45.5354%" y="485" width="0.0185%" height="15" fill="rgb(248,207,23)" fg:x="14804" fg:w="6"/><text x="45.7854%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (47 samples, 0.14%)</title><rect x="45.8060%" y="485" width="0.1446%" height="15" fill="rgb(214,186,4)" fg:x="14892" fg:w="47"/><text x="46.0560%" y="495.50"></text></g><g><title>core::cmp::min (9 samples, 0.03%)</title><rect x="45.9506%" y="485" width="0.0277%" height="15" fill="rgb(220,133,22)" fg:x="14939" fg:w="9"/><text x="46.2006%" y="495.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.03%)</title><rect x="45.9506%" y="469" width="0.0277%" height="15" fill="rgb(239,134,19)" fg:x="14939" fg:w="9"/><text x="46.2006%" y="479.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.03%)</title><rect x="45.9506%" y="453" width="0.0277%" height="15" fill="rgb(250,140,9)" fg:x="14939" fg:w="9"/><text x="46.2006%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="45.9537%" y="437" width="0.0246%" height="15" fill="rgb(225,59,14)" fg:x="14940" fg:w="8"/><text x="46.2037%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.02%)</title><rect x="45.9537%" y="421" width="0.0246%" height="15" fill="rgb(214,152,51)" fg:x="14940" fg:w="8"/><text x="46.2037%" y="431.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (852 samples, 2.62%)</title><rect x="43.4253%" y="597" width="2.6207%" height="15" fill="rgb(251,227,43)" fg:x="14118" fg:w="852"/><text x="43.6753%" y="607.50">&lt;a..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (850 samples, 2.61%)</title><rect x="43.4315%" y="581" width="2.6145%" height="15" fill="rgb(241,96,17)" fg:x="14120" fg:w="850"/><text x="43.6815%" y="591.50">&lt;a..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (160 samples, 0.49%)</title><rect x="45.5538%" y="565" width="0.4921%" height="15" fill="rgb(234,198,43)" fg:x="14810" fg:w="160"/><text x="45.8038%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (102 samples, 0.31%)</title><rect x="45.7322%" y="549" width="0.3137%" height="15" fill="rgb(220,108,29)" fg:x="14868" fg:w="102"/><text x="45.9822%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (100 samples, 0.31%)</title><rect x="45.7384%" y="533" width="0.3076%" height="15" fill="rgb(226,163,33)" fg:x="14870" fg:w="100"/><text x="45.9884%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (100 samples, 0.31%)</title><rect x="45.7384%" y="517" width="0.3076%" height="15" fill="rgb(205,194,45)" fg:x="14870" fg:w="100"/><text x="45.9884%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (100 samples, 0.31%)</title><rect x="45.7384%" y="501" width="0.3076%" height="15" fill="rgb(206,143,44)" fg:x="14870" fg:w="100"/><text x="45.9884%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (22 samples, 0.07%)</title><rect x="45.9783%" y="485" width="0.0677%" height="15" fill="rgb(236,136,36)" fg:x="14948" fg:w="22"/><text x="46.2283%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.12%)</title><rect x="46.1352%" y="501" width="0.1200%" height="15" fill="rgb(249,172,42)" fg:x="14999" fg:w="39"/><text x="46.3852%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="46.2428%" y="485" width="0.0123%" height="15" fill="rgb(216,139,23)" fg:x="15034" fg:w="4"/><text x="46.4928%" y="495.50"></text></g><g><title>core::cmp::min (16 samples, 0.05%)</title><rect x="46.2551%" y="501" width="0.0492%" height="15" fill="rgb(207,166,20)" fg:x="15038" fg:w="16"/><text x="46.5051%" y="511.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.05%)</title><rect x="46.2551%" y="485" width="0.0492%" height="15" fill="rgb(210,209,22)" fg:x="15038" fg:w="16"/><text x="46.5051%" y="495.50"></text></g><g><title>core::cmp::min_by (15 samples, 0.05%)</title><rect x="46.2582%" y="469" width="0.0461%" height="15" fill="rgb(232,118,20)" fg:x="15039" fg:w="15"/><text x="46.5082%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="46.2828%" y="453" width="0.0215%" height="15" fill="rgb(238,113,42)" fg:x="15047" fg:w="7"/><text x="46.5328%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.02%)</title><rect x="46.2889%" y="437" width="0.0154%" height="15" fill="rgb(231,42,5)" fg:x="15049" fg:w="5"/><text x="46.5389%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="46.3043%" y="501" width="0.0246%" height="15" fill="rgb(243,166,24)" fg:x="15054" fg:w="8"/><text x="46.5543%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="46.3166%" y="485" width="0.0123%" height="15" fill="rgb(237,226,12)" fg:x="15058" fg:w="4"/><text x="46.5666%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (957 samples, 2.94%)</title><rect x="43.3884%" y="613" width="2.9436%" height="15" fill="rgb(229,133,24)" fg:x="14106" fg:w="957"/><text x="43.6384%" y="623.50">&lt;c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (93 samples, 0.29%)</title><rect x="46.0460%" y="597" width="0.2861%" height="15" fill="rgb(238,33,43)" fg:x="14970" fg:w="93"/><text x="46.2960%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (93 samples, 0.29%)</title><rect x="46.0460%" y="581" width="0.2861%" height="15" fill="rgb(227,59,38)" fg:x="14970" fg:w="93"/><text x="46.2960%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (92 samples, 0.28%)</title><rect x="46.0490%" y="565" width="0.2830%" height="15" fill="rgb(230,97,0)" fg:x="14971" fg:w="92"/><text x="46.2990%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (90 samples, 0.28%)</title><rect x="46.0552%" y="549" width="0.2768%" height="15" fill="rgb(250,173,50)" fg:x="14973" fg:w="90"/><text x="46.3052%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (90 samples, 0.28%)</title><rect x="46.0552%" y="533" width="0.2768%" height="15" fill="rgb(240,15,50)" fg:x="14973" fg:w="90"/><text x="46.3052%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.27%)</title><rect x="46.0583%" y="517" width="0.2738%" height="15" fill="rgb(221,93,22)" fg:x="14974" fg:w="89"/><text x="46.3083%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="46.3966%" y="533" width="0.0215%" height="15" fill="rgb(245,180,53)" fg:x="15084" fg:w="7"/><text x="46.6466%" y="543.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="46.4181%" y="533" width="0.0154%" height="15" fill="rgb(231,88,51)" fg:x="15091" fg:w="5"/><text x="46.6681%" y="543.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="46.4181%" y="517" width="0.0154%" height="15" fill="rgb(240,58,21)" fg:x="15091" fg:w="5"/><text x="46.6681%" y="527.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="46.4212%" y="501" width="0.0123%" height="15" fill="rgb(237,21,10)" fg:x="15092" fg:w="4"/><text x="46.6712%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="46.4335%" y="533" width="0.0215%" height="15" fill="rgb(218,43,11)" fg:x="15096" fg:w="7"/><text x="46.6835%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (41 samples, 0.13%)</title><rect x="46.3320%" y="613" width="0.1261%" height="15" fill="rgb(218,221,29)" fg:x="15063" fg:w="41"/><text x="46.5820%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u32 (30 samples, 0.09%)</title><rect x="46.3658%" y="597" width="0.0923%" height="15" fill="rgb(214,118,42)" fg:x="15074" fg:w="30"/><text x="46.6158%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="46.3689%" y="581" width="0.0892%" height="15" fill="rgb(251,200,26)" fg:x="15075" fg:w="29"/><text x="46.6189%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="46.3720%" y="565" width="0.0861%" height="15" fill="rgb(237,101,39)" fg:x="15076" fg:w="28"/><text x="46.6220%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="46.3720%" y="549" width="0.0861%" height="15" fill="rgb(251,117,11)" fg:x="15076" fg:w="28"/><text x="46.6220%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (44 samples, 0.14%)</title><rect x="46.7165%" y="533" width="0.1353%" height="15" fill="rgb(216,223,23)" fg:x="15188" fg:w="44"/><text x="46.9665%" y="543.50"></text></g><g><title>core::cmp::min (13 samples, 0.04%)</title><rect x="46.8518%" y="533" width="0.0400%" height="15" fill="rgb(251,54,12)" fg:x="15232" fg:w="13"/><text x="47.1018%" y="543.50"></text></g><g><title>core::cmp::Ord::min (13 samples, 0.04%)</title><rect x="46.8518%" y="517" width="0.0400%" height="15" fill="rgb(254,176,54)" fg:x="15232" fg:w="13"/><text x="47.1018%" y="527.50"></text></g><g><title>core::cmp::min_by (13 samples, 0.04%)</title><rect x="46.8518%" y="501" width="0.0400%" height="15" fill="rgb(210,32,8)" fg:x="15232" fg:w="13"/><text x="47.1018%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="46.8734%" y="485" width="0.0185%" height="15" fill="rgb(235,52,38)" fg:x="15239" fg:w="6"/><text x="47.1234%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (5 samples, 0.02%)</title><rect x="46.8764%" y="469" width="0.0154%" height="15" fill="rgb(231,4,44)" fg:x="15240" fg:w="5"/><text x="47.1264%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="46.8918%" y="533" width="0.0338%" height="15" fill="rgb(249,2,32)" fg:x="15245" fg:w="11"/><text x="47.1418%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,160 samples, 3.57%)</title><rect x="43.3607%" y="645" width="3.5680%" height="15" fill="rgb(224,65,26)" fg:x="14097" fg:w="1160"/><text x="43.6107%" y="655.50">&lt;all..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,155 samples, 3.55%)</title><rect x="43.3761%" y="629" width="3.5526%" height="15" fill="rgb(250,73,40)" fg:x="14102" fg:w="1155"/><text x="43.6261%" y="639.50">&lt;aes..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (153 samples, 0.47%)</title><rect x="46.4581%" y="613" width="0.4706%" height="15" fill="rgb(253,177,16)" fg:x="15104" fg:w="153"/><text x="46.7081%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (89 samples, 0.27%)</title><rect x="46.6550%" y="597" width="0.2738%" height="15" fill="rgb(217,32,34)" fg:x="15168" fg:w="89"/><text x="46.9050%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (87 samples, 0.27%)</title><rect x="46.6611%" y="581" width="0.2676%" height="15" fill="rgb(212,7,10)" fg:x="15170" fg:w="87"/><text x="46.9111%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (87 samples, 0.27%)</title><rect x="46.6611%" y="565" width="0.2676%" height="15" fill="rgb(245,89,8)" fg:x="15170" fg:w="87"/><text x="46.9111%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (87 samples, 0.27%)</title><rect x="46.6611%" y="549" width="0.2676%" height="15" fill="rgb(237,16,53)" fg:x="15170" fg:w="87"/><text x="46.9111%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.08%)</title><rect x="47.0118%" y="549" width="0.0800%" height="15" fill="rgb(250,204,30)" fg:x="15284" fg:w="26"/><text x="47.2618%" y="559.50"></text></g><g><title>core::cmp::min (17 samples, 0.05%)</title><rect x="47.0918%" y="549" width="0.0523%" height="15" fill="rgb(208,77,27)" fg:x="15310" fg:w="17"/><text x="47.3418%" y="559.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.05%)</title><rect x="47.0918%" y="533" width="0.0523%" height="15" fill="rgb(250,204,28)" fg:x="15310" fg:w="17"/><text x="47.3418%" y="543.50"></text></g><g><title>core::cmp::min_by (16 samples, 0.05%)</title><rect x="47.0948%" y="517" width="0.0492%" height="15" fill="rgb(244,63,21)" fg:x="15311" fg:w="16"/><text x="47.3448%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="47.1102%" y="501" width="0.0338%" height="15" fill="rgb(236,85,44)" fg:x="15316" fg:w="11"/><text x="47.3602%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (10 samples, 0.03%)</title><rect x="47.1133%" y="485" width="0.0308%" height="15" fill="rgb(215,98,4)" fg:x="15317" fg:w="10"/><text x="47.3633%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.04%)</title><rect x="47.1440%" y="549" width="0.0369%" height="15" fill="rgb(235,38,11)" fg:x="15327" fg:w="12"/><text x="47.3940%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (82 samples, 0.25%)</title><rect x="46.9318%" y="597" width="0.2522%" height="15" fill="rgb(254,186,25)" fg:x="15258" fg:w="82"/><text x="47.1818%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (81 samples, 0.25%)</title><rect x="46.9349%" y="581" width="0.2491%" height="15" fill="rgb(225,55,31)" fg:x="15259" fg:w="81"/><text x="47.1849%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (79 samples, 0.24%)</title><rect x="46.9410%" y="565" width="0.2430%" height="15" fill="rgb(211,15,21)" fg:x="15261" fg:w="79"/><text x="47.1910%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,252 samples, 3.85%)</title><rect x="43.3361%" y="661" width="3.8510%" height="15" fill="rgb(215,187,41)" fg:x="14089" fg:w="1252"/><text x="43.5861%" y="671.50">&lt;cor..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (84 samples, 0.26%)</title><rect x="46.9287%" y="645" width="0.2584%" height="15" fill="rgb(248,69,32)" fg:x="15257" fg:w="84"/><text x="47.1787%" y="655.50"></text></g><g><title>core::hash::Hasher::write_isize (84 samples, 0.26%)</title><rect x="46.9287%" y="629" width="0.2584%" height="15" fill="rgb(252,102,52)" fg:x="15257" fg:w="84"/><text x="47.1787%" y="639.50"></text></g><g><title>core::hash::Hasher::write_usize (84 samples, 0.26%)</title><rect x="46.9287%" y="613" width="0.2584%" height="15" fill="rgb(253,140,32)" fg:x="15257" fg:w="84"/><text x="47.1787%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="47.2517%" y="581" width="0.0215%" height="15" fill="rgb(216,56,42)" fg:x="15362" fg:w="7"/><text x="47.5017%" y="591.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="47.2732%" y="581" width="0.0154%" height="15" fill="rgb(216,184,14)" fg:x="15369" fg:w="5"/><text x="47.5232%" y="591.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="47.2732%" y="565" width="0.0154%" height="15" fill="rgb(237,187,27)" fg:x="15369" fg:w="5"/><text x="47.5232%" y="575.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.02%)</title><rect x="47.2732%" y="549" width="0.0154%" height="15" fill="rgb(219,65,3)" fg:x="15369" fg:w="5"/><text x="47.5232%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (39 samples, 0.12%)</title><rect x="47.1871%" y="661" width="0.1200%" height="15" fill="rgb(245,83,25)" fg:x="15341" fg:w="39"/><text x="47.4371%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u32 (29 samples, 0.09%)</title><rect x="47.2179%" y="645" width="0.0892%" height="15" fill="rgb(214,205,45)" fg:x="15351" fg:w="29"/><text x="47.4679%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="47.2179%" y="629" width="0.0892%" height="15" fill="rgb(241,20,18)" fg:x="15351" fg:w="29"/><text x="47.4679%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="47.2179%" y="613" width="0.0892%" height="15" fill="rgb(232,163,23)" fg:x="15351" fg:w="29"/><text x="47.4679%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="47.2179%" y="597" width="0.0892%" height="15" fill="rgb(214,5,46)" fg:x="15351" fg:w="29"/><text x="47.4679%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.02%)</title><rect x="47.2886%" y="581" width="0.0185%" height="15" fill="rgb(229,78,17)" fg:x="15374" fg:w="6"/><text x="47.5386%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (33 samples, 0.10%)</title><rect x="47.5039%" y="581" width="0.1015%" height="15" fill="rgb(248,89,10)" fg:x="15444" fg:w="33"/><text x="47.7539%" y="591.50"></text></g><g><title>core::cmp::min (10 samples, 0.03%)</title><rect x="47.6054%" y="581" width="0.0308%" height="15" fill="rgb(248,54,15)" fg:x="15477" fg:w="10"/><text x="47.8554%" y="591.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.03%)</title><rect x="47.6054%" y="565" width="0.0308%" height="15" fill="rgb(223,116,6)" fg:x="15477" fg:w="10"/><text x="47.8554%" y="575.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.03%)</title><rect x="47.6054%" y="549" width="0.0308%" height="15" fill="rgb(205,125,38)" fg:x="15477" fg:w="10"/><text x="47.8554%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (122 samples, 0.38%)</title><rect x="47.3071%" y="661" width="0.3753%" height="15" fill="rgb(251,78,38)" fg:x="15380" fg:w="122"/><text x="47.5571%" y="671.50"></text></g><g><title>core::hash::Hasher::write_usize (80 samples, 0.25%)</title><rect x="47.4363%" y="645" width="0.2461%" height="15" fill="rgb(253,78,28)" fg:x="15422" fg:w="80"/><text x="47.6863%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (80 samples, 0.25%)</title><rect x="47.4363%" y="629" width="0.2461%" height="15" fill="rgb(209,120,3)" fg:x="15422" fg:w="80"/><text x="47.6863%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (80 samples, 0.25%)</title><rect x="47.4363%" y="613" width="0.2461%" height="15" fill="rgb(238,229,9)" fg:x="15422" fg:w="80"/><text x="47.6863%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (80 samples, 0.25%)</title><rect x="47.4363%" y="597" width="0.2461%" height="15" fill="rgb(253,159,18)" fg:x="15422" fg:w="80"/><text x="47.6863%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (15 samples, 0.05%)</title><rect x="47.6362%" y="581" width="0.0461%" height="15" fill="rgb(244,42,34)" fg:x="15487" fg:w="15"/><text x="47.8862%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,418 samples, 4.36%)</title><rect x="43.3238%" y="693" width="4.3616%" height="15" fill="rgb(224,8,7)" fg:x="14085" fg:w="1418"/><text x="43.5738%" y="703.50">&lt;allo..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,417 samples, 4.36%)</title><rect x="43.3269%" y="677" width="4.3585%" height="15" fill="rgb(210,201,45)" fg:x="14086" fg:w="1417"/><text x="43.5769%" y="687.50">&lt;aes_..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (22 samples, 0.07%)</title><rect x="47.7561%" y="597" width="0.0677%" height="15" fill="rgb(252,185,21)" fg:x="15526" fg:w="22"/><text x="48.0061%" y="607.50"></text></g><g><title>core::cmp::min (14 samples, 0.04%)</title><rect x="47.8238%" y="597" width="0.0431%" height="15" fill="rgb(223,131,1)" fg:x="15548" fg:w="14"/><text x="48.0738%" y="607.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.04%)</title><rect x="47.8238%" y="581" width="0.0431%" height="15" fill="rgb(245,141,16)" fg:x="15548" fg:w="14"/><text x="48.0738%" y="591.50"></text></g><g><title>core::cmp::min_by (13 samples, 0.04%)</title><rect x="47.8269%" y="565" width="0.0400%" height="15" fill="rgb(229,55,45)" fg:x="15549" fg:w="13"/><text x="48.0769%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="47.8484%" y="549" width="0.0185%" height="15" fill="rgb(208,92,15)" fg:x="15556" fg:w="6"/><text x="48.0984%" y="559.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="47.8669%" y="597" width="0.0215%" height="15" fill="rgb(234,185,47)" fg:x="15562" fg:w="7"/><text x="48.1169%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,498 samples, 4.61%)</title><rect x="43.2838%" y="709" width="4.6077%" height="15" fill="rgb(253,104,50)" fg:x="14072" fg:w="1498"/><text x="43.5338%" y="719.50">&lt;core..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (67 samples, 0.21%)</title><rect x="47.6854%" y="693" width="0.2061%" height="15" fill="rgb(205,70,7)" fg:x="15503" fg:w="67"/><text x="47.9354%" y="703.50"></text></g><g><title>core::hash::Hasher::write_isize (67 samples, 0.21%)</title><rect x="47.6854%" y="677" width="0.2061%" height="15" fill="rgb(240,178,43)" fg:x="15503" fg:w="67"/><text x="47.9354%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (67 samples, 0.21%)</title><rect x="47.6854%" y="661" width="0.2061%" height="15" fill="rgb(214,112,2)" fg:x="15503" fg:w="67"/><text x="47.9354%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.20%)</title><rect x="47.6885%" y="645" width="0.2030%" height="15" fill="rgb(206,46,17)" fg:x="15504" fg:w="66"/><text x="47.9385%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (66 samples, 0.20%)</title><rect x="47.6885%" y="629" width="0.2030%" height="15" fill="rgb(225,220,16)" fg:x="15504" fg:w="66"/><text x="47.9385%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (65 samples, 0.20%)</title><rect x="47.6916%" y="613" width="0.1999%" height="15" fill="rgb(238,65,40)" fg:x="15505" fg:w="65"/><text x="47.9416%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="47.9376%" y="629" width="0.0123%" height="15" fill="rgb(230,151,21)" fg:x="15585" fg:w="4"/><text x="48.1876%" y="639.50"></text></g><g><title>core::cmp::min (6 samples, 0.02%)</title><rect x="47.9499%" y="629" width="0.0185%" height="15" fill="rgb(218,58,49)" fg:x="15589" fg:w="6"/><text x="48.1999%" y="639.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.02%)</title><rect x="47.9499%" y="613" width="0.0185%" height="15" fill="rgb(219,179,14)" fg:x="15589" fg:w="6"/><text x="48.1999%" y="623.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.02%)</title><rect x="47.9499%" y="597" width="0.0185%" height="15" fill="rgb(223,72,1)" fg:x="15589" fg:w="6"/><text x="48.1999%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="47.9684%" y="629" width="0.0246%" height="15" fill="rgb(238,126,10)" fg:x="15595" fg:w="8"/><text x="48.2184%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (36 samples, 0.11%)</title><rect x="47.8915%" y="709" width="0.1107%" height="15" fill="rgb(224,206,38)" fg:x="15570" fg:w="36"/><text x="48.1415%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (28 samples, 0.09%)</title><rect x="47.9161%" y="693" width="0.0861%" height="15" fill="rgb(212,201,54)" fg:x="15578" fg:w="28"/><text x="48.1661%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.09%)</title><rect x="47.9161%" y="677" width="0.0861%" height="15" fill="rgb(218,154,48)" fg:x="15578" fg:w="28"/><text x="48.1661%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="47.9192%" y="661" width="0.0830%" height="15" fill="rgb(232,93,24)" fg:x="15579" fg:w="27"/><text x="48.1692%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="47.9192%" y="645" width="0.0830%" height="15" fill="rgb(245,30,21)" fg:x="15579" fg:w="27"/><text x="48.1692%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.07%)</title><rect x="48.1560%" y="629" width="0.0738%" height="15" fill="rgb(242,148,29)" fg:x="15656" fg:w="24"/><text x="48.4060%" y="639.50"></text></g><g><title>core::cmp::min (14 samples, 0.04%)</title><rect x="48.2298%" y="629" width="0.0431%" height="15" fill="rgb(244,153,54)" fg:x="15680" fg:w="14"/><text x="48.4798%" y="639.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.04%)</title><rect x="48.2298%" y="613" width="0.0431%" height="15" fill="rgb(252,87,22)" fg:x="15680" fg:w="14"/><text x="48.4798%" y="623.50"></text></g><g><title>core::cmp::min_by (14 samples, 0.04%)</title><rect x="48.2298%" y="597" width="0.0431%" height="15" fill="rgb(210,51,29)" fg:x="15680" fg:w="14"/><text x="48.4798%" y="607.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.02%)</title><rect x="48.2575%" y="581" width="0.0154%" height="15" fill="rgb(242,136,47)" fg:x="15689" fg:w="5"/><text x="48.5075%" y="591.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,638 samples, 5.04%)</title><rect x="43.2715%" y="741" width="5.0383%" height="15" fill="rgb(238,68,4)" fg:x="14068" fg:w="1638"/><text x="43.5215%" y="751.50">&lt;alloc..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,637 samples, 5.04%)</title><rect x="43.2746%" y="725" width="5.0352%" height="15" fill="rgb(242,161,30)" fg:x="14069" fg:w="1637"/><text x="43.5246%" y="735.50">&lt;aes_g..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (100 samples, 0.31%)</title><rect x="48.0022%" y="709" width="0.3076%" height="15" fill="rgb(218,58,44)" fg:x="15606" fg:w="100"/><text x="48.2522%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (75 samples, 0.23%)</title><rect x="48.0791%" y="693" width="0.2307%" height="15" fill="rgb(252,125,32)" fg:x="15631" fg:w="75"/><text x="48.3291%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (73 samples, 0.22%)</title><rect x="48.0853%" y="677" width="0.2245%" height="15" fill="rgb(219,178,0)" fg:x="15633" fg:w="73"/><text x="48.3353%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (72 samples, 0.22%)</title><rect x="48.0883%" y="661" width="0.2215%" height="15" fill="rgb(213,152,7)" fg:x="15634" fg:w="72"/><text x="48.3383%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.22%)</title><rect x="48.0914%" y="645" width="0.2184%" height="15" fill="rgb(249,109,34)" fg:x="15635" fg:w="71"/><text x="48.3414%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.04%)</title><rect x="48.2729%" y="629" width="0.0369%" height="15" fill="rgb(232,96,21)" fg:x="15694" fg:w="12"/><text x="48.5229%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.06%)</title><rect x="48.3529%" y="645" width="0.0554%" height="15" fill="rgb(228,27,39)" fg:x="15720" fg:w="18"/><text x="48.6029%" y="655.50"></text></g><g><title>core::cmp::min (5 samples, 0.02%)</title><rect x="48.4082%" y="645" width="0.0154%" height="15" fill="rgb(211,182,52)" fg:x="15738" fg:w="5"/><text x="48.6582%" y="655.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.02%)</title><rect x="48.4082%" y="629" width="0.0154%" height="15" fill="rgb(234,178,38)" fg:x="15738" fg:w="5"/><text x="48.6582%" y="639.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="48.4113%" y="613" width="0.0123%" height="15" fill="rgb(221,111,3)" fg:x="15739" fg:w="4"/><text x="48.6613%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,682 samples, 5.17%)</title><rect x="43.2592%" y="757" width="5.1736%" height="15" fill="rgb(228,175,21)" fg:x="14064" fg:w="1682"/><text x="43.5092%" y="767.50">&lt;core:..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (40 samples, 0.12%)</title><rect x="48.3098%" y="741" width="0.1230%" height="15" fill="rgb(228,174,43)" fg:x="15706" fg:w="40"/><text x="48.5598%" y="751.50"></text></g><g><title>core::hash::Hasher::write_isize (40 samples, 0.12%)</title><rect x="48.3098%" y="725" width="0.1230%" height="15" fill="rgb(211,191,0)" fg:x="15706" fg:w="40"/><text x="48.5598%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (40 samples, 0.12%)</title><rect x="48.3098%" y="709" width="0.1230%" height="15" fill="rgb(253,117,3)" fg:x="15706" fg:w="40"/><text x="48.5598%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (40 samples, 0.12%)</title><rect x="48.3098%" y="693" width="0.1230%" height="15" fill="rgb(241,127,19)" fg:x="15706" fg:w="40"/><text x="48.5598%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (39 samples, 0.12%)</title><rect x="48.3129%" y="677" width="0.1200%" height="15" fill="rgb(218,103,12)" fg:x="15707" fg:w="39"/><text x="48.5629%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (39 samples, 0.12%)</title><rect x="48.3129%" y="661" width="0.1200%" height="15" fill="rgb(236,214,43)" fg:x="15707" fg:w="39"/><text x="48.5629%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="48.4728%" y="677" width="0.0215%" height="15" fill="rgb(244,144,19)" fg:x="15759" fg:w="7"/><text x="48.7228%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (27 samples, 0.08%)</title><rect x="48.4328%" y="757" width="0.0830%" height="15" fill="rgb(246,188,10)" fg:x="15746" fg:w="27"/><text x="48.6828%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u32 (20 samples, 0.06%)</title><rect x="48.4544%" y="741" width="0.0615%" height="15" fill="rgb(212,193,33)" fg:x="15753" fg:w="20"/><text x="48.7044%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="48.4544%" y="725" width="0.0615%" height="15" fill="rgb(241,51,29)" fg:x="15753" fg:w="20"/><text x="48.7044%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="48.4574%" y="709" width="0.0584%" height="15" fill="rgb(211,58,19)" fg:x="15754" fg:w="19"/><text x="48.7074%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="48.4574%" y="693" width="0.0584%" height="15" fill="rgb(229,111,26)" fg:x="15754" fg:w="19"/><text x="48.7074%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="48.5036%" y="677" width="0.0123%" height="15" fill="rgb(213,115,40)" fg:x="15769" fg:w="4"/><text x="48.7536%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.03%)</title><rect x="48.6020%" y="677" width="0.0338%" height="15" fill="rgb(209,56,44)" fg:x="15801" fg:w="11"/><text x="48.8520%" y="687.50"></text></g><g><title>core::cmp::min (4 samples, 0.01%)</title><rect x="48.6358%" y="677" width="0.0123%" height="15" fill="rgb(230,108,32)" fg:x="15812" fg:w="4"/><text x="48.8858%" y="687.50"></text></g><g><title>core::cmp::Ord::min (4 samples, 0.01%)</title><rect x="48.6358%" y="661" width="0.0123%" height="15" fill="rgb(216,165,31)" fg:x="15812" fg:w="4"/><text x="48.8858%" y="671.50"></text></g><g><title>core::cmp::min_by (4 samples, 0.01%)</title><rect x="48.6358%" y="645" width="0.0123%" height="15" fill="rgb(218,122,21)" fg:x="15812" fg:w="4"/><text x="48.8858%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,761 samples, 5.42%)</title><rect x="43.2561%" y="789" width="5.4166%" height="15" fill="rgb(223,224,47)" fg:x="14063" fg:w="1761"/><text x="43.5061%" y="799.50">&lt;alloc:..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,761 samples, 5.42%)</title><rect x="43.2561%" y="773" width="5.4166%" height="15" fill="rgb(238,102,44)" fg:x="14063" fg:w="1761"/><text x="43.5061%" y="783.50">&lt;aes_gr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (51 samples, 0.16%)</title><rect x="48.5159%" y="757" width="0.1569%" height="15" fill="rgb(236,46,40)" fg:x="15773" fg:w="51"/><text x="48.7659%" y="767.50"></text></g><g><title>core::hash::Hasher::write_usize (37 samples, 0.11%)</title><rect x="48.5589%" y="741" width="0.1138%" height="15" fill="rgb(247,202,50)" fg:x="15787" fg:w="37"/><text x="48.8089%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (35 samples, 0.11%)</title><rect x="48.5651%" y="725" width="0.1077%" height="15" fill="rgb(209,99,20)" fg:x="15789" fg:w="35"/><text x="48.8151%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (35 samples, 0.11%)</title><rect x="48.5651%" y="709" width="0.1077%" height="15" fill="rgb(252,27,34)" fg:x="15789" fg:w="35"/><text x="48.8151%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (35 samples, 0.11%)</title><rect x="48.5651%" y="693" width="0.1077%" height="15" fill="rgb(215,206,23)" fg:x="15789" fg:w="35"/><text x="48.8151%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.02%)</title><rect x="48.6481%" y="677" width="0.0246%" height="15" fill="rgb(212,135,36)" fg:x="15816" fg:w="8"/><text x="48.8981%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.03%)</title><rect x="48.7066%" y="693" width="0.0277%" height="15" fill="rgb(240,189,1)" fg:x="15835" fg:w="9"/><text x="48.9566%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="48.6851%" y="741" width="0.0584%" height="15" fill="rgb(242,56,20)" fg:x="15828" fg:w="19"/><text x="48.9351%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="48.6851%" y="725" width="0.0584%" height="15" fill="rgb(247,132,33)" fg:x="15828" fg:w="19"/><text x="48.9351%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="48.6851%" y="709" width="0.0584%" height="15" fill="rgb(208,149,11)" fg:x="15828" fg:w="19"/><text x="48.9351%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,789 samples, 5.50%)</title><rect x="43.2438%" y="805" width="5.5028%" height="15" fill="rgb(211,33,11)" fg:x="14059" fg:w="1789"/><text x="43.4938%" y="815.50">&lt;core::..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (24 samples, 0.07%)</title><rect x="48.6728%" y="789" width="0.0738%" height="15" fill="rgb(221,29,38)" fg:x="15824" fg:w="24"/><text x="48.9228%" y="799.50"></text></g><g><title>core::hash::Hasher::write_isize (24 samples, 0.07%)</title><rect x="48.6728%" y="773" width="0.0738%" height="15" fill="rgb(206,182,49)" fg:x="15824" fg:w="24"/><text x="48.9228%" y="783.50"></text></g><g><title>core::hash::Hasher::write_usize (23 samples, 0.07%)</title><rect x="48.6758%" y="757" width="0.0707%" height="15" fill="rgb(216,140,1)" fg:x="15825" fg:w="23"/><text x="48.9258%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (8 samples, 0.02%)</title><rect x="48.7466%" y="805" width="0.0246%" height="15" fill="rgb(232,57,40)" fg:x="15848" fg:w="8"/><text x="48.9966%" y="815.50"></text></g><g><title>core::hash::Hasher::write_u32 (8 samples, 0.02%)</title><rect x="48.7466%" y="789" width="0.0246%" height="15" fill="rgb(224,186,18)" fg:x="15848" fg:w="8"/><text x="48.9966%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="48.7466%" y="773" width="0.0246%" height="15" fill="rgb(215,121,11)" fg:x="15848" fg:w="8"/><text x="48.9966%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="48.7466%" y="757" width="0.0246%" height="15" fill="rgb(245,147,10)" fg:x="15848" fg:w="8"/><text x="48.9966%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="48.7466%" y="741" width="0.0246%" height="15" fill="rgb(238,153,13)" fg:x="15848" fg:w="8"/><text x="48.9966%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.04%)</title><rect x="48.8727%" y="725" width="0.0400%" height="15" fill="rgb(233,108,0)" fg:x="15889" fg:w="13"/><text x="49.1227%" y="735.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1,867 samples, 5.74%)</title><rect x="43.1915%" y="917" width="5.7427%" height="15" fill="rgb(212,157,17)" fg:x="14042" fg:w="1867"/><text x="43.4415%" y="927.50">hashbro..</text></g><g><title>hashbrown::map::make_hash (1,867 samples, 5.74%)</title><rect x="43.1915%" y="901" width="5.7427%" height="15" fill="rgb(225,213,38)" fg:x="14042" fg:w="1867"/><text x="43.4415%" y="911.50">hashbro..</text></g><g><title>core::hash::BuildHasher::hash_one (1,867 samples, 5.74%)</title><rect x="43.1915%" y="885" width="5.7427%" height="15" fill="rgb(248,16,11)" fg:x="14042" fg:w="1867"/><text x="43.4415%" y="895.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,856 samples, 5.71%)</title><rect x="43.2254%" y="869" width="5.7088%" height="15" fill="rgb(241,33,4)" fg:x="14053" fg:w="1856"/><text x="43.4754%" y="879.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,856 samples, 5.71%)</title><rect x="43.2254%" y="853" width="5.7088%" height="15" fill="rgb(222,26,43)" fg:x="14053" fg:w="1856"/><text x="43.4754%" y="863.50">core::h..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,855 samples, 5.71%)</title><rect x="43.2284%" y="837" width="5.7058%" height="15" fill="rgb(243,29,36)" fg:x="14054" fg:w="1855"/><text x="43.4784%" y="847.50">&lt;alloc:..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,853 samples, 5.70%)</title><rect x="43.2346%" y="821" width="5.6996%" height="15" fill="rgb(241,9,27)" fg:x="14056" fg:w="1853"/><text x="43.4846%" y="831.50">&lt;aes_gr..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (53 samples, 0.16%)</title><rect x="48.7712%" y="805" width="0.1630%" height="15" fill="rgb(205,117,26)" fg:x="15856" fg:w="53"/><text x="49.0212%" y="815.50"></text></g><g><title>core::hash::Hasher::write_usize (27 samples, 0.08%)</title><rect x="48.8512%" y="789" width="0.0830%" height="15" fill="rgb(209,80,39)" fg:x="15882" fg:w="27"/><text x="49.1012%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="48.8512%" y="773" width="0.0830%" height="15" fill="rgb(239,155,6)" fg:x="15882" fg:w="27"/><text x="49.1012%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.08%)</title><rect x="48.8512%" y="757" width="0.0830%" height="15" fill="rgb(212,104,12)" fg:x="15882" fg:w="27"/><text x="49.1012%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.08%)</title><rect x="48.8542%" y="741" width="0.0800%" height="15" fill="rgb(234,204,3)" fg:x="15883" fg:w="26"/><text x="49.1042%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (5 samples, 0.02%)</title><rect x="48.9188%" y="725" width="0.0154%" height="15" fill="rgb(251,218,7)" fg:x="15904" fg:w="5"/><text x="49.1688%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1,873 samples, 5.76%)</title><rect x="43.1854%" y="933" width="5.7611%" height="15" fill="rgb(221,81,32)" fg:x="14040" fg:w="1873"/><text x="43.4354%" y="943.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (17 samples, 0.05%)</title><rect x="48.9527%" y="901" width="0.0523%" height="15" fill="rgb(214,152,26)" fg:x="15915" fg:w="17"/><text x="49.2027%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.05%)</title><rect x="48.9557%" y="885" width="0.0492%" height="15" fill="rgb(223,22,3)" fg:x="15916" fg:w="16"/><text x="49.2057%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.05%)</title><rect x="48.9557%" y="869" width="0.0492%" height="15" fill="rgb(207,174,7)" fg:x="15916" fg:w="16"/><text x="49.2057%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (21 samples, 0.06%)</title><rect x="48.9527%" y="917" width="0.0646%" height="15" fill="rgb(224,19,52)" fg:x="15915" fg:w="21"/><text x="49.2027%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,900 samples, 5.84%)</title><rect x="43.1762%" y="997" width="5.8442%" height="15" fill="rgb(228,24,14)" fg:x="14037" fg:w="1900"/><text x="43.4262%" y="1007.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,899 samples, 5.84%)</title><rect x="43.1792%" y="981" width="5.8411%" height="15" fill="rgb(230,153,43)" fg:x="14038" fg:w="1899"/><text x="43.4292%" y="991.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1,899 samples, 5.84%)</title><rect x="43.1792%" y="965" width="5.8411%" height="15" fill="rgb(231,106,12)" fg:x="14038" fg:w="1899"/><text x="43.4292%" y="975.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1,899 samples, 5.84%)</title><rect x="43.1792%" y="949" width="5.8411%" height="15" fill="rgb(215,92,2)" fg:x="14038" fg:w="1899"/><text x="43.4292%" y="959.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (23 samples, 0.07%)</title><rect x="48.9496%" y="933" width="0.0707%" height="15" fill="rgb(249,143,25)" fg:x="15914" fg:w="23"/><text x="49.1996%" y="943.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="49.0818%" y="949" width="0.0123%" height="15" fill="rgb(252,7,35)" fg:x="15957" fg:w="4"/><text x="49.3318%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="49.0542%" y="981" width="0.0431%" height="15" fill="rgb(216,69,40)" fg:x="15948" fg:w="14"/><text x="49.3042%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="49.0757%" y="965" width="0.0215%" height="15" fill="rgb(240,36,33)" fg:x="15955" fg:w="7"/><text x="49.3257%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (5 samples, 0.02%)</title><rect x="49.4786%" y="149" width="0.0154%" height="15" fill="rgb(231,128,14)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.02%)</title><rect x="49.4786%" y="133" width="0.0154%" height="15" fill="rgb(245,143,14)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (5 samples, 0.02%)</title><rect x="49.4786%" y="117" width="0.0154%" height="15" fill="rgb(222,130,28)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="127.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (5 samples, 0.02%)</title><rect x="49.4786%" y="101" width="0.0154%" height="15" fill="rgb(212,10,48)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="111.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 0.02%)</title><rect x="49.4786%" y="85" width="0.0154%" height="15" fill="rgb(254,118,45)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="95.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 0.02%)</title><rect x="49.4786%" y="69" width="0.0154%" height="15" fill="rgb(228,6,45)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="79.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.02%)</title><rect x="49.4786%" y="53" width="0.0154%" height="15" fill="rgb(241,18,35)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="63.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.02%)</title><rect x="49.4786%" y="37" width="0.0154%" height="15" fill="rgb(227,214,53)" fg:x="16086" fg:w="5"/><text x="49.7286%" y="47.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="49.4725%" y="229" width="0.0246%" height="15" fill="rgb(224,107,51)" fg:x="16084" fg:w="8"/><text x="49.7225%" y="239.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="49.4725%" y="213" width="0.0246%" height="15" fill="rgb(248,60,28)" fg:x="16084" fg:w="8"/><text x="49.7225%" y="223.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="49.4725%" y="197" width="0.0246%" height="15" fill="rgb(249,101,23)" fg:x="16084" fg:w="8"/><text x="49.7225%" y="207.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="49.4725%" y="181" width="0.0246%" height="15" fill="rgb(228,51,19)" fg:x="16084" fg:w="8"/><text x="49.7225%" y="191.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="49.4786%" y="165" width="0.0185%" height="15" fill="rgb(213,20,6)" fg:x="16086" fg:w="6"/><text x="49.7286%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="49.5063%" y="85" width="0.0185%" height="15" fill="rgb(212,124,10)" fg:x="16095" fg:w="6"/><text x="49.7563%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="49.5063%" y="69" width="0.0185%" height="15" fill="rgb(248,3,40)" fg:x="16095" fg:w="6"/><text x="49.7563%" y="79.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4 samples, 0.01%)</title><rect x="49.5309%" y="37" width="0.0123%" height="15" fill="rgb(223,178,23)" fg:x="16103" fg:w="4"/><text x="49.7809%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (18 samples, 0.06%)</title><rect x="49.5002%" y="213" width="0.0554%" height="15" fill="rgb(240,132,45)" fg:x="16093" fg:w="18"/><text x="49.7502%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (18 samples, 0.06%)</title><rect x="49.5002%" y="197" width="0.0554%" height="15" fill="rgb(245,164,36)" fg:x="16093" fg:w="18"/><text x="49.7502%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (16 samples, 0.05%)</title><rect x="49.5063%" y="181" width="0.0492%" height="15" fill="rgb(231,188,53)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="191.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (16 samples, 0.05%)</title><rect x="49.5063%" y="165" width="0.0492%" height="15" fill="rgb(237,198,39)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="175.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (16 samples, 0.05%)</title><rect x="49.5063%" y="149" width="0.0492%" height="15" fill="rgb(223,120,35)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="159.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (16 samples, 0.05%)</title><rect x="49.5063%" y="133" width="0.0492%" height="15" fill="rgb(253,107,49)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (16 samples, 0.05%)</title><rect x="49.5063%" y="117" width="0.0492%" height="15" fill="rgb(216,44,31)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.05%)</title><rect x="49.5063%" y="101" width="0.0492%" height="15" fill="rgb(253,87,21)" fg:x="16095" fg:w="16"/><text x="49.7563%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.03%)</title><rect x="49.5248%" y="85" width="0.0308%" height="15" fill="rgb(226,18,2)" fg:x="16101" fg:w="10"/><text x="49.7748%" y="95.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.03%)</title><rect x="49.5248%" y="69" width="0.0308%" height="15" fill="rgb(216,8,46)" fg:x="16101" fg:w="10"/><text x="49.7748%" y="79.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.03%)</title><rect x="49.5279%" y="53" width="0.0277%" height="15" fill="rgb(226,140,39)" fg:x="16102" fg:w="9"/><text x="49.7779%" y="63.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="49.5432%" y="37" width="0.0123%" height="15" fill="rgb(221,194,54)" fg:x="16107" fg:w="4"/><text x="49.7932%" y="47.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (32 samples, 0.10%)</title><rect x="49.4663%" y="293" width="0.0984%" height="15" fill="rgb(213,92,11)" fg:x="16082" fg:w="32"/><text x="49.7163%" y="303.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (32 samples, 0.10%)</title><rect x="49.4663%" y="277" width="0.0984%" height="15" fill="rgb(229,162,46)" fg:x="16082" fg:w="32"/><text x="49.7163%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="49.4725%" y="261" width="0.0923%" height="15" fill="rgb(214,111,36)" fg:x="16084" fg:w="30"/><text x="49.7225%" y="271.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="49.4725%" y="245" width="0.0923%" height="15" fill="rgb(207,6,21)" fg:x="16084" fg:w="30"/><text x="49.7225%" y="255.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.07%)</title><rect x="49.4971%" y="229" width="0.0677%" height="15" fill="rgb(213,127,38)" fg:x="16092" fg:w="22"/><text x="49.7471%" y="239.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="49.5678%" y="245" width="0.0123%" height="15" fill="rgb(238,118,32)" fg:x="16115" fg:w="4"/><text x="49.8178%" y="255.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="49.5678%" y="229" width="0.0123%" height="15" fill="rgb(240,139,39)" fg:x="16115" fg:w="4"/><text x="49.8178%" y="239.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="49.5678%" y="213" width="0.0123%" height="15" fill="rgb(235,10,37)" fg:x="16115" fg:w="4"/><text x="49.8178%" y="223.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="49.5678%" y="197" width="0.0123%" height="15" fill="rgb(249,171,38)" fg:x="16115" fg:w="4"/><text x="49.8178%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.02%)</title><rect x="49.6017%" y="117" width="0.0215%" height="15" fill="rgb(242,144,32)" fg:x="16126" fg:w="7"/><text x="49.8517%" y="127.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="49.6078%" y="101" width="0.0154%" height="15" fill="rgb(217,117,21)" fg:x="16128" fg:w="5"/><text x="49.8578%" y="111.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.04%)</title><rect x="49.5894%" y="149" width="0.0431%" height="15" fill="rgb(249,87,1)" fg:x="16122" fg:w="14"/><text x="49.8394%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.04%)</title><rect x="49.5894%" y="133" width="0.0431%" height="15" fill="rgb(248,196,48)" fg:x="16122" fg:w="14"/><text x="49.8394%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (4 samples, 0.01%)</title><rect x="49.6693%" y="101" width="0.0123%" height="15" fill="rgb(251,206,33)" fg:x="16148" fg:w="4"/><text x="49.9193%" y="111.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (42 samples, 0.13%)</title><rect x="49.5678%" y="277" width="0.1292%" height="15" fill="rgb(232,141,28)" fg:x="16115" fg:w="42"/><text x="49.8178%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (42 samples, 0.13%)</title><rect x="49.5678%" y="261" width="0.1292%" height="15" fill="rgb(209,167,14)" fg:x="16115" fg:w="42"/><text x="49.8178%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (38 samples, 0.12%)</title><rect x="49.5801%" y="245" width="0.1169%" height="15" fill="rgb(225,11,50)" fg:x="16119" fg:w="38"/><text x="49.8301%" y="255.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (37 samples, 0.11%)</title><rect x="49.5832%" y="229" width="0.1138%" height="15" fill="rgb(209,50,20)" fg:x="16120" fg:w="37"/><text x="49.8332%" y="239.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (37 samples, 0.11%)</title><rect x="49.5832%" y="213" width="0.1138%" height="15" fill="rgb(212,17,46)" fg:x="16120" fg:w="37"/><text x="49.8332%" y="223.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (37 samples, 0.11%)</title><rect x="49.5832%" y="197" width="0.1138%" height="15" fill="rgb(216,101,39)" fg:x="16120" fg:w="37"/><text x="49.8332%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.11%)</title><rect x="49.5832%" y="181" width="0.1138%" height="15" fill="rgb(212,228,48)" fg:x="16120" fg:w="37"/><text x="49.8332%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.11%)</title><rect x="49.5863%" y="165" width="0.1107%" height="15" fill="rgb(250,6,50)" fg:x="16121" fg:w="36"/><text x="49.8363%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.06%)</title><rect x="49.6324%" y="149" width="0.0646%" height="15" fill="rgb(250,160,48)" fg:x="16136" fg:w="21"/><text x="49.8824%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.06%)</title><rect x="49.6355%" y="133" width="0.0615%" height="15" fill="rgb(244,216,33)" fg:x="16137" fg:w="20"/><text x="49.8855%" y="143.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.05%)</title><rect x="49.6478%" y="117" width="0.0492%" height="15" fill="rgb(207,157,5)" fg:x="16141" fg:w="16"/><text x="49.8978%" y="127.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.01%)</title><rect x="49.6847%" y="101" width="0.0123%" height="15" fill="rgb(228,199,8)" fg:x="16153" fg:w="4"/><text x="49.9347%" y="111.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (88 samples, 0.27%)</title><rect x="49.4540%" y="357" width="0.2707%" height="15" fill="rgb(227,80,20)" fg:x="16078" fg:w="88"/><text x="49.7040%" y="367.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (88 samples, 0.27%)</title><rect x="49.4540%" y="341" width="0.2707%" height="15" fill="rgb(222,9,33)" fg:x="16078" fg:w="88"/><text x="49.7040%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (84 samples, 0.26%)</title><rect x="49.4663%" y="325" width="0.2584%" height="15" fill="rgb(239,44,28)" fg:x="16082" fg:w="84"/><text x="49.7163%" y="335.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (84 samples, 0.26%)</title><rect x="49.4663%" y="309" width="0.2584%" height="15" fill="rgb(249,187,43)" fg:x="16082" fg:w="84"/><text x="49.7163%" y="319.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (52 samples, 0.16%)</title><rect x="49.5648%" y="293" width="0.1599%" height="15" fill="rgb(216,141,28)" fg:x="16114" fg:w="52"/><text x="49.8148%" y="303.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (9 samples, 0.03%)</title><rect x="49.6970%" y="277" width="0.0277%" height="15" fill="rgb(230,154,53)" fg:x="16157" fg:w="9"/><text x="49.9470%" y="287.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (9 samples, 0.03%)</title><rect x="49.6970%" y="261" width="0.0277%" height="15" fill="rgb(227,82,4)" fg:x="16157" fg:w="9"/><text x="49.9470%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (8 samples, 0.02%)</title><rect x="49.7001%" y="245" width="0.0246%" height="15" fill="rgb(220,107,16)" fg:x="16158" fg:w="8"/><text x="49.9501%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (8 samples, 0.02%)</title><rect x="49.7001%" y="229" width="0.0246%" height="15" fill="rgb(207,187,2)" fg:x="16158" fg:w="8"/><text x="49.9501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (8 samples, 0.02%)</title><rect x="49.7001%" y="213" width="0.0246%" height="15" fill="rgb(210,162,52)" fg:x="16158" fg:w="8"/><text x="49.9501%" y="223.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="49.7063%" y="197" width="0.0185%" height="15" fill="rgb(217,216,49)" fg:x="16160" fg:w="6"/><text x="49.9563%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (5 samples, 0.02%)</title><rect x="49.7093%" y="181" width="0.0154%" height="15" fill="rgb(218,146,49)" fg:x="16161" fg:w="5"/><text x="49.9593%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="49.7093%" y="165" width="0.0154%" height="15" fill="rgb(216,55,40)" fg:x="16161" fg:w="5"/><text x="49.9593%" y="175.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="49.7093%" y="149" width="0.0154%" height="15" fill="rgb(208,196,21)" fg:x="16161" fg:w="5"/><text x="49.9593%" y="159.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="49.7370%" y="309" width="0.0123%" height="15" fill="rgb(242,117,42)" fg:x="16170" fg:w="4"/><text x="49.9870%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="49.7616%" y="245" width="0.0185%" height="15" fill="rgb(210,11,23)" fg:x="16178" fg:w="6"/><text x="50.0116%" y="255.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (6 samples, 0.02%)</title><rect x="49.7616%" y="229" width="0.0185%" height="15" fill="rgb(217,110,2)" fg:x="16178" fg:w="6"/><text x="50.0116%" y="239.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="49.7493%" y="309" width="0.0338%" height="15" fill="rgb(229,77,54)" fg:x="16174" fg:w="11"/><text x="49.9993%" y="319.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="49.7493%" y="293" width="0.0338%" height="15" fill="rgb(218,53,16)" fg:x="16174" fg:w="11"/><text x="49.9993%" y="303.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="49.7493%" y="277" width="0.0338%" height="15" fill="rgb(215,38,13)" fg:x="16174" fg:w="11"/><text x="49.9993%" y="287.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="49.7524%" y="261" width="0.0308%" height="15" fill="rgb(235,42,18)" fg:x="16175" fg:w="10"/><text x="50.0024%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="49.7955%" y="133" width="0.0123%" height="15" fill="rgb(219,66,54)" fg:x="16189" fg:w="4"/><text x="50.0455%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.04%)</title><rect x="49.7924%" y="181" width="0.0431%" height="15" fill="rgb(222,205,4)" fg:x="16188" fg:w="14"/><text x="50.0424%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.04%)</title><rect x="49.7955%" y="165" width="0.0400%" height="15" fill="rgb(227,213,46)" fg:x="16189" fg:w="13"/><text x="50.0455%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.04%)</title><rect x="49.7955%" y="149" width="0.0400%" height="15" fill="rgb(250,145,42)" fg:x="16189" fg:w="13"/><text x="50.0455%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.03%)</title><rect x="49.8078%" y="133" width="0.0277%" height="15" fill="rgb(219,15,2)" fg:x="16193" fg:w="9"/><text x="50.0578%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (8 samples, 0.02%)</title><rect x="49.8354%" y="181" width="0.0246%" height="15" fill="rgb(231,181,52)" fg:x="16202" fg:w="8"/><text x="50.0854%" y="191.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.02%)</title><rect x="49.8447%" y="165" width="0.0154%" height="15" fill="rgb(235,1,42)" fg:x="16205" fg:w="5"/><text x="50.0947%" y="175.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.08%)</title><rect x="49.7924%" y="213" width="0.0830%" height="15" fill="rgb(249,88,27)" fg:x="16188" fg:w="27"/><text x="50.0424%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.08%)</title><rect x="49.7924%" y="197" width="0.0830%" height="15" fill="rgb(235,145,16)" fg:x="16188" fg:w="27"/><text x="50.0424%" y="207.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.02%)</title><rect x="49.8600%" y="181" width="0.0154%" height="15" fill="rgb(237,114,19)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="49.8600%" y="165" width="0.0154%" height="15" fill="rgb(238,51,50)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="175.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.02%)</title><rect x="49.8600%" y="149" width="0.0154%" height="15" fill="rgb(205,194,25)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="159.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (5 samples, 0.02%)</title><rect x="49.8600%" y="133" width="0.0154%" height="15" fill="rgb(215,203,17)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="143.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (5 samples, 0.02%)</title><rect x="49.8600%" y="117" width="0.0154%" height="15" fill="rgb(233,112,49)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (5 samples, 0.02%)</title><rect x="49.8600%" y="101" width="0.0154%" height="15" fill="rgb(241,130,26)" fg:x="16210" fg:w="5"/><text x="50.1100%" y="111.50"></text></g><g><title>core::hash::Hasher::write_u8 (4 samples, 0.01%)</title><rect x="49.8631%" y="85" width="0.0123%" height="15" fill="rgb(252,223,19)" fg:x="16211" fg:w="4"/><text x="50.1131%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="49.8631%" y="69" width="0.0123%" height="15" fill="rgb(211,95,25)" fg:x="16211" fg:w="4"/><text x="50.1131%" y="79.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="49.9246%" y="165" width="0.0185%" height="15" fill="rgb(251,182,27)" fg:x="16231" fg:w="6"/><text x="50.1746%" y="175.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="49.9308%" y="149" width="0.0123%" height="15" fill="rgb(238,24,4)" fg:x="16233" fg:w="4"/><text x="50.1808%" y="159.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4 samples, 0.01%)</title><rect x="49.9462%" y="149" width="0.0123%" height="15" fill="rgb(224,220,25)" fg:x="16238" fg:w="4"/><text x="50.1962%" y="159.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.01%)</title><rect x="49.9462%" y="133" width="0.0123%" height="15" fill="rgb(239,133,26)" fg:x="16238" fg:w="4"/><text x="50.1962%" y="143.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="49.9462%" y="117" width="0.0123%" height="15" fill="rgb(211,94,48)" fg:x="16238" fg:w="4"/><text x="50.1962%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8 samples, 0.02%)</title><rect x="49.9431%" y="165" width="0.0246%" height="15" fill="rgb(239,87,6)" fg:x="16237" fg:w="8"/><text x="50.1931%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (94 samples, 0.29%)</title><rect x="49.7247%" y="341" width="0.2891%" height="15" fill="rgb(227,62,0)" fg:x="16166" fg:w="94"/><text x="49.9747%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (93 samples, 0.29%)</title><rect x="49.7278%" y="325" width="0.2861%" height="15" fill="rgb(211,226,4)" fg:x="16167" fg:w="93"/><text x="49.9778%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (75 samples, 0.23%)</title><rect x="49.7832%" y="309" width="0.2307%" height="15" fill="rgb(253,38,52)" fg:x="16185" fg:w="75"/><text x="50.0332%" y="319.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (74 samples, 0.23%)</title><rect x="49.7862%" y="293" width="0.2276%" height="15" fill="rgb(229,126,40)" fg:x="16186" fg:w="74"/><text x="50.0362%" y="303.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (74 samples, 0.23%)</title><rect x="49.7862%" y="277" width="0.2276%" height="15" fill="rgb(229,165,44)" fg:x="16186" fg:w="74"/><text x="50.0362%" y="287.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (74 samples, 0.23%)</title><rect x="49.7862%" y="261" width="0.2276%" height="15" fill="rgb(247,95,47)" fg:x="16186" fg:w="74"/><text x="50.0362%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (73 samples, 0.22%)</title><rect x="49.7893%" y="245" width="0.2245%" height="15" fill="rgb(216,140,30)" fg:x="16187" fg:w="73"/><text x="50.0393%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (72 samples, 0.22%)</title><rect x="49.7924%" y="229" width="0.2215%" height="15" fill="rgb(246,214,8)" fg:x="16188" fg:w="72"/><text x="50.0424%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (45 samples, 0.14%)</title><rect x="49.8754%" y="213" width="0.1384%" height="15" fill="rgb(227,224,15)" fg:x="16215" fg:w="45"/><text x="50.1254%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.13%)</title><rect x="49.8847%" y="197" width="0.1292%" height="15" fill="rgb(233,175,4)" fg:x="16218" fg:w="42"/><text x="50.1347%" y="207.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.12%)</title><rect x="49.8970%" y="181" width="0.1169%" height="15" fill="rgb(221,66,45)" fg:x="16222" fg:w="38"/><text x="50.1470%" y="191.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (12 samples, 0.04%)</title><rect x="49.9769%" y="165" width="0.0369%" height="15" fill="rgb(221,178,18)" fg:x="16248" fg:w="12"/><text x="50.2269%" y="175.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (198 samples, 0.61%)</title><rect x="49.4387%" y="421" width="0.6090%" height="15" fill="rgb(213,81,29)" fg:x="16073" fg:w="198"/><text x="49.6887%" y="431.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (198 samples, 0.61%)</title><rect x="49.4387%" y="405" width="0.6090%" height="15" fill="rgb(220,89,49)" fg:x="16073" fg:w="198"/><text x="49.6887%" y="415.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (194 samples, 0.60%)</title><rect x="49.4510%" y="389" width="0.5967%" height="15" fill="rgb(227,60,33)" fg:x="16077" fg:w="194"/><text x="49.7010%" y="399.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (194 samples, 0.60%)</title><rect x="49.4510%" y="373" width="0.5967%" height="15" fill="rgb(205,113,12)" fg:x="16077" fg:w="194"/><text x="49.7010%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (105 samples, 0.32%)</title><rect x="49.7247%" y="357" width="0.3230%" height="15" fill="rgb(211,32,1)" fg:x="16166" fg:w="105"/><text x="49.9747%" y="367.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (11 samples, 0.03%)</title><rect x="50.0138%" y="341" width="0.0338%" height="15" fill="rgb(246,2,12)" fg:x="16260" fg:w="11"/><text x="50.2638%" y="351.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (11 samples, 0.03%)</title><rect x="50.0138%" y="325" width="0.0338%" height="15" fill="rgb(243,37,27)" fg:x="16260" fg:w="11"/><text x="50.2638%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (9 samples, 0.03%)</title><rect x="50.0200%" y="309" width="0.0277%" height="15" fill="rgb(248,211,31)" fg:x="16262" fg:w="9"/><text x="50.2700%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (8 samples, 0.02%)</title><rect x="50.0231%" y="293" width="0.0246%" height="15" fill="rgb(242,146,47)" fg:x="16263" fg:w="8"/><text x="50.2731%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (6 samples, 0.02%)</title><rect x="50.0292%" y="277" width="0.0185%" height="15" fill="rgb(206,70,20)" fg:x="16265" fg:w="6"/><text x="50.2792%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="50.1153%" y="277" width="0.0154%" height="15" fill="rgb(215,10,51)" fg:x="16293" fg:w="5"/><text x="50.3653%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (7 samples, 0.02%)</title><rect x="50.1307%" y="277" width="0.0215%" height="15" fill="rgb(243,178,53)" fg:x="16298" fg:w="7"/><text x="50.3807%" y="287.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="50.0907%" y="373" width="0.0646%" height="15" fill="rgb(233,221,20)" fg:x="16285" fg:w="21"/><text x="50.3407%" y="383.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="50.0907%" y="357" width="0.0646%" height="15" fill="rgb(218,95,35)" fg:x="16285" fg:w="21"/><text x="50.3407%" y="367.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="50.0907%" y="341" width="0.0646%" height="15" fill="rgb(229,13,5)" fg:x="16285" fg:w="21"/><text x="50.3407%" y="351.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.06%)</title><rect x="50.0938%" y="325" width="0.0615%" height="15" fill="rgb(252,164,30)" fg:x="16286" fg:w="20"/><text x="50.3438%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.05%)</title><rect x="50.1061%" y="309" width="0.0492%" height="15" fill="rgb(232,68,36)" fg:x="16290" fg:w="16"/><text x="50.3561%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (14 samples, 0.04%)</title><rect x="50.1123%" y="293" width="0.0431%" height="15" fill="rgb(219,59,54)" fg:x="16292" fg:w="14"/><text x="50.3623%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.03%)</title><rect x="50.1799%" y="197" width="0.0277%" height="15" fill="rgb(250,92,33)" fg:x="16314" fg:w="9"/><text x="50.4299%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (32 samples, 0.10%)</title><rect x="50.1707%" y="245" width="0.0984%" height="15" fill="rgb(229,162,54)" fg:x="16311" fg:w="32"/><text x="50.4207%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (32 samples, 0.10%)</title><rect x="50.1707%" y="229" width="0.0984%" height="15" fill="rgb(244,114,52)" fg:x="16311" fg:w="32"/><text x="50.4207%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (32 samples, 0.10%)</title><rect x="50.1707%" y="213" width="0.0984%" height="15" fill="rgb(212,211,43)" fg:x="16311" fg:w="32"/><text x="50.4207%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (20 samples, 0.06%)</title><rect x="50.2076%" y="197" width="0.0615%" height="15" fill="rgb(226,147,8)" fg:x="16323" fg:w="20"/><text x="50.4576%" y="207.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="50.2753%" y="213" width="0.0185%" height="15" fill="rgb(226,23,13)" fg:x="16345" fg:w="6"/><text x="50.5253%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="50.2937%" y="197" width="0.0123%" height="15" fill="rgb(240,63,4)" fg:x="16351" fg:w="4"/><text x="50.5437%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (13 samples, 0.04%)</title><rect x="50.2691%" y="245" width="0.0400%" height="15" fill="rgb(221,1,32)" fg:x="16343" fg:w="13"/><text x="50.5191%" y="255.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.03%)</title><rect x="50.2753%" y="229" width="0.0338%" height="15" fill="rgb(242,117,10)" fg:x="16345" fg:w="11"/><text x="50.5253%" y="239.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (5 samples, 0.02%)</title><rect x="50.2937%" y="213" width="0.0154%" height="15" fill="rgb(249,172,44)" fg:x="16351" fg:w="5"/><text x="50.5437%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="50.3091%" y="149" width="0.0246%" height="15" fill="rgb(244,46,45)" fg:x="16356" fg:w="8"/><text x="50.5591%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="50.3184%" y="133" width="0.0154%" height="15" fill="rgb(206,43,17)" fg:x="16359" fg:w="5"/><text x="50.5684%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (56 samples, 0.17%)</title><rect x="50.1676%" y="277" width="0.1722%" height="15" fill="rgb(239,218,39)" fg:x="16310" fg:w="56"/><text x="50.4176%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (56 samples, 0.17%)</title><rect x="50.1676%" y="261" width="0.1722%" height="15" fill="rgb(208,169,54)" fg:x="16310" fg:w="56"/><text x="50.4176%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.03%)</title><rect x="50.3091%" y="245" width="0.0308%" height="15" fill="rgb(247,25,42)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="50.3091%" y="229" width="0.0308%" height="15" fill="rgb(226,23,31)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (10 samples, 0.03%)</title><rect x="50.3091%" y="213" width="0.0308%" height="15" fill="rgb(247,16,28)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="223.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (10 samples, 0.03%)</title><rect x="50.3091%" y="197" width="0.0308%" height="15" fill="rgb(231,147,38)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="207.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (10 samples, 0.03%)</title><rect x="50.3091%" y="181" width="0.0308%" height="15" fill="rgb(253,81,48)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (10 samples, 0.03%)</title><rect x="50.3091%" y="165" width="0.0308%" height="15" fill="rgb(249,222,43)" fg:x="16356" fg:w="10"/><text x="50.5591%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.02%)</title><rect x="50.3460%" y="245" width="0.0154%" height="15" fill="rgb(221,3,27)" fg:x="16368" fg:w="5"/><text x="50.5960%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="50.3460%" y="229" width="0.0154%" height="15" fill="rgb(228,180,5)" fg:x="16368" fg:w="5"/><text x="50.5960%" y="239.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="50.4045%" y="213" width="0.0123%" height="15" fill="rgb(227,131,42)" fg:x="16387" fg:w="4"/><text x="50.6545%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="50.3953%" y="229" width="0.0431%" height="15" fill="rgb(212,3,39)" fg:x="16384" fg:w="14"/><text x="50.6453%" y="239.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.02%)</title><rect x="50.4168%" y="213" width="0.0215%" height="15" fill="rgb(226,45,5)" fg:x="16391" fg:w="7"/><text x="50.6668%" y="223.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (13 samples, 0.04%)</title><rect x="50.4414%" y="213" width="0.0400%" height="15" fill="rgb(215,167,45)" fg:x="16399" fg:w="13"/><text x="50.6914%" y="223.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (13 samples, 0.04%)</title><rect x="50.4414%" y="197" width="0.0400%" height="15" fill="rgb(250,218,53)" fg:x="16399" fg:w="13"/><text x="50.6914%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.04%)</title><rect x="50.4414%" y="181" width="0.0400%" height="15" fill="rgb(207,140,0)" fg:x="16399" fg:w="13"/><text x="50.6914%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (12 samples, 0.04%)</title><rect x="50.4445%" y="165" width="0.0369%" height="15" fill="rgb(238,133,51)" fg:x="16400" fg:w="12"/><text x="50.6945%" y="175.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.03%)</title><rect x="50.4506%" y="149" width="0.0308%" height="15" fill="rgb(218,203,53)" fg:x="16402" fg:w="10"/><text x="50.7006%" y="159.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.02%)</title><rect x="50.4660%" y="133" width="0.0154%" height="15" fill="rgb(226,184,25)" fg:x="16407" fg:w="5"/><text x="50.7160%" y="143.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.02%)</title><rect x="50.4660%" y="117" width="0.0154%" height="15" fill="rgb(231,121,21)" fg:x="16407" fg:w="5"/><text x="50.7160%" y="127.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="50.4691%" y="101" width="0.0123%" height="15" fill="rgb(251,14,34)" fg:x="16408" fg:w="4"/><text x="50.7191%" y="111.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (21 samples, 0.06%)</title><rect x="50.4383%" y="229" width="0.0646%" height="15" fill="rgb(249,193,11)" fg:x="16398" fg:w="21"/><text x="50.6883%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (6 samples, 0.02%)</title><rect x="50.4845%" y="213" width="0.0185%" height="15" fill="rgb(220,172,37)" fg:x="16413" fg:w="6"/><text x="50.7345%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.02%)</title><rect x="50.4845%" y="197" width="0.0185%" height="15" fill="rgb(231,229,43)" fg:x="16413" fg:w="6"/><text x="50.7345%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.03%)</title><rect x="50.5029%" y="229" width="0.0308%" height="15" fill="rgb(250,161,5)" fg:x="16419" fg:w="10"/><text x="50.7529%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.03%)</title><rect x="50.5060%" y="213" width="0.0277%" height="15" fill="rgb(218,225,18)" fg:x="16420" fg:w="9"/><text x="50.7560%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (170 samples, 0.52%)</title><rect x="50.0538%" y="405" width="0.5229%" height="15" fill="rgb(245,45,42)" fg:x="16273" fg:w="170"/><text x="50.3038%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (169 samples, 0.52%)</title><rect x="50.0569%" y="389" width="0.5198%" height="15" fill="rgb(211,115,1)" fg:x="16274" fg:w="169"/><text x="50.3069%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (137 samples, 0.42%)</title><rect x="50.1553%" y="373" width="0.4214%" height="15" fill="rgb(248,133,52)" fg:x="16306" fg:w="137"/><text x="50.4053%" y="383.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (135 samples, 0.42%)</title><rect x="50.1615%" y="357" width="0.4152%" height="15" fill="rgb(238,100,21)" fg:x="16308" fg:w="135"/><text x="50.4115%" y="367.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (135 samples, 0.42%)</title><rect x="50.1615%" y="341" width="0.4152%" height="15" fill="rgb(247,144,11)" fg:x="16308" fg:w="135"/><text x="50.4115%" y="351.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (135 samples, 0.42%)</title><rect x="50.1615%" y="325" width="0.4152%" height="15" fill="rgb(206,164,16)" fg:x="16308" fg:w="135"/><text x="50.4115%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (135 samples, 0.42%)</title><rect x="50.1615%" y="309" width="0.4152%" height="15" fill="rgb(222,34,3)" fg:x="16308" fg:w="135"/><text x="50.4115%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (134 samples, 0.41%)</title><rect x="50.1646%" y="293" width="0.4122%" height="15" fill="rgb(248,82,4)" fg:x="16309" fg:w="134"/><text x="50.4146%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (77 samples, 0.24%)</title><rect x="50.3399%" y="277" width="0.2368%" height="15" fill="rgb(228,81,46)" fg:x="16366" fg:w="77"/><text x="50.5899%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (75 samples, 0.23%)</title><rect x="50.3460%" y="261" width="0.2307%" height="15" fill="rgb(227,67,47)" fg:x="16368" fg:w="75"/><text x="50.5960%" y="271.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (70 samples, 0.22%)</title><rect x="50.3614%" y="245" width="0.2153%" height="15" fill="rgb(215,93,53)" fg:x="16373" fg:w="70"/><text x="50.6114%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (14 samples, 0.04%)</title><rect x="50.5337%" y="229" width="0.0431%" height="15" fill="rgb(248,194,39)" fg:x="16429" fg:w="14"/><text x="50.7837%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.02%)</title><rect x="50.5583%" y="213" width="0.0185%" height="15" fill="rgb(215,5,19)" fg:x="16437" fg:w="6"/><text x="50.8083%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.02%)</title><rect x="50.5583%" y="197" width="0.0185%" height="15" fill="rgb(226,215,51)" fg:x="16437" fg:w="6"/><text x="50.8083%" y="207.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="50.6013%" y="325" width="0.0215%" height="15" fill="rgb(225,56,26)" fg:x="16451" fg:w="7"/><text x="50.8513%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (6 samples, 0.02%)</title><rect x="50.6044%" y="309" width="0.0185%" height="15" fill="rgb(222,75,29)" fg:x="16452" fg:w="6"/><text x="50.8544%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.02%)</title><rect x="50.6044%" y="293" width="0.0185%" height="15" fill="rgb(236,139,6)" fg:x="16452" fg:w="6"/><text x="50.8544%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="50.6075%" y="277" width="0.0154%" height="15" fill="rgb(223,137,36)" fg:x="16453" fg:w="5"/><text x="50.8575%" y="287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (396 samples, 1.22%)</title><rect x="49.4079%" y="485" width="1.2180%" height="15" fill="rgb(226,99,2)" fg:x="16063" fg:w="396"/><text x="49.6579%" y="495.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (395 samples, 1.21%)</title><rect x="49.4110%" y="469" width="1.2150%" height="15" fill="rgb(206,133,23)" fg:x="16064" fg:w="395"/><text x="49.6610%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (389 samples, 1.20%)</title><rect x="49.4294%" y="453" width="1.1965%" height="15" fill="rgb(243,173,15)" fg:x="16070" fg:w="389"/><text x="49.6794%" y="463.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (389 samples, 1.20%)</title><rect x="49.4294%" y="437" width="1.1965%" height="15" fill="rgb(228,69,28)" fg:x="16070" fg:w="389"/><text x="49.6794%" y="447.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (188 samples, 0.58%)</title><rect x="50.0477%" y="421" width="0.5783%" height="15" fill="rgb(212,51,22)" fg:x="16271" fg:w="188"/><text x="50.2977%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (16 samples, 0.05%)</title><rect x="50.5767%" y="405" width="0.0492%" height="15" fill="rgb(227,113,0)" fg:x="16443" fg:w="16"/><text x="50.8267%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (14 samples, 0.04%)</title><rect x="50.5829%" y="389" width="0.0431%" height="15" fill="rgb(252,84,27)" fg:x="16445" fg:w="14"/><text x="50.8329%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (13 samples, 0.04%)</title><rect x="50.5860%" y="373" width="0.0400%" height="15" fill="rgb(223,145,39)" fg:x="16446" fg:w="13"/><text x="50.8360%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (11 samples, 0.03%)</title><rect x="50.5921%" y="357" width="0.0338%" height="15" fill="rgb(239,219,30)" fg:x="16448" fg:w="11"/><text x="50.8421%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (9 samples, 0.03%)</title><rect x="50.5983%" y="341" width="0.0277%" height="15" fill="rgb(224,196,39)" fg:x="16450" fg:w="9"/><text x="50.8483%" y="351.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="50.6813%" y="437" width="0.0123%" height="15" fill="rgb(205,35,43)" fg:x="16477" fg:w="4"/><text x="50.9313%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="50.7428%" y="341" width="0.0400%" height="15" fill="rgb(228,201,21)" fg:x="16497" fg:w="13"/><text x="50.9928%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.08%)</title><rect x="50.7336%" y="373" width="0.0769%" height="15" fill="rgb(237,118,16)" fg:x="16494" fg:w="25"/><text x="50.9836%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (22 samples, 0.07%)</title><rect x="50.7428%" y="357" width="0.0677%" height="15" fill="rgb(241,17,19)" fg:x="16497" fg:w="22"/><text x="50.9928%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (9 samples, 0.03%)</title><rect x="50.7828%" y="341" width="0.0277%" height="15" fill="rgb(214,10,25)" fg:x="16510" fg:w="9"/><text x="51.0328%" y="351.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.12%)</title><rect x="50.6936%" y="437" width="0.1200%" height="15" fill="rgb(238,37,29)" fg:x="16481" fg:w="39"/><text x="50.9436%" y="447.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.12%)</title><rect x="50.6936%" y="421" width="0.1200%" height="15" fill="rgb(253,83,25)" fg:x="16481" fg:w="39"/><text x="50.9436%" y="431.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.12%)</title><rect x="50.6936%" y="405" width="0.1200%" height="15" fill="rgb(234,192,12)" fg:x="16481" fg:w="39"/><text x="50.9436%" y="415.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.11%)</title><rect x="50.7059%" y="389" width="0.1077%" height="15" fill="rgb(241,216,45)" fg:x="16485" fg:w="35"/><text x="50.9559%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.05%)</title><rect x="50.8689%" y="261" width="0.0461%" height="15" fill="rgb(242,22,33)" fg:x="16538" fg:w="15"/><text x="51.1189%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (49 samples, 0.15%)</title><rect x="50.8505%" y="309" width="0.1507%" height="15" fill="rgb(231,105,49)" fg:x="16532" fg:w="49"/><text x="51.1005%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (49 samples, 0.15%)</title><rect x="50.8505%" y="293" width="0.1507%" height="15" fill="rgb(218,204,15)" fg:x="16532" fg:w="49"/><text x="51.1005%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (49 samples, 0.15%)</title><rect x="50.8505%" y="277" width="0.1507%" height="15" fill="rgb(235,138,41)" fg:x="16532" fg:w="49"/><text x="51.1005%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (28 samples, 0.09%)</title><rect x="50.9151%" y="261" width="0.0861%" height="15" fill="rgb(246,0,9)" fg:x="16553" fg:w="28"/><text x="51.1651%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="51.0074%" y="293" width="0.0123%" height="15" fill="rgb(210,74,4)" fg:x="16583" fg:w="4"/><text x="51.2574%" y="303.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="51.0197%" y="277" width="0.0246%" height="15" fill="rgb(250,60,41)" fg:x="16587" fg:w="8"/><text x="51.2697%" y="287.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="51.0443%" y="261" width="0.0154%" height="15" fill="rgb(220,115,12)" fg:x="16595" fg:w="5"/><text x="51.2943%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (20 samples, 0.06%)</title><rect x="51.0012%" y="309" width="0.0615%" height="15" fill="rgb(237,100,13)" fg:x="16581" fg:w="20"/><text x="51.2512%" y="319.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.04%)</title><rect x="51.0197%" y="293" width="0.0431%" height="15" fill="rgb(213,55,26)" fg:x="16587" fg:w="14"/><text x="51.2697%" y="303.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.02%)</title><rect x="51.0443%" y="277" width="0.0185%" height="15" fill="rgb(216,17,4)" fg:x="16595" fg:w="6"/><text x="51.2943%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.02%)</title><rect x="51.0966%" y="197" width="0.0154%" height="15" fill="rgb(220,153,47)" fg:x="16612" fg:w="5"/><text x="51.3466%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="51.0627%" y="213" width="0.0615%" height="15" fill="rgb(215,131,9)" fg:x="16601" fg:w="20"/><text x="51.3127%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (103 samples, 0.32%)</title><rect x="50.8382%" y="341" width="0.3168%" height="15" fill="rgb(233,46,42)" fg:x="16528" fg:w="103"/><text x="51.0882%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (103 samples, 0.32%)</title><rect x="50.8382%" y="325" width="0.3168%" height="15" fill="rgb(226,86,7)" fg:x="16528" fg:w="103"/><text x="51.0882%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (30 samples, 0.09%)</title><rect x="51.0627%" y="309" width="0.0923%" height="15" fill="rgb(239,226,21)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (30 samples, 0.09%)</title><rect x="51.0627%" y="293" width="0.0923%" height="15" fill="rgb(244,137,22)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (30 samples, 0.09%)</title><rect x="51.0627%" y="277" width="0.0923%" height="15" fill="rgb(211,139,35)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="287.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (30 samples, 0.09%)</title><rect x="51.0627%" y="261" width="0.0923%" height="15" fill="rgb(214,62,50)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="271.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (30 samples, 0.09%)</title><rect x="51.0627%" y="245" width="0.0923%" height="15" fill="rgb(212,113,44)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (30 samples, 0.09%)</title><rect x="51.0627%" y="229" width="0.0923%" height="15" fill="rgb(226,150,43)" fg:x="16601" fg:w="30"/><text x="51.3127%" y="239.50"></text></g><g><title>core::hash::Hasher::write_u8 (10 samples, 0.03%)</title><rect x="51.1242%" y="213" width="0.0308%" height="15" fill="rgb(250,71,37)" fg:x="16621" fg:w="10"/><text x="51.3742%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.03%)</title><rect x="51.1273%" y="197" width="0.0277%" height="15" fill="rgb(219,76,19)" fg:x="16622" fg:w="9"/><text x="51.3773%" y="207.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="51.1335%" y="181" width="0.0215%" height="15" fill="rgb(250,39,11)" fg:x="16624" fg:w="7"/><text x="51.3835%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (7 samples, 0.02%)</title><rect x="51.1827%" y="309" width="0.0215%" height="15" fill="rgb(230,64,31)" fg:x="16640" fg:w="7"/><text x="51.4327%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.02%)</title><rect x="51.1858%" y="293" width="0.0185%" height="15" fill="rgb(208,222,23)" fg:x="16641" fg:w="6"/><text x="51.4358%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="51.2750%" y="277" width="0.0123%" height="15" fill="rgb(227,125,18)" fg:x="16670" fg:w="4"/><text x="51.5250%" y="287.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (4 samples, 0.01%)</title><rect x="51.2934%" y="261" width="0.0123%" height="15" fill="rgb(234,210,9)" fg:x="16676" fg:w="4"/><text x="51.5434%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.06%)</title><rect x="51.2534%" y="293" width="0.0584%" height="15" fill="rgb(217,127,24)" fg:x="16663" fg:w="19"/><text x="51.5034%" y="303.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.02%)</title><rect x="51.2873%" y="277" width="0.0246%" height="15" fill="rgb(239,141,48)" fg:x="16674" fg:w="8"/><text x="51.5373%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (8 samples, 0.02%)</title><rect x="51.3488%" y="197" width="0.0246%" height="15" fill="rgb(227,109,8)" fg:x="16694" fg:w="8"/><text x="51.5988%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.02%)</title><rect x="51.3580%" y="181" width="0.0154%" height="15" fill="rgb(235,184,23)" fg:x="16697" fg:w="5"/><text x="51.6080%" y="191.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.01%)</title><rect x="51.3611%" y="165" width="0.0123%" height="15" fill="rgb(227,226,48)" fg:x="16698" fg:w="4"/><text x="51.6111%" y="175.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="51.3611%" y="149" width="0.0123%" height="15" fill="rgb(206,150,11)" fg:x="16698" fg:w="4"/><text x="51.6111%" y="159.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="51.3611%" y="133" width="0.0123%" height="15" fill="rgb(254,2,33)" fg:x="16698" fg:w="4"/><text x="51.6111%" y="143.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (20 samples, 0.06%)</title><rect x="51.3365%" y="277" width="0.0615%" height="15" fill="rgb(243,160,20)" fg:x="16690" fg:w="20"/><text x="51.5865%" y="287.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (20 samples, 0.06%)</title><rect x="51.3365%" y="261" width="0.0615%" height="15" fill="rgb(218,208,30)" fg:x="16690" fg:w="20"/><text x="51.5865%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.06%)</title><rect x="51.3365%" y="245" width="0.0615%" height="15" fill="rgb(224,120,49)" fg:x="16690" fg:w="20"/><text x="51.5865%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="51.3426%" y="229" width="0.0554%" height="15" fill="rgb(246,12,2)" fg:x="16692" fg:w="18"/><text x="51.5926%" y="239.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (17 samples, 0.05%)</title><rect x="51.3457%" y="213" width="0.0523%" height="15" fill="rgb(236,117,3)" fg:x="16693" fg:w="17"/><text x="51.5957%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.02%)</title><rect x="51.3734%" y="197" width="0.0246%" height="15" fill="rgb(216,128,52)" fg:x="16702" fg:w="8"/><text x="51.6234%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.02%)</title><rect x="51.3734%" y="181" width="0.0246%" height="15" fill="rgb(246,145,19)" fg:x="16702" fg:w="8"/><text x="51.6234%" y="191.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="51.3826%" y="165" width="0.0154%" height="15" fill="rgb(222,11,46)" fg:x="16705" fg:w="5"/><text x="51.6326%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (33 samples, 0.10%)</title><rect x="51.3119%" y="293" width="0.1015%" height="15" fill="rgb(245,82,36)" fg:x="16682" fg:w="33"/><text x="51.5619%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.02%)</title><rect x="51.3980%" y="277" width="0.0154%" height="15" fill="rgb(250,73,51)" fg:x="16710" fg:w="5"/><text x="51.6480%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="51.3980%" y="261" width="0.0154%" height="15" fill="rgb(221,189,23)" fg:x="16710" fg:w="5"/><text x="51.6480%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (14 samples, 0.04%)</title><rect x="51.4164%" y="293" width="0.0431%" height="15" fill="rgb(210,33,7)" fg:x="16716" fg:w="14"/><text x="51.6664%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.04%)</title><rect x="51.4195%" y="277" width="0.0400%" height="15" fill="rgb(210,107,22)" fg:x="16717" fg:w="13"/><text x="51.6695%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (5 samples, 0.02%)</title><rect x="51.4780%" y="277" width="0.0154%" height="15" fill="rgb(222,116,37)" fg:x="16736" fg:w="5"/><text x="51.7280%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.03%)</title><rect x="51.4933%" y="277" width="0.0308%" height="15" fill="rgb(254,17,48)" fg:x="16741" fg:w="10"/><text x="51.7433%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (301 samples, 0.93%)</title><rect x="50.6382%" y="469" width="0.9258%" height="15" fill="rgb(224,36,32)" fg:x="16463" fg:w="301"/><text x="50.8882%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (298 samples, 0.92%)</title><rect x="50.6475%" y="453" width="0.9166%" height="15" fill="rgb(232,90,46)" fg:x="16466" fg:w="298"/><text x="50.8975%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (244 samples, 0.75%)</title><rect x="50.8136%" y="437" width="0.7505%" height="15" fill="rgb(241,66,40)" fg:x="16520" fg:w="244"/><text x="51.0636%" y="447.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (240 samples, 0.74%)</title><rect x="50.8259%" y="421" width="0.7382%" height="15" fill="rgb(249,184,29)" fg:x="16524" fg:w="240"/><text x="51.0759%" y="431.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (239 samples, 0.74%)</title><rect x="50.8290%" y="405" width="0.7351%" height="15" fill="rgb(231,181,1)" fg:x="16525" fg:w="239"/><text x="51.0790%" y="415.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (239 samples, 0.74%)</title><rect x="50.8290%" y="389" width="0.7351%" height="15" fill="rgb(224,94,2)" fg:x="16525" fg:w="239"/><text x="51.0790%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (239 samples, 0.74%)</title><rect x="50.8290%" y="373" width="0.7351%" height="15" fill="rgb(229,170,15)" fg:x="16525" fg:w="239"/><text x="51.0790%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (238 samples, 0.73%)</title><rect x="50.8320%" y="357" width="0.7321%" height="15" fill="rgb(240,127,35)" fg:x="16526" fg:w="238"/><text x="51.0820%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (133 samples, 0.41%)</title><rect x="51.1550%" y="341" width="0.4091%" height="15" fill="rgb(248,196,34)" fg:x="16631" fg:w="133"/><text x="51.4050%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (125 samples, 0.38%)</title><rect x="51.1796%" y="325" width="0.3845%" height="15" fill="rgb(236,137,7)" fg:x="16639" fg:w="125"/><text x="51.4296%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (117 samples, 0.36%)</title><rect x="51.2042%" y="309" width="0.3599%" height="15" fill="rgb(235,127,16)" fg:x="16647" fg:w="117"/><text x="51.4542%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (34 samples, 0.10%)</title><rect x="51.4595%" y="293" width="0.1046%" height="15" fill="rgb(250,192,54)" fg:x="16730" fg:w="34"/><text x="51.7095%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.04%)</title><rect x="51.5241%" y="277" width="0.0400%" height="15" fill="rgb(218,98,20)" fg:x="16751" fg:w="13"/><text x="51.7741%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (12 samples, 0.04%)</title><rect x="51.5272%" y="261" width="0.0369%" height="15" fill="rgb(230,176,47)" fg:x="16752" fg:w="12"/><text x="51.7772%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="51.5641%" y="453" width="0.0123%" height="15" fill="rgb(244,2,33)" fg:x="16764" fg:w="4"/><text x="51.8141%" y="463.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="51.5764%" y="437" width="0.0154%" height="15" fill="rgb(231,100,17)" fg:x="16768" fg:w="5"/><text x="51.8264%" y="447.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="51.5918%" y="421" width="0.0123%" height="15" fill="rgb(245,23,12)" fg:x="16773" fg:w="4"/><text x="51.8418%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.02%)</title><rect x="51.6102%" y="389" width="0.0185%" height="15" fill="rgb(249,55,22)" fg:x="16779" fg:w="6"/><text x="51.8602%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (748 samples, 2.30%)</title><rect x="49.3648%" y="549" width="2.3008%" height="15" fill="rgb(207,134,9)" fg:x="16049" fg:w="748"/><text x="49.6148%" y="559.50">&lt;..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (746 samples, 2.29%)</title><rect x="49.3710%" y="533" width="2.2946%" height="15" fill="rgb(218,134,0)" fg:x="16051" fg:w="746"/><text x="49.6210%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (735 samples, 2.26%)</title><rect x="49.4048%" y="517" width="2.2608%" height="15" fill="rgb(213,212,33)" fg:x="16062" fg:w="735"/><text x="49.6548%" y="527.50">&lt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (735 samples, 2.26%)</title><rect x="49.4048%" y="501" width="2.2608%" height="15" fill="rgb(252,106,18)" fg:x="16062" fg:w="735"/><text x="49.6548%" y="511.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (338 samples, 1.04%)</title><rect x="50.6259%" y="485" width="1.0396%" height="15" fill="rgb(208,126,42)" fg:x="16459" fg:w="338"/><text x="50.8759%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (33 samples, 0.10%)</title><rect x="51.5641%" y="469" width="0.1015%" height="15" fill="rgb(246,175,29)" fg:x="16764" fg:w="33"/><text x="51.8141%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (29 samples, 0.09%)</title><rect x="51.5764%" y="453" width="0.0892%" height="15" fill="rgb(215,13,50)" fg:x="16768" fg:w="29"/><text x="51.8264%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (24 samples, 0.07%)</title><rect x="51.5918%" y="437" width="0.0738%" height="15" fill="rgb(216,172,15)" fg:x="16773" fg:w="24"/><text x="51.8418%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (20 samples, 0.06%)</title><rect x="51.6041%" y="421" width="0.0615%" height="15" fill="rgb(212,103,13)" fg:x="16777" fg:w="20"/><text x="51.8541%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (20 samples, 0.06%)</title><rect x="51.6041%" y="405" width="0.0615%" height="15" fill="rgb(231,171,36)" fg:x="16777" fg:w="20"/><text x="51.8541%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="51.6287%" y="389" width="0.0369%" height="15" fill="rgb(250,123,20)" fg:x="16785" fg:w="12"/><text x="51.8787%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (12 samples, 0.04%)</title><rect x="51.6287%" y="373" width="0.0369%" height="15" fill="rgb(212,53,50)" fg:x="16785" fg:w="12"/><text x="51.8787%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (10 samples, 0.03%)</title><rect x="51.6348%" y="357" width="0.0308%" height="15" fill="rgb(243,54,12)" fg:x="16787" fg:w="10"/><text x="51.8848%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.03%)</title><rect x="51.6348%" y="341" width="0.0308%" height="15" fill="rgb(234,101,34)" fg:x="16787" fg:w="10"/><text x="51.8848%" y="351.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="51.6748%" y="517" width="0.0185%" height="15" fill="rgb(254,67,22)" fg:x="16800" fg:w="6"/><text x="51.9248%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="51.8378%" y="405" width="0.0369%" height="15" fill="rgb(250,35,47)" fg:x="16853" fg:w="12"/><text x="52.0878%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (11 samples, 0.03%)</title><rect x="51.8748%" y="405" width="0.0338%" height="15" fill="rgb(226,126,38)" fg:x="16865" fg:w="11"/><text x="52.1248%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.10%)</title><rect x="51.8071%" y="437" width="0.1046%" height="15" fill="rgb(216,138,53)" fg:x="16843" fg:w="34"/><text x="52.0571%" y="447.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (29 samples, 0.09%)</title><rect x="51.8225%" y="421" width="0.0892%" height="15" fill="rgb(246,199,43)" fg:x="16848" fg:w="29"/><text x="52.0725%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.17%)</title><rect x="51.7702%" y="501" width="0.1692%" height="15" fill="rgb(232,125,11)" fg:x="16831" fg:w="55"/><text x="52.0202%" y="511.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.17%)</title><rect x="51.7702%" y="485" width="0.1692%" height="15" fill="rgb(218,219,45)" fg:x="16831" fg:w="55"/><text x="52.0202%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.17%)</title><rect x="51.7702%" y="469" width="0.1692%" height="15" fill="rgb(216,102,54)" fg:x="16831" fg:w="55"/><text x="52.0202%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.14%)</title><rect x="51.7948%" y="453" width="0.1446%" height="15" fill="rgb(250,228,7)" fg:x="16839" fg:w="47"/><text x="52.0448%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (9 samples, 0.03%)</title><rect x="51.9117%" y="437" width="0.0277%" height="15" fill="rgb(226,125,25)" fg:x="16877" fg:w="9"/><text x="52.1617%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="51.9209%" y="421" width="0.0185%" height="15" fill="rgb(224,165,27)" fg:x="16880" fg:w="6"/><text x="52.1709%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="51.9455%" y="421" width="0.0123%" height="15" fill="rgb(233,86,3)" fg:x="16888" fg:w="4"/><text x="52.1955%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.05%)</title><rect x="51.9978%" y="325" width="0.0461%" height="15" fill="rgb(228,116,20)" fg:x="16905" fg:w="15"/><text x="52.2478%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (60 samples, 0.18%)</title><rect x="51.9763%" y="373" width="0.1846%" height="15" fill="rgb(209,192,17)" fg:x="16898" fg:w="60"/><text x="52.2263%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (60 samples, 0.18%)</title><rect x="51.9763%" y="357" width="0.1846%" height="15" fill="rgb(224,88,34)" fg:x="16898" fg:w="60"/><text x="52.2263%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (60 samples, 0.18%)</title><rect x="51.9763%" y="341" width="0.1846%" height="15" fill="rgb(233,38,6)" fg:x="16898" fg:w="60"/><text x="52.2263%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (38 samples, 0.12%)</title><rect x="52.0439%" y="325" width="0.1169%" height="15" fill="rgb(212,59,30)" fg:x="16920" fg:w="38"/><text x="52.2939%" y="335.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="52.1670%" y="357" width="0.0338%" height="15" fill="rgb(213,80,3)" fg:x="16960" fg:w="11"/><text x="52.4170%" y="367.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="52.2039%" y="341" width="0.0277%" height="15" fill="rgb(251,178,7)" fg:x="16972" fg:w="9"/><text x="52.4539%" y="351.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="52.2346%" y="325" width="0.0461%" height="15" fill="rgb(213,154,26)" fg:x="16982" fg:w="15"/><text x="52.4846%" y="335.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (18 samples, 0.06%)</title><rect x="52.2316%" y="341" width="0.0554%" height="15" fill="rgb(238,165,49)" fg:x="16981" fg:w="18"/><text x="52.4816%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (42 samples, 0.13%)</title><rect x="52.1608%" y="373" width="0.1292%" height="15" fill="rgb(248,91,46)" fg:x="16958" fg:w="42"/><text x="52.4108%" y="383.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (29 samples, 0.09%)</title><rect x="52.2008%" y="357" width="0.0892%" height="15" fill="rgb(244,21,52)" fg:x="16971" fg:w="29"/><text x="52.4508%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="52.3454%" y="261" width="0.0308%" height="15" fill="rgb(247,122,20)" fg:x="17018" fg:w="10"/><text x="52.5954%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.09%)</title><rect x="52.2900%" y="277" width="0.0892%" height="15" fill="rgb(218,27,9)" fg:x="17000" fg:w="29"/><text x="52.5400%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (146 samples, 0.45%)</title><rect x="51.9670%" y="405" width="0.4491%" height="15" fill="rgb(246,7,6)" fg:x="16895" fg:w="146"/><text x="52.2170%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (146 samples, 0.45%)</title><rect x="51.9670%" y="389" width="0.4491%" height="15" fill="rgb(227,135,54)" fg:x="16895" fg:w="146"/><text x="52.2170%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (41 samples, 0.13%)</title><rect x="52.2900%" y="373" width="0.1261%" height="15" fill="rgb(247,14,11)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (41 samples, 0.13%)</title><rect x="52.2900%" y="357" width="0.1261%" height="15" fill="rgb(206,149,34)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (41 samples, 0.13%)</title><rect x="52.2900%" y="341" width="0.1261%" height="15" fill="rgb(227,228,4)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (41 samples, 0.13%)</title><rect x="52.2900%" y="325" width="0.1261%" height="15" fill="rgb(238,218,28)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (41 samples, 0.13%)</title><rect x="52.2900%" y="309" width="0.1261%" height="15" fill="rgb(252,86,40)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (41 samples, 0.13%)</title><rect x="52.2900%" y="293" width="0.1261%" height="15" fill="rgb(251,225,11)" fg:x="17000" fg:w="41"/><text x="52.5400%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.04%)</title><rect x="52.3792%" y="277" width="0.0369%" height="15" fill="rgb(206,46,49)" fg:x="17029" fg:w="12"/><text x="52.6292%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.04%)</title><rect x="52.3792%" y="261" width="0.0369%" height="15" fill="rgb(245,128,24)" fg:x="17029" fg:w="12"/><text x="52.6292%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.02%)</title><rect x="52.3977%" y="245" width="0.0185%" height="15" fill="rgb(219,177,34)" fg:x="17035" fg:w="6"/><text x="52.6477%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (10 samples, 0.03%)</title><rect x="52.4530%" y="373" width="0.0308%" height="15" fill="rgb(218,60,48)" fg:x="17053" fg:w="10"/><text x="52.7030%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (10 samples, 0.03%)</title><rect x="52.4530%" y="357" width="0.0308%" height="15" fill="rgb(221,11,5)" fg:x="17053" fg:w="10"/><text x="52.7030%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="52.5453%" y="357" width="0.0154%" height="15" fill="rgb(220,148,13)" fg:x="17083" fg:w="5"/><text x="52.7953%" y="367.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (6 samples, 0.02%)</title><rect x="52.5945%" y="325" width="0.0185%" height="15" fill="rgb(210,16,3)" fg:x="17099" fg:w="6"/><text x="52.8445%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="52.5607%" y="357" width="0.0554%" height="15" fill="rgb(236,80,2)" fg:x="17088" fg:w="18"/><text x="52.8107%" y="367.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.03%)</title><rect x="52.5853%" y="341" width="0.0308%" height="15" fill="rgb(239,129,19)" fg:x="17096" fg:w="10"/><text x="52.8353%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (9 samples, 0.03%)</title><rect x="52.6437%" y="261" width="0.0277%" height="15" fill="rgb(220,106,35)" fg:x="17115" fg:w="9"/><text x="52.8937%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="52.6499%" y="245" width="0.0215%" height="15" fill="rgb(252,139,45)" fg:x="17117" fg:w="7"/><text x="52.8999%" y="255.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.02%)</title><rect x="52.6499%" y="229" width="0.0215%" height="15" fill="rgb(229,8,36)" fg:x="17117" fg:w="7"/><text x="52.8999%" y="239.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.02%)</title><rect x="52.6499%" y="213" width="0.0215%" height="15" fill="rgb(230,126,33)" fg:x="17117" fg:w="7"/><text x="52.8999%" y="223.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.02%)</title><rect x="52.6499%" y="197" width="0.0215%" height="15" fill="rgb(239,140,21)" fg:x="17117" fg:w="7"/><text x="52.8999%" y="207.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (28 samples, 0.09%)</title><rect x="52.6253%" y="341" width="0.0861%" height="15" fill="rgb(254,104,9)" fg:x="17109" fg:w="28"/><text x="52.8753%" y="351.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (28 samples, 0.09%)</title><rect x="52.6253%" y="325" width="0.0861%" height="15" fill="rgb(239,52,14)" fg:x="17109" fg:w="28"/><text x="52.8753%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (26 samples, 0.08%)</title><rect x="52.6314%" y="309" width="0.0800%" height="15" fill="rgb(208,227,44)" fg:x="17111" fg:w="26"/><text x="52.8814%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (24 samples, 0.07%)</title><rect x="52.6376%" y="293" width="0.0738%" height="15" fill="rgb(246,18,19)" fg:x="17113" fg:w="24"/><text x="52.8876%" y="303.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (24 samples, 0.07%)</title><rect x="52.6376%" y="277" width="0.0738%" height="15" fill="rgb(235,228,25)" fg:x="17113" fg:w="24"/><text x="52.8876%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.04%)</title><rect x="52.6714%" y="261" width="0.0400%" height="15" fill="rgb(240,156,20)" fg:x="17124" fg:w="13"/><text x="52.9214%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.04%)</title><rect x="52.6714%" y="245" width="0.0400%" height="15" fill="rgb(224,8,20)" fg:x="17124" fg:w="13"/><text x="52.9214%" y="255.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="52.6929%" y="229" width="0.0185%" height="15" fill="rgb(214,12,52)" fg:x="17131" fg:w="6"/><text x="52.9429%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (39 samples, 0.12%)</title><rect x="52.6160%" y="357" width="0.1200%" height="15" fill="rgb(211,220,47)" fg:x="17106" fg:w="39"/><text x="52.8660%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (6 samples, 0.02%)</title><rect x="52.7175%" y="341" width="0.0185%" height="15" fill="rgb(250,173,5)" fg:x="17139" fg:w="6"/><text x="52.9675%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (6 samples, 0.02%)</title><rect x="52.7175%" y="325" width="0.0185%" height="15" fill="rgb(250,125,52)" fg:x="17139" fg:w="6"/><text x="52.9675%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.04%)</title><rect x="52.7360%" y="357" width="0.0400%" height="15" fill="rgb(209,133,18)" fg:x="17145" fg:w="13"/><text x="52.9860%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.04%)</title><rect x="52.7360%" y="341" width="0.0400%" height="15" fill="rgb(216,173,22)" fg:x="17145" fg:w="13"/><text x="52.9860%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (8 samples, 0.02%)</title><rect x="52.8006%" y="341" width="0.0246%" height="15" fill="rgb(205,3,22)" fg:x="17166" fg:w="8"/><text x="53.0506%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15 samples, 0.05%)</title><rect x="52.8252%" y="341" width="0.0461%" height="15" fill="rgb(248,22,20)" fg:x="17174" fg:w="15"/><text x="53.0752%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (406 samples, 1.25%)</title><rect x="51.6748%" y="533" width="1.2488%" height="15" fill="rgb(233,6,29)" fg:x="16800" fg:w="406"/><text x="51.9248%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (400 samples, 1.23%)</title><rect x="51.6933%" y="517" width="1.2304%" height="15" fill="rgb(240,22,54)" fg:x="16806" fg:w="400"/><text x="51.9433%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (320 samples, 0.98%)</title><rect x="51.9393%" y="501" width="0.9843%" height="15" fill="rgb(231,133,32)" fg:x="16886" fg:w="320"/><text x="52.1893%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (318 samples, 0.98%)</title><rect x="51.9455%" y="485" width="0.9781%" height="15" fill="rgb(248,193,4)" fg:x="16888" fg:w="318"/><text x="52.1955%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (318 samples, 0.98%)</title><rect x="51.9455%" y="469" width="0.9781%" height="15" fill="rgb(211,178,46)" fg:x="16888" fg:w="318"/><text x="52.1955%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (318 samples, 0.98%)</title><rect x="51.9455%" y="453" width="0.9781%" height="15" fill="rgb(224,5,42)" fg:x="16888" fg:w="318"/><text x="52.1955%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (318 samples, 0.98%)</title><rect x="51.9455%" y="437" width="0.9781%" height="15" fill="rgb(239,176,25)" fg:x="16888" fg:w="318"/><text x="52.1955%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (314 samples, 0.97%)</title><rect x="51.9578%" y="421" width="0.9658%" height="15" fill="rgb(245,187,50)" fg:x="16892" fg:w="314"/><text x="52.2078%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (165 samples, 0.51%)</title><rect x="52.4161%" y="405" width="0.5075%" height="15" fill="rgb(248,24,15)" fg:x="17041" fg:w="165"/><text x="52.6661%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (155 samples, 0.48%)</title><rect x="52.4469%" y="389" width="0.4768%" height="15" fill="rgb(205,166,13)" fg:x="17051" fg:w="155"/><text x="52.6969%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (143 samples, 0.44%)</title><rect x="52.4838%" y="373" width="0.4399%" height="15" fill="rgb(208,114,23)" fg:x="17063" fg:w="143"/><text x="52.7338%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (48 samples, 0.15%)</title><rect x="52.7760%" y="357" width="0.1476%" height="15" fill="rgb(239,127,18)" fg:x="17158" fg:w="48"/><text x="53.0260%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.05%)</title><rect x="52.8713%" y="341" width="0.0523%" height="15" fill="rgb(219,154,28)" fg:x="17189" fg:w="17"/><text x="53.1213%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.05%)</title><rect x="52.8713%" y="325" width="0.0523%" height="15" fill="rgb(225,157,23)" fg:x="17189" fg:w="17"/><text x="53.1213%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="52.9236%" y="517" width="0.0185%" height="15" fill="rgb(219,8,6)" fg:x="17206" fg:w="6"/><text x="53.1736%" y="527.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="52.9421%" y="501" width="0.0185%" height="15" fill="rgb(212,47,6)" fg:x="17212" fg:w="6"/><text x="53.1921%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,219 samples, 3.75%)</title><rect x="49.3310%" y="613" width="3.7495%" height="15" fill="rgb(224,190,4)" fg:x="16038" fg:w="1219"/><text x="49.5810%" y="623.50">&lt;cor..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1,219 samples, 3.75%)</title><rect x="49.3310%" y="597" width="3.7495%" height="15" fill="rgb(239,183,29)" fg:x="16038" fg:w="1219"/><text x="49.5810%" y="607.50">&lt;T a..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (1,213 samples, 3.73%)</title><rect x="49.3495%" y="581" width="3.7310%" height="15" fill="rgb(213,57,7)" fg:x="16044" fg:w="1213"/><text x="49.5995%" y="591.50">&lt;all..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (1,212 samples, 3.73%)</title><rect x="49.3525%" y="565" width="3.7280%" height="15" fill="rgb(216,148,1)" fg:x="16045" fg:w="1212"/><text x="49.6025%" y="575.50">&lt;aes..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (460 samples, 1.41%)</title><rect x="51.6656%" y="549" width="1.4149%" height="15" fill="rgb(236,182,29)" fg:x="16797" fg:w="460"/><text x="51.9156%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (51 samples, 0.16%)</title><rect x="52.9236%" y="533" width="0.1569%" height="15" fill="rgb(244,120,48)" fg:x="17206" fg:w="51"/><text x="53.1736%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (45 samples, 0.14%)</title><rect x="52.9421%" y="517" width="0.1384%" height="15" fill="rgb(206,71,34)" fg:x="17212" fg:w="45"/><text x="53.1921%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (39 samples, 0.12%)</title><rect x="52.9605%" y="501" width="0.1200%" height="15" fill="rgb(242,32,6)" fg:x="17218" fg:w="39"/><text x="53.2105%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (36 samples, 0.11%)</title><rect x="52.9698%" y="485" width="0.1107%" height="15" fill="rgb(241,35,3)" fg:x="17221" fg:w="36"/><text x="53.2198%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (32 samples, 0.10%)</title><rect x="52.9821%" y="469" width="0.0984%" height="15" fill="rgb(222,62,19)" fg:x="17225" fg:w="32"/><text x="53.2321%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (26 samples, 0.08%)</title><rect x="53.0005%" y="453" width="0.0800%" height="15" fill="rgb(223,110,41)" fg:x="17231" fg:w="26"/><text x="53.2505%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (20 samples, 0.06%)</title><rect x="53.0190%" y="437" width="0.0615%" height="15" fill="rgb(208,224,4)" fg:x="17237" fg:w="20"/><text x="53.2690%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (18 samples, 0.06%)</title><rect x="53.0251%" y="421" width="0.0554%" height="15" fill="rgb(241,137,19)" fg:x="17239" fg:w="18"/><text x="53.2751%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (18 samples, 0.06%)</title><rect x="53.0251%" y="405" width="0.0554%" height="15" fill="rgb(244,24,17)" fg:x="17239" fg:w="18"/><text x="53.2751%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="53.2927%" y="453" width="0.0123%" height="15" fill="rgb(245,178,49)" fg:x="17326" fg:w="4"/><text x="53.5427%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.06%)</title><rect x="53.2558%" y="469" width="0.0584%" height="15" fill="rgb(219,160,38)" fg:x="17314" fg:w="19"/><text x="53.5058%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.14%)</title><rect x="53.2097%" y="501" width="0.1353%" height="15" fill="rgb(228,137,14)" fg:x="17299" fg:w="44"/><text x="53.4597%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (36 samples, 0.11%)</title><rect x="53.2343%" y="485" width="0.1107%" height="15" fill="rgb(237,134,11)" fg:x="17307" fg:w="36"/><text x="53.4843%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (10 samples, 0.03%)</title><rect x="53.3143%" y="469" width="0.0308%" height="15" fill="rgb(211,126,44)" fg:x="17333" fg:w="10"/><text x="53.5643%" y="479.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.20%)</title><rect x="53.1666%" y="565" width="0.1969%" height="15" fill="rgb(226,171,33)" fg:x="17285" fg:w="64"/><text x="53.4166%" y="575.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.19%)</title><rect x="53.1697%" y="549" width="0.1938%" height="15" fill="rgb(253,99,13)" fg:x="17286" fg:w="63"/><text x="53.4197%" y="559.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.19%)</title><rect x="53.1697%" y="533" width="0.1938%" height="15" fill="rgb(244,48,7)" fg:x="17286" fg:w="63"/><text x="53.4197%" y="543.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.18%)</title><rect x="53.1882%" y="517" width="0.1753%" height="15" fill="rgb(244,217,54)" fg:x="17292" fg:w="57"/><text x="53.4382%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="53.3450%" y="501" width="0.0185%" height="15" fill="rgb(224,15,18)" fg:x="17343" fg:w="6"/><text x="53.5950%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="53.3481%" y="485" width="0.0154%" height="15" fill="rgb(244,99,12)" fg:x="17344" fg:w="5"/><text x="53.5981%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.06%)</title><rect x="53.4281%" y="389" width="0.0584%" height="15" fill="rgb(233,226,8)" fg:x="17370" fg:w="19"/><text x="53.6781%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (87 samples, 0.27%)</title><rect x="53.4096%" y="437" width="0.2676%" height="15" fill="rgb(229,211,3)" fg:x="17364" fg:w="87"/><text x="53.6596%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (87 samples, 0.27%)</title><rect x="53.4096%" y="421" width="0.2676%" height="15" fill="rgb(216,140,21)" fg:x="17364" fg:w="87"/><text x="53.6596%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (87 samples, 0.27%)</title><rect x="53.4096%" y="405" width="0.2676%" height="15" fill="rgb(234,122,30)" fg:x="17364" fg:w="87"/><text x="53.6596%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (62 samples, 0.19%)</title><rect x="53.4865%" y="389" width="0.1907%" height="15" fill="rgb(236,25,46)" fg:x="17389" fg:w="62"/><text x="53.7365%" y="399.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="53.6803%" y="421" width="0.0431%" height="15" fill="rgb(217,52,54)" fg:x="17452" fg:w="14"/><text x="53.9303%" y="431.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="53.7264%" y="405" width="0.0584%" height="15" fill="rgb(222,29,26)" fg:x="17467" fg:w="19"/><text x="53.9764%" y="415.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="53.7879%" y="389" width="0.0492%" height="15" fill="rgb(216,177,29)" fg:x="17487" fg:w="16"/><text x="54.0379%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (53 samples, 0.16%)</title><rect x="53.6772%" y="437" width="0.1630%" height="15" fill="rgb(247,136,51)" fg:x="17451" fg:w="53"/><text x="53.9272%" y="447.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (38 samples, 0.12%)</title><rect x="53.7234%" y="421" width="0.1169%" height="15" fill="rgb(231,47,47)" fg:x="17466" fg:w="38"/><text x="53.9734%" y="431.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (18 samples, 0.06%)</title><rect x="53.7849%" y="405" width="0.0554%" height="15" fill="rgb(211,192,36)" fg:x="17486" fg:w="18"/><text x="54.0349%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.11%)</title><rect x="53.8464%" y="341" width="0.1107%" height="15" fill="rgb(229,156,32)" fg:x="17506" fg:w="36"/><text x="54.0964%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (19 samples, 0.06%)</title><rect x="53.8987%" y="325" width="0.0584%" height="15" fill="rgb(248,213,20)" fg:x="17523" fg:w="19"/><text x="54.1487%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (200 samples, 0.62%)</title><rect x="53.4004%" y="469" width="0.6152%" height="15" fill="rgb(217,64,7)" fg:x="17361" fg:w="200"/><text x="53.6504%" y="479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (200 samples, 0.62%)</title><rect x="53.4004%" y="453" width="0.6152%" height="15" fill="rgb(232,142,8)" fg:x="17361" fg:w="200"/><text x="53.6504%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (57 samples, 0.18%)</title><rect x="53.8402%" y="437" width="0.1753%" height="15" fill="rgb(224,92,44)" fg:x="17504" fg:w="57"/><text x="54.0902%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (57 samples, 0.18%)</title><rect x="53.8402%" y="421" width="0.1753%" height="15" fill="rgb(214,169,17)" fg:x="17504" fg:w="57"/><text x="54.0902%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (55 samples, 0.17%)</title><rect x="53.8464%" y="405" width="0.1692%" height="15" fill="rgb(210,59,37)" fg:x="17506" fg:w="55"/><text x="54.0964%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (55 samples, 0.17%)</title><rect x="53.8464%" y="389" width="0.1692%" height="15" fill="rgb(214,116,48)" fg:x="17506" fg:w="55"/><text x="54.0964%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (55 samples, 0.17%)</title><rect x="53.8464%" y="373" width="0.1692%" height="15" fill="rgb(244,191,6)" fg:x="17506" fg:w="55"/><text x="54.0964%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (55 samples, 0.17%)</title><rect x="53.8464%" y="357" width="0.1692%" height="15" fill="rgb(241,50,52)" fg:x="17506" fg:w="55"/><text x="54.0964%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u8 (19 samples, 0.06%)</title><rect x="53.9571%" y="341" width="0.0584%" height="15" fill="rgb(236,75,39)" fg:x="17542" fg:w="19"/><text x="54.2071%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.06%)</title><rect x="53.9571%" y="325" width="0.0584%" height="15" fill="rgb(236,99,0)" fg:x="17542" fg:w="19"/><text x="54.2071%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="53.9817%" y="309" width="0.0338%" height="15" fill="rgb(207,202,15)" fg:x="17550" fg:w="11"/><text x="54.2317%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (9 samples, 0.03%)</title><rect x="54.0832%" y="437" width="0.0277%" height="15" fill="rgb(233,207,14)" fg:x="17583" fg:w="9"/><text x="54.3332%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.02%)</title><rect x="54.0863%" y="421" width="0.0246%" height="15" fill="rgb(226,27,51)" fg:x="17584" fg:w="8"/><text x="54.3363%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="54.2032%" y="421" width="0.0154%" height="15" fill="rgb(206,104,42)" fg:x="17622" fg:w="5"/><text x="54.4532%" y="431.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.03%)</title><rect x="54.2709%" y="389" width="0.0277%" height="15" fill="rgb(212,225,4)" fg:x="17644" fg:w="9"/><text x="54.5209%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.10%)</title><rect x="54.2186%" y="421" width="0.0984%" height="15" fill="rgb(233,96,42)" fg:x="17627" fg:w="32"/><text x="54.4686%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (26 samples, 0.08%)</title><rect x="54.2370%" y="405" width="0.0800%" height="15" fill="rgb(229,21,32)" fg:x="17633" fg:w="26"/><text x="54.4870%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (6 samples, 0.02%)</title><rect x="54.2985%" y="389" width="0.0185%" height="15" fill="rgb(226,216,24)" fg:x="17653" fg:w="6"/><text x="54.5485%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.02%)</title><rect x="54.3662%" y="325" width="0.0185%" height="15" fill="rgb(221,163,17)" fg:x="17675" fg:w="6"/><text x="54.6162%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="54.3724%" y="309" width="0.0123%" height="15" fill="rgb(216,216,42)" fg:x="17677" fg:w="4"/><text x="54.6224%" y="319.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.01%)</title><rect x="54.3724%" y="293" width="0.0123%" height="15" fill="rgb(240,118,7)" fg:x="17677" fg:w="4"/><text x="54.6224%" y="303.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="54.3724%" y="277" width="0.0123%" height="15" fill="rgb(221,67,37)" fg:x="17677" fg:w="4"/><text x="54.6224%" y="287.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (4 samples, 0.01%)</title><rect x="54.3724%" y="261" width="0.0123%" height="15" fill="rgb(241,32,44)" fg:x="17677" fg:w="4"/><text x="54.6224%" y="271.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (43 samples, 0.13%)</title><rect x="54.3262%" y="405" width="0.1323%" height="15" fill="rgb(235,204,43)" fg:x="17662" fg:w="43"/><text x="54.5762%" y="415.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (43 samples, 0.13%)</title><rect x="54.3262%" y="389" width="0.1323%" height="15" fill="rgb(213,116,10)" fg:x="17662" fg:w="43"/><text x="54.5762%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (39 samples, 0.12%)</title><rect x="54.3385%" y="373" width="0.1200%" height="15" fill="rgb(239,15,48)" fg:x="17666" fg:w="39"/><text x="54.5885%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (37 samples, 0.11%)</title><rect x="54.3447%" y="357" width="0.1138%" height="15" fill="rgb(207,123,36)" fg:x="17668" fg:w="37"/><text x="54.5947%" y="367.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (37 samples, 0.11%)</title><rect x="54.3447%" y="341" width="0.1138%" height="15" fill="rgb(209,103,30)" fg:x="17668" fg:w="37"/><text x="54.5947%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (24 samples, 0.07%)</title><rect x="54.3847%" y="325" width="0.0738%" height="15" fill="rgb(238,100,19)" fg:x="17681" fg:w="24"/><text x="54.6347%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (24 samples, 0.07%)</title><rect x="54.3847%" y="309" width="0.0738%" height="15" fill="rgb(244,30,14)" fg:x="17681" fg:w="24"/><text x="54.6347%" y="319.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="54.4154%" y="293" width="0.0431%" height="15" fill="rgb(249,174,6)" fg:x="17691" fg:w="14"/><text x="54.6654%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (5 samples, 0.02%)</title><rect x="54.4585%" y="405" width="0.0154%" height="15" fill="rgb(235,213,41)" fg:x="17705" fg:w="5"/><text x="54.7085%" y="415.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="54.4585%" y="389" width="0.0154%" height="15" fill="rgb(213,118,6)" fg:x="17705" fg:w="5"/><text x="54.7085%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="54.5169%" y="373" width="0.0154%" height="15" fill="rgb(235,44,51)" fg:x="17724" fg:w="5"/><text x="54.7669%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (22 samples, 0.07%)</title><rect x="54.4739%" y="389" width="0.0677%" height="15" fill="rgb(217,9,53)" fg:x="17710" fg:w="22"/><text x="54.7239%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (74 samples, 0.23%)</title><rect x="54.3170%" y="421" width="0.2276%" height="15" fill="rgb(237,172,34)" fg:x="17659" fg:w="74"/><text x="54.5670%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (23 samples, 0.07%)</title><rect x="54.4739%" y="405" width="0.0707%" height="15" fill="rgb(206,206,11)" fg:x="17710" fg:w="23"/><text x="54.7239%" y="415.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (26 samples, 0.08%)</title><rect x="54.5477%" y="421" width="0.0800%" height="15" fill="rgb(214,149,29)" fg:x="17734" fg:w="26"/><text x="54.7977%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.08%)</title><rect x="54.5477%" y="405" width="0.0800%" height="15" fill="rgb(208,123,3)" fg:x="17734" fg:w="26"/><text x="54.7977%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (10 samples, 0.03%)</title><rect x="54.6584%" y="405" width="0.0308%" height="15" fill="rgb(229,126,4)" fg:x="17770" fg:w="10"/><text x="54.9084%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (18 samples, 0.06%)</title><rect x="54.6892%" y="405" width="0.0554%" height="15" fill="rgb(222,92,36)" fg:x="17780" fg:w="18"/><text x="54.9392%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (553 samples, 1.70%)</title><rect x="53.0836%" y="597" width="1.7010%" height="15" fill="rgb(216,39,41)" fg:x="17258" fg:w="553"/><text x="53.3336%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (549 samples, 1.69%)</title><rect x="53.0959%" y="581" width="1.6887%" height="15" fill="rgb(253,127,28)" fg:x="17262" fg:w="549"/><text x="53.3459%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (462 samples, 1.42%)</title><rect x="53.3635%" y="565" width="1.4211%" height="15" fill="rgb(249,152,51)" fg:x="17349" fg:w="462"/><text x="53.6135%" y="575.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (460 samples, 1.41%)</title><rect x="53.3696%" y="549" width="1.4149%" height="15" fill="rgb(209,123,42)" fg:x="17351" fg:w="460"/><text x="53.6196%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (460 samples, 1.41%)</title><rect x="53.3696%" y="533" width="1.4149%" height="15" fill="rgb(241,118,22)" fg:x="17351" fg:w="460"/><text x="53.6196%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (460 samples, 1.41%)</title><rect x="53.3696%" y="517" width="1.4149%" height="15" fill="rgb(208,25,7)" fg:x="17351" fg:w="460"/><text x="53.6196%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (459 samples, 1.41%)</title><rect x="53.3727%" y="501" width="1.4118%" height="15" fill="rgb(243,144,39)" fg:x="17352" fg:w="459"/><text x="53.6227%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (456 samples, 1.40%)</title><rect x="53.3819%" y="485" width="1.4026%" height="15" fill="rgb(250,50,5)" fg:x="17355" fg:w="456"/><text x="53.6319%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (250 samples, 0.77%)</title><rect x="54.0156%" y="469" width="0.7690%" height="15" fill="rgb(207,67,11)" fg:x="17561" fg:w="250"/><text x="54.2656%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (237 samples, 0.73%)</title><rect x="54.0556%" y="453" width="0.7290%" height="15" fill="rgb(245,204,40)" fg:x="17574" fg:w="237"/><text x="54.3056%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (219 samples, 0.67%)</title><rect x="54.1109%" y="437" width="0.6736%" height="15" fill="rgb(238,228,24)" fg:x="17592" fg:w="219"/><text x="54.3609%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (51 samples, 0.16%)</title><rect x="54.6277%" y="421" width="0.1569%" height="15" fill="rgb(217,116,22)" fg:x="17760" fg:w="51"/><text x="54.8777%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (13 samples, 0.04%)</title><rect x="54.7445%" y="405" width="0.0400%" height="15" fill="rgb(234,98,12)" fg:x="17798" fg:w="13"/><text x="54.9945%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (13 samples, 0.04%)</title><rect x="54.7445%" y="389" width="0.0400%" height="15" fill="rgb(242,170,50)" fg:x="17798" fg:w="13"/><text x="54.9945%" y="399.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="54.7845%" y="581" width="0.0215%" height="15" fill="rgb(235,7,5)" fg:x="17811" fg:w="7"/><text x="55.0345%" y="591.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="54.8061%" y="549" width="0.0185%" height="15" fill="rgb(241,114,28)" fg:x="17818" fg:w="6"/><text x="55.0561%" y="559.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="54.8307%" y="533" width="0.0154%" height="15" fill="rgb(246,112,42)" fg:x="17826" fg:w="5"/><text x="55.0807%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.03%)</title><rect x="54.8553%" y="517" width="0.0277%" height="15" fill="rgb(248,228,14)" fg:x="17834" fg:w="9"/><text x="55.1053%" y="527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,840 samples, 5.66%)</title><rect x="49.2787%" y="677" width="5.6596%" height="15" fill="rgb(208,133,18)" fg:x="16021" fg:w="1840"/><text x="49.5287%" y="687.50">&lt;core::..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1,839 samples, 5.66%)</title><rect x="49.2818%" y="661" width="5.6565%" height="15" fill="rgb(207,35,49)" fg:x="16022" fg:w="1839"/><text x="49.5318%" y="671.50">&lt;T as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (1,828 samples, 5.62%)</title><rect x="49.3156%" y="645" width="5.6227%" height="15" fill="rgb(205,68,36)" fg:x="16033" fg:w="1828"/><text x="49.5656%" y="655.50">&lt;alloc:..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (1,828 samples, 5.62%)</title><rect x="49.3156%" y="629" width="5.6227%" height="15" fill="rgb(245,62,40)" fg:x="16033" fg:w="1828"/><text x="49.5656%" y="639.50">&lt;aes_gr..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (604 samples, 1.86%)</title><rect x="53.0805%" y="613" width="1.8578%" height="15" fill="rgb(228,27,24)" fg:x="17257" fg:w="604"/><text x="53.3305%" y="623.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (50 samples, 0.15%)</title><rect x="54.7845%" y="597" width="0.1538%" height="15" fill="rgb(253,19,12)" fg:x="17811" fg:w="50"/><text x="55.0345%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (43 samples, 0.13%)</title><rect x="54.8061%" y="581" width="0.1323%" height="15" fill="rgb(232,28,20)" fg:x="17818" fg:w="43"/><text x="55.0561%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (43 samples, 0.13%)</title><rect x="54.8061%" y="565" width="0.1323%" height="15" fill="rgb(218,35,51)" fg:x="17818" fg:w="43"/><text x="55.0561%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (37 samples, 0.11%)</title><rect x="54.8245%" y="549" width="0.1138%" height="15" fill="rgb(212,90,40)" fg:x="17824" fg:w="37"/><text x="55.0745%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (30 samples, 0.09%)</title><rect x="54.8461%" y="533" width="0.0923%" height="15" fill="rgb(220,172,12)" fg:x="17831" fg:w="30"/><text x="55.0961%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.06%)</title><rect x="54.8830%" y="517" width="0.0554%" height="15" fill="rgb(226,159,20)" fg:x="17843" fg:w="18"/><text x="55.1330%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (15 samples, 0.05%)</title><rect x="54.8922%" y="501" width="0.0461%" height="15" fill="rgb(234,205,16)" fg:x="17846" fg:w="15"/><text x="55.1422%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (14 samples, 0.04%)</title><rect x="54.8953%" y="485" width="0.0431%" height="15" fill="rgb(207,9,39)" fg:x="17847" fg:w="14"/><text x="55.1453%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.04%)</title><rect x="54.8983%" y="469" width="0.0400%" height="15" fill="rgb(249,143,15)" fg:x="17848" fg:w="13"/><text x="55.1483%" y="479.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="54.9445%" y="645" width="0.0123%" height="15" fill="rgb(253,133,29)" fg:x="17863" fg:w="4"/><text x="55.1945%" y="655.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="55.0337%" y="629" width="0.0154%" height="15" fill="rgb(221,187,0)" fg:x="17892" fg:w="5"/><text x="55.2837%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="55.1506%" y="533" width="0.0369%" height="15" fill="rgb(205,204,26)" fg:x="17930" fg:w="12"/><text x="55.4006%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.14%)</title><rect x="55.0890%" y="565" width="0.1446%" height="15" fill="rgb(224,68,54)" fg:x="17910" fg:w="47"/><text x="55.3390%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (37 samples, 0.11%)</title><rect x="55.1198%" y="549" width="0.1138%" height="15" fill="rgb(209,67,4)" fg:x="17920" fg:w="37"/><text x="55.3698%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (15 samples, 0.05%)</title><rect x="55.1875%" y="533" width="0.0461%" height="15" fill="rgb(228,229,18)" fg:x="17942" fg:w="15"/><text x="55.4375%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.21%)</title><rect x="55.0491%" y="629" width="0.2061%" height="15" fill="rgb(231,89,13)" fg:x="17897" fg:w="67"/><text x="55.2991%" y="639.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.21%)</title><rect x="55.0491%" y="613" width="0.2061%" height="15" fill="rgb(210,182,18)" fg:x="17897" fg:w="67"/><text x="55.2991%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.21%)</title><rect x="55.0491%" y="597" width="0.2061%" height="15" fill="rgb(240,105,2)" fg:x="17897" fg:w="67"/><text x="55.2991%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.20%)</title><rect x="55.0583%" y="581" width="0.1969%" height="15" fill="rgb(207,170,50)" fg:x="17900" fg:w="64"/><text x="55.3083%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (7 samples, 0.02%)</title><rect x="55.2336%" y="565" width="0.0215%" height="15" fill="rgb(232,133,24)" fg:x="17957" fg:w="7"/><text x="55.4836%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.07%)</title><rect x="55.3382%" y="453" width="0.0738%" height="15" fill="rgb(235,166,27)" fg:x="17991" fg:w="24"/><text x="55.5882%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (112 samples, 0.34%)</title><rect x="55.3044%" y="501" width="0.3445%" height="15" fill="rgb(209,19,13)" fg:x="17980" fg:w="112"/><text x="55.5544%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (111 samples, 0.34%)</title><rect x="55.3074%" y="485" width="0.3414%" height="15" fill="rgb(226,79,39)" fg:x="17981" fg:w="111"/><text x="55.5574%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (111 samples, 0.34%)</title><rect x="55.3074%" y="469" width="0.3414%" height="15" fill="rgb(222,163,10)" fg:x="17981" fg:w="111"/><text x="55.5574%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (77 samples, 0.24%)</title><rect x="55.4120%" y="453" width="0.2368%" height="15" fill="rgb(214,44,19)" fg:x="18015" fg:w="77"/><text x="55.6620%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="55.6335%" y="437" width="0.0154%" height="15" fill="rgb(210,217,13)" fg:x="18087" fg:w="5"/><text x="55.8835%" y="447.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="55.6519%" y="485" width="0.0277%" height="15" fill="rgb(237,61,54)" fg:x="18093" fg:w="9"/><text x="55.9019%" y="495.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="55.6796%" y="469" width="0.0431%" height="15" fill="rgb(226,184,24)" fg:x="18102" fg:w="14"/><text x="55.9296%" y="479.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="55.7258%" y="453" width="0.0615%" height="15" fill="rgb(223,226,4)" fg:x="18117" fg:w="20"/><text x="55.9758%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (46 samples, 0.14%)</title><rect x="55.6489%" y="501" width="0.1415%" height="15" fill="rgb(210,26,41)" fg:x="18092" fg:w="46"/><text x="55.8989%" y="511.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (36 samples, 0.11%)</title><rect x="55.6796%" y="485" width="0.1107%" height="15" fill="rgb(220,221,6)" fg:x="18102" fg:w="36"/><text x="55.9296%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (22 samples, 0.07%)</title><rect x="55.7227%" y="469" width="0.0677%" height="15" fill="rgb(225,89,49)" fg:x="18116" fg:w="22"/><text x="55.9727%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (30 samples, 0.09%)</title><rect x="55.8734%" y="389" width="0.0923%" height="15" fill="rgb(218,70,45)" fg:x="18165" fg:w="30"/><text x="56.1234%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.17%)</title><rect x="55.8057%" y="405" width="0.1692%" height="15" fill="rgb(238,166,21)" fg:x="18143" fg:w="55"/><text x="56.0557%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (243 samples, 0.75%)</title><rect x="55.2890%" y="533" width="0.7474%" height="15" fill="rgb(224,141,44)" fg:x="17975" fg:w="243"/><text x="55.5390%" y="543.50"></text></g><g><title>core::hash::BuildHasher::hash_one (243 samples, 0.75%)</title><rect x="55.2890%" y="517" width="0.7474%" height="15" fill="rgb(230,12,49)" fg:x="17975" fg:w="243"/><text x="55.5390%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (80 samples, 0.25%)</title><rect x="55.7903%" y="501" width="0.2461%" height="15" fill="rgb(212,174,12)" fg:x="18138" fg:w="80"/><text x="56.0403%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (79 samples, 0.24%)</title><rect x="55.7934%" y="485" width="0.2430%" height="15" fill="rgb(246,67,9)" fg:x="18139" fg:w="79"/><text x="56.0434%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (76 samples, 0.23%)</title><rect x="55.8027%" y="469" width="0.2338%" height="15" fill="rgb(239,35,23)" fg:x="18142" fg:w="76"/><text x="56.0527%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (76 samples, 0.23%)</title><rect x="55.8027%" y="453" width="0.2338%" height="15" fill="rgb(211,167,0)" fg:x="18142" fg:w="76"/><text x="56.0527%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (76 samples, 0.23%)</title><rect x="55.8027%" y="437" width="0.2338%" height="15" fill="rgb(225,119,45)" fg:x="18142" fg:w="76"/><text x="56.0527%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (75 samples, 0.23%)</title><rect x="55.8057%" y="421" width="0.2307%" height="15" fill="rgb(210,162,6)" fg:x="18143" fg:w="75"/><text x="56.0557%" y="431.50"></text></g><g><title>core::hash::Hasher::write_u8 (20 samples, 0.06%)</title><rect x="55.9749%" y="405" width="0.0615%" height="15" fill="rgb(208,118,35)" fg:x="18198" fg:w="20"/><text x="56.2249%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.06%)</title><rect x="55.9749%" y="389" width="0.0615%" height="15" fill="rgb(239,4,53)" fg:x="18198" fg:w="20"/><text x="56.2249%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.04%)</title><rect x="55.9964%" y="373" width="0.0400%" height="15" fill="rgb(213,130,21)" fg:x="18205" fg:w="13"/><text x="56.2464%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="56.0733%" y="517" width="0.0123%" height="15" fill="rgb(235,148,0)" fg:x="18230" fg:w="4"/><text x="56.3233%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="56.0733%" y="501" width="0.0123%" height="15" fill="rgb(244,224,18)" fg:x="18230" fg:w="4"/><text x="56.3233%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (10 samples, 0.03%)</title><rect x="56.0918%" y="501" width="0.0308%" height="15" fill="rgb(211,214,4)" fg:x="18236" fg:w="10"/><text x="56.3418%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (10 samples, 0.03%)</title><rect x="56.0918%" y="485" width="0.0308%" height="15" fill="rgb(206,119,25)" fg:x="18236" fg:w="10"/><text x="56.3418%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.02%)</title><rect x="56.2487%" y="485" width="0.0185%" height="15" fill="rgb(243,93,47)" fg:x="18287" fg:w="6"/><text x="56.4987%" y="495.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (8 samples, 0.02%)</title><rect x="56.3132%" y="453" width="0.0246%" height="15" fill="rgb(224,194,6)" fg:x="18308" fg:w="8"/><text x="56.5632%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.08%)</title><rect x="56.2671%" y="485" width="0.0830%" height="15" fill="rgb(243,229,6)" fg:x="18293" fg:w="27"/><text x="56.5171%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.05%)</title><rect x="56.2979%" y="469" width="0.0523%" height="15" fill="rgb(207,23,50)" fg:x="18303" fg:w="17"/><text x="56.5479%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (4 samples, 0.01%)</title><rect x="56.3379%" y="453" width="0.0123%" height="15" fill="rgb(253,192,32)" fg:x="18316" fg:w="4"/><text x="56.5879%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.04%)</title><rect x="56.4394%" y="389" width="0.0369%" height="15" fill="rgb(213,21,6)" fg:x="18349" fg:w="12"/><text x="56.6894%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="56.4424%" y="373" width="0.0338%" height="15" fill="rgb(243,151,13)" fg:x="18350" fg:w="11"/><text x="56.6924%" y="383.50"></text></g><g><title>core::slice::raw::from_raw_parts (11 samples, 0.03%)</title><rect x="56.4424%" y="357" width="0.0338%" height="15" fill="rgb(233,165,41)" fg:x="18350" fg:w="11"/><text x="56.6924%" y="367.50"></text></g><g><title>core::ptr::slice_from_raw_parts (11 samples, 0.03%)</title><rect x="56.4424%" y="341" width="0.0338%" height="15" fill="rgb(246,176,45)" fg:x="18350" fg:w="11"/><text x="56.6924%" y="351.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (11 samples, 0.03%)</title><rect x="56.4424%" y="325" width="0.0338%" height="15" fill="rgb(217,170,52)" fg:x="18350" fg:w="11"/><text x="56.6924%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (61 samples, 0.19%)</title><rect x="56.3840%" y="469" width="0.1876%" height="15" fill="rgb(214,203,54)" fg:x="18331" fg:w="61"/><text x="56.6340%" y="479.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (59 samples, 0.18%)</title><rect x="56.3901%" y="453" width="0.1815%" height="15" fill="rgb(248,215,49)" fg:x="18333" fg:w="59"/><text x="56.6401%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (52 samples, 0.16%)</title><rect x="56.4117%" y="437" width="0.1599%" height="15" fill="rgb(208,46,10)" fg:x="18340" fg:w="52"/><text x="56.6617%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (47 samples, 0.14%)</title><rect x="56.4271%" y="421" width="0.1446%" height="15" fill="rgb(254,5,31)" fg:x="18345" fg:w="47"/><text x="56.6771%" y="431.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (45 samples, 0.14%)</title><rect x="56.4332%" y="405" width="0.1384%" height="15" fill="rgb(222,104,33)" fg:x="18347" fg:w="45"/><text x="56.6832%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (31 samples, 0.10%)</title><rect x="56.4763%" y="389" width="0.0954%" height="15" fill="rgb(248,49,16)" fg:x="18361" fg:w="31"/><text x="56.7263%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (31 samples, 0.10%)</title><rect x="56.4763%" y="373" width="0.0954%" height="15" fill="rgb(232,198,41)" fg:x="18361" fg:w="31"/><text x="56.7263%" y="383.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="56.5286%" y="357" width="0.0431%" height="15" fill="rgb(214,125,3)" fg:x="18378" fg:w="14"/><text x="56.7786%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="56.6024%" y="437" width="0.0154%" height="15" fill="rgb(229,220,28)" fg:x="18402" fg:w="5"/><text x="56.8524%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (16 samples, 0.05%)</title><rect x="56.5747%" y="453" width="0.0492%" height="15" fill="rgb(222,64,37)" fg:x="18393" fg:w="16"/><text x="56.8247%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (90 samples, 0.28%)</title><rect x="56.3502%" y="485" width="0.2768%" height="15" fill="rgb(249,184,13)" fg:x="18320" fg:w="90"/><text x="56.6002%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (17 samples, 0.05%)</title><rect x="56.5747%" y="469" width="0.0523%" height="15" fill="rgb(252,176,6)" fg:x="18393" fg:w="17"/><text x="56.8247%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (33 samples, 0.10%)</title><rect x="56.6301%" y="485" width="0.1015%" height="15" fill="rgb(228,153,7)" fg:x="18411" fg:w="33"/><text x="56.8801%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (30 samples, 0.09%)</title><rect x="56.6393%" y="469" width="0.0923%" height="15" fill="rgb(242,193,5)" fg:x="18414" fg:w="30"/><text x="56.8893%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="56.7039%" y="453" width="0.0277%" height="15" fill="rgb(232,140,9)" fg:x="18435" fg:w="9"/><text x="56.9539%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (9 samples, 0.03%)</title><rect x="56.7685%" y="469" width="0.0277%" height="15" fill="rgb(213,222,16)" fg:x="18456" fg:w="9"/><text x="57.0185%" y="479.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (4 samples, 0.01%)</title><rect x="56.7839%" y="453" width="0.0123%" height="15" fill="rgb(222,75,50)" fg:x="18461" fg:w="4"/><text x="57.0339%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 0.10%)</title><rect x="56.7962%" y="469" width="0.0954%" height="15" fill="rgb(205,180,2)" fg:x="18465" fg:w="31"/><text x="57.0462%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (650 samples, 2.00%)</title><rect x="54.9445%" y="661" width="1.9993%" height="15" fill="rgb(216,34,7)" fg:x="17863" fg:w="650"/><text x="55.1945%" y="671.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (646 samples, 1.99%)</title><rect x="54.9568%" y="645" width="1.9870%" height="15" fill="rgb(253,16,32)" fg:x="17867" fg:w="646"/><text x="55.2068%" y="655.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (549 samples, 1.69%)</title><rect x="55.2551%" y="629" width="1.6887%" height="15" fill="rgb(208,97,28)" fg:x="17964" fg:w="549"/><text x="55.5051%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (543 samples, 1.67%)</title><rect x="55.2736%" y="613" width="1.6702%" height="15" fill="rgb(225,92,11)" fg:x="17970" fg:w="543"/><text x="55.5236%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (541 samples, 1.66%)</title><rect x="55.2798%" y="597" width="1.6641%" height="15" fill="rgb(243,38,12)" fg:x="17972" fg:w="541"/><text x="55.5298%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (541 samples, 1.66%)</title><rect x="55.2798%" y="581" width="1.6641%" height="15" fill="rgb(208,139,16)" fg:x="17972" fg:w="541"/><text x="55.5298%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (541 samples, 1.66%)</title><rect x="55.2798%" y="565" width="1.6641%" height="15" fill="rgb(227,24,9)" fg:x="17972" fg:w="541"/><text x="55.5298%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (540 samples, 1.66%)</title><rect x="55.2828%" y="549" width="1.6610%" height="15" fill="rgb(206,62,11)" fg:x="17973" fg:w="540"/><text x="55.5328%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (295 samples, 0.91%)</title><rect x="56.0364%" y="533" width="0.9074%" height="15" fill="rgb(228,134,27)" fg:x="18218" fg:w="295"/><text x="56.2864%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (279 samples, 0.86%)</title><rect x="56.0856%" y="517" width="0.8582%" height="15" fill="rgb(205,55,33)" fg:x="18234" fg:w="279"/><text x="56.3356%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (267 samples, 0.82%)</title><rect x="56.1225%" y="501" width="0.8213%" height="15" fill="rgb(243,75,43)" fg:x="18246" fg:w="267"/><text x="56.3725%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (69 samples, 0.21%)</title><rect x="56.7316%" y="485" width="0.2122%" height="15" fill="rgb(223,27,42)" fg:x="18444" fg:w="69"/><text x="56.9816%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.05%)</title><rect x="56.8915%" y="469" width="0.0523%" height="15" fill="rgb(232,189,33)" fg:x="18496" fg:w="17"/><text x="57.1415%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (17 samples, 0.05%)</title><rect x="56.8915%" y="453" width="0.0523%" height="15" fill="rgb(210,9,39)" fg:x="18496" fg:w="17"/><text x="57.1415%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.01%)</title><rect x="56.9315%" y="437" width="0.0123%" height="15" fill="rgb(242,85,26)" fg:x="18509" fg:w="4"/><text x="57.1815%" y="447.50"></text></g><g><title>[libc.so.6] (6 samples, 0.02%)</title><rect x="56.9438%" y="645" width="0.0185%" height="15" fill="rgb(248,44,4)" fg:x="18513" fg:w="6"/><text x="57.1938%" y="655.50"></text></g><g><title>[libc.so.6] (8 samples, 0.02%)</title><rect x="56.9623%" y="629" width="0.0246%" height="15" fill="rgb(250,96,46)" fg:x="18519" fg:w="8"/><text x="57.2123%" y="639.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="56.9961%" y="597" width="0.0123%" height="15" fill="rgb(229,116,26)" fg:x="18530" fg:w="4"/><text x="57.2461%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="57.0299%" y="581" width="0.0154%" height="15" fill="rgb(246,94,34)" fg:x="18541" fg:w="5"/><text x="57.2799%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2,566 samples, 7.89%)</title><rect x="49.2326%" y="741" width="7.8927%" height="15" fill="rgb(251,73,21)" fg:x="16006" fg:w="2566"/><text x="49.4826%" y="751.50">&lt;core::opti..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (2,565 samples, 7.89%)</title><rect x="49.2356%" y="725" width="7.8896%" height="15" fill="rgb(254,121,25)" fg:x="16007" fg:w="2565"/><text x="49.4856%" y="735.50">&lt;T as core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (2,557 samples, 7.87%)</title><rect x="49.2603%" y="709" width="7.8650%" height="15" fill="rgb(215,161,49)" fg:x="16015" fg:w="2557"/><text x="49.5103%" y="719.50">&lt;alloc::box..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (2,557 samples, 7.87%)</title><rect x="49.2603%" y="693" width="7.8650%" height="15" fill="rgb(221,43,13)" fg:x="16015" fg:w="2557"/><text x="49.5103%" y="703.50">&lt;aes_grinde..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (711 samples, 2.19%)</title><rect x="54.9383%" y="677" width="2.1870%" height="15" fill="rgb(249,5,37)" fg:x="17861" fg:w="711"/><text x="55.1883%" y="687.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (59 samples, 0.18%)</title><rect x="56.9438%" y="661" width="0.1815%" height="15" fill="rgb(226,25,44)" fg:x="18513" fg:w="59"/><text x="57.1938%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (53 samples, 0.16%)</title><rect x="56.9623%" y="645" width="0.1630%" height="15" fill="rgb(238,189,16)" fg:x="18519" fg:w="53"/><text x="57.2123%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (45 samples, 0.14%)</title><rect x="56.9869%" y="629" width="0.1384%" height="15" fill="rgb(251,186,8)" fg:x="18527" fg:w="45"/><text x="57.2369%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (42 samples, 0.13%)</title><rect x="56.9961%" y="613" width="0.1292%" height="15" fill="rgb(254,34,31)" fg:x="18530" fg:w="42"/><text x="57.2461%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (38 samples, 0.12%)</title><rect x="57.0084%" y="597" width="0.1169%" height="15" fill="rgb(225,215,27)" fg:x="18534" fg:w="38"/><text x="57.2584%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (26 samples, 0.08%)</title><rect x="57.0453%" y="581" width="0.0800%" height="15" fill="rgb(221,192,48)" fg:x="18546" fg:w="26"/><text x="57.2953%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (16 samples, 0.05%)</title><rect x="57.0761%" y="565" width="0.0492%" height="15" fill="rgb(219,137,20)" fg:x="18556" fg:w="16"/><text x="57.3261%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (13 samples, 0.04%)</title><rect x="57.0853%" y="549" width="0.0400%" height="15" fill="rgb(219,84,11)" fg:x="18559" fg:w="13"/><text x="57.3353%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (12 samples, 0.04%)</title><rect x="57.0884%" y="533" width="0.0369%" height="15" fill="rgb(224,10,23)" fg:x="18560" fg:w="12"/><text x="57.3384%" y="543.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.02%)</title><rect x="57.1960%" y="693" width="0.0246%" height="15" fill="rgb(248,22,39)" fg:x="18595" fg:w="8"/><text x="57.4460%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="57.3529%" y="597" width="0.0400%" height="15" fill="rgb(212,154,20)" fg:x="18646" fg:w="13"/><text x="57.6029%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.15%)</title><rect x="57.3037%" y="629" width="0.1538%" height="15" fill="rgb(236,199,50)" fg:x="18630" fg:w="50"/><text x="57.5537%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (41 samples, 0.13%)</title><rect x="57.3314%" y="613" width="0.1261%" height="15" fill="rgb(211,9,17)" fg:x="18639" fg:w="41"/><text x="57.5814%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (21 samples, 0.06%)</title><rect x="57.3929%" y="597" width="0.0646%" height="15" fill="rgb(243,216,36)" fg:x="18659" fg:w="21"/><text x="57.6429%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.25%)</title><rect x="57.2268%" y="693" width="0.2522%" height="15" fill="rgb(250,2,10)" fg:x="18605" fg:w="82"/><text x="57.4768%" y="703.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.25%)</title><rect x="57.2268%" y="677" width="0.2522%" height="15" fill="rgb(226,50,48)" fg:x="18605" fg:w="82"/><text x="57.4768%" y="687.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.25%)</title><rect x="57.2268%" y="661" width="0.2522%" height="15" fill="rgb(243,81,16)" fg:x="18605" fg:w="82"/><text x="57.4768%" y="671.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.23%)</title><rect x="57.2514%" y="645" width="0.2276%" height="15" fill="rgb(250,14,2)" fg:x="18613" fg:w="74"/><text x="57.5014%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (7 samples, 0.02%)</title><rect x="57.4575%" y="629" width="0.0215%" height="15" fill="rgb(233,135,29)" fg:x="18680" fg:w="7"/><text x="57.7075%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="57.4636%" y="613" width="0.0154%" height="15" fill="rgb(224,64,43)" fg:x="18682" fg:w="5"/><text x="57.7136%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="57.5098%" y="613" width="0.0123%" height="15" fill="rgb(238,84,13)" fg:x="18697" fg:w="4"/><text x="57.7598%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (25 samples, 0.08%)</title><rect x="57.5713%" y="517" width="0.0769%" height="15" fill="rgb(253,48,26)" fg:x="18717" fg:w="25"/><text x="57.8213%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (112 samples, 0.34%)</title><rect x="57.5405%" y="565" width="0.3445%" height="15" fill="rgb(205,223,31)" fg:x="18707" fg:w="112"/><text x="57.7905%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (112 samples, 0.34%)</title><rect x="57.5405%" y="549" width="0.3445%" height="15" fill="rgb(221,41,32)" fg:x="18707" fg:w="112"/><text x="57.7905%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (112 samples, 0.34%)</title><rect x="57.5405%" y="533" width="0.3445%" height="15" fill="rgb(213,158,31)" fg:x="18707" fg:w="112"/><text x="57.7905%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (77 samples, 0.24%)</title><rect x="57.6482%" y="517" width="0.2368%" height="15" fill="rgb(245,126,43)" fg:x="18742" fg:w="77"/><text x="57.8982%" y="527.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="57.8912%" y="549" width="0.0338%" height="15" fill="rgb(227,7,22)" fg:x="18821" fg:w="11"/><text x="58.1412%" y="559.50"></text></g><g><title>[libc.so.6] (17 samples, 0.05%)</title><rect x="57.9250%" y="533" width="0.0523%" height="15" fill="rgb(252,90,44)" fg:x="18832" fg:w="17"/><text x="58.1750%" y="543.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="57.9865%" y="517" width="0.0615%" height="15" fill="rgb(253,91,0)" fg:x="18852" fg:w="20"/><text x="58.2365%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (54 samples, 0.17%)</title><rect x="57.8850%" y="565" width="0.1661%" height="15" fill="rgb(252,175,49)" fg:x="18819" fg:w="54"/><text x="58.1350%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (41 samples, 0.13%)</title><rect x="57.9250%" y="549" width="0.1261%" height="15" fill="rgb(246,150,1)" fg:x="18832" fg:w="41"/><text x="58.1750%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (24 samples, 0.07%)</title><rect x="57.9773%" y="533" width="0.0738%" height="15" fill="rgb(241,192,25)" fg:x="18849" fg:w="24"/><text x="58.2273%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.06%)</title><rect x="58.1342%" y="453" width="0.0646%" height="15" fill="rgb(239,187,11)" fg:x="18900" fg:w="21"/><text x="58.3842%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.15%)</title><rect x="58.0634%" y="469" width="0.1476%" height="15" fill="rgb(218,202,51)" fg:x="18877" fg:w="48"/><text x="58.3134%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (237 samples, 0.73%)</title><rect x="57.5313%" y="597" width="0.7290%" height="15" fill="rgb(225,176,8)" fg:x="18704" fg:w="237"/><text x="57.7813%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (237 samples, 0.73%)</title><rect x="57.5313%" y="581" width="0.7290%" height="15" fill="rgb(219,122,41)" fg:x="18704" fg:w="237"/><text x="57.7813%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (68 samples, 0.21%)</title><rect x="58.0511%" y="565" width="0.2092%" height="15" fill="rgb(248,140,20)" fg:x="18873" fg:w="68"/><text x="58.3011%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (67 samples, 0.21%)</title><rect x="58.0542%" y="549" width="0.2061%" height="15" fill="rgb(245,41,37)" fg:x="18874" fg:w="67"/><text x="58.3042%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (64 samples, 0.20%)</title><rect x="58.0634%" y="533" width="0.1969%" height="15" fill="rgb(235,82,39)" fg:x="18877" fg:w="64"/><text x="58.3134%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (64 samples, 0.20%)</title><rect x="58.0634%" y="517" width="0.1969%" height="15" fill="rgb(230,108,42)" fg:x="18877" fg:w="64"/><text x="58.3134%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (64 samples, 0.20%)</title><rect x="58.0634%" y="501" width="0.1969%" height="15" fill="rgb(215,150,50)" fg:x="18877" fg:w="64"/><text x="58.3134%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (64 samples, 0.20%)</title><rect x="58.0634%" y="485" width="0.1969%" height="15" fill="rgb(233,212,5)" fg:x="18877" fg:w="64"/><text x="58.3134%" y="495.50"></text></g><g><title>core::hash::Hasher::write_u8 (16 samples, 0.05%)</title><rect x="58.2111%" y="469" width="0.0492%" height="15" fill="rgb(245,80,22)" fg:x="18925" fg:w="16"/><text x="58.4611%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (16 samples, 0.05%)</title><rect x="58.2111%" y="453" width="0.0492%" height="15" fill="rgb(238,129,16)" fg:x="18925" fg:w="16"/><text x="58.4611%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.03%)</title><rect x="58.2264%" y="437" width="0.0338%" height="15" fill="rgb(240,19,0)" fg:x="18930" fg:w="11"/><text x="58.4764%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="58.2941%" y="581" width="0.0123%" height="15" fill="rgb(232,42,35)" fg:x="18952" fg:w="4"/><text x="58.5441%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="58.2941%" y="565" width="0.0123%" height="15" fill="rgb(223,130,24)" fg:x="18952" fg:w="4"/><text x="58.5441%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="58.3587%" y="533" width="0.0123%" height="15" fill="rgb(237,16,22)" fg:x="18973" fg:w="4"/><text x="58.6087%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (14 samples, 0.04%)</title><rect x="58.3310%" y="565" width="0.0431%" height="15" fill="rgb(248,192,20)" fg:x="18964" fg:w="14"/><text x="58.5810%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (13 samples, 0.04%)</title><rect x="58.3341%" y="549" width="0.0400%" height="15" fill="rgb(233,167,2)" fg:x="18965" fg:w="13"/><text x="58.5841%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.02%)</title><rect x="58.4787%" y="549" width="0.0154%" height="15" fill="rgb(252,71,44)" fg:x="19012" fg:w="5"/><text x="58.7287%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.02%)</title><rect x="58.5187%" y="533" width="0.0154%" height="15" fill="rgb(238,37,47)" fg:x="19025" fg:w="5"/><text x="58.7687%" y="543.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.03%)</title><rect x="58.5494%" y="517" width="0.0277%" height="15" fill="rgb(214,202,54)" fg:x="19035" fg:w="9"/><text x="58.7994%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.09%)</title><rect x="58.4940%" y="549" width="0.0923%" height="15" fill="rgb(254,165,40)" fg:x="19017" fg:w="30"/><text x="58.7440%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.05%)</title><rect x="58.5340%" y="533" width="0.0523%" height="15" fill="rgb(246,173,38)" fg:x="19030" fg:w="17"/><text x="58.7840%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.02%)</title><rect x="58.6724%" y="437" width="0.0246%" height="15" fill="rgb(215,3,27)" fg:x="19075" fg:w="8"/><text x="58.9224%" y="447.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.02%)</title><rect x="58.6755%" y="421" width="0.0215%" height="15" fill="rgb(239,169,51)" fg:x="19076" fg:w="7"/><text x="58.9255%" y="431.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.02%)</title><rect x="58.6755%" y="405" width="0.0215%" height="15" fill="rgb(212,5,25)" fg:x="19076" fg:w="7"/><text x="58.9255%" y="415.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.02%)</title><rect x="58.6755%" y="389" width="0.0215%" height="15" fill="rgb(243,45,17)" fg:x="19076" fg:w="7"/><text x="58.9255%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.06%)</title><rect x="58.6448%" y="453" width="0.0554%" height="15" fill="rgb(242,97,9)" fg:x="19066" fg:w="18"/><text x="58.8948%" y="463.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (66 samples, 0.20%)</title><rect x="58.6109%" y="533" width="0.2030%" height="15" fill="rgb(228,71,31)" fg:x="19055" fg:w="66"/><text x="58.8609%" y="543.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (66 samples, 0.20%)</title><rect x="58.6109%" y="517" width="0.2030%" height="15" fill="rgb(252,184,16)" fg:x="19055" fg:w="66"/><text x="58.8609%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (61 samples, 0.19%)</title><rect x="58.6263%" y="501" width="0.1876%" height="15" fill="rgb(236,169,46)" fg:x="19060" fg:w="61"/><text x="58.8763%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (57 samples, 0.18%)</title><rect x="58.6386%" y="485" width="0.1753%" height="15" fill="rgb(207,17,47)" fg:x="19064" fg:w="57"/><text x="58.8886%" y="495.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (55 samples, 0.17%)</title><rect x="58.6448%" y="469" width="0.1692%" height="15" fill="rgb(206,201,28)" fg:x="19066" fg:w="55"/><text x="58.8948%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (37 samples, 0.11%)</title><rect x="58.7001%" y="453" width="0.1138%" height="15" fill="rgb(224,184,23)" fg:x="19084" fg:w="37"/><text x="58.9501%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (37 samples, 0.11%)</title><rect x="58.7001%" y="437" width="0.1138%" height="15" fill="rgb(208,139,48)" fg:x="19084" fg:w="37"/><text x="58.9501%" y="447.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="58.7832%" y="421" width="0.0308%" height="15" fill="rgb(208,130,10)" fg:x="19111" fg:w="10"/><text x="59.0332%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (89 samples, 0.27%)</title><rect x="58.5863%" y="549" width="0.2738%" height="15" fill="rgb(211,213,45)" fg:x="19047" fg:w="89"/><text x="58.8363%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (12 samples, 0.04%)</title><rect x="58.8232%" y="533" width="0.0369%" height="15" fill="rgb(235,100,30)" fg:x="19124" fg:w="12"/><text x="59.0732%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.04%)</title><rect x="58.8232%" y="517" width="0.0369%" height="15" fill="rgb(206,144,31)" fg:x="19124" fg:w="12"/><text x="59.0732%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.02%)</title><rect x="58.8416%" y="501" width="0.0185%" height="15" fill="rgb(224,200,26)" fg:x="19130" fg:w="6"/><text x="59.0916%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (32 samples, 0.10%)</title><rect x="58.8662%" y="549" width="0.0984%" height="15" fill="rgb(247,104,53)" fg:x="19138" fg:w="32"/><text x="59.1162%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (29 samples, 0.09%)</title><rect x="58.8755%" y="533" width="0.0892%" height="15" fill="rgb(220,14,17)" fg:x="19141" fg:w="29"/><text x="59.1255%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.02%)</title><rect x="59.0323%" y="533" width="0.0185%" height="15" fill="rgb(230,140,40)" fg:x="19192" fg:w="6"/><text x="59.2823%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (25 samples, 0.08%)</title><rect x="59.0508%" y="533" width="0.0769%" height="15" fill="rgb(229,2,41)" fg:x="19198" fg:w="25"/><text x="59.3008%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (666 samples, 2.05%)</title><rect x="57.1284%" y="725" width="2.0485%" height="15" fill="rgb(232,89,16)" fg:x="18573" fg:w="666"/><text x="57.3784%" y="735.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (664 samples, 2.04%)</title><rect x="57.1345%" y="709" width="2.0424%" height="15" fill="rgb(247,59,52)" fg:x="18575" fg:w="664"/><text x="57.3845%" y="719.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (552 samples, 1.70%)</title><rect x="57.4790%" y="693" width="1.6979%" height="15" fill="rgb(226,110,21)" fg:x="18687" fg:w="552"/><text x="57.7290%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (545 samples, 1.68%)</title><rect x="57.5005%" y="677" width="1.6764%" height="15" fill="rgb(224,176,43)" fg:x="18694" fg:w="545"/><text x="57.7505%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (545 samples, 1.68%)</title><rect x="57.5005%" y="661" width="1.6764%" height="15" fill="rgb(221,73,6)" fg:x="18694" fg:w="545"/><text x="57.7505%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (545 samples, 1.68%)</title><rect x="57.5005%" y="645" width="1.6764%" height="15" fill="rgb(232,78,19)" fg:x="18694" fg:w="545"/><text x="57.7505%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (545 samples, 1.68%)</title><rect x="57.5005%" y="629" width="1.6764%" height="15" fill="rgb(233,112,48)" fg:x="18694" fg:w="545"/><text x="57.7505%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (538 samples, 1.65%)</title><rect x="57.5221%" y="613" width="1.6548%" height="15" fill="rgb(243,131,47)" fg:x="18701" fg:w="538"/><text x="57.7721%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (298 samples, 0.92%)</title><rect x="58.2603%" y="597" width="0.9166%" height="15" fill="rgb(226,51,1)" fg:x="18941" fg:w="298"/><text x="58.5103%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (283 samples, 0.87%)</title><rect x="58.3064%" y="581" width="0.8705%" height="15" fill="rgb(247,58,7)" fg:x="18956" fg:w="283"/><text x="58.5564%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (261 samples, 0.80%)</title><rect x="58.3741%" y="565" width="0.8028%" height="15" fill="rgb(209,7,32)" fg:x="18978" fg:w="261"/><text x="58.6241%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (69 samples, 0.21%)</title><rect x="58.9647%" y="549" width="0.2122%" height="15" fill="rgb(209,39,41)" fg:x="19170" fg:w="69"/><text x="59.2147%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (16 samples, 0.05%)</title><rect x="59.1277%" y="533" width="0.0492%" height="15" fill="rgb(226,182,46)" fg:x="19223" fg:w="16"/><text x="59.3777%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (16 samples, 0.05%)</title><rect x="59.1277%" y="517" width="0.0492%" height="15" fill="rgb(230,219,10)" fg:x="19223" fg:w="16"/><text x="59.3777%" y="527.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="59.1830%" y="693" width="0.0154%" height="15" fill="rgb(227,175,30)" fg:x="19241" fg:w="5"/><text x="59.4330%" y="703.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="59.1984%" y="677" width="0.0123%" height="15" fill="rgb(217,2,50)" fg:x="19246" fg:w="4"/><text x="59.4484%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.01%)</title><rect x="59.2292%" y="645" width="0.0123%" height="15" fill="rgb(229,160,0)" fg:x="19256" fg:w="4"/><text x="59.4792%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,279 samples, 10.09%)</title><rect x="49.1926%" y="805" width="10.0858%" height="15" fill="rgb(207,78,37)" fg:x="15993" fg:w="3279"/><text x="49.4426%" y="815.50">&lt;core::option::..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (3,277 samples, 10.08%)</title><rect x="49.1987%" y="789" width="10.0797%" height="15" fill="rgb(225,57,0)" fg:x="15995" fg:w="3277"/><text x="49.4487%" y="799.50">&lt;T as core::opt..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (3,273 samples, 10.07%)</title><rect x="49.2110%" y="773" width="10.0674%" height="15" fill="rgb(232,154,2)" fg:x="15999" fg:w="3273"/><text x="49.4610%" y="783.50">&lt;alloc::boxed::..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (3,272 samples, 10.06%)</title><rect x="49.2141%" y="757" width="10.0643%" height="15" fill="rgb(241,212,25)" fg:x="16000" fg:w="3272"/><text x="49.4641%" y="767.50">&lt;aes_grinder::a..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (700 samples, 2.15%)</title><rect x="57.1253%" y="741" width="2.1531%" height="15" fill="rgb(226,69,20)" fg:x="18572" fg:w="700"/><text x="57.3753%" y="751.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (33 samples, 0.10%)</title><rect x="59.1769%" y="725" width="0.1015%" height="15" fill="rgb(247,184,54)" fg:x="19239" fg:w="33"/><text x="59.4269%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (31 samples, 0.10%)</title><rect x="59.1830%" y="709" width="0.0954%" height="15" fill="rgb(210,145,0)" fg:x="19241" fg:w="31"/><text x="59.4330%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (26 samples, 0.08%)</title><rect x="59.1984%" y="693" width="0.0800%" height="15" fill="rgb(253,82,12)" fg:x="19246" fg:w="26"/><text x="59.4484%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (22 samples, 0.07%)</title><rect x="59.2107%" y="677" width="0.0677%" height="15" fill="rgb(245,42,11)" fg:x="19250" fg:w="22"/><text x="59.4607%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (19 samples, 0.06%)</title><rect x="59.2200%" y="661" width="0.0584%" height="15" fill="rgb(219,147,32)" fg:x="19253" fg:w="19"/><text x="59.4700%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.04%)</title><rect x="59.2415%" y="645" width="0.0369%" height="15" fill="rgb(246,12,7)" fg:x="19260" fg:w="12"/><text x="59.4915%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (6 samples, 0.02%)</title><rect x="59.2599%" y="629" width="0.0185%" height="15" fill="rgb(243,50,9)" fg:x="19266" fg:w="6"/><text x="59.5099%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="59.2630%" y="613" width="0.0154%" height="15" fill="rgb(219,149,6)" fg:x="19267" fg:w="5"/><text x="59.5130%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="59.2630%" y="597" width="0.0154%" height="15" fill="rgb(241,51,42)" fg:x="19267" fg:w="5"/><text x="59.5130%" y="607.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="59.3430%" y="757" width="0.0185%" height="15" fill="rgb(226,128,27)" fg:x="19293" fg:w="6"/><text x="59.5930%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="59.4445%" y="661" width="0.0246%" height="15" fill="rgb(244,144,4)" fg:x="19326" fg:w="8"/><text x="59.6945%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="59.5152%" y="645" width="0.0123%" height="15" fill="rgb(221,4,13)" fg:x="19349" fg:w="4"/><text x="59.7652%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.12%)</title><rect x="59.4137%" y="693" width="0.1169%" height="15" fill="rgb(208,170,28)" fg:x="19316" fg:w="38"/><text x="59.6637%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (34 samples, 0.10%)</title><rect x="59.4260%" y="677" width="0.1046%" height="15" fill="rgb(226,131,13)" fg:x="19320" fg:w="34"/><text x="59.6760%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (20 samples, 0.06%)</title><rect x="59.4691%" y="661" width="0.0615%" height="15" fill="rgb(215,72,41)" fg:x="19334" fg:w="20"/><text x="59.7191%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.18%)</title><rect x="59.3614%" y="757" width="0.1784%" height="15" fill="rgb(243,108,20)" fg:x="19299" fg:w="58"/><text x="59.6114%" y="767.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.18%)</title><rect x="59.3645%" y="741" width="0.1753%" height="15" fill="rgb(230,189,17)" fg:x="19300" fg:w="57"/><text x="59.6145%" y="751.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.18%)</title><rect x="59.3645%" y="725" width="0.1753%" height="15" fill="rgb(220,50,17)" fg:x="19300" fg:w="57"/><text x="59.6145%" y="735.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.16%)</title><rect x="59.3830%" y="709" width="0.1569%" height="15" fill="rgb(248,152,48)" fg:x="19306" fg:w="51"/><text x="59.6330%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (27 samples, 0.08%)</title><rect x="59.6137%" y="581" width="0.0830%" height="15" fill="rgb(244,91,11)" fg:x="19381" fg:w="27"/><text x="59.8637%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (101 samples, 0.31%)</title><rect x="59.5737%" y="629" width="0.3107%" height="15" fill="rgb(220,157,5)" fg:x="19368" fg:w="101"/><text x="59.8237%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (100 samples, 0.31%)</title><rect x="59.5768%" y="613" width="0.3076%" height="15" fill="rgb(253,137,8)" fg:x="19369" fg:w="100"/><text x="59.8268%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (100 samples, 0.31%)</title><rect x="59.5768%" y="597" width="0.3076%" height="15" fill="rgb(217,137,51)" fg:x="19369" fg:w="100"/><text x="59.8268%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (61 samples, 0.19%)</title><rect x="59.6967%" y="581" width="0.1876%" height="15" fill="rgb(218,209,53)" fg:x="19408" fg:w="61"/><text x="59.9467%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="59.8659%" y="565" width="0.0185%" height="15" fill="rgb(249,137,25)" fg:x="19463" fg:w="6"/><text x="60.1159%" y="575.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="59.8874%" y="613" width="0.0369%" height="15" fill="rgb(239,155,26)" fg:x="19470" fg:w="12"/><text x="60.1374%" y="623.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="59.9243%" y="597" width="0.0492%" height="15" fill="rgb(227,85,46)" fg:x="19482" fg:w="16"/><text x="60.1743%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (52 samples, 0.16%)</title><rect x="59.8843%" y="629" width="0.1599%" height="15" fill="rgb(251,107,43)" fg:x="19469" fg:w="52"/><text x="60.1343%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (39 samples, 0.12%)</title><rect x="59.9243%" y="613" width="0.1200%" height="15" fill="rgb(234,170,33)" fg:x="19482" fg:w="39"/><text x="60.1743%" y="623.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (23 samples, 0.07%)</title><rect x="59.9735%" y="597" width="0.0707%" height="15" fill="rgb(206,29,35)" fg:x="19498" fg:w="23"/><text x="60.2235%" y="607.50"></text></g><g><title>[libc.so.6] (21 samples, 0.06%)</title><rect x="59.9797%" y="581" width="0.0646%" height="15" fill="rgb(227,138,25)" fg:x="19500" fg:w="21"/><text x="60.2297%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.08%)</title><rect x="60.1212%" y="517" width="0.0800%" height="15" fill="rgb(249,131,35)" fg:x="19546" fg:w="26"/><text x="60.3712%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.15%)</title><rect x="60.0597%" y="533" width="0.1476%" height="15" fill="rgb(239,6,40)" fg:x="19526" fg:w="48"/><text x="60.3097%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (219 samples, 0.67%)</title><rect x="59.5675%" y="661" width="0.6736%" height="15" fill="rgb(246,136,47)" fg:x="19366" fg:w="219"/><text x="59.8175%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (219 samples, 0.67%)</title><rect x="59.5675%" y="645" width="0.6736%" height="15" fill="rgb(253,58,26)" fg:x="19366" fg:w="219"/><text x="59.8175%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (64 samples, 0.20%)</title><rect x="60.0443%" y="629" width="0.1969%" height="15" fill="rgb(237,141,10)" fg:x="19521" fg:w="64"/><text x="60.2943%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (63 samples, 0.19%)</title><rect x="60.0474%" y="613" width="0.1938%" height="15" fill="rgb(234,156,12)" fg:x="19522" fg:w="63"/><text x="60.2974%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (61 samples, 0.19%)</title><rect x="60.0535%" y="597" width="0.1876%" height="15" fill="rgb(243,224,36)" fg:x="19524" fg:w="61"/><text x="60.3035%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (61 samples, 0.19%)</title><rect x="60.0535%" y="581" width="0.1876%" height="15" fill="rgb(205,229,51)" fg:x="19524" fg:w="61"/><text x="60.3035%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (59 samples, 0.18%)</title><rect x="60.0597%" y="565" width="0.1815%" height="15" fill="rgb(223,189,4)" fg:x="19526" fg:w="59"/><text x="60.3097%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (59 samples, 0.18%)</title><rect x="60.0597%" y="549" width="0.1815%" height="15" fill="rgb(249,167,54)" fg:x="19526" fg:w="59"/><text x="60.3097%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (11 samples, 0.03%)</title><rect x="60.2073%" y="533" width="0.0338%" height="15" fill="rgb(218,34,28)" fg:x="19574" fg:w="11"/><text x="60.4573%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.03%)</title><rect x="60.2073%" y="517" width="0.0338%" height="15" fill="rgb(232,109,42)" fg:x="19574" fg:w="11"/><text x="60.4573%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="60.2288%" y="501" width="0.0123%" height="15" fill="rgb(248,214,46)" fg:x="19581" fg:w="4"/><text x="60.4788%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (15 samples, 0.05%)</title><rect x="60.3242%" y="629" width="0.0461%" height="15" fill="rgb(244,216,40)" fg:x="19612" fg:w="15"/><text x="60.5742%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (15 samples, 0.05%)</title><rect x="60.3242%" y="613" width="0.0461%" height="15" fill="rgb(231,226,31)" fg:x="19612" fg:w="15"/><text x="60.5742%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.03%)</title><rect x="60.4595%" y="613" width="0.0308%" height="15" fill="rgb(238,38,43)" fg:x="19656" fg:w="10"/><text x="60.7095%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="60.5180%" y="597" width="0.0185%" height="15" fill="rgb(208,88,43)" fg:x="19675" fg:w="6"/><text x="60.7680%" y="607.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="60.5518%" y="581" width="0.0215%" height="15" fill="rgb(205,136,37)" fg:x="19686" fg:w="7"/><text x="60.8018%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.09%)</title><rect x="60.4903%" y="613" width="0.0861%" height="15" fill="rgb(237,34,14)" fg:x="19666" fg:w="28"/><text x="60.7403%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (13 samples, 0.04%)</title><rect x="60.5364%" y="597" width="0.0400%" height="15" fill="rgb(236,193,44)" fg:x="19681" fg:w="13"/><text x="60.7864%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (11 samples, 0.03%)</title><rect x="60.6349%" y="501" width="0.0338%" height="15" fill="rgb(231,48,10)" fg:x="19713" fg:w="11"/><text x="60.8849%" y="511.50"></text></g><g><title>core::slice::raw::from_raw_parts (8 samples, 0.02%)</title><rect x="60.6441%" y="485" width="0.0246%" height="15" fill="rgb(213,141,34)" fg:x="19716" fg:w="8"/><text x="60.8941%" y="495.50"></text></g><g><title>core::ptr::slice_from_raw_parts (8 samples, 0.02%)</title><rect x="60.6441%" y="469" width="0.0246%" height="15" fill="rgb(249,130,34)" fg:x="19716" fg:w="8"/><text x="60.8941%" y="479.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (7 samples, 0.02%)</title><rect x="60.6472%" y="453" width="0.0215%" height="15" fill="rgb(219,42,41)" fg:x="19717" fg:w="7"/><text x="60.8972%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (18 samples, 0.06%)</title><rect x="60.6164%" y="517" width="0.0554%" height="15" fill="rgb(224,100,54)" fg:x="19707" fg:w="18"/><text x="60.8664%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (62 samples, 0.19%)</title><rect x="60.5826%" y="597" width="0.1907%" height="15" fill="rgb(229,200,27)" fg:x="19696" fg:w="62"/><text x="60.8326%" y="607.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (62 samples, 0.19%)</title><rect x="60.5826%" y="581" width="0.1907%" height="15" fill="rgb(217,118,10)" fg:x="19696" fg:w="62"/><text x="60.8326%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (58 samples, 0.18%)</title><rect x="60.5949%" y="565" width="0.1784%" height="15" fill="rgb(206,22,3)" fg:x="19700" fg:w="58"/><text x="60.8449%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (55 samples, 0.17%)</title><rect x="60.6041%" y="549" width="0.1692%" height="15" fill="rgb(232,163,46)" fg:x="19703" fg:w="55"/><text x="60.8541%" y="559.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (54 samples, 0.17%)</title><rect x="60.6072%" y="533" width="0.1661%" height="15" fill="rgb(206,95,13)" fg:x="19704" fg:w="54"/><text x="60.8572%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (33 samples, 0.10%)</title><rect x="60.6718%" y="517" width="0.1015%" height="15" fill="rgb(253,154,18)" fg:x="19725" fg:w="33"/><text x="60.9218%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (33 samples, 0.10%)</title><rect x="60.6718%" y="501" width="0.1015%" height="15" fill="rgb(219,32,23)" fg:x="19725" fg:w="33"/><text x="60.9218%" y="511.50"></text></g><g><title>[libc.so.6] (13 samples, 0.04%)</title><rect x="60.7333%" y="485" width="0.0400%" height="15" fill="rgb(230,191,45)" fg:x="19745" fg:w="13"/><text x="60.9833%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="60.7733%" y="597" width="0.0123%" height="15" fill="rgb(229,64,36)" fg:x="19758" fg:w="4"/><text x="61.0233%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.01%)</title><rect x="60.7733%" y="581" width="0.0123%" height="15" fill="rgb(205,129,25)" fg:x="19758" fg:w="4"/><text x="61.0233%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (16 samples, 0.05%)</title><rect x="60.7856%" y="581" width="0.0492%" height="15" fill="rgb(254,112,7)" fg:x="19762" fg:w="16"/><text x="61.0356%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (85 samples, 0.26%)</title><rect x="60.5764%" y="613" width="0.2614%" height="15" fill="rgb(226,53,48)" fg:x="19694" fg:w="85"/><text x="60.8264%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (17 samples, 0.05%)</title><rect x="60.7856%" y="597" width="0.0523%" height="15" fill="rgb(214,153,38)" fg:x="19762" fg:w="17"/><text x="61.0356%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (39 samples, 0.12%)</title><rect x="60.8379%" y="613" width="0.1200%" height="15" fill="rgb(243,101,7)" fg:x="19779" fg:w="39"/><text x="61.0879%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (35 samples, 0.11%)</title><rect x="60.8502%" y="597" width="0.1077%" height="15" fill="rgb(240,140,22)" fg:x="19783" fg:w="35"/><text x="61.1002%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="60.9301%" y="581" width="0.0277%" height="15" fill="rgb(235,114,2)" fg:x="19809" fg:w="9"/><text x="61.1801%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (7 samples, 0.02%)</title><rect x="61.0009%" y="597" width="0.0215%" height="15" fill="rgb(242,59,12)" fg:x="19832" fg:w="7"/><text x="61.2509%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 0.10%)</title><rect x="61.0224%" y="597" width="0.0954%" height="15" fill="rgb(252,134,9)" fg:x="19839" fg:w="31"/><text x="61.2724%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (605 samples, 1.86%)</title><rect x="59.2784%" y="789" width="1.8609%" height="15" fill="rgb(236,4,44)" fg:x="19272" fg:w="605"/><text x="59.5284%" y="799.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (605 samples, 1.86%)</title><rect x="59.2784%" y="773" width="1.8609%" height="15" fill="rgb(254,172,41)" fg:x="19272" fg:w="605"/><text x="59.5284%" y="783.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (520 samples, 1.60%)</title><rect x="59.5398%" y="757" width="1.5995%" height="15" fill="rgb(244,63,20)" fg:x="19357" fg:w="520"/><text x="59.7898%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (515 samples, 1.58%)</title><rect x="59.5552%" y="741" width="1.5841%" height="15" fill="rgb(250,73,31)" fg:x="19362" fg:w="515"/><text x="59.8052%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (515 samples, 1.58%)</title><rect x="59.5552%" y="725" width="1.5841%" height="15" fill="rgb(241,38,36)" fg:x="19362" fg:w="515"/><text x="59.8052%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (515 samples, 1.58%)</title><rect x="59.5552%" y="709" width="1.5841%" height="15" fill="rgb(245,211,2)" fg:x="19362" fg:w="515"/><text x="59.8052%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (515 samples, 1.58%)</title><rect x="59.5552%" y="693" width="1.5841%" height="15" fill="rgb(206,120,28)" fg:x="19362" fg:w="515"/><text x="59.8052%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (512 samples, 1.57%)</title><rect x="59.5645%" y="677" width="1.5749%" height="15" fill="rgb(211,59,34)" fg:x="19365" fg:w="512"/><text x="59.8145%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (292 samples, 0.90%)</title><rect x="60.2411%" y="661" width="0.8982%" height="15" fill="rgb(233,168,5)" fg:x="19585" fg:w="292"/><text x="60.4911%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (274 samples, 0.84%)</title><rect x="60.2965%" y="645" width="0.8428%" height="15" fill="rgb(234,33,13)" fg:x="19603" fg:w="274"/><text x="60.5465%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (250 samples, 0.77%)</title><rect x="60.3703%" y="629" width="0.7690%" height="15" fill="rgb(231,150,26)" fg:x="19627" fg:w="250"/><text x="60.6203%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (59 samples, 0.18%)</title><rect x="60.9578%" y="613" width="0.1815%" height="15" fill="rgb(217,191,4)" fg:x="19818" fg:w="59"/><text x="61.2078%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (7 samples, 0.02%)</title><rect x="61.1178%" y="597" width="0.0215%" height="15" fill="rgb(246,198,38)" fg:x="19870" fg:w="7"/><text x="61.3678%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.02%)</title><rect x="61.1178%" y="581" width="0.0215%" height="15" fill="rgb(245,64,37)" fg:x="19870" fg:w="7"/><text x="61.3678%" y="591.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="61.1547%" y="725" width="0.0123%" height="15" fill="rgb(250,30,36)" fg:x="19882" fg:w="4"/><text x="61.4047%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,917 samples, 12.05%)</title><rect x="49.1710%" y="869" width="12.0482%" height="15" fill="rgb(217,86,53)" fg:x="15986" fg:w="3917"/><text x="49.4210%" y="879.50">&lt;core::option::Opt..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (3,917 samples, 12.05%)</title><rect x="49.1710%" y="853" width="12.0482%" height="15" fill="rgb(228,157,16)" fg:x="15986" fg:w="3917"/><text x="49.4210%" y="863.50">&lt;T as core::option..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (3,914 samples, 12.04%)</title><rect x="49.1803%" y="837" width="12.0390%" height="15" fill="rgb(217,59,31)" fg:x="15989" fg:w="3914"/><text x="49.4303%" y="847.50">&lt;alloc::boxed::Box..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (3,914 samples, 12.04%)</title><rect x="49.1803%" y="821" width="12.0390%" height="15" fill="rgb(237,138,41)" fg:x="15989" fg:w="3914"/><text x="49.4303%" y="831.50">&lt;aes_grinder::algo..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (631 samples, 1.94%)</title><rect x="59.2784%" y="805" width="1.9409%" height="15" fill="rgb(227,91,49)" fg:x="19272" fg:w="631"/><text x="59.5284%" y="815.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (26 samples, 0.08%)</title><rect x="61.1393%" y="789" width="0.0800%" height="15" fill="rgb(247,21,44)" fg:x="19877" fg:w="26"/><text x="61.3893%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (23 samples, 0.07%)</title><rect x="61.1485%" y="773" width="0.0707%" height="15" fill="rgb(219,210,51)" fg:x="19880" fg:w="23"/><text x="61.3985%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (21 samples, 0.06%)</title><rect x="61.1547%" y="757" width="0.0646%" height="15" fill="rgb(209,140,6)" fg:x="19882" fg:w="21"/><text x="61.4047%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (21 samples, 0.06%)</title><rect x="61.1547%" y="741" width="0.0646%" height="15" fill="rgb(221,188,24)" fg:x="19882" fg:w="21"/><text x="61.4047%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17 samples, 0.05%)</title><rect x="61.1670%" y="725" width="0.0523%" height="15" fill="rgb(232,154,20)" fg:x="19886" fg:w="17"/><text x="61.4170%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="61.1854%" y="709" width="0.0338%" height="15" fill="rgb(244,137,50)" fg:x="19892" fg:w="11"/><text x="61.4354%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (7 samples, 0.02%)</title><rect x="61.1977%" y="693" width="0.0215%" height="15" fill="rgb(225,185,43)" fg:x="19896" fg:w="7"/><text x="61.4477%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="61.2039%" y="677" width="0.0154%" height="15" fill="rgb(213,205,38)" fg:x="19898" fg:w="5"/><text x="61.4539%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="61.2039%" y="661" width="0.0154%" height="15" fill="rgb(236,73,12)" fg:x="19898" fg:w="5"/><text x="61.4539%" y="671.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="61.2408%" y="837" width="0.0154%" height="15" fill="rgb(235,219,13)" fg:x="19910" fg:w="5"/><text x="61.4908%" y="847.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="61.3546%" y="821" width="0.0123%" height="15" fill="rgb(218,59,36)" fg:x="19947" fg:w="4"/><text x="61.6046%" y="831.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.02%)</title><rect x="61.5269%" y="693" width="0.0215%" height="15" fill="rgb(205,110,39)" fg:x="20003" fg:w="7"/><text x="61.7769%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (10 samples, 0.03%)</title><rect x="61.5238%" y="709" width="0.0308%" height="15" fill="rgb(218,206,42)" fg:x="20002" fg:w="10"/><text x="61.7738%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="61.5023%" y="725" width="0.0554%" height="15" fill="rgb(248,125,24)" fg:x="19995" fg:w="18"/><text x="61.7523%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.18%)</title><rect x="61.4500%" y="757" width="0.1753%" height="15" fill="rgb(242,28,27)" fg:x="19978" fg:w="57"/><text x="61.7000%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (52 samples, 0.16%)</title><rect x="61.4654%" y="741" width="0.1599%" height="15" fill="rgb(216,228,15)" fg:x="19983" fg:w="52"/><text x="61.7154%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (22 samples, 0.07%)</title><rect x="61.5576%" y="725" width="0.0677%" height="15" fill="rgb(235,116,46)" fg:x="20013" fg:w="22"/><text x="61.8076%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="61.6099%" y="709" width="0.0154%" height="15" fill="rgb(224,18,32)" fg:x="20030" fg:w="5"/><text x="61.8599%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.30%)</title><rect x="61.3669%" y="821" width="0.2984%" height="15" fill="rgb(252,5,12)" fg:x="19951" fg:w="97"/><text x="61.6169%" y="831.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.30%)</title><rect x="61.3669%" y="805" width="0.2984%" height="15" fill="rgb(251,36,5)" fg:x="19951" fg:w="97"/><text x="61.6169%" y="815.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (97 samples, 0.30%)</title><rect x="61.3669%" y="789" width="0.2984%" height="15" fill="rgb(217,53,14)" fg:x="19951" fg:w="97"/><text x="61.6169%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.27%)</title><rect x="61.3946%" y="773" width="0.2707%" height="15" fill="rgb(215,86,45)" fg:x="19960" fg:w="88"/><text x="61.6446%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (13 samples, 0.04%)</title><rect x="61.6253%" y="757" width="0.0400%" height="15" fill="rgb(242,169,11)" fg:x="20035" fg:w="13"/><text x="61.8753%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (8 samples, 0.02%)</title><rect x="61.6407%" y="741" width="0.0246%" height="15" fill="rgb(211,213,45)" fg:x="20040" fg:w="8"/><text x="61.8907%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.11%)</title><rect x="61.8068%" y="645" width="0.1138%" height="15" fill="rgb(205,88,11)" fg:x="20094" fg:w="37"/><text x="62.0568%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="61.9052%" y="629" width="0.0154%" height="15" fill="rgb(252,69,26)" fg:x="20126" fg:w="5"/><text x="62.1552%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (163 samples, 0.50%)</title><rect x="61.7606%" y="693" width="0.5014%" height="15" fill="rgb(246,123,37)" fg:x="20079" fg:w="163"/><text x="62.0106%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (163 samples, 0.50%)</title><rect x="61.7606%" y="677" width="0.5014%" height="15" fill="rgb(212,205,5)" fg:x="20079" fg:w="163"/><text x="62.0106%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (163 samples, 0.50%)</title><rect x="61.7606%" y="661" width="0.5014%" height="15" fill="rgb(253,148,0)" fg:x="20079" fg:w="163"/><text x="62.0106%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (111 samples, 0.34%)</title><rect x="61.9206%" y="645" width="0.3414%" height="15" fill="rgb(239,22,4)" fg:x="20131" fg:w="111"/><text x="62.1706%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.03%)</title><rect x="62.2312%" y="629" width="0.0308%" height="15" fill="rgb(226,26,53)" fg:x="20232" fg:w="10"/><text x="62.4812%" y="639.50"></text></g><g><title>[libc.so.6] (18 samples, 0.06%)</title><rect x="62.2651%" y="677" width="0.0554%" height="15" fill="rgb(225,229,45)" fg:x="20243" fg:w="18"/><text x="62.5151%" y="687.50"></text></g><g><title>[libc.so.6] (19 samples, 0.06%)</title><rect x="62.3204%" y="661" width="0.0584%" height="15" fill="rgb(220,60,37)" fg:x="20261" fg:w="19"/><text x="62.5704%" y="671.50"></text></g><g><title>[libc.so.6] (30 samples, 0.09%)</title><rect x="62.3820%" y="645" width="0.0923%" height="15" fill="rgb(217,180,35)" fg:x="20281" fg:w="30"/><text x="62.6320%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (70 samples, 0.22%)</title><rect x="62.2620%" y="693" width="0.2153%" height="15" fill="rgb(229,7,53)" fg:x="20242" fg:w="70"/><text x="62.5120%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (51 samples, 0.16%)</title><rect x="62.3204%" y="677" width="0.1569%" height="15" fill="rgb(254,137,3)" fg:x="20261" fg:w="51"/><text x="62.5704%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (32 samples, 0.10%)</title><rect x="62.3789%" y="661" width="0.0984%" height="15" fill="rgb(215,140,41)" fg:x="20280" fg:w="32"/><text x="62.6289%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (35 samples, 0.11%)</title><rect x="62.5665%" y="581" width="0.1077%" height="15" fill="rgb(250,80,15)" fg:x="20341" fg:w="35"/><text x="62.8165%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.02%)</title><rect x="62.6588%" y="565" width="0.0154%" height="15" fill="rgb(252,191,6)" fg:x="20371" fg:w="5"/><text x="62.9088%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (63 samples, 0.19%)</title><rect x="62.4896%" y="597" width="0.1938%" height="15" fill="rgb(246,217,18)" fg:x="20316" fg:w="63"/><text x="62.7396%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (340 samples, 1.05%)</title><rect x="61.7299%" y="725" width="1.0458%" height="15" fill="rgb(223,93,7)" fg:x="20069" fg:w="340"/><text x="61.9799%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (340 samples, 1.05%)</title><rect x="61.7299%" y="709" width="1.0458%" height="15" fill="rgb(225,55,52)" fg:x="20069" fg:w="340"/><text x="61.9799%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (97 samples, 0.30%)</title><rect x="62.4773%" y="693" width="0.2984%" height="15" fill="rgb(240,31,24)" fg:x="20312" fg:w="97"/><text x="62.7273%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (97 samples, 0.30%)</title><rect x="62.4773%" y="677" width="0.2984%" height="15" fill="rgb(205,56,52)" fg:x="20312" fg:w="97"/><text x="62.7273%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (95 samples, 0.29%)</title><rect x="62.4835%" y="661" width="0.2922%" height="15" fill="rgb(246,146,12)" fg:x="20314" fg:w="95"/><text x="62.7335%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (95 samples, 0.29%)</title><rect x="62.4835%" y="645" width="0.2922%" height="15" fill="rgb(239,84,36)" fg:x="20314" fg:w="95"/><text x="62.7335%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (93 samples, 0.29%)</title><rect x="62.4896%" y="629" width="0.2861%" height="15" fill="rgb(207,41,40)" fg:x="20316" fg:w="93"/><text x="62.7396%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (93 samples, 0.29%)</title><rect x="62.4896%" y="613" width="0.2861%" height="15" fill="rgb(241,179,25)" fg:x="20316" fg:w="93"/><text x="62.7396%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u8 (30 samples, 0.09%)</title><rect x="62.6834%" y="597" width="0.0923%" height="15" fill="rgb(210,0,34)" fg:x="20379" fg:w="30"/><text x="62.9334%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.09%)</title><rect x="62.6834%" y="581" width="0.0923%" height="15" fill="rgb(225,217,29)" fg:x="20379" fg:w="30"/><text x="62.9334%" y="591.50"></text></g><g><title>core::hash::sip::u8to64_le (14 samples, 0.04%)</title><rect x="62.7326%" y="565" width="0.0431%" height="15" fill="rgb(216,191,38)" fg:x="20395" fg:w="14"/><text x="62.9826%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (10 samples, 0.03%)</title><rect x="62.8249%" y="693" width="0.0308%" height="15" fill="rgb(232,140,52)" fg:x="20425" fg:w="10"/><text x="63.0749%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.03%)</title><rect x="62.8280%" y="677" width="0.0277%" height="15" fill="rgb(223,158,51)" fg:x="20426" fg:w="9"/><text x="63.0780%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.03%)</title><rect x="62.9879%" y="677" width="0.0308%" height="15" fill="rgb(235,29,51)" fg:x="20478" fg:w="10"/><text x="63.2379%" y="687.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.03%)</title><rect x="63.0740%" y="645" width="0.0277%" height="15" fill="rgb(215,181,18)" fg:x="20506" fg:w="9"/><text x="63.3240%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.10%)</title><rect x="63.0187%" y="677" width="0.1046%" height="15" fill="rgb(227,125,34)" fg:x="20488" fg:w="34"/><text x="63.2687%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (21 samples, 0.06%)</title><rect x="63.0587%" y="661" width="0.0646%" height="15" fill="rgb(230,197,49)" fg:x="20501" fg:w="21"/><text x="63.3087%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (7 samples, 0.02%)</title><rect x="63.1017%" y="645" width="0.0215%" height="15" fill="rgb(239,141,16)" fg:x="20515" fg:w="7"/><text x="63.3517%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (21 samples, 0.06%)</title><rect x="63.1940%" y="581" width="0.0646%" height="15" fill="rgb(225,105,43)" fg:x="20545" fg:w="21"/><text x="63.4440%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.05%)</title><rect x="63.2094%" y="565" width="0.0492%" height="15" fill="rgb(214,131,14)" fg:x="20550" fg:w="16"/><text x="63.4594%" y="575.50"></text></g><g><title>core::slice::raw::from_raw_parts (12 samples, 0.04%)</title><rect x="63.2217%" y="549" width="0.0369%" height="15" fill="rgb(229,177,11)" fg:x="20554" fg:w="12"/><text x="63.4717%" y="559.50"></text></g><g><title>core::ptr::slice_from_raw_parts (12 samples, 0.04%)</title><rect x="63.2217%" y="533" width="0.0369%" height="15" fill="rgb(231,180,14)" fg:x="20554" fg:w="12"/><text x="63.4717%" y="543.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (12 samples, 0.04%)</title><rect x="63.2217%" y="517" width="0.0369%" height="15" fill="rgb(232,88,2)" fg:x="20554" fg:w="12"/><text x="63.4717%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (58 samples, 0.18%)</title><rect x="63.1571%" y="661" width="0.1784%" height="15" fill="rgb(205,220,8)" fg:x="20533" fg:w="58"/><text x="63.4071%" y="671.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (57 samples, 0.18%)</title><rect x="63.1602%" y="645" width="0.1753%" height="15" fill="rgb(225,23,53)" fg:x="20534" fg:w="57"/><text x="63.4102%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (52 samples, 0.16%)</title><rect x="63.1755%" y="629" width="0.1599%" height="15" fill="rgb(213,62,29)" fg:x="20539" fg:w="52"/><text x="63.4255%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (49 samples, 0.15%)</title><rect x="63.1848%" y="613" width="0.1507%" height="15" fill="rgb(227,75,7)" fg:x="20542" fg:w="49"/><text x="63.4348%" y="623.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (48 samples, 0.15%)</title><rect x="63.1878%" y="597" width="0.1476%" height="15" fill="rgb(207,105,14)" fg:x="20543" fg:w="48"/><text x="63.4378%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (25 samples, 0.08%)</title><rect x="63.2586%" y="581" width="0.0769%" height="15" fill="rgb(245,62,29)" fg:x="20566" fg:w="25"/><text x="63.5086%" y="591.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (25 samples, 0.08%)</title><rect x="63.2586%" y="565" width="0.0769%" height="15" fill="rgb(236,202,4)" fg:x="20566" fg:w="25"/><text x="63.5086%" y="575.50"></text></g><g><title>[libc.so.6] (10 samples, 0.03%)</title><rect x="63.3047%" y="549" width="0.0308%" height="15" fill="rgb(250,67,1)" fg:x="20581" fg:w="10"/><text x="63.5547%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="63.3355%" y="661" width="0.0185%" height="15" fill="rgb(253,115,44)" fg:x="20591" fg:w="6"/><text x="63.5855%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.02%)</title><rect x="63.3355%" y="645" width="0.0185%" height="15" fill="rgb(251,139,18)" fg:x="20591" fg:w="6"/><text x="63.5855%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (86 samples, 0.26%)</title><rect x="63.1233%" y="677" width="0.2645%" height="15" fill="rgb(218,22,32)" fg:x="20522" fg:w="86"/><text x="63.3733%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (11 samples, 0.03%)</title><rect x="63.3539%" y="661" width="0.0338%" height="15" fill="rgb(243,53,5)" fg:x="20597" fg:w="11"/><text x="63.6039%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (11 samples, 0.03%)</title><rect x="63.3539%" y="645" width="0.0338%" height="15" fill="rgb(227,56,16)" fg:x="20597" fg:w="11"/><text x="63.6039%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.02%)</title><rect x="63.3693%" y="629" width="0.0185%" height="15" fill="rgb(245,53,0)" fg:x="20602" fg:w="6"/><text x="63.6193%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (43 samples, 0.13%)</title><rect x="63.3878%" y="677" width="0.1323%" height="15" fill="rgb(216,170,35)" fg:x="20608" fg:w="43"/><text x="63.6378%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (39 samples, 0.12%)</title><rect x="63.4001%" y="661" width="0.1200%" height="15" fill="rgb(211,200,8)" fg:x="20612" fg:w="39"/><text x="63.6501%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="63.4985%" y="645" width="0.0215%" height="15" fill="rgb(228,204,44)" fg:x="20644" fg:w="7"/><text x="63.7485%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (10 samples, 0.03%)</title><rect x="63.5846%" y="661" width="0.0308%" height="15" fill="rgb(214,121,17)" fg:x="20672" fg:w="10"/><text x="63.8346%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (33 samples, 0.10%)</title><rect x="63.6154%" y="661" width="0.1015%" height="15" fill="rgb(233,64,38)" fg:x="20682" fg:w="33"/><text x="63.8654%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (85 samples, 0.26%)</title><rect x="63.5200%" y="677" width="0.2614%" height="15" fill="rgb(253,54,19)" fg:x="20651" fg:w="85"/><text x="63.7700%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (21 samples, 0.06%)</title><rect x="63.7169%" y="661" width="0.0646%" height="15" fill="rgb(253,94,18)" fg:x="20715" fg:w="21"/><text x="63.9669%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (19 samples, 0.06%)</title><rect x="63.7230%" y="645" width="0.0584%" height="15" fill="rgb(227,57,52)" fg:x="20717" fg:w="19"/><text x="63.9730%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (13 samples, 0.04%)</title><rect x="63.7938%" y="645" width="0.0400%" height="15" fill="rgb(230,228,50)" fg:x="20740" fg:w="13"/><text x="64.0438%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (15 samples, 0.05%)</title><rect x="63.8338%" y="645" width="0.0461%" height="15" fill="rgb(217,205,27)" fg:x="20753" fg:w="15"/><text x="64.0838%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (870 samples, 2.68%)</title><rect x="61.2408%" y="853" width="2.6760%" height="15" fill="rgb(252,71,50)" fg:x="19910" fg:w="870"/><text x="61.4908%" y="863.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (865 samples, 2.66%)</title><rect x="61.2562%" y="837" width="2.6606%" height="15" fill="rgb(209,86,4)" fg:x="19915" fg:w="865"/><text x="61.5062%" y="847.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (732 samples, 2.25%)</title><rect x="61.6653%" y="821" width="2.2515%" height="15" fill="rgb(229,94,0)" fg:x="20048" fg:w="732"/><text x="61.9153%" y="831.50">c..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (723 samples, 2.22%)</title><rect x="61.6930%" y="805" width="2.2239%" height="15" fill="rgb(252,223,21)" fg:x="20057" fg:w="723"/><text x="61.9430%" y="815.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (719 samples, 2.21%)</title><rect x="61.7053%" y="789" width="2.2116%" height="15" fill="rgb(230,210,4)" fg:x="20061" fg:w="719"/><text x="61.9553%" y="799.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (719 samples, 2.21%)</title><rect x="61.7053%" y="773" width="2.2116%" height="15" fill="rgb(240,149,38)" fg:x="20061" fg:w="719"/><text x="61.9553%" y="783.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (718 samples, 2.21%)</title><rect x="61.7083%" y="757" width="2.2085%" height="15" fill="rgb(254,105,20)" fg:x="20062" fg:w="718"/><text x="61.9583%" y="767.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (714 samples, 2.20%)</title><rect x="61.7206%" y="741" width="2.1962%" height="15" fill="rgb(253,87,46)" fg:x="20066" fg:w="714"/><text x="61.9706%" y="751.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (371 samples, 1.14%)</title><rect x="62.7757%" y="725" width="1.1412%" height="15" fill="rgb(253,116,33)" fg:x="20409" fg:w="371"/><text x="63.0257%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (360 samples, 1.11%)</title><rect x="62.8095%" y="709" width="1.1073%" height="15" fill="rgb(229,198,5)" fg:x="20420" fg:w="360"/><text x="63.0595%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (345 samples, 1.06%)</title><rect x="62.8556%" y="693" width="1.0612%" height="15" fill="rgb(242,38,37)" fg:x="20435" fg:w="345"/><text x="63.1056%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (44 samples, 0.14%)</title><rect x="63.7815%" y="677" width="0.1353%" height="15" fill="rgb(242,69,53)" fg:x="20736" fg:w="44"/><text x="64.0315%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (43 samples, 0.13%)</title><rect x="63.7846%" y="661" width="0.1323%" height="15" fill="rgb(249,80,16)" fg:x="20737" fg:w="43"/><text x="64.0346%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (12 samples, 0.04%)</title><rect x="63.8799%" y="645" width="0.0369%" height="15" fill="rgb(206,128,11)" fg:x="20768" fg:w="12"/><text x="64.1299%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.03%)</title><rect x="63.8861%" y="629" width="0.0308%" height="15" fill="rgb(212,35,20)" fg:x="20770" fg:w="10"/><text x="64.1361%" y="639.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="63.9168%" y="837" width="0.0215%" height="15" fill="rgb(236,79,13)" fg:x="20780" fg:w="7"/><text x="64.1668%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.02%)</title><rect x="63.9384%" y="821" width="0.0154%" height="15" fill="rgb(233,123,3)" fg:x="20787" fg:w="5"/><text x="64.1884%" y="831.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="63.9599%" y="789" width="0.0277%" height="15" fill="rgb(214,93,52)" fg:x="20794" fg:w="9"/><text x="64.2099%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (51 samples, 0.16%)</title><rect x="63.9168%" y="853" width="0.1569%" height="15" fill="rgb(251,37,40)" fg:x="20780" fg:w="51"/><text x="64.1668%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (44 samples, 0.14%)</title><rect x="63.9384%" y="837" width="0.1353%" height="15" fill="rgb(227,80,54)" fg:x="20787" fg:w="44"/><text x="64.1884%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (39 samples, 0.12%)</title><rect x="63.9537%" y="821" width="0.1200%" height="15" fill="rgb(254,48,11)" fg:x="20792" fg:w="39"/><text x="64.2037%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (38 samples, 0.12%)</title><rect x="63.9568%" y="805" width="0.1169%" height="15" fill="rgb(235,193,26)" fg:x="20793" fg:w="38"/><text x="64.2068%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (28 samples, 0.09%)</title><rect x="63.9876%" y="789" width="0.0861%" height="15" fill="rgb(229,99,21)" fg:x="20803" fg:w="28"/><text x="64.2376%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (25 samples, 0.08%)</title><rect x="63.9968%" y="773" width="0.0769%" height="15" fill="rgb(211,140,41)" fg:x="20806" fg:w="25"/><text x="64.2468%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (20 samples, 0.06%)</title><rect x="64.0122%" y="757" width="0.0615%" height="15" fill="rgb(240,227,30)" fg:x="20811" fg:w="20"/><text x="64.2622%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (14 samples, 0.04%)</title><rect x="64.0306%" y="741" width="0.0431%" height="15" fill="rgb(215,224,45)" fg:x="20817" fg:w="14"/><text x="64.2806%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.04%)</title><rect x="64.0306%" y="725" width="0.0431%" height="15" fill="rgb(206,123,31)" fg:x="20817" fg:w="14"/><text x="64.2806%" y="735.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (4,862 samples, 14.95%)</title><rect x="49.1249%" y="965" width="14.9549%" height="15" fill="rgb(210,138,16)" fg:x="15971" fg:w="4862"/><text x="49.3749%" y="975.50">hashbrown::map::equival..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4,861 samples, 14.95%)</title><rect x="49.1280%" y="949" width="14.9519%" height="15" fill="rgb(228,57,28)" fg:x="15972" fg:w="4861"/><text x="49.3780%" y="959.50">&lt;Q as hashbrown::Equiva..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4,859 samples, 14.95%)</title><rect x="49.1341%" y="933" width="14.9457%" height="15" fill="rgb(242,170,10)" fg:x="15974" fg:w="4859"/><text x="49.3841%" y="943.50">core::cmp::impls::&lt;impl..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4,858 samples, 14.94%)</title><rect x="49.1372%" y="917" width="14.9426%" height="15" fill="rgb(228,214,39)" fg:x="15975" fg:w="4858"/><text x="49.3872%" y="927.50">core::tuple::&lt;impl core..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (4,855 samples, 14.93%)</title><rect x="49.1464%" y="901" width="14.9334%" height="15" fill="rgb(218,179,33)" fg:x="15978" fg:w="4855"/><text x="49.3964%" y="911.50">&lt;alloc::boxed::Box&lt;T,A&gt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (4,851 samples, 14.92%)</title><rect x="49.1587%" y="885" width="14.9211%" height="15" fill="rgb(235,193,39)" fg:x="15982" fg:w="4851"/><text x="49.4087%" y="895.50">&lt;aes_grinder::algo::Alg..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (930 samples, 2.86%)</title><rect x="61.2193%" y="869" width="2.8606%" height="15" fill="rgb(219,221,36)" fg:x="19903" fg:w="930"/><text x="61.4693%" y="879.50">&lt;s..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (4,876 samples, 15.00%)</title><rect x="49.1034%" y="981" width="14.9980%" height="15" fill="rgb(248,218,19)" fg:x="15964" fg:w="4876"/><text x="49.3534%" y="991.50">hashbrown::raw::RawTabl..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (5 samples, 0.02%)</title><rect x="64.0860%" y="965" width="0.0154%" height="15" fill="rgb(205,50,9)" fg:x="20835" fg:w="5"/><text x="64.3360%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (5 samples, 0.02%)</title><rect x="64.0860%" y="949" width="0.0154%" height="15" fill="rgb(238,81,28)" fg:x="20835" fg:w="5"/><text x="64.3360%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (9 samples, 0.03%)</title><rect x="64.1014%" y="981" width="0.0277%" height="15" fill="rgb(235,110,19)" fg:x="20840" fg:w="9"/><text x="64.3514%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (5 samples, 0.02%)</title><rect x="64.1137%" y="965" width="0.0154%" height="15" fill="rgb(214,7,14)" fg:x="20844" fg:w="5"/><text x="64.3637%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="64.1168%" y="949" width="0.0123%" height="15" fill="rgb(211,77,3)" fg:x="20845" fg:w="4"/><text x="64.3668%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.05%)</title><rect x="64.1352%" y="981" width="0.0461%" height="15" fill="rgb(229,5,9)" fg:x="20851" fg:w="15"/><text x="64.3852%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.04%)</title><rect x="64.1383%" y="965" width="0.0431%" height="15" fill="rgb(225,90,11)" fg:x="20852" fg:w="14"/><text x="64.3883%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.04%)</title><rect x="64.1414%" y="949" width="0.0400%" height="15" fill="rgb(242,56,8)" fg:x="20853" fg:w="13"/><text x="64.3914%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.02%)</title><rect x="64.1937%" y="965" width="0.0215%" height="15" fill="rgb(249,212,39)" fg:x="20870" fg:w="7"/><text x="64.4437%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (13 samples, 0.04%)</title><rect x="64.1814%" y="981" width="0.0400%" height="15" fill="rgb(236,90,9)" fg:x="20866" fg:w="13"/><text x="64.4314%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6,850 samples, 21.07%)</title><rect x="43.1731%" y="1013" width="21.0698%" height="15" fill="rgb(206,88,35)" fg:x="14036" fg:w="6850"/><text x="43.4231%" y="1023.50">hashbrown::raw::RawTable&lt;T,A&gt;::fi..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (4,949 samples, 15.22%)</title><rect x="49.0203%" y="997" width="15.2225%" height="15" fill="rgb(205,126,30)" fg:x="15937" fg:w="4949"/><text x="49.2703%" y="1007.50">hashbrown::raw::RawTabl..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (7 samples, 0.02%)</title><rect x="64.2213%" y="981" width="0.0215%" height="15" fill="rgb(230,176,12)" fg:x="20879" fg:w="7"/><text x="64.4713%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (7 samples, 0.02%)</title><rect x="64.2213%" y="965" width="0.0215%" height="15" fill="rgb(243,19,9)" fg:x="20879" fg:w="7"/><text x="64.4713%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.02%)</title><rect x="64.2429%" y="981" width="0.0154%" height="15" fill="rgb(245,171,17)" fg:x="20886" fg:w="5"/><text x="64.4929%" y="991.50"></text></g><g><title>core::ptr::write (5 samples, 0.02%)</title><rect x="64.2429%" y="965" width="0.0154%" height="15" fill="rgb(227,52,21)" fg:x="20886" fg:w="5"/><text x="64.4929%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.02%)</title><rect x="64.2429%" y="997" width="0.0185%" height="15" fill="rgb(238,69,14)" fg:x="20886" fg:w="6"/><text x="64.4929%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8,893 samples, 27.35%)</title><rect x="36.9198%" y="1093" width="27.3538%" height="15" fill="rgb(241,156,39)" fg:x="12003" fg:w="8893"/><text x="37.1698%" y="1103.50">core::ops::function::impls::&lt;impl core::ops:..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (8,892 samples, 27.35%)</title><rect x="36.9229%" y="1077" width="27.3507%" height="15" fill="rgb(212,227,28)" fg:x="12004" fg:w="8892"/><text x="37.1729%" y="1087.50">core::iter::adapters::map::map_fold::_{{clos..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (8,890 samples, 27.34%)</title><rect x="36.9290%" y="1061" width="27.3446%" height="15" fill="rgb(209,118,27)" fg:x="12006" fg:w="8890"/><text x="37.1790%" y="1071.50">core::iter::traits::iterator::Iterator::for_..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (8,890 samples, 27.34%)</title><rect x="36.9290%" y="1045" width="27.3446%" height="15" fill="rgb(226,102,5)" fg:x="12006" fg:w="8890"/><text x="37.1790%" y="1055.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::i..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8,890 samples, 27.34%)</title><rect x="36.9290%" y="1029" width="27.3446%" height="15" fill="rgb(223,34,3)" fg:x="12006" fg:w="8890"/><text x="37.1790%" y="1039.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (10 samples, 0.03%)</title><rect x="64.2429%" y="1013" width="0.0308%" height="15" fill="rgb(221,81,38)" fg:x="20886" fg:w="10"/><text x="64.4929%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::_{{closure}} (8,904 samples, 27.39%)</title><rect x="36.8983%" y="1125" width="27.3877%" height="15" fill="rgb(236,219,28)" fg:x="11996" fg:w="8904"/><text x="37.1483%" y="1135.50">&lt;core::iter::adapters::flatten::FlattenCompa..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (8,903 samples, 27.38%)</title><rect x="36.9014%" y="1109" width="27.3846%" height="15" fill="rgb(213,200,14)" fg:x="11997" fg:w="8903"/><text x="37.1514%" y="1119.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (19,916 samples, 61.26%)</title><rect x="3.0297%" y="1333" width="61.2593%" height="15" fill="rgb(240,33,19)" fg:x="985" fg:w="19916"/><text x="3.2797%" y="1343.50">&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (19,915 samples, 61.26%)</title><rect x="3.0328%" y="1317" width="61.2562%" height="15" fill="rgb(233,113,27)" fg:x="986" fg:w="19915"/><text x="3.2828%" y="1327.50">&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (19,914 samples, 61.25%)</title><rect x="3.0359%" y="1301" width="61.2531%" height="15" fill="rgb(220,221,18)" fg:x="987" fg:w="19914"/><text x="3.2859%" y="1311.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1285" width="61.2500%" height="15" fill="rgb(238,92,8)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1295.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1269" width="61.2500%" height="15" fill="rgb(222,164,16)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1279.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1253" width="61.2500%" height="15" fill="rgb(241,119,3)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1263.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1237" width="61.2500%" height="15" fill="rgb(241,44,8)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1247.50">&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1221" width="61.2500%" height="15" fill="rgb(230,36,40)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1231.50">core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1205" width="61.2500%" height="15" fill="rgb(243,16,36)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1215.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1189" width="61.2500%" height="15" fill="rgb(231,4,26)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1199.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold</text></g><g><title>core::iter::traits::iterator::Iterator::fold (19,913 samples, 61.25%)</title><rect x="3.0390%" y="1173" width="61.2500%" height="15" fill="rgb(240,9,31)" fg:x="988" fg:w="19913"/><text x="3.2890%" y="1183.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (19,880 samples, 61.15%)</title><rect x="3.1405%" y="1157" width="61.1485%" height="15" fill="rgb(207,173,15)" fg:x="1021" fg:w="19880"/><text x="3.3905%" y="1167.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::_{{closure}} (8,909 samples, 27.40%)</title><rect x="36.8860%" y="1141" width="27.4030%" height="15" fill="rgb(224,192,53)" fg:x="11992" fg:w="8909"/><text x="37.1360%" y="1151.50">core::iter::adapters::flatten::FlattenCompat..</text></g><g><title>aes_grinder::exhaustive_search::add_new_pairs_no_doublon (19,917 samples, 61.26%)</title><rect x="3.0297%" y="1349" width="61.2623%" height="15" fill="rgb(223,67,28)" fg:x="985" fg:w="19917"/><text x="3.2797%" y="1359.50">aes_grinder::exhaustive_search::add_new_pairs_no_doublon</text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="65.4640%" y="1253" width="0.0215%" height="15" fill="rgb(211,20,47)" fg:x="21283" fg:w="7"/><text x="65.7140%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.09%)</title><rect x="65.7008%" y="1237" width="0.0861%" height="15" fill="rgb(240,228,2)" fg:x="21360" fg:w="28"/><text x="65.9508%" y="1247.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (14 samples, 0.04%)</title><rect x="65.8516%" y="1221" width="0.0431%" height="15" fill="rgb(248,151,12)" fg:x="21409" fg:w="14"/><text x="66.1016%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (152 samples, 0.47%)</title><rect x="65.4855%" y="1253" width="0.4675%" height="15" fill="rgb(244,8,39)" fg:x="21290" fg:w="152"/><text x="65.7355%" y="1263.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (54 samples, 0.17%)</title><rect x="65.7870%" y="1237" width="0.1661%" height="15" fill="rgb(222,26,8)" fg:x="21388" fg:w="54"/><text x="66.0370%" y="1247.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (19 samples, 0.06%)</title><rect x="65.8946%" y="1221" width="0.0584%" height="15" fill="rgb(213,106,44)" fg:x="21423" fg:w="19"/><text x="66.1446%" y="1231.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (9 samples, 0.03%)</title><rect x="65.9254%" y="1205" width="0.0277%" height="15" fill="rgb(214,129,20)" fg:x="21433" fg:w="9"/><text x="66.1754%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (174 samples, 0.54%)</title><rect x="65.9531%" y="1253" width="0.5352%" height="15" fill="rgb(212,32,13)" fg:x="21442" fg:w="174"/><text x="66.2031%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (41 samples, 0.13%)</title><rect x="66.3622%" y="1237" width="0.1261%" height="15" fill="rgb(208,168,33)" fg:x="21575" fg:w="41"/><text x="66.6122%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.02%)</title><rect x="66.4637%" y="1221" width="0.0246%" height="15" fill="rgb(231,207,8)" fg:x="21608" fg:w="8"/><text x="66.7137%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (17 samples, 0.05%)</title><rect x="66.4883%" y="1253" width="0.0523%" height="15" fill="rgb(235,219,23)" fg:x="21616" fg:w="17"/><text x="66.7383%" y="1263.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (13 samples, 0.04%)</title><rect x="66.5006%" y="1237" width="0.0400%" height="15" fill="rgb(226,216,26)" fg:x="21620" fg:w="13"/><text x="66.7506%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (538 samples, 1.65%)</title><rect x="65.0211%" y="1285" width="1.6548%" height="15" fill="rgb(239,137,16)" fg:x="21139" fg:w="538"/><text x="65.2711%" y="1295.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (493 samples, 1.52%)</title><rect x="65.1595%" y="1269" width="1.5164%" height="15" fill="rgb(207,12,36)" fg:x="21184" fg:w="493"/><text x="65.4095%" y="1279.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (44 samples, 0.14%)</title><rect x="66.5406%" y="1253" width="0.1353%" height="15" fill="rgb(210,214,24)" fg:x="21633" fg:w="44"/><text x="66.7906%" y="1263.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (38 samples, 0.12%)</title><rect x="66.5590%" y="1237" width="0.1169%" height="15" fill="rgb(206,56,30)" fg:x="21639" fg:w="38"/><text x="66.8090%" y="1247.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (37 samples, 0.11%)</title><rect x="66.5621%" y="1221" width="0.1138%" height="15" fill="rgb(228,143,26)" fg:x="21640" fg:w="37"/><text x="66.8121%" y="1231.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (4 samples, 0.01%)</title><rect x="66.6636%" y="1205" width="0.0123%" height="15" fill="rgb(216,218,46)" fg:x="21673" fg:w="4"/><text x="66.9136%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (35 samples, 0.11%)</title><rect x="66.6759%" y="1285" width="0.1077%" height="15" fill="rgb(206,6,19)" fg:x="21677" fg:w="35"/><text x="66.9259%" y="1295.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (35 samples, 0.11%)</title><rect x="66.6759%" y="1269" width="0.1077%" height="15" fill="rgb(239,177,51)" fg:x="21677" fg:w="35"/><text x="66.9259%" y="1279.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.04%)</title><rect x="66.7466%" y="1253" width="0.0369%" height="15" fill="rgb(216,55,25)" fg:x="21700" fg:w="12"/><text x="66.9966%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="66.7928%" y="837" width="0.0185%" height="15" fill="rgb(231,163,29)" fg:x="21715" fg:w="6"/><text x="67.0428%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.02%)</title><rect x="66.7928%" y="821" width="0.0185%" height="15" fill="rgb(232,149,50)" fg:x="21715" fg:w="6"/><text x="67.0428%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.02%)</title><rect x="66.7928%" y="805" width="0.0185%" height="15" fill="rgb(223,142,48)" fg:x="21715" fg:w="6"/><text x="67.0428%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="66.7959%" y="789" width="0.0154%" height="15" fill="rgb(245,83,23)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.7959%" y="773" width="0.0154%" height="15" fill="rgb(224,63,2)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.7959%" y="757" width="0.0154%" height="15" fill="rgb(218,65,53)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5 samples, 0.02%)</title><rect x="66.7959%" y="741" width="0.0154%" height="15" fill="rgb(221,84,29)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="66.7959%" y="725" width="0.0154%" height="15" fill="rgb(234,0,32)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 0.02%)</title><rect x="66.7959%" y="709" width="0.0154%" height="15" fill="rgb(206,20,16)" fg:x="21716" fg:w="5"/><text x="67.0459%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="66.7928%" y="885" width="0.0277%" height="15" fill="rgb(244,172,18)" fg:x="21715" fg:w="9"/><text x="67.0428%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (9 samples, 0.03%)</title><rect x="66.7928%" y="869" width="0.0277%" height="15" fill="rgb(254,133,1)" fg:x="21715" fg:w="9"/><text x="67.0428%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (9 samples, 0.03%)</title><rect x="66.7928%" y="853" width="0.0277%" height="15" fill="rgb(222,206,41)" fg:x="21715" fg:w="9"/><text x="67.0428%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.01%)</title><rect x="66.8205%" y="805" width="0.0123%" height="15" fill="rgb(212,3,42)" fg:x="21724" fg:w="4"/><text x="67.0705%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="66.7928%" y="933" width="0.0431%" height="15" fill="rgb(241,11,4)" fg:x="21715" fg:w="14"/><text x="67.0428%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (14 samples, 0.04%)</title><rect x="66.7928%" y="917" width="0.0431%" height="15" fill="rgb(205,19,26)" fg:x="21715" fg:w="14"/><text x="67.0428%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (14 samples, 0.04%)</title><rect x="66.7928%" y="901" width="0.0431%" height="15" fill="rgb(210,179,32)" fg:x="21715" fg:w="14"/><text x="67.0428%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8205%" y="885" width="0.0154%" height="15" fill="rgb(227,116,49)" fg:x="21724" fg:w="5"/><text x="67.0705%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8205%" y="869" width="0.0154%" height="15" fill="rgb(211,146,6)" fg:x="21724" fg:w="5"/><text x="67.0705%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8205%" y="853" width="0.0154%" height="15" fill="rgb(219,44,39)" fg:x="21724" fg:w="5"/><text x="67.0705%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8205%" y="837" width="0.0154%" height="15" fill="rgb(234,128,11)" fg:x="21724" fg:w="5"/><text x="67.0705%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="66.8205%" y="821" width="0.0154%" height="15" fill="rgb(220,183,53)" fg:x="21724" fg:w="5"/><text x="67.0705%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.01%)</title><rect x="66.8451%" y="837" width="0.0123%" height="15" fill="rgb(213,219,32)" fg:x="21732" fg:w="4"/><text x="67.0951%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (24 samples, 0.07%)</title><rect x="66.7897%" y="981" width="0.0738%" height="15" fill="rgb(232,156,16)" fg:x="21714" fg:w="24"/><text x="67.0397%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (23 samples, 0.07%)</title><rect x="66.7928%" y="965" width="0.0707%" height="15" fill="rgb(246,135,34)" fg:x="21715" fg:w="23"/><text x="67.0428%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (23 samples, 0.07%)</title><rect x="66.7928%" y="949" width="0.0707%" height="15" fill="rgb(241,99,0)" fg:x="21715" fg:w="23"/><text x="67.0428%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9 samples, 0.03%)</title><rect x="66.8358%" y="933" width="0.0277%" height="15" fill="rgb(222,103,45)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.03%)</title><rect x="66.8358%" y="917" width="0.0277%" height="15" fill="rgb(212,57,4)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.03%)</title><rect x="66.8358%" y="901" width="0.0277%" height="15" fill="rgb(215,68,47)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9 samples, 0.03%)</title><rect x="66.8358%" y="885" width="0.0277%" height="15" fill="rgb(230,84,2)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="66.8358%" y="869" width="0.0277%" height="15" fill="rgb(220,102,14)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (9 samples, 0.03%)</title><rect x="66.8358%" y="853" width="0.0277%" height="15" fill="rgb(240,10,32)" fg:x="21729" fg:w="9"/><text x="67.0858%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 0.02%)</title><rect x="66.8635%" y="901" width="0.0154%" height="15" fill="rgb(215,47,27)" fg:x="21738" fg:w="5"/><text x="67.1135%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (31 samples, 0.10%)</title><rect x="66.7866%" y="1029" width="0.0954%" height="15" fill="rgb(233,188,43)" fg:x="21713" fg:w="31"/><text x="67.0366%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (31 samples, 0.10%)</title><rect x="66.7866%" y="1013" width="0.0954%" height="15" fill="rgb(253,190,1)" fg:x="21713" fg:w="31"/><text x="67.0366%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (30 samples, 0.09%)</title><rect x="66.7897%" y="997" width="0.0923%" height="15" fill="rgb(206,114,52)" fg:x="21714" fg:w="30"/><text x="67.0397%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6 samples, 0.02%)</title><rect x="66.8635%" y="981" width="0.0185%" height="15" fill="rgb(233,120,37)" fg:x="21738" fg:w="6"/><text x="67.1135%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.02%)</title><rect x="66.8635%" y="965" width="0.0185%" height="15" fill="rgb(214,52,39)" fg:x="21738" fg:w="6"/><text x="67.1135%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.02%)</title><rect x="66.8635%" y="949" width="0.0185%" height="15" fill="rgb(223,80,29)" fg:x="21738" fg:w="6"/><text x="67.1135%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6 samples, 0.02%)</title><rect x="66.8635%" y="933" width="0.0185%" height="15" fill="rgb(230,101,40)" fg:x="21738" fg:w="6"/><text x="67.1135%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="66.8635%" y="917" width="0.0185%" height="15" fill="rgb(219,211,8)" fg:x="21738" fg:w="6"/><text x="67.1135%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.01%)</title><rect x="66.8820%" y="949" width="0.0123%" height="15" fill="rgb(252,126,28)" fg:x="21744" fg:w="4"/><text x="67.1320%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (36 samples, 0.11%)</title><rect x="66.7866%" y="1077" width="0.1107%" height="15" fill="rgb(215,56,38)" fg:x="21713" fg:w="36"/><text x="67.0366%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (36 samples, 0.11%)</title><rect x="66.7866%" y="1061" width="0.1107%" height="15" fill="rgb(249,55,44)" fg:x="21713" fg:w="36"/><text x="67.0366%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (36 samples, 0.11%)</title><rect x="66.7866%" y="1045" width="0.1107%" height="15" fill="rgb(220,221,32)" fg:x="21713" fg:w="36"/><text x="67.0366%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8820%" y="1029" width="0.0154%" height="15" fill="rgb(212,216,41)" fg:x="21744" fg:w="5"/><text x="67.1320%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8820%" y="1013" width="0.0154%" height="15" fill="rgb(228,213,43)" fg:x="21744" fg:w="5"/><text x="67.1320%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8820%" y="997" width="0.0154%" height="15" fill="rgb(211,31,26)" fg:x="21744" fg:w="5"/><text x="67.1320%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5 samples, 0.02%)</title><rect x="66.8820%" y="981" width="0.0154%" height="15" fill="rgb(229,202,19)" fg:x="21744" fg:w="5"/><text x="67.1320%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="66.8820%" y="965" width="0.0154%" height="15" fill="rgb(229,105,46)" fg:x="21744" fg:w="5"/><text x="67.1320%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (38 samples, 0.12%)</title><rect x="66.7836%" y="1125" width="0.1169%" height="15" fill="rgb(235,108,1)" fg:x="21712" fg:w="38"/><text x="67.0336%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (38 samples, 0.12%)</title><rect x="66.7836%" y="1109" width="0.1169%" height="15" fill="rgb(245,111,35)" fg:x="21712" fg:w="38"/><text x="67.0336%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (37 samples, 0.11%)</title><rect x="66.7866%" y="1093" width="0.1138%" height="15" fill="rgb(219,185,31)" fg:x="21713" fg:w="37"/><text x="67.0366%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.01%)</title><rect x="66.9066%" y="1013" width="0.0123%" height="15" fill="rgb(214,4,43)" fg:x="21752" fg:w="4"/><text x="67.1566%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (4 samples, 0.01%)</title><rect x="66.9066%" y="997" width="0.0123%" height="15" fill="rgb(235,227,40)" fg:x="21752" fg:w="4"/><text x="67.1566%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="66.9066%" y="981" width="0.0123%" height="15" fill="rgb(230,88,30)" fg:x="21752" fg:w="4"/><text x="67.1566%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="66.9066%" y="965" width="0.0123%" height="15" fill="rgb(216,217,1)" fg:x="21752" fg:w="4"/><text x="67.1566%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (45 samples, 0.14%)</title><rect x="66.7836%" y="1173" width="0.1384%" height="15" fill="rgb(248,139,50)" fg:x="21712" fg:w="45"/><text x="67.0336%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (45 samples, 0.14%)</title><rect x="66.7836%" y="1157" width="0.1384%" height="15" fill="rgb(233,1,21)" fg:x="21712" fg:w="45"/><text x="67.0336%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (45 samples, 0.14%)</title><rect x="66.7836%" y="1141" width="0.1384%" height="15" fill="rgb(215,183,12)" fg:x="21712" fg:w="45"/><text x="67.0336%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (7 samples, 0.02%)</title><rect x="66.9004%" y="1125" width="0.0215%" height="15" fill="rgb(229,104,42)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (7 samples, 0.02%)</title><rect x="66.9004%" y="1109" width="0.0215%" height="15" fill="rgb(243,34,48)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (7 samples, 0.02%)</title><rect x="66.9004%" y="1093" width="0.0215%" height="15" fill="rgb(239,11,44)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (7 samples, 0.02%)</title><rect x="66.9004%" y="1077" width="0.0215%" height="15" fill="rgb(231,98,35)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="66.9004%" y="1061" width="0.0215%" height="15" fill="rgb(233,28,25)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (7 samples, 0.02%)</title><rect x="66.9004%" y="1045" width="0.0215%" height="15" fill="rgb(234,123,11)" fg:x="21750" fg:w="7"/><text x="67.1504%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (5 samples, 0.02%)</title><rect x="66.9066%" y="1029" width="0.0154%" height="15" fill="rgb(220,69,3)" fg:x="21752" fg:w="5"/><text x="67.1566%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase (48 samples, 0.15%)</title><rect x="66.7836%" y="1285" width="0.1476%" height="15" fill="rgb(214,64,36)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1295.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (48 samples, 0.15%)</title><rect x="66.7836%" y="1269" width="0.1476%" height="15" fill="rgb(211,138,32)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1279.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (48 samples, 0.15%)</title><rect x="66.7836%" y="1253" width="0.1476%" height="15" fill="rgb(213,118,47)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;((alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;),())&gt; (48 samples, 0.15%)</title><rect x="66.7836%" y="1237" width="0.1476%" height="15" fill="rgb(243,124,49)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;)&gt; (48 samples, 0.15%)</title><rect x="66.7836%" y="1221" width="0.1476%" height="15" fill="rgb(221,30,28)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (48 samples, 0.15%)</title><rect x="66.7836%" y="1205" width="0.1476%" height="15" fill="rgb(246,37,13)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (48 samples, 0.15%)</title><rect x="66.7836%" y="1189" width="0.1476%" height="15" fill="rgb(249,66,14)" fg:x="21712" fg:w="48"/><text x="67.0336%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (778 samples, 2.39%)</title><rect x="67.5002%" y="1253" width="2.3930%" height="15" fill="rgb(213,166,5)" fg:x="21945" fg:w="778"/><text x="67.7502%" y="1263.50">&lt;c..</text></g><g><title>&lt;core::cmp::Ordering as core::option::SpecOptionPartialEq&gt;::eq (746 samples, 2.29%)</title><rect x="67.5987%" y="1237" width="2.2946%" height="15" fill="rgb(221,66,24)" fg:x="21977" fg:w="746"/><text x="67.8487%" y="1247.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map_or (632 samples, 1.94%)</title><rect x="67.9493%" y="1221" width="1.9440%" height="15" fill="rgb(210,132,17)" fg:x="22091" fg:w="632"/><text x="68.1993%" y="1231.50">c..</text></g><g><title>&lt;core::cmp::Ordering as core::option::SpecOptionPartialEq&gt;::eq::_{{closure}} (81 samples, 0.25%)</title><rect x="69.6441%" y="1205" width="0.2491%" height="15" fill="rgb(243,202,5)" fg:x="22642" fg:w="81"/><text x="69.8941%" y="1215.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.07%)</title><rect x="83.5502%" y="1189" width="0.0738%" height="15" fill="rgb(233,70,48)" fg:x="27163" fg:w="24"/><text x="83.8002%" y="1199.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (8 samples, 0.02%)</title><rect x="84.2945%" y="1061" width="0.0246%" height="15" fill="rgb(238,41,26)" fg:x="27405" fg:w="8"/><text x="84.5445%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.18%)</title><rect x="84.1531%" y="1093" width="0.1784%" height="15" fill="rgb(241,19,31)" fg:x="27359" fg:w="58"/><text x="84.4031%" y="1103.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (19 samples, 0.06%)</title><rect x="84.2730%" y="1077" width="0.0584%" height="15" fill="rgb(214,76,10)" fg:x="27398" fg:w="19"/><text x="84.5230%" y="1087.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (4 samples, 0.01%)</title><rect x="84.3192%" y="1061" width="0.0123%" height="15" fill="rgb(254,202,22)" fg:x="27413" fg:w="4"/><text x="84.5692%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (82 samples, 0.25%)</title><rect x="84.3315%" y="1093" width="0.2522%" height="15" fill="rgb(214,72,24)" fg:x="27417" fg:w="82"/><text x="84.5815%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.04%)</title><rect x="84.5468%" y="1077" width="0.0369%" height="15" fill="rgb(221,92,46)" fg:x="27487" fg:w="12"/><text x="84.7968%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="84.5714%" y="1061" width="0.0123%" height="15" fill="rgb(246,13,50)" fg:x="27495" fg:w="4"/><text x="84.8214%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (233 samples, 0.72%)</title><rect x="83.8916%" y="1125" width="0.7167%" height="15" fill="rgb(240,165,38)" fg:x="27274" fg:w="233"/><text x="84.1416%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (196 samples, 0.60%)</title><rect x="84.0054%" y="1109" width="0.6029%" height="15" fill="rgb(241,24,51)" fg:x="27311" fg:w="196"/><text x="84.2554%" y="1119.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (7 samples, 0.02%)</title><rect x="84.5868%" y="1093" width="0.0215%" height="15" fill="rgb(227,51,44)" fg:x="27500" fg:w="7"/><text x="84.8368%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (6 samples, 0.02%)</title><rect x="84.5898%" y="1077" width="0.0185%" height="15" fill="rgb(231,121,3)" fg:x="27501" fg:w="6"/><text x="84.8398%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (4 samples, 0.01%)</title><rect x="84.5960%" y="1061" width="0.0123%" height="15" fill="rgb(245,3,41)" fg:x="27503" fg:w="4"/><text x="84.8460%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 1.12%)</title><rect x="83.6240%" y="1189" width="1.1196%" height="15" fill="rgb(214,13,26)" fg:x="27187" fg:w="364"/><text x="83.8740%" y="1199.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 1.12%)</title><rect x="83.6240%" y="1173" width="1.1196%" height="15" fill="rgb(252,75,11)" fg:x="27187" fg:w="364"/><text x="83.8740%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 1.12%)</title><rect x="83.6240%" y="1157" width="1.1196%" height="15" fill="rgb(218,226,17)" fg:x="27187" fg:w="364"/><text x="83.8740%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (328 samples, 1.01%)</title><rect x="83.7347%" y="1141" width="1.0089%" height="15" fill="rgb(248,89,38)" fg:x="27223" fg:w="328"/><text x="83.9847%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (44 samples, 0.14%)</title><rect x="84.6083%" y="1125" width="0.1353%" height="15" fill="rgb(237,73,46)" fg:x="27507" fg:w="44"/><text x="84.8583%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (25 samples, 0.08%)</title><rect x="84.6667%" y="1109" width="0.0769%" height="15" fill="rgb(242,78,33)" fg:x="27526" fg:w="25"/><text x="84.9167%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.03%)</title><rect x="84.7098%" y="1093" width="0.0338%" height="15" fill="rgb(235,60,3)" fg:x="27540" fg:w="11"/><text x="84.9598%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (18 samples, 0.06%)</title><rect x="84.8913%" y="1109" width="0.0554%" height="15" fill="rgb(216,172,19)" fg:x="27599" fg:w="18"/><text x="85.1413%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.04%)</title><rect x="85.4941%" y="997" width="0.0369%" height="15" fill="rgb(227,6,42)" fg:x="27795" fg:w="12"/><text x="85.7441%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (110 samples, 0.34%)</title><rect x="85.1958%" y="1013" width="0.3383%" height="15" fill="rgb(223,207,42)" fg:x="27698" fg:w="110"/><text x="85.4458%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (516 samples, 1.59%)</title><rect x="85.0666%" y="1061" width="1.5872%" height="15" fill="rgb(246,138,30)" fg:x="27656" fg:w="516"/><text x="85.3166%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (514 samples, 1.58%)</title><rect x="85.0727%" y="1045" width="1.5810%" height="15" fill="rgb(251,199,47)" fg:x="27658" fg:w="514"/><text x="85.3227%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (514 samples, 1.58%)</title><rect x="85.0727%" y="1029" width="1.5810%" height="15" fill="rgb(228,218,44)" fg:x="27658" fg:w="514"/><text x="85.3227%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (364 samples, 1.12%)</title><rect x="85.5341%" y="1013" width="1.1196%" height="15" fill="rgb(220,68,6)" fg:x="27808" fg:w="364"/><text x="85.7841%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (34 samples, 0.10%)</title><rect x="86.5492%" y="997" width="0.1046%" height="15" fill="rgb(240,60,26)" fg:x="28138" fg:w="34"/><text x="86.7992%" y="1007.50"></text></g><g><title>[libc.so.6] (68 samples, 0.21%)</title><rect x="86.6661%" y="1045" width="0.2092%" height="15" fill="rgb(211,200,19)" fg:x="28176" fg:w="68"/><text x="86.9161%" y="1055.50"></text></g><g><title>[libc.so.6] (62 samples, 0.19%)</title><rect x="86.8783%" y="1029" width="0.1907%" height="15" fill="rgb(242,145,30)" fg:x="28245" fg:w="62"/><text x="87.1283%" y="1039.50"></text></g><g><title>[libc.so.6] (100 samples, 0.31%)</title><rect x="87.0905%" y="1013" width="0.3076%" height="15" fill="rgb(225,64,13)" fg:x="28314" fg:w="100"/><text x="87.3405%" y="1023.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (111 samples, 0.34%)</title><rect x="87.0690%" y="1029" width="0.3414%" height="15" fill="rgb(218,103,35)" fg:x="28307" fg:w="111"/><text x="87.3190%" y="1039.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (4 samples, 0.01%)</title><rect x="87.3981%" y="1013" width="0.0123%" height="15" fill="rgb(216,93,46)" fg:x="28414" fg:w="4"/><text x="87.6481%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (247 samples, 0.76%)</title><rect x="86.6537%" y="1061" width="0.7597%" height="15" fill="rgb(225,159,27)" fg:x="28172" fg:w="247"/><text x="86.9037%" y="1071.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (175 samples, 0.54%)</title><rect x="86.8752%" y="1045" width="0.5383%" height="15" fill="rgb(225,204,11)" fg:x="28244" fg:w="175"/><text x="87.1252%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (159 samples, 0.49%)</title><rect x="87.4535%" y="997" width="0.4891%" height="15" fill="rgb(205,56,4)" fg:x="28432" fg:w="159"/><text x="87.7035%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (159 samples, 0.49%)</title><rect x="87.4535%" y="981" width="0.4891%" height="15" fill="rgb(206,6,35)" fg:x="28432" fg:w="159"/><text x="87.7035%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (170 samples, 0.52%)</title><rect x="87.4319%" y="1029" width="0.5229%" height="15" fill="rgb(247,73,52)" fg:x="28425" fg:w="170"/><text x="87.6819%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (170 samples, 0.52%)</title><rect x="87.4319%" y="1013" width="0.5229%" height="15" fill="rgb(246,97,4)" fg:x="28425" fg:w="170"/><text x="87.6819%" y="1023.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.01%)</title><rect x="87.9425%" y="997" width="0.0123%" height="15" fill="rgb(212,37,15)" fg:x="28591" fg:w="4"/><text x="88.1925%" y="1007.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.01%)</title><rect x="87.9425%" y="981" width="0.0123%" height="15" fill="rgb(208,130,40)" fg:x="28591" fg:w="4"/><text x="88.1925%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (135 samples, 0.42%)</title><rect x="88.2624%" y="949" width="0.4152%" height="15" fill="rgb(236,55,29)" fg:x="28695" fg:w="135"/><text x="88.5124%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="88.6531%" y="933" width="0.0246%" height="15" fill="rgb(209,156,45)" fg:x="28822" fg:w="8"/><text x="88.9031%" y="943.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.01%)</title><rect x="88.6777%" y="949" width="0.0123%" height="15" fill="rgb(249,107,4)" fg:x="28830" fg:w="4"/><text x="88.9277%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (459 samples, 1.41%)</title><rect x="88.6900%" y="949" width="1.4118%" height="15" fill="rgb(227,7,13)" fg:x="28834" fg:w="459"/><text x="88.9400%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (696 samples, 2.14%)</title><rect x="87.9641%" y="965" width="2.1408%" height="15" fill="rgb(250,129,14)" fg:x="28598" fg:w="696"/><text x="88.2141%" y="975.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="90.3848%" y="917" width="0.0308%" height="15" fill="rgb(229,92,13)" fg:x="29385" fg:w="10"/><text x="90.6348%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1,763 samples, 5.42%)</title><rect x="85.0051%" y="1093" width="5.4228%" height="15" fill="rgb(245,98,39)" fg:x="27636" fg:w="1763"/><text x="85.2551%" y="1103.50">hashbro..</text></g><g><title>core::hash::BuildHasher::hash_one (1,763 samples, 5.42%)</title><rect x="85.0051%" y="1077" width="5.4228%" height="15" fill="rgb(234,135,48)" fg:x="27636" fg:w="1763"/><text x="85.2551%" y="1087.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (980 samples, 3.01%)</title><rect x="87.4135%" y="1061" width="3.0144%" height="15" fill="rgb(230,98,28)" fg:x="28419" fg:w="980"/><text x="87.6635%" y="1071.50">cor..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (977 samples, 3.01%)</title><rect x="87.4227%" y="1045" width="3.0051%" height="15" fill="rgb(223,121,0)" fg:x="28422" fg:w="977"/><text x="87.6727%" y="1055.50">&lt;al..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (804 samples, 2.47%)</title><rect x="87.9548%" y="1029" width="2.4730%" height="15" fill="rgb(234,173,33)" fg:x="28595" fg:w="804"/><text x="88.2048%" y="1039.50">co..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (804 samples, 2.47%)</title><rect x="87.9548%" y="1013" width="2.4730%" height="15" fill="rgb(245,47,8)" fg:x="28595" fg:w="804"/><text x="88.2048%" y="1023.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (801 samples, 2.46%)</title><rect x="87.9641%" y="997" width="2.4638%" height="15" fill="rgb(205,17,20)" fg:x="28598" fg:w="801"/><text x="88.2141%" y="1007.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (801 samples, 2.46%)</title><rect x="87.9641%" y="981" width="2.4638%" height="15" fill="rgb(232,151,16)" fg:x="28598" fg:w="801"/><text x="88.2141%" y="991.50">&lt;c..</text></g><g><title>core::hash::Hasher::write_u8 (105 samples, 0.32%)</title><rect x="90.1049%" y="965" width="0.3230%" height="15" fill="rgb(208,30,32)" fg:x="29294" fg:w="105"/><text x="90.3549%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (103 samples, 0.32%)</title><rect x="90.1110%" y="949" width="0.3168%" height="15" fill="rgb(254,26,3)" fg:x="29296" fg:w="103"/><text x="90.3610%" y="959.50"></text></g><g><title>core::hash::sip::u8to64_le (54 samples, 0.17%)</title><rect x="90.2618%" y="933" width="0.1661%" height="15" fill="rgb(240,177,30)" fg:x="29345" fg:w="54"/><text x="90.5118%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="90.4156%" y="917" width="0.0123%" height="15" fill="rgb(248,76,44)" fg:x="29395" fg:w="4"/><text x="90.6656%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="90.4156%" y="901" width="0.0123%" height="15" fill="rgb(241,186,54)" fg:x="29395" fg:w="4"/><text x="90.6656%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (4 samples, 0.01%)</title><rect x="90.4156%" y="885" width="0.0123%" height="15" fill="rgb(249,171,29)" fg:x="29395" fg:w="4"/><text x="90.6656%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15 samples, 0.05%)</title><rect x="90.5478%" y="1077" width="0.0461%" height="15" fill="rgb(237,151,44)" fg:x="29438" fg:w="15"/><text x="90.7978%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (15 samples, 0.05%)</title><rect x="90.5478%" y="1061" width="0.0461%" height="15" fill="rgb(228,174,30)" fg:x="29438" fg:w="15"/><text x="90.7978%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.02%)</title><rect x="90.5693%" y="1045" width="0.0246%" height="15" fill="rgb(252,14,37)" fg:x="29445" fg:w="8"/><text x="90.8193%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.02%)</title><rect x="90.5755%" y="1029" width="0.0185%" height="15" fill="rgb(207,111,40)" fg:x="29447" fg:w="6"/><text x="90.8255%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.04%)</title><rect x="90.8923%" y="1029" width="0.0369%" height="15" fill="rgb(248,171,54)" fg:x="29550" fg:w="12"/><text x="91.1423%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="90.9169%" y="1013" width="0.0123%" height="15" fill="rgb(211,127,2)" fg:x="29558" fg:w="4"/><text x="91.1669%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (64 samples, 0.20%)</title><rect x="90.7477%" y="1061" width="0.1969%" height="15" fill="rgb(236,87,47)" fg:x="29503" fg:w="64"/><text x="90.9977%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (59 samples, 0.18%)</title><rect x="90.7631%" y="1045" width="0.1815%" height="15" fill="rgb(223,190,45)" fg:x="29508" fg:w="59"/><text x="91.0131%" y="1055.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (5 samples, 0.02%)</title><rect x="90.9292%" y="1029" width="0.0154%" height="15" fill="rgb(215,5,16)" fg:x="29562" fg:w="5"/><text x="91.1792%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (33 samples, 0.10%)</title><rect x="91.5659%" y="1045" width="0.1015%" height="15" fill="rgb(252,82,33)" fg:x="29769" fg:w="33"/><text x="91.8159%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.04%)</title><rect x="91.8212%" y="1029" width="0.0400%" height="15" fill="rgb(247,213,44)" fg:x="29852" fg:w="13"/><text x="92.0712%" y="1039.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (29 samples, 0.09%)</title><rect x="91.9320%" y="1013" width="0.0892%" height="15" fill="rgb(205,196,44)" fg:x="29888" fg:w="29"/><text x="92.1820%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (134 samples, 0.41%)</title><rect x="91.6674%" y="1045" width="0.4122%" height="15" fill="rgb(237,96,54)" fg:x="29802" fg:w="134"/><text x="91.9174%" y="1055.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (71 samples, 0.22%)</title><rect x="91.8612%" y="1029" width="0.2184%" height="15" fill="rgb(230,113,34)" fg:x="29865" fg:w="71"/><text x="92.1112%" y="1039.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (19 samples, 0.06%)</title><rect x="92.0212%" y="1013" width="0.0584%" height="15" fill="rgb(221,224,12)" fg:x="29917" fg:w="19"/><text x="92.2712%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (26 samples, 0.08%)</title><rect x="92.3564%" y="933" width="0.0800%" height="15" fill="rgb(219,112,44)" fg:x="30026" fg:w="26"/><text x="92.6064%" y="943.50"></text></g><g><title>core::slice::raw::from_raw_parts (24 samples, 0.07%)</title><rect x="92.3626%" y="917" width="0.0738%" height="15" fill="rgb(210,31,13)" fg:x="30028" fg:w="24"/><text x="92.6126%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (24 samples, 0.07%)</title><rect x="92.3626%" y="901" width="0.0738%" height="15" fill="rgb(230,25,16)" fg:x="30028" fg:w="24"/><text x="92.6126%" y="911.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (24 samples, 0.07%)</title><rect x="92.3626%" y="885" width="0.0738%" height="15" fill="rgb(246,108,53)" fg:x="30028" fg:w="24"/><text x="92.6126%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (61 samples, 0.19%)</title><rect x="92.2672%" y="949" width="0.1876%" height="15" fill="rgb(241,172,50)" fg:x="29997" fg:w="61"/><text x="92.5172%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="92.4364%" y="933" width="0.0185%" height="15" fill="rgb(235,141,10)" fg:x="30052" fg:w="6"/><text x="92.6864%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="92.4364%" y="917" width="0.0185%" height="15" fill="rgb(220,174,43)" fg:x="30052" fg:w="6"/><text x="92.6864%" y="927.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (260 samples, 0.80%)</title><rect x="92.1534%" y="1029" width="0.7997%" height="15" fill="rgb(215,181,40)" fg:x="29960" fg:w="260"/><text x="92.4034%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (259 samples, 0.80%)</title><rect x="92.1565%" y="1013" width="0.7967%" height="15" fill="rgb(230,97,2)" fg:x="29961" fg:w="259"/><text x="92.4065%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (240 samples, 0.74%)</title><rect x="92.2149%" y="997" width="0.7382%" height="15" fill="rgb(211,25,27)" fg:x="29980" fg:w="240"/><text x="92.4649%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (233 samples, 0.72%)</title><rect x="92.2365%" y="981" width="0.7167%" height="15" fill="rgb(230,87,26)" fg:x="29987" fg:w="233"/><text x="92.4865%" y="991.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (229 samples, 0.70%)</title><rect x="92.2488%" y="965" width="0.7044%" height="15" fill="rgb(227,160,17)" fg:x="29991" fg:w="229"/><text x="92.4988%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (162 samples, 0.50%)</title><rect x="92.4549%" y="949" width="0.4983%" height="15" fill="rgb(244,85,34)" fg:x="30058" fg:w="162"/><text x="92.7049%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (162 samples, 0.50%)</title><rect x="92.4549%" y="933" width="0.4983%" height="15" fill="rgb(207,70,0)" fg:x="30058" fg:w="162"/><text x="92.7049%" y="943.50"></text></g><g><title>[libc.so.6] (111 samples, 0.34%)</title><rect x="92.6117%" y="917" width="0.3414%" height="15" fill="rgb(223,129,7)" fg:x="30109" fg:w="111"/><text x="92.8617%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (13 samples, 0.04%)</title><rect x="92.9532%" y="1029" width="0.0400%" height="15" fill="rgb(246,105,7)" fg:x="30220" fg:w="13"/><text x="93.2032%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (13 samples, 0.04%)</title><rect x="92.9532%" y="1013" width="0.0400%" height="15" fill="rgb(215,154,42)" fg:x="30220" fg:w="13"/><text x="93.2032%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="92.9808%" y="997" width="0.0123%" height="15" fill="rgb(220,215,30)" fg:x="30229" fg:w="4"/><text x="93.2308%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17 samples, 0.05%)</title><rect x="93.1069%" y="997" width="0.0523%" height="15" fill="rgb(228,81,51)" fg:x="30270" fg:w="17"/><text x="93.3569%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (7 samples, 0.02%)</title><rect x="93.1377%" y="981" width="0.0215%" height="15" fill="rgb(247,71,54)" fg:x="30280" fg:w="7"/><text x="93.3877%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (352 samples, 1.08%)</title><rect x="92.0796%" y="1045" width="1.0827%" height="15" fill="rgb(234,176,34)" fg:x="29936" fg:w="352"/><text x="92.3296%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (55 samples, 0.17%)</title><rect x="92.9931%" y="1029" width="0.1692%" height="15" fill="rgb(241,103,54)" fg:x="30233" fg:w="55"/><text x="93.2431%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (55 samples, 0.17%)</title><rect x="92.9931%" y="1013" width="0.1692%" height="15" fill="rgb(228,22,34)" fg:x="30233" fg:w="55"/><text x="93.2431%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (115 samples, 0.35%)</title><rect x="93.1623%" y="1045" width="0.3537%" height="15" fill="rgb(241,179,48)" fg:x="30288" fg:w="115"/><text x="93.4123%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (95 samples, 0.29%)</title><rect x="93.2238%" y="1029" width="0.2922%" height="15" fill="rgb(235,167,37)" fg:x="30308" fg:w="95"/><text x="93.4738%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.03%)</title><rect x="93.4884%" y="1013" width="0.0277%" height="15" fill="rgb(213,109,30)" fg:x="30394" fg:w="9"/><text x="93.7384%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (50 samples, 0.15%)</title><rect x="93.7344%" y="1029" width="0.1538%" height="15" fill="rgb(222,172,16)" fg:x="30474" fg:w="50"/><text x="93.9844%" y="1039.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (15 samples, 0.05%)</title><rect x="93.8421%" y="1013" width="0.0461%" height="15" fill="rgb(233,192,5)" fg:x="30509" fg:w="15"/><text x="94.0921%" y="1023.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (9 samples, 0.03%)</title><rect x="94.2419%" y="1013" width="0.0277%" height="15" fill="rgb(247,189,41)" fg:x="30639" fg:w="9"/><text x="94.4919%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (133 samples, 0.41%)</title><rect x="93.8882%" y="1029" width="0.4091%" height="15" fill="rgb(218,134,47)" fg:x="30524" fg:w="133"/><text x="94.1382%" y="1039.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (9 samples, 0.03%)</title><rect x="94.2696%" y="1013" width="0.0277%" height="15" fill="rgb(216,29,3)" fg:x="30648" fg:w="9"/><text x="94.5196%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (348 samples, 1.07%)</title><rect x="93.5160%" y="1045" width="1.0704%" height="15" fill="rgb(246,140,12)" fg:x="30403" fg:w="348"/><text x="93.7660%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (94 samples, 0.29%)</title><rect x="94.2973%" y="1029" width="0.2891%" height="15" fill="rgb(230,136,11)" fg:x="30657" fg:w="94"/><text x="94.5473%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (91 samples, 0.28%)</title><rect x="94.3065%" y="1013" width="0.2799%" height="15" fill="rgb(247,22,47)" fg:x="30660" fg:w="91"/><text x="94.5565%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (12 samples, 0.04%)</title><rect x="94.6326%" y="1013" width="0.0369%" height="15" fill="rgb(218,84,22)" fg:x="30766" fg:w="12"/><text x="94.8826%" y="1023.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (5 samples, 0.02%)</title><rect x="94.6541%" y="997" width="0.0154%" height="15" fill="rgb(216,87,39)" fg:x="30773" fg:w="5"/><text x="94.9041%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (34 samples, 0.10%)</title><rect x="94.6695%" y="1013" width="0.1046%" height="15" fill="rgb(221,178,8)" fg:x="30778" fg:w="34"/><text x="94.9195%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3,798 samples, 11.68%)</title><rect x="83.1903%" y="1221" width="11.6822%" height="15" fill="rgb(230,42,11)" fg:x="27046" fg:w="3798"/><text x="83.4403%" y="1231.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,794 samples, 11.67%)</title><rect x="83.2026%" y="1205" width="11.6699%" height="15" fill="rgb(237,229,4)" fg:x="27050" fg:w="3794"/><text x="83.4526%" y="1215.50">core::iter::trait..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3,293 samples, 10.13%)</title><rect x="84.7436%" y="1189" width="10.1289%" height="15" fill="rgb(222,31,33)" fg:x="27551" fg:w="3293"/><text x="84.9936%" y="1199.50">core::iter::tra..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3,260 samples, 10.03%)</title><rect x="84.8451%" y="1173" width="10.0274%" height="15" fill="rgb(210,17,39)" fg:x="27584" fg:w="3260"/><text x="85.0951%" y="1183.50">&lt;std::collecti..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3,253 samples, 10.01%)</title><rect x="84.8667%" y="1157" width="10.0058%" height="15" fill="rgb(244,93,20)" fg:x="27591" fg:w="3253"/><text x="85.1167%" y="1167.50">std::collectio..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3,253 samples, 10.01%)</title><rect x="84.8667%" y="1141" width="10.0058%" height="15" fill="rgb(210,40,47)" fg:x="27591" fg:w="3253"/><text x="85.1167%" y="1151.50">hashbrown::set..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3,250 samples, 10.00%)</title><rect x="84.8759%" y="1125" width="9.9966%" height="15" fill="rgb(239,211,47)" fg:x="27594" fg:w="3250"/><text x="85.1259%" y="1135.50">hashbrown::map..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,227 samples, 9.93%)</title><rect x="84.9466%" y="1109" width="9.9259%" height="15" fill="rgb(251,223,49)" fg:x="27617" fg:w="3227"/><text x="85.1966%" y="1119.50">hashbrown::map..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,445 samples, 4.44%)</title><rect x="90.4279%" y="1093" width="4.4446%" height="15" fill="rgb(221,149,5)" fg:x="29399" fg:w="1445"/><text x="90.6779%" y="1103.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,391 samples, 4.28%)</title><rect x="90.5940%" y="1077" width="4.2786%" height="15" fill="rgb(219,224,51)" fg:x="29453" fg:w="1391"/><text x="90.8440%" y="1087.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,277 samples, 3.93%)</title><rect x="90.9446%" y="1061" width="3.9279%" height="15" fill="rgb(223,7,8)" fg:x="29567" fg:w="1277"/><text x="91.1946%" y="1071.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (93 samples, 0.29%)</title><rect x="94.5864%" y="1045" width="0.2861%" height="15" fill="rgb(241,217,22)" fg:x="30751" fg:w="93"/><text x="94.8364%" y="1055.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (90 samples, 0.28%)</title><rect x="94.5957%" y="1029" width="0.2768%" height="15" fill="rgb(248,209,0)" fg:x="30754" fg:w="90"/><text x="94.8457%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (32 samples, 0.10%)</title><rect x="94.7741%" y="1013" width="0.0984%" height="15" fill="rgb(217,205,4)" fg:x="30812" fg:w="32"/><text x="95.0241%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (31 samples, 0.10%)</title><rect x="94.7772%" y="997" width="0.0954%" height="15" fill="rgb(228,124,39)" fg:x="30813" fg:w="31"/><text x="95.0272%" y="1007.50"></text></g><g><title>[libc.so.6] (20 samples, 0.06%)</title><rect x="94.8725%" y="1205" width="0.0615%" height="15" fill="rgb(250,116,42)" fg:x="30844" fg:w="20"/><text x="95.1225%" y="1215.50"></text></g><g><title>[libc.so.6] (15 samples, 0.05%)</title><rect x="94.9371%" y="1189" width="0.0461%" height="15" fill="rgb(223,202,9)" fg:x="30865" fg:w="15"/><text x="95.1871%" y="1199.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="94.9832%" y="1173" width="0.0492%" height="15" fill="rgb(242,222,40)" fg:x="30880" fg:w="16"/><text x="95.2332%" y="1183.50"></text></g><g><title>[libc.so.6] (14 samples, 0.04%)</title><rect x="95.0448%" y="1157" width="0.0431%" height="15" fill="rgb(229,99,46)" fg:x="30900" fg:w="14"/><text x="95.2948%" y="1167.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (15 samples, 0.05%)</title><rect x="95.1463%" y="1141" width="0.0461%" height="15" fill="rgb(225,56,46)" fg:x="30933" fg:w="15"/><text x="95.3963%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.02%)</title><rect x="95.2262%" y="1125" width="0.0185%" height="15" fill="rgb(227,94,5)" fg:x="30959" fg:w="6"/><text x="95.4762%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (261 samples, 0.80%)</title><rect x="95.2508%" y="1125" width="0.8028%" height="15" fill="rgb(205,112,38)" fg:x="30967" fg:w="261"/><text x="95.5008%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (256 samples, 0.79%)</title><rect x="95.2662%" y="1109" width="0.7874%" height="15" fill="rgb(231,133,46)" fg:x="30972" fg:w="256"/><text x="95.5162%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (328 samples, 1.01%)</title><rect x="95.1924%" y="1141" width="1.0089%" height="15" fill="rgb(217,16,9)" fg:x="30948" fg:w="328"/><text x="95.4424%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (48 samples, 0.15%)</title><rect x="96.0536%" y="1125" width="0.1476%" height="15" fill="rgb(249,173,9)" fg:x="31228" fg:w="48"/><text x="96.3036%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (44 samples, 0.14%)</title><rect x="96.0659%" y="1109" width="0.1353%" height="15" fill="rgb(205,163,53)" fg:x="31232" fg:w="44"/><text x="96.3159%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (41 samples, 0.13%)</title><rect x="96.0752%" y="1093" width="0.1261%" height="15" fill="rgb(217,54,41)" fg:x="31235" fg:w="41"/><text x="96.3252%" y="1103.50"></text></g><g><title>aes_grinder::exhaustive_search::keep_all_pair_that_are_better (10,419 samples, 32.05%)</title><rect x="64.2921%" y="1349" width="32.0476%" height="15" fill="rgb(228,216,12)" fg:x="20902" fg:w="10419"/><text x="64.5421%" y="1359.50">aes_grinder::exhaustive_search::keep_all_pair_that_a..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (10,419 samples, 32.05%)</title><rect x="64.2921%" y="1333" width="32.0476%" height="15" fill="rgb(244,228,15)" fg:x="20902" fg:w="10419"/><text x="64.5421%" y="1343.50">std::collections::hash::set::HashSet&lt;T,S&gt;::retain</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (10,419 samples, 32.05%)</title><rect x="64.2921%" y="1317" width="32.0476%" height="15" fill="rgb(221,176,53)" fg:x="20902" fg:w="10419"/><text x="64.5421%" y="1327.50">hashbrown::set::HashSet&lt;T,S,A&gt;::retain</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (10,419 samples, 32.05%)</title><rect x="64.2921%" y="1301" width="32.0476%" height="15" fill="rgb(205,94,34)" fg:x="20902" fg:w="10419"/><text x="64.5421%" y="1311.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (9,561 samples, 29.41%)</title><rect x="66.9312%" y="1285" width="29.4085%" height="15" fill="rgb(213,110,48)" fg:x="21760" fg:w="9561"/><text x="67.1812%" y="1295.50">hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{clos..</text></g><g><title>aes_grinder::exhaustive_search::keep_all_pair_that_are_better::_{{closure}} (9,535 samples, 29.33%)</title><rect x="67.0112%" y="1269" width="29.3285%" height="15" fill="rgb(236,142,28)" fg:x="21786" fg:w="9535"/><text x="67.2612%" y="1279.50">aes_grinder::exhaustive_search::keep_all_pair_t..</text></g><g><title>aes_grinder::algo::Algo::compare1 (8,598 samples, 26.45%)</title><rect x="69.8933%" y="1253" width="26.4464%" height="15" fill="rgb(225,135,29)" fg:x="22723" fg:w="8598"/><text x="70.1433%" y="1263.50">aes_grinder::algo::Algo::compare1</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (8,573 samples, 26.37%)</title><rect x="69.9702%" y="1237" width="26.3695%" height="15" fill="rgb(252,45,31)" fg:x="22748" fg:w="8573"/><text x="70.2202%" y="1247.50">&lt;std::collections::hash::set::HashSet&lt;T,S&gt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (477 samples, 1.47%)</title><rect x="94.8725%" y="1221" width="1.4672%" height="15" fill="rgb(211,187,50)" fg:x="30844" fg:w="477"/><text x="95.1225%" y="1231.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (457 samples, 1.41%)</title><rect x="94.9340%" y="1205" width="1.4057%" height="15" fill="rgb(229,109,7)" fg:x="30864" fg:w="457"/><text x="95.1840%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (441 samples, 1.36%)</title><rect x="94.9832%" y="1189" width="1.3565%" height="15" fill="rgb(251,131,51)" fg:x="30880" fg:w="441"/><text x="95.2332%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (425 samples, 1.31%)</title><rect x="95.0325%" y="1173" width="1.3072%" height="15" fill="rgb(251,180,35)" fg:x="30896" fg:w="425"/><text x="95.2825%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (407 samples, 1.25%)</title><rect x="95.0878%" y="1157" width="1.2519%" height="15" fill="rgb(211,46,32)" fg:x="30914" fg:w="407"/><text x="95.3378%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (45 samples, 0.14%)</title><rect x="96.2013%" y="1141" width="0.1384%" height="15" fill="rgb(248,123,17)" fg:x="31276" fg:w="45"/><text x="96.4513%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="96.3428%" y="1285" width="0.0123%" height="15" fill="rgb(227,141,18)" fg:x="31322" fg:w="4"/><text x="96.5928%" y="1295.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="96.3828%" y="1093" width="0.0123%" height="15" fill="rgb(216,102,9)" fg:x="31335" fg:w="4"/><text x="96.6328%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="96.3828%" y="1077" width="0.0123%" height="15" fill="rgb(253,47,13)" fg:x="31335" fg:w="4"/><text x="96.6328%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (15 samples, 0.05%)</title><rect x="96.3674%" y="1221" width="0.0461%" height="15" fill="rgb(226,93,23)" fg:x="31330" fg:w="15"/><text x="96.6174%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.05%)</title><rect x="96.3674%" y="1205" width="0.0461%" height="15" fill="rgb(247,104,17)" fg:x="31330" fg:w="15"/><text x="96.6174%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (13 samples, 0.04%)</title><rect x="96.3735%" y="1189" width="0.0400%" height="15" fill="rgb(233,203,26)" fg:x="31332" fg:w="13"/><text x="96.6235%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (12 samples, 0.04%)</title><rect x="96.3766%" y="1173" width="0.0369%" height="15" fill="rgb(244,98,49)" fg:x="31333" fg:w="12"/><text x="96.6266%" y="1183.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (12 samples, 0.04%)</title><rect x="96.3766%" y="1157" width="0.0369%" height="15" fill="rgb(235,134,22)" fg:x="31333" fg:w="12"/><text x="96.6266%" y="1167.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (12 samples, 0.04%)</title><rect x="96.3766%" y="1141" width="0.0369%" height="15" fill="rgb(221,70,32)" fg:x="31333" fg:w="12"/><text x="96.6266%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (12 samples, 0.04%)</title><rect x="96.3766%" y="1125" width="0.0369%" height="15" fill="rgb(238,15,50)" fg:x="31333" fg:w="12"/><text x="96.6266%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.03%)</title><rect x="96.3828%" y="1109" width="0.0308%" height="15" fill="rgb(215,221,48)" fg:x="31335" fg:w="10"/><text x="96.6328%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.02%)</title><rect x="96.3951%" y="1093" width="0.0185%" height="15" fill="rgb(236,73,3)" fg:x="31339" fg:w="6"/><text x="96.6451%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.02%)</title><rect x="96.3981%" y="1077" width="0.0154%" height="15" fill="rgb(250,107,11)" fg:x="31340" fg:w="5"/><text x="96.6481%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="96.3981%" y="1061" width="0.0154%" height="15" fill="rgb(242,39,14)" fg:x="31340" fg:w="5"/><text x="96.6481%" y="1071.50"></text></g><g><title>aes_grinder::algo::Algo::compare1 (18 samples, 0.06%)</title><rect x="96.3612%" y="1253" width="0.0554%" height="15" fill="rgb(248,164,37)" fg:x="31328" fg:w="18"/><text x="96.6112%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="96.3612%" y="1237" width="0.0554%" height="15" fill="rgb(217,60,12)" fg:x="31328" fg:w="18"/><text x="96.6112%" y="1247.50"></text></g><g><title>aes_grinder::exhaustive_search::keep_better (26 samples, 0.08%)</title><rect x="96.3397%" y="1349" width="0.0800%" height="15" fill="rgb(240,125,29)" fg:x="31321" fg:w="26"/><text x="96.5897%" y="1359.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (26 samples, 0.08%)</title><rect x="96.3397%" y="1333" width="0.0800%" height="15" fill="rgb(208,207,28)" fg:x="31321" fg:w="26"/><text x="96.5897%" y="1343.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (26 samples, 0.08%)</title><rect x="96.3397%" y="1317" width="0.0800%" height="15" fill="rgb(209,159,27)" fg:x="31321" fg:w="26"/><text x="96.5897%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (26 samples, 0.08%)</title><rect x="96.3397%" y="1301" width="0.0800%" height="15" fill="rgb(251,176,53)" fg:x="31321" fg:w="26"/><text x="96.5897%" y="1311.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (21 samples, 0.06%)</title><rect x="96.3551%" y="1285" width="0.0646%" height="15" fill="rgb(211,85,7)" fg:x="31326" fg:w="21"/><text x="96.6051%" y="1295.50"></text></g><g><title>aes_grinder::exhaustive_search::keep_better::_{{closure}} (19 samples, 0.06%)</title><rect x="96.3612%" y="1269" width="0.0584%" height="15" fill="rgb(216,64,54)" fg:x="31328" fg:w="19"/><text x="96.6112%" y="1279.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.01%)</title><rect x="96.4197%" y="1349" width="0.0123%" height="15" fill="rgb(217,54,24)" fg:x="31347" fg:w="4"/><text x="96.6697%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="96.4197%" y="1333" width="0.0123%" height="15" fill="rgb(208,206,53)" fg:x="31347" fg:w="4"/><text x="96.6697%" y="1343.50"></text></g><g><title>&lt;core::cmp::Ordering as core::option::SpecOptionPartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="96.4197%" y="1317" width="0.0123%" height="15" fill="rgb(251,74,39)" fg:x="31347" fg:w="4"/><text x="96.6697%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (4 samples, 0.01%)</title><rect x="96.4197%" y="1301" width="0.0123%" height="15" fill="rgb(226,47,5)" fg:x="31347" fg:w="4"/><text x="96.6697%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (5 samples, 0.02%)</title><rect x="96.4351%" y="981" width="0.0154%" height="15" fill="rgb(234,111,33)" fg:x="31352" fg:w="5"/><text x="96.6851%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (5 samples, 0.02%)</title><rect x="96.4351%" y="965" width="0.0154%" height="15" fill="rgb(251,14,10)" fg:x="31352" fg:w="5"/><text x="96.6851%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (5 samples, 0.02%)</title><rect x="96.4351%" y="949" width="0.0154%" height="15" fill="rgb(232,43,0)" fg:x="31352" fg:w="5"/><text x="96.6851%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="1077" width="0.0185%" height="15" fill="rgb(222,68,43)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="1061" width="0.0185%" height="15" fill="rgb(217,24,23)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="1045" width="0.0185%" height="15" fill="rgb(229,209,14)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="1029" width="0.0185%" height="15" fill="rgb(250,149,48)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="1013" width="0.0185%" height="15" fill="rgb(210,120,37)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.02%)</title><rect x="96.4351%" y="997" width="0.0185%" height="15" fill="rgb(210,21,8)" fg:x="31352" fg:w="6"/><text x="96.6851%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="96.4320%" y="1125" width="0.0338%" height="15" fill="rgb(243,145,7)" fg:x="31351" fg:w="11"/><text x="96.6820%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (11 samples, 0.03%)</title><rect x="96.4320%" y="1109" width="0.0338%" height="15" fill="rgb(238,178,32)" fg:x="31351" fg:w="11"/><text x="96.6820%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (10 samples, 0.03%)</title><rect x="96.4351%" y="1093" width="0.0308%" height="15" fill="rgb(222,4,10)" fg:x="31352" fg:w="10"/><text x="96.6851%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (4 samples, 0.01%)</title><rect x="96.4535%" y="1077" width="0.0123%" height="15" fill="rgb(239,7,37)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.01%)</title><rect x="96.4535%" y="1061" width="0.0123%" height="15" fill="rgb(215,31,37)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (4 samples, 0.01%)</title><rect x="96.4535%" y="1045" width="0.0123%" height="15" fill="rgb(224,83,33)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (4 samples, 0.01%)</title><rect x="96.4535%" y="1029" width="0.0123%" height="15" fill="rgb(239,55,3)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="96.4535%" y="1013" width="0.0123%" height="15" fill="rgb(247,92,11)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.01%)</title><rect x="96.4535%" y="997" width="0.0123%" height="15" fill="rgb(239,200,7)" fg:x="31358" fg:w="4"/><text x="96.7035%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (12 samples, 0.04%)</title><rect x="96.4320%" y="1173" width="0.0369%" height="15" fill="rgb(227,115,8)" fg:x="31351" fg:w="12"/><text x="96.6820%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (12 samples, 0.04%)</title><rect x="96.4320%" y="1157" width="0.0369%" height="15" fill="rgb(215,189,27)" fg:x="31351" fg:w="12"/><text x="96.6820%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (12 samples, 0.04%)</title><rect x="96.4320%" y="1141" width="0.0369%" height="15" fill="rgb(251,216,39)" fg:x="31351" fg:w="12"/><text x="96.6820%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (15 samples, 0.05%)</title><rect x="96.4320%" y="1221" width="0.0461%" height="15" fill="rgb(207,29,47)" fg:x="31351" fg:w="15"/><text x="96.6820%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (15 samples, 0.05%)</title><rect x="96.4320%" y="1205" width="0.0461%" height="15" fill="rgb(210,71,34)" fg:x="31351" fg:w="15"/><text x="96.6820%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (15 samples, 0.05%)</title><rect x="96.4320%" y="1189" width="0.0461%" height="15" fill="rgb(253,217,51)" fg:x="31351" fg:w="15"/><text x="96.6820%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="96.4320%" y="1269" width="0.0492%" height="15" fill="rgb(222,117,46)" fg:x="31351" fg:w="16"/><text x="96.6820%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (16 samples, 0.05%)</title><rect x="96.4320%" y="1253" width="0.0492%" height="15" fill="rgb(226,132,6)" fg:x="31351" fg:w="16"/><text x="96.6820%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (16 samples, 0.05%)</title><rect x="96.4320%" y="1237" width="0.0492%" height="15" fill="rgb(254,145,51)" fg:x="31351" fg:w="16"/><text x="96.6820%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (17 samples, 0.05%)</title><rect x="96.4320%" y="1349" width="0.0523%" height="15" fill="rgb(231,199,27)" fg:x="31351" fg:w="17"/><text x="96.6820%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (17 samples, 0.05%)</title><rect x="96.4320%" y="1333" width="0.0523%" height="15" fill="rgb(245,158,14)" fg:x="31351" fg:w="17"/><text x="96.6820%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="96.4320%" y="1317" width="0.0523%" height="15" fill="rgb(240,113,14)" fg:x="31351" fg:w="17"/><text x="96.6820%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (17 samples, 0.05%)</title><rect x="96.4320%" y="1301" width="0.0523%" height="15" fill="rgb(210,20,13)" fg:x="31351" fg:w="17"/><text x="96.6820%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (17 samples, 0.05%)</title><rect x="96.4320%" y="1285" width="0.0523%" height="15" fill="rgb(241,144,13)" fg:x="31351" fg:w="17"/><text x="96.6820%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="96.4873%" y="1061" width="0.0185%" height="15" fill="rgb(235,43,34)" fg:x="31369" fg:w="6"/><text x="96.7373%" y="1071.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="96.4873%" y="1045" width="0.0185%" height="15" fill="rgb(208,36,20)" fg:x="31369" fg:w="6"/><text x="96.7373%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.4873%" y="1077" width="0.0215%" height="15" fill="rgb(239,204,10)" fg:x="31369" fg:w="7"/><text x="96.7373%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.4873%" y="1109" width="0.0246%" height="15" fill="rgb(217,84,43)" fg:x="31369" fg:w="8"/><text x="96.7373%" y="1119.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.4873%" y="1093" width="0.0246%" height="15" fill="rgb(241,170,50)" fg:x="31369" fg:w="8"/><text x="96.7373%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1301" width="0.0338%" height="15" fill="rgb(226,205,29)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1311.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="96.4843%" y="1285" width="0.0338%" height="15" fill="rgb(233,113,1)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1269" width="0.0338%" height="15" fill="rgb(253,98,13)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1279.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1253" width="0.0338%" height="15" fill="rgb(211,115,12)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1263.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1237" width="0.0338%" height="15" fill="rgb(208,12,16)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1247.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1221" width="0.0338%" height="15" fill="rgb(237,193,54)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1205" width="0.0338%" height="15" fill="rgb(243,22,42)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1215.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="96.4843%" y="1189" width="0.0338%" height="15" fill="rgb(233,151,36)" fg:x="31368" fg:w="11"/><text x="96.7343%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="96.4873%" y="1173" width="0.0308%" height="15" fill="rgb(237,57,45)" fg:x="31369" fg:w="10"/><text x="96.7373%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="96.4873%" y="1157" width="0.0308%" height="15" fill="rgb(221,88,17)" fg:x="31369" fg:w="10"/><text x="96.7373%" y="1167.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="96.4873%" y="1141" width="0.0308%" height="15" fill="rgb(230,79,15)" fg:x="31369" fg:w="10"/><text x="96.7373%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="96.4873%" y="1125" width="0.0308%" height="15" fill="rgb(213,57,13)" fg:x="31369" fg:w="10"/><text x="96.7373%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="96.5181%" y="821" width="0.0123%" height="15" fill="rgb(222,116,39)" fg:x="31379" fg:w="4"/><text x="96.7681%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="96.5181%" y="805" width="0.0123%" height="15" fill="rgb(245,107,2)" fg:x="31379" fg:w="4"/><text x="96.7681%" y="815.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="96.5181%" y="789" width="0.0123%" height="15" fill="rgb(238,1,10)" fg:x="31379" fg:w="4"/><text x="96.7681%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="96.5181%" y="869" width="0.0154%" height="15" fill="rgb(249,4,48)" fg:x="31379" fg:w="5"/><text x="96.7681%" y="879.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="96.5181%" y="853" width="0.0154%" height="15" fill="rgb(223,151,18)" fg:x="31379" fg:w="5"/><text x="96.7681%" y="863.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (5 samples, 0.02%)</title><rect x="96.5181%" y="837" width="0.0154%" height="15" fill="rgb(227,65,43)" fg:x="31379" fg:w="5"/><text x="96.7681%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="96.5181%" y="917" width="0.0185%" height="15" fill="rgb(218,40,45)" fg:x="31379" fg:w="6"/><text x="96.7681%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="96.5181%" y="901" width="0.0185%" height="15" fill="rgb(252,121,31)" fg:x="31379" fg:w="6"/><text x="96.7681%" y="911.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="96.5181%" y="885" width="0.0185%" height="15" fill="rgb(219,158,43)" fg:x="31379" fg:w="6"/><text x="96.7681%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="1013" width="0.0215%" height="15" fill="rgb(231,162,42)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="997" width="0.0215%" height="15" fill="rgb(217,179,25)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="1007.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="981" width="0.0215%" height="15" fill="rgb(206,212,31)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="965" width="0.0215%" height="15" fill="rgb(235,144,12)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="949" width="0.0215%" height="15" fill="rgb(213,51,10)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="959.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="96.5181%" y="933" width="0.0215%" height="15" fill="rgb(231,145,14)" fg:x="31379" fg:w="7"/><text x="96.7681%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (8 samples, 0.02%)</title><rect x="96.5181%" y="1221" width="0.0246%" height="15" fill="rgb(235,15,28)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1231.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (8 samples, 0.02%)</title><rect x="96.5181%" y="1205" width="0.0246%" height="15" fill="rgb(237,206,10)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1189" width="0.0246%" height="15" fill="rgb(236,227,27)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="96.5181%" y="1173" width="0.0246%" height="15" fill="rgb(246,83,35)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1157" width="0.0246%" height="15" fill="rgb(220,136,24)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1141" width="0.0246%" height="15" fill="rgb(217,3,25)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1151.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1125" width="0.0246%" height="15" fill="rgb(239,24,14)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1109" width="0.0246%" height="15" fill="rgb(244,16,53)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1093" width="0.0246%" height="15" fill="rgb(208,175,44)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1103.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1077" width="0.0246%" height="15" fill="rgb(252,18,48)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1061" width="0.0246%" height="15" fill="rgb(234,199,32)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1045" width="0.0246%" height="15" fill="rgb(225,77,54)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1055.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="96.5181%" y="1029" width="0.0246%" height="15" fill="rgb(225,42,25)" fg:x="31379" fg:w="8"/><text x="96.7681%" y="1039.50"></text></g><g><title>aes_grinder::exhaustive_search::update_queue (30,474 samples, 93.73%)</title><rect x="2.8114%" y="1365" width="93.7344%" height="15" fill="rgb(242,227,46)" fg:x="914" fg:w="30474"/><text x="3.0614%" y="1375.50">aes_grinder::exhaustive_search::update_queue</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (20 samples, 0.06%)</title><rect x="96.4843%" y="1349" width="0.0615%" height="15" fill="rgb(246,197,35)" fg:x="31368" fg:w="20"/><text x="96.7343%" y="1359.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (20 samples, 0.06%)</title><rect x="96.4843%" y="1333" width="0.0615%" height="15" fill="rgb(215,159,26)" fg:x="31368" fg:w="20"/><text x="96.7343%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.06%)</title><rect x="96.4843%" y="1317" width="0.0615%" height="15" fill="rgb(212,194,50)" fg:x="31368" fg:w="20"/><text x="96.7343%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (9 samples, 0.03%)</title><rect x="96.5181%" y="1301" width="0.0277%" height="15" fill="rgb(246,132,1)" fg:x="31379" fg:w="9"/><text x="96.7681%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="96.5181%" y="1285" width="0.0277%" height="15" fill="rgb(217,71,7)" fg:x="31379" fg:w="9"/><text x="96.7681%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.03%)</title><rect x="96.5181%" y="1269" width="0.0277%" height="15" fill="rgb(252,59,32)" fg:x="31379" fg:w="9"/><text x="96.7681%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (9 samples, 0.03%)</title><rect x="96.5181%" y="1253" width="0.0277%" height="15" fill="rgb(253,204,25)" fg:x="31379" fg:w="9"/><text x="96.7681%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (9 samples, 0.03%)</title><rect x="96.5181%" y="1237" width="0.0277%" height="15" fill="rgb(232,21,16)" fg:x="31379" fg:w="9"/><text x="96.7681%" y="1247.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="96.5458%" y="1045" width="0.0123%" height="15" fill="rgb(248,90,29)" fg:x="31388" fg:w="4"/><text x="96.7958%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="96.5458%" y="1029" width="0.0123%" height="15" fill="rgb(249,223,7)" fg:x="31388" fg:w="4"/><text x="96.7958%" y="1039.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (4 samples, 0.01%)</title><rect x="96.5458%" y="1013" width="0.0123%" height="15" fill="rgb(231,119,42)" fg:x="31388" fg:w="4"/><text x="96.7958%" y="1023.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="96.5458%" y="997" width="0.0123%" height="15" fill="rgb(215,41,35)" fg:x="31388" fg:w="4"/><text x="96.7958%" y="1007.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.02%)</title><rect x="96.5458%" y="1077" width="0.0185%" height="15" fill="rgb(220,44,45)" fg:x="31388" fg:w="6"/><text x="96.7958%" y="1087.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="96.5458%" y="1061" width="0.0185%" height="15" fill="rgb(253,197,36)" fg:x="31388" fg:w="6"/><text x="96.7958%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="96.5458%" y="1173" width="0.0215%" height="15" fill="rgb(245,225,54)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="96.5458%" y="1157" width="0.0215%" height="15" fill="rgb(239,94,37)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1167.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (7 samples, 0.02%)</title><rect x="96.5458%" y="1141" width="0.0215%" height="15" fill="rgb(242,217,10)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1151.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="96.5458%" y="1125" width="0.0215%" height="15" fill="rgb(250,193,7)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="96.5458%" y="1109" width="0.0215%" height="15" fill="rgb(230,104,19)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="96.5458%" y="1093" width="0.0215%" height="15" fill="rgb(230,181,4)" fg:x="31388" fg:w="7"/><text x="96.7958%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="96.5673%" y="1173" width="0.0154%" height="15" fill="rgb(216,219,49)" fg:x="31395" fg:w="5"/><text x="96.8173%" y="1183.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="96.5673%" y="1157" width="0.0154%" height="15" fill="rgb(254,144,0)" fg:x="31395" fg:w="5"/><text x="96.8173%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="96.5673%" y="1141" width="0.0154%" height="15" fill="rgb(205,209,38)" fg:x="31395" fg:w="5"/><text x="96.8173%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="96.5673%" y="1125" width="0.0154%" height="15" fill="rgb(240,21,42)" fg:x="31395" fg:w="5"/><text x="96.8173%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="96.5458%" y="1237" width="0.0400%" height="15" fill="rgb(241,132,3)" fg:x="31388" fg:w="13"/><text x="96.7958%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="96.5458%" y="1221" width="0.0400%" height="15" fill="rgb(225,14,2)" fg:x="31388" fg:w="13"/><text x="96.7958%" y="1231.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.04%)</title><rect x="96.5458%" y="1205" width="0.0400%" height="15" fill="rgb(210,141,35)" fg:x="31388" fg:w="13"/><text x="96.7958%" y="1215.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="96.5458%" y="1189" width="0.0400%" height="15" fill="rgb(251,14,44)" fg:x="31388" fg:w="13"/><text x="96.7958%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="96.5458%" y="1301" width="0.0461%" height="15" fill="rgb(247,48,18)" fg:x="31388" fg:w="15"/><text x="96.7958%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="96.5458%" y="1285" width="0.0461%" height="15" fill="rgb(225,0,40)" fg:x="31388" fg:w="15"/><text x="96.7958%" y="1295.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (15 samples, 0.05%)</title><rect x="96.5458%" y="1269" width="0.0461%" height="15" fill="rgb(221,31,33)" fg:x="31388" fg:w="15"/><text x="96.7958%" y="1279.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (15 samples, 0.05%)</title><rect x="96.5458%" y="1253" width="0.0461%" height="15" fill="rgb(237,42,40)" fg:x="31388" fg:w="15"/><text x="96.7958%" y="1263.50"></text></g><g><title>core::clone::Clone::clone (16 samples, 0.05%)</title><rect x="96.5458%" y="1365" width="0.0492%" height="15" fill="rgb(233,51,29)" fg:x="31388" fg:w="16"/><text x="96.7958%" y="1375.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="96.5458%" y="1349" width="0.0492%" height="15" fill="rgb(226,58,20)" fg:x="31388" fg:w="16"/><text x="96.7958%" y="1359.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (16 samples, 0.05%)</title><rect x="96.5458%" y="1333" width="0.0492%" height="15" fill="rgb(208,98,7)" fg:x="31388" fg:w="16"/><text x="96.7958%" y="1343.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="96.5458%" y="1317" width="0.0492%" height="15" fill="rgb(228,143,44)" fg:x="31388" fg:w="16"/><text x="96.7958%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="96.5981%" y="1125" width="0.0185%" height="15" fill="rgb(246,55,38)" fg:x="31405" fg:w="6"/><text x="96.8481%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.02%)</title><rect x="96.5981%" y="1109" width="0.0185%" height="15" fill="rgb(247,87,16)" fg:x="31405" fg:w="6"/><text x="96.8481%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.02%)</title><rect x="96.5981%" y="1093" width="0.0185%" height="15" fill="rgb(234,129,42)" fg:x="31405" fg:w="6"/><text x="96.8481%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="96.5950%" y="1173" width="0.0277%" height="15" fill="rgb(220,82,16)" fg:x="31404" fg:w="9"/><text x="96.8450%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (8 samples, 0.02%)</title><rect x="96.5981%" y="1157" width="0.0246%" height="15" fill="rgb(211,88,4)" fg:x="31405" fg:w="8"/><text x="96.8481%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (8 samples, 0.02%)</title><rect x="96.5981%" y="1141" width="0.0246%" height="15" fill="rgb(248,151,21)" fg:x="31405" fg:w="8"/><text x="96.8481%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="96.5950%" y="1221" width="0.0431%" height="15" fill="rgb(238,163,6)" fg:x="31404" fg:w="14"/><text x="96.8450%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (14 samples, 0.04%)</title><rect x="96.5950%" y="1205" width="0.0431%" height="15" fill="rgb(209,183,11)" fg:x="31404" fg:w="14"/><text x="96.8450%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (14 samples, 0.04%)</title><rect x="96.5950%" y="1189" width="0.0431%" height="15" fill="rgb(219,37,20)" fg:x="31404" fg:w="14"/><text x="96.8450%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (5 samples, 0.02%)</title><rect x="96.6227%" y="1173" width="0.0154%" height="15" fill="rgb(210,158,4)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="96.6227%" y="1157" width="0.0154%" height="15" fill="rgb(221,167,53)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (5 samples, 0.02%)</title><rect x="96.6227%" y="1141" width="0.0154%" height="15" fill="rgb(237,151,45)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (5 samples, 0.02%)</title><rect x="96.6227%" y="1125" width="0.0154%" height="15" fill="rgb(231,39,3)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="96.6227%" y="1109" width="0.0154%" height="15" fill="rgb(212,167,28)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (5 samples, 0.02%)</title><rect x="96.6227%" y="1093" width="0.0154%" height="15" fill="rgb(232,178,8)" fg:x="31413" fg:w="5"/><text x="96.8727%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="96.5950%" y="1269" width="0.0492%" height="15" fill="rgb(225,151,20)" fg:x="31404" fg:w="16"/><text x="96.8450%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (16 samples, 0.05%)</title><rect x="96.5950%" y="1253" width="0.0492%" height="15" fill="rgb(238,3,37)" fg:x="31404" fg:w="16"/><text x="96.8450%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (16 samples, 0.05%)</title><rect x="96.5950%" y="1237" width="0.0492%" height="15" fill="rgb(251,147,42)" fg:x="31404" fg:w="16"/><text x="96.8450%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (19 samples, 0.06%)</title><rect x="96.5950%" y="1317" width="0.0584%" height="15" fill="rgb(208,173,10)" fg:x="31404" fg:w="19"/><text x="96.8450%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (19 samples, 0.06%)</title><rect x="96.5950%" y="1301" width="0.0584%" height="15" fill="rgb(246,225,4)" fg:x="31404" fg:w="19"/><text x="96.8450%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (19 samples, 0.06%)</title><rect x="96.5950%" y="1285" width="0.0584%" height="15" fill="rgb(248,102,6)" fg:x="31404" fg:w="19"/><text x="96.8450%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;)&gt; (22 samples, 0.07%)</title><rect x="96.5950%" y="1365" width="0.0677%" height="15" fill="rgb(232,6,21)" fg:x="31404" fg:w="22"/><text x="96.8450%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (22 samples, 0.07%)</title><rect x="96.5950%" y="1349" width="0.0677%" height="15" fill="rgb(221,179,22)" fg:x="31404" fg:w="22"/><text x="96.8450%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (22 samples, 0.07%)</title><rect x="96.5950%" y="1333" width="0.0677%" height="15" fill="rgb(252,50,20)" fg:x="31404" fg:w="22"/><text x="96.8450%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="96.6627%" y="1333" width="0.0123%" height="15" fill="rgb(222,56,38)" fg:x="31426" fg:w="4"/><text x="96.9127%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (4 samples, 0.01%)</title><rect x="96.6627%" y="1317" width="0.0123%" height="15" fill="rgb(206,193,29)" fg:x="31426" fg:w="4"/><text x="96.9127%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (4 samples, 0.01%)</title><rect x="96.6627%" y="1301" width="0.0123%" height="15" fill="rgb(239,192,45)" fg:x="31426" fg:w="4"/><text x="96.9127%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (5 samples, 0.02%)</title><rect x="96.6627%" y="1365" width="0.0154%" height="15" fill="rgb(254,18,36)" fg:x="31426" fg:w="5"/><text x="96.9127%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (5 samples, 0.02%)</title><rect x="96.6627%" y="1349" width="0.0154%" height="15" fill="rgb(221,127,11)" fg:x="31426" fg:w="5"/><text x="96.9127%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.10%)</title><rect x="97.6992%" y="1205" width="0.0954%" height="15" fill="rgb(234,146,35)" fg:x="31763" fg:w="31"/><text x="97.9492%" y="1215.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (11 samples, 0.03%)</title><rect x="97.8377%" y="1189" width="0.0338%" height="15" fill="rgb(254,201,37)" fg:x="31808" fg:w="11"/><text x="98.0877%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.40%)</title><rect x="97.4962%" y="1221" width="0.3999%" height="15" fill="rgb(211,202,23)" fg:x="31697" fg:w="130"/><text x="97.7462%" y="1231.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (33 samples, 0.10%)</title><rect x="97.7946%" y="1205" width="0.1015%" height="15" fill="rgb(237,91,2)" fg:x="31794" fg:w="33"/><text x="98.0446%" y="1215.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (8 samples, 0.02%)</title><rect x="97.8715%" y="1189" width="0.0246%" height="15" fill="rgb(226,228,36)" fg:x="31819" fg:w="8"/><text x="98.1215%" y="1199.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (4 samples, 0.01%)</title><rect x="97.8838%" y="1173" width="0.0123%" height="15" fill="rgb(213,63,50)" fg:x="31823" fg:w="4"/><text x="98.1338%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (128 samples, 0.39%)</title><rect x="97.8992%" y="1221" width="0.3937%" height="15" fill="rgb(235,194,19)" fg:x="31828" fg:w="128"/><text x="98.1492%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17 samples, 0.05%)</title><rect x="98.2406%" y="1205" width="0.0523%" height="15" fill="rgb(207,204,18)" fg:x="31939" fg:w="17"/><text x="98.4906%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (5 samples, 0.02%)</title><rect x="98.2775%" y="1189" width="0.0154%" height="15" fill="rgb(248,8,7)" fg:x="31951" fg:w="5"/><text x="98.5275%" y="1199.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (4 samples, 0.01%)</title><rect x="98.2929%" y="1221" width="0.0123%" height="15" fill="rgb(223,145,47)" fg:x="31956" fg:w="4"/><text x="98.5429%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (410 samples, 1.26%)</title><rect x="97.1148%" y="1253" width="1.2611%" height="15" fill="rgb(228,84,11)" fg:x="31573" fg:w="410"/><text x="97.3648%" y="1263.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (380 samples, 1.17%)</title><rect x="97.2071%" y="1237" width="1.1688%" height="15" fill="rgb(218,76,45)" fg:x="31603" fg:w="380"/><text x="97.4571%" y="1247.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (23 samples, 0.07%)</title><rect x="98.3052%" y="1221" width="0.0707%" height="15" fill="rgb(223,80,15)" fg:x="31960" fg:w="23"/><text x="98.5552%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.06%)</title><rect x="98.3113%" y="1205" width="0.0646%" height="15" fill="rgb(219,218,33)" fg:x="31962" fg:w="21"/><text x="98.5613%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (20 samples, 0.06%)</title><rect x="98.3144%" y="1189" width="0.0615%" height="15" fill="rgb(208,51,11)" fg:x="31963" fg:w="20"/><text x="98.5644%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (597 samples, 1.84%)</title><rect x="96.7057%" y="1317" width="1.8363%" height="15" fill="rgb(229,165,39)" fg:x="31440" fg:w="597"/><text x="96.9557%" y="1327.50">&lt;..</text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (597 samples, 1.84%)</title><rect x="96.7057%" y="1301" width="1.8363%" height="15" fill="rgb(241,100,24)" fg:x="31440" fg:w="597"/><text x="96.9557%" y="1311.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (595 samples, 1.83%)</title><rect x="96.7119%" y="1285" width="1.8301%" height="15" fill="rgb(228,14,23)" fg:x="31442" fg:w="595"/><text x="96.9619%" y="1295.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (556 samples, 1.71%)</title><rect x="96.8318%" y="1269" width="1.7102%" height="15" fill="rgb(247,116,52)" fg:x="31481" fg:w="556"/><text x="97.0818%" y="1279.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (54 samples, 0.17%)</title><rect x="98.3759%" y="1253" width="0.1661%" height="15" fill="rgb(216,149,33)" fg:x="31983" fg:w="54"/><text x="98.6259%" y="1263.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (25 samples, 0.08%)</title><rect x="98.4651%" y="1237" width="0.0769%" height="15" fill="rgb(238,142,29)" fg:x="32012" fg:w="25"/><text x="98.7151%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (5 samples, 0.02%)</title><rect x="98.5267%" y="1221" width="0.0154%" height="15" fill="rgb(224,83,40)" fg:x="32032" fg:w="5"/><text x="98.7767%" y="1231.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.02%)</title><rect x="98.5420%" y="1317" width="0.0246%" height="15" fill="rgb(234,165,11)" fg:x="32037" fg:w="8"/><text x="98.7920%" y="1327.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.02%)</title><rect x="98.5420%" y="1301" width="0.0246%" height="15" fill="rgb(215,96,23)" fg:x="32037" fg:w="8"/><text x="98.7920%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (644 samples, 1.98%)</title><rect x="96.6780%" y="1349" width="1.9809%" height="15" fill="rgb(233,179,26)" fg:x="31431" fg:w="644"/><text x="96.9280%" y="1359.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (644 samples, 1.98%)</title><rect x="96.6780%" y="1333" width="1.9809%" height="15" fill="rgb(225,129,33)" fg:x="31431" fg:w="644"/><text x="96.9280%" y="1343.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (30 samples, 0.09%)</title><rect x="98.5666%" y="1317" width="0.0923%" height="15" fill="rgb(237,49,13)" fg:x="32045" fg:w="30"/><text x="98.8166%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.09%)</title><rect x="98.5697%" y="1301" width="0.0892%" height="15" fill="rgb(211,3,31)" fg:x="32046" fg:w="29"/><text x="98.8197%" y="1311.50"></text></g><g><title>rand::seq::IteratorRandom::choose (645 samples, 1.98%)</title><rect x="96.6780%" y="1365" width="1.9839%" height="15" fill="rgb(216,152,19)" fg:x="31431" fg:w="645"/><text x="96.9280%" y="1375.50">r..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="98.6620%" y="1077" width="0.0123%" height="15" fill="rgb(251,121,35)" fg:x="32076" fg:w="4"/><text x="98.9120%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="98.6620%" y="1061" width="0.0123%" height="15" fill="rgb(210,217,47)" fg:x="32076" fg:w="4"/><text x="98.9120%" y="1071.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="98.6620%" y="1045" width="0.0123%" height="15" fill="rgb(244,116,22)" fg:x="32076" fg:w="4"/><text x="98.9120%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="98.6620%" y="1029" width="0.0123%" height="15" fill="rgb(228,17,21)" fg:x="32076" fg:w="4"/><text x="98.9120%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="98.6620%" y="1109" width="0.0185%" height="15" fill="rgb(240,149,34)" fg:x="32076" fg:w="6"/><text x="98.9120%" y="1119.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="98.6620%" y="1093" width="0.0185%" height="15" fill="rgb(208,125,47)" fg:x="32076" fg:w="6"/><text x="98.9120%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="98.6620%" y="1173" width="0.0215%" height="15" fill="rgb(249,186,39)" fg:x="32076" fg:w="7"/><text x="98.9120%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="98.6620%" y="1157" width="0.0215%" height="15" fill="rgb(240,220,33)" fg:x="32076" fg:w="7"/><text x="98.9120%" y="1167.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="98.6620%" y="1141" width="0.0215%" height="15" fill="rgb(243,110,23)" fg:x="32076" fg:w="7"/><text x="98.9120%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="98.6620%" y="1125" width="0.0215%" height="15" fill="rgb(219,163,46)" fg:x="32076" fg:w="7"/><text x="98.9120%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1317" width="0.0246%" height="15" fill="rgb(216,126,30)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1327.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="98.6620%" y="1301" width="0.0246%" height="15" fill="rgb(208,139,11)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1311.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1285" width="0.0246%" height="15" fill="rgb(213,118,36)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1295.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1269" width="0.0246%" height="15" fill="rgb(226,43,17)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1279.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1253" width="0.0246%" height="15" fill="rgb(254,217,4)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1263.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1237" width="0.0246%" height="15" fill="rgb(210,134,47)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1247.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1221" width="0.0246%" height="15" fill="rgb(237,24,49)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1205" width="0.0246%" height="15" fill="rgb(251,39,46)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1215.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="98.6620%" y="1189" width="0.0246%" height="15" fill="rgb(251,220,3)" fg:x="32076" fg:w="8"/><text x="98.9120%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="98.6897%" y="773" width="0.0277%" height="15" fill="rgb(228,105,12)" fg:x="32085" fg:w="9"/><text x="98.9397%" y="783.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="98.6897%" y="757" width="0.0277%" height="15" fill="rgb(215,196,1)" fg:x="32085" fg:w="9"/><text x="98.9397%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="98.6897%" y="741" width="0.0277%" height="15" fill="rgb(214,33,39)" fg:x="32085" fg:w="9"/><text x="98.9397%" y="751.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="98.6897%" y="725" width="0.0277%" height="15" fill="rgb(220,19,52)" fg:x="32085" fg:w="9"/><text x="98.9397%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="98.7020%" y="709" width="0.0154%" height="15" fill="rgb(221,78,38)" fg:x="32089" fg:w="5"/><text x="98.9520%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.01%)</title><rect x="98.7051%" y="693" width="0.0123%" height="15" fill="rgb(253,30,16)" fg:x="32090" fg:w="4"/><text x="98.9551%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="98.7051%" y="677" width="0.0123%" height="15" fill="rgb(242,65,0)" fg:x="32090" fg:w="4"/><text x="98.9551%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="98.6897%" y="837" width="0.0431%" height="15" fill="rgb(235,201,12)" fg:x="32085" fg:w="14"/><text x="98.9397%" y="847.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="98.6897%" y="821" width="0.0431%" height="15" fill="rgb(233,161,9)" fg:x="32085" fg:w="14"/><text x="98.9397%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="98.6897%" y="805" width="0.0431%" height="15" fill="rgb(241,207,41)" fg:x="32085" fg:w="14"/><text x="98.9397%" y="815.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="98.6897%" y="789" width="0.0431%" height="15" fill="rgb(212,69,46)" fg:x="32085" fg:w="14"/><text x="98.9397%" y="799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.02%)</title><rect x="98.7174%" y="773" width="0.0154%" height="15" fill="rgb(239,69,45)" fg:x="32094" fg:w="5"/><text x="98.9674%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="98.6897%" y="901" width="0.0554%" height="15" fill="rgb(242,117,48)" fg:x="32085" fg:w="18"/><text x="98.9397%" y="911.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="98.6897%" y="885" width="0.0554%" height="15" fill="rgb(228,41,36)" fg:x="32085" fg:w="18"/><text x="98.9397%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="98.6897%" y="869" width="0.0554%" height="15" fill="rgb(212,3,32)" fg:x="32085" fg:w="18"/><text x="98.9397%" y="879.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (18 samples, 0.06%)</title><rect x="98.6897%" y="853" width="0.0554%" height="15" fill="rgb(233,41,49)" fg:x="32085" fg:w="18"/><text x="98.9397%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="98.7327%" y="837" width="0.0123%" height="15" fill="rgb(252,170,49)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.01%)</title><rect x="98.7327%" y="821" width="0.0123%" height="15" fill="rgb(229,53,26)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="98.7327%" y="805" width="0.0123%" height="15" fill="rgb(217,157,12)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.01%)</title><rect x="98.7327%" y="789" width="0.0123%" height="15" fill="rgb(227,17,9)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.01%)</title><rect x="98.7327%" y="773" width="0.0123%" height="15" fill="rgb(218,84,12)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="783.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.01%)</title><rect x="98.7327%" y="757" width="0.0123%" height="15" fill="rgb(212,79,24)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="767.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.01%)</title><rect x="98.7327%" y="741" width="0.0123%" height="15" fill="rgb(217,222,37)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.01%)</title><rect x="98.7327%" y="725" width="0.0123%" height="15" fill="rgb(246,208,8)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.01%)</title><rect x="98.7327%" y="709" width="0.0123%" height="15" fill="rgb(244,133,10)" fg:x="32099" fg:w="4"/><text x="98.9827%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.03%)</title><rect x="98.7450%" y="885" width="0.0338%" height="15" fill="rgb(209,219,41)" fg:x="32103" fg:w="11"/><text x="98.9950%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="98.7450%" y="869" width="0.0338%" height="15" fill="rgb(253,175,45)" fg:x="32103" fg:w="11"/><text x="98.9950%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.03%)</title><rect x="98.7481%" y="853" width="0.0308%" height="15" fill="rgb(235,100,37)" fg:x="32104" fg:w="10"/><text x="98.9981%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (10 samples, 0.03%)</title><rect x="98.7481%" y="837" width="0.0308%" height="15" fill="rgb(225,87,19)" fg:x="32104" fg:w="10"/><text x="98.9981%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (10 samples, 0.03%)</title><rect x="98.7481%" y="821" width="0.0308%" height="15" fill="rgb(217,152,17)" fg:x="32104" fg:w="10"/><text x="98.9981%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (10 samples, 0.03%)</title><rect x="98.7481%" y="805" width="0.0308%" height="15" fill="rgb(235,72,13)" fg:x="32104" fg:w="10"/><text x="98.9981%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.03%)</title><rect x="98.7481%" y="789" width="0.0308%" height="15" fill="rgb(233,140,18)" fg:x="32104" fg:w="10"/><text x="98.9981%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="98.7512%" y="773" width="0.0277%" height="15" fill="rgb(207,212,28)" fg:x="32105" fg:w="9"/><text x="99.0012%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.02%)</title><rect x="98.7604%" y="757" width="0.0185%" height="15" fill="rgb(220,130,25)" fg:x="32108" fg:w="6"/><text x="99.0104%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="98.7604%" y="741" width="0.0185%" height="15" fill="rgb(205,55,34)" fg:x="32108" fg:w="6"/><text x="99.0104%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.02%)</title><rect x="98.7635%" y="725" width="0.0154%" height="15" fill="rgb(237,54,35)" fg:x="32109" fg:w="5"/><text x="99.0135%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="98.6897%" y="965" width="0.0923%" height="15" fill="rgb(208,67,23)" fg:x="32085" fg:w="30"/><text x="98.9397%" y="975.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="98.6897%" y="949" width="0.0923%" height="15" fill="rgb(206,207,50)" fg:x="32085" fg:w="30"/><text x="98.9397%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="98.6897%" y="933" width="0.0923%" height="15" fill="rgb(213,211,42)" fg:x="32085" fg:w="30"/><text x="98.9397%" y="943.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (30 samples, 0.09%)</title><rect x="98.6897%" y="917" width="0.0923%" height="15" fill="rgb(252,197,50)" fg:x="32085" fg:w="30"/><text x="98.9397%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.04%)</title><rect x="98.7450%" y="901" width="0.0369%" height="15" fill="rgb(251,211,41)" fg:x="32103" fg:w="12"/><text x="98.9950%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="98.7850%" y="821" width="0.0185%" height="15" fill="rgb(229,211,5)" fg:x="32116" fg:w="6"/><text x="99.0350%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="98.7850%" y="805" width="0.0185%" height="15" fill="rgb(239,36,31)" fg:x="32116" fg:w="6"/><text x="99.0350%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.03%)</title><rect x="98.7820%" y="949" width="0.0338%" height="15" fill="rgb(248,67,31)" fg:x="32115" fg:w="11"/><text x="99.0320%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="98.7820%" y="933" width="0.0338%" height="15" fill="rgb(249,55,44)" fg:x="32115" fg:w="11"/><text x="99.0320%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (10 samples, 0.03%)</title><rect x="98.7850%" y="917" width="0.0308%" height="15" fill="rgb(216,82,12)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (10 samples, 0.03%)</title><rect x="98.7850%" y="901" width="0.0308%" height="15" fill="rgb(242,174,1)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="911.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (10 samples, 0.03%)</title><rect x="98.7850%" y="885" width="0.0308%" height="15" fill="rgb(208,120,29)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="895.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (10 samples, 0.03%)</title><rect x="98.7850%" y="869" width="0.0308%" height="15" fill="rgb(221,105,43)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.03%)</title><rect x="98.7850%" y="853" width="0.0308%" height="15" fill="rgb(234,124,22)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.03%)</title><rect x="98.7850%" y="837" width="0.0308%" height="15" fill="rgb(212,23,30)" fg:x="32116" fg:w="10"/><text x="99.0350%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="98.8035%" y="821" width="0.0123%" height="15" fill="rgb(219,122,53)" fg:x="32122" fg:w="4"/><text x="99.0535%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="98.8035%" y="805" width="0.0123%" height="15" fill="rgb(248,84,24)" fg:x="32122" fg:w="4"/><text x="99.0535%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="98.8035%" y="789" width="0.0123%" height="15" fill="rgb(245,115,18)" fg:x="32122" fg:w="4"/><text x="99.0535%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="98.6897%" y="1029" width="0.1323%" height="15" fill="rgb(227,176,51)" fg:x="32085" fg:w="43"/><text x="98.9397%" y="1039.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="98.6897%" y="1013" width="0.1323%" height="15" fill="rgb(229,63,42)" fg:x="32085" fg:w="43"/><text x="98.9397%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="98.6897%" y="997" width="0.1323%" height="15" fill="rgb(247,202,24)" fg:x="32085" fg:w="43"/><text x="98.9397%" y="1007.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (43 samples, 0.13%)</title><rect x="98.6897%" y="981" width="0.1323%" height="15" fill="rgb(244,173,20)" fg:x="32085" fg:w="43"/><text x="98.9397%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.04%)</title><rect x="98.7820%" y="965" width="0.0400%" height="15" fill="rgb(242,81,47)" fg:x="32115" fg:w="13"/><text x="99.0320%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (50 samples, 0.15%)</title><rect x="98.6897%" y="1093" width="0.1538%" height="15" fill="rgb(231,185,54)" fg:x="32085" fg:w="50"/><text x="98.9397%" y="1103.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (50 samples, 0.15%)</title><rect x="98.6897%" y="1077" width="0.1538%" height="15" fill="rgb(243,55,32)" fg:x="32085" fg:w="50"/><text x="98.9397%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (50 samples, 0.15%)</title><rect x="98.6897%" y="1061" width="0.1538%" height="15" fill="rgb(208,167,19)" fg:x="32085" fg:w="50"/><text x="98.9397%" y="1071.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (50 samples, 0.15%)</title><rect x="98.6897%" y="1045" width="0.1538%" height="15" fill="rgb(231,72,35)" fg:x="32085" fg:w="50"/><text x="98.9397%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="98.8219%" y="1029" width="0.0215%" height="15" fill="rgb(250,173,51)" fg:x="32128" fg:w="7"/><text x="99.0719%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.02%)</title><rect x="98.8219%" y="1013" width="0.0215%" height="15" fill="rgb(209,5,22)" fg:x="32128" fg:w="7"/><text x="99.0719%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="98.8219%" y="997" width="0.0215%" height="15" fill="rgb(250,174,19)" fg:x="32128" fg:w="7"/><text x="99.0719%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (4 samples, 0.01%)</title><rect x="98.8312%" y="981" width="0.0123%" height="15" fill="rgb(217,3,49)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (4 samples, 0.01%)</title><rect x="98.8312%" y="965" width="0.0123%" height="15" fill="rgb(218,225,5)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="975.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.01%)</title><rect x="98.8312%" y="949" width="0.0123%" height="15" fill="rgb(236,89,11)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.01%)</title><rect x="98.8312%" y="933" width="0.0123%" height="15" fill="rgb(206,33,28)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.01%)</title><rect x="98.8312%" y="917" width="0.0123%" height="15" fill="rgb(241,56,42)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.01%)</title><rect x="98.8312%" y="901" width="0.0123%" height="15" fill="rgb(222,44,11)" fg:x="32131" fg:w="4"/><text x="99.0812%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.02%)</title><rect x="98.8435%" y="949" width="0.0154%" height="15" fill="rgb(234,111,20)" fg:x="32135" fg:w="5"/><text x="99.0935%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.02%)</title><rect x="98.8435%" y="933" width="0.0154%" height="15" fill="rgb(237,77,6)" fg:x="32135" fg:w="5"/><text x="99.0935%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (65 samples, 0.20%)</title><rect x="98.6897%" y="1157" width="0.1999%" height="15" fill="rgb(235,111,23)" fg:x="32085" fg:w="65"/><text x="98.9397%" y="1167.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (65 samples, 0.20%)</title><rect x="98.6897%" y="1141" width="0.1999%" height="15" fill="rgb(251,135,29)" fg:x="32085" fg:w="65"/><text x="98.9397%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (65 samples, 0.20%)</title><rect x="98.6897%" y="1125" width="0.1999%" height="15" fill="rgb(217,57,1)" fg:x="32085" fg:w="65"/><text x="98.9397%" y="1135.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (65 samples, 0.20%)</title><rect x="98.6897%" y="1109" width="0.1999%" height="15" fill="rgb(249,119,31)" fg:x="32085" fg:w="65"/><text x="98.9397%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.05%)</title><rect x="98.8435%" y="1093" width="0.0461%" height="15" fill="rgb(233,164,33)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (15 samples, 0.05%)</title><rect x="98.8435%" y="1077" width="0.0461%" height="15" fill="rgb(250,217,43)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.05%)</title><rect x="98.8435%" y="1061" width="0.0461%" height="15" fill="rgb(232,154,50)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (15 samples, 0.05%)</title><rect x="98.8435%" y="1045" width="0.0461%" height="15" fill="rgb(227,190,8)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (15 samples, 0.05%)</title><rect x="98.8435%" y="1029" width="0.0461%" height="15" fill="rgb(209,217,32)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1039.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (15 samples, 0.05%)</title><rect x="98.8435%" y="1013" width="0.0461%" height="15" fill="rgb(243,203,50)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (15 samples, 0.05%)</title><rect x="98.8435%" y="997" width="0.0461%" height="15" fill="rgb(232,152,27)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (15 samples, 0.05%)</title><rect x="98.8435%" y="981" width="0.0461%" height="15" fill="rgb(240,34,29)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.05%)</title><rect x="98.8435%" y="965" width="0.0461%" height="15" fill="rgb(215,185,52)" fg:x="32135" fg:w="15"/><text x="99.0935%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.03%)</title><rect x="98.8588%" y="949" width="0.0308%" height="15" fill="rgb(240,89,49)" fg:x="32140" fg:w="10"/><text x="99.1088%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.03%)</title><rect x="98.8619%" y="933" width="0.0277%" height="15" fill="rgb(225,12,52)" fg:x="32141" fg:w="9"/><text x="99.1119%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.03%)</title><rect x="98.8619%" y="917" width="0.0277%" height="15" fill="rgb(239,128,45)" fg:x="32141" fg:w="9"/><text x="99.1119%" y="927.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="98.8988%" y="981" width="0.0123%" height="15" fill="rgb(211,78,47)" fg:x="32153" fg:w="4"/><text x="99.1488%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="98.8988%" y="965" width="0.0123%" height="15" fill="rgb(232,31,21)" fg:x="32153" fg:w="4"/><text x="99.1488%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="98.8988%" y="949" width="0.0123%" height="15" fill="rgb(222,168,14)" fg:x="32153" fg:w="4"/><text x="99.1488%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="98.9111%" y="885" width="0.0123%" height="15" fill="rgb(209,128,24)" fg:x="32157" fg:w="4"/><text x="99.1611%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.03%)</title><rect x="98.8988%" y="1013" width="0.0308%" height="15" fill="rgb(249,35,13)" fg:x="32153" fg:w="10"/><text x="99.1488%" y="1023.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.03%)</title><rect x="98.8988%" y="997" width="0.0308%" height="15" fill="rgb(218,7,2)" fg:x="32153" fg:w="10"/><text x="99.1488%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.02%)</title><rect x="98.9111%" y="981" width="0.0185%" height="15" fill="rgb(238,107,27)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="98.9111%" y="965" width="0.0185%" height="15" fill="rgb(217,88,38)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.02%)</title><rect x="98.9111%" y="949" width="0.0185%" height="15" fill="rgb(230,207,0)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (6 samples, 0.02%)</title><rect x="98.9111%" y="933" width="0.0185%" height="15" fill="rgb(249,64,54)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (6 samples, 0.02%)</title><rect x="98.9111%" y="917" width="0.0185%" height="15" fill="rgb(231,7,11)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (6 samples, 0.02%)</title><rect x="98.9111%" y="901" width="0.0185%" height="15" fill="rgb(205,149,21)" fg:x="32157" fg:w="6"/><text x="99.1611%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (19 samples, 0.06%)</title><rect x="98.8927%" y="1141" width="0.0584%" height="15" fill="rgb(215,126,34)" fg:x="32151" fg:w="19"/><text x="99.1427%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.06%)</title><rect x="98.8927%" y="1125" width="0.0584%" height="15" fill="rgb(241,132,45)" fg:x="32151" fg:w="19"/><text x="99.1427%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (17 samples, 0.05%)</title><rect x="98.8988%" y="1109" width="0.0523%" height="15" fill="rgb(252,69,32)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (17 samples, 0.05%)</title><rect x="98.8988%" y="1093" width="0.0523%" height="15" fill="rgb(232,204,19)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1103.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 0.05%)</title><rect x="98.8988%" y="1077" width="0.0523%" height="15" fill="rgb(249,15,47)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1087.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (17 samples, 0.05%)</title><rect x="98.8988%" y="1061" width="0.0523%" height="15" fill="rgb(209,227,23)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 0.05%)</title><rect x="98.8988%" y="1045" width="0.0523%" height="15" fill="rgb(248,92,24)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.05%)</title><rect x="98.8988%" y="1029" width="0.0523%" height="15" fill="rgb(247,59,2)" fg:x="32153" fg:w="17"/><text x="99.1488%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.02%)</title><rect x="98.9296%" y="1013" width="0.0215%" height="15" fill="rgb(221,30,5)" fg:x="32163" fg:w="7"/><text x="99.1796%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="98.9296%" y="997" width="0.0215%" height="15" fill="rgb(208,108,53)" fg:x="32163" fg:w="7"/><text x="99.1796%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.02%)</title><rect x="98.9327%" y="981" width="0.0185%" height="15" fill="rgb(211,183,26)" fg:x="32164" fg:w="6"/><text x="99.1827%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88 samples, 0.27%)</title><rect x="98.6866%" y="1301" width="0.2707%" height="15" fill="rgb(232,132,4)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (88 samples, 0.27%)</title><rect x="98.6866%" y="1285" width="0.2707%" height="15" fill="rgb(253,128,37)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (88 samples, 0.27%)</title><rect x="98.6866%" y="1269" width="0.2707%" height="15" fill="rgb(221,58,24)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1279.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (88 samples, 0.27%)</title><rect x="98.6866%" y="1253" width="0.2707%" height="15" fill="rgb(230,54,45)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1263.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (88 samples, 0.27%)</title><rect x="98.6866%" y="1237" width="0.2707%" height="15" fill="rgb(254,21,18)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1247.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (88 samples, 0.27%)</title><rect x="98.6866%" y="1221" width="0.2707%" height="15" fill="rgb(221,108,0)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1231.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (88 samples, 0.27%)</title><rect x="98.6866%" y="1205" width="0.2707%" height="15" fill="rgb(206,95,1)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (88 samples, 0.27%)</title><rect x="98.6866%" y="1189" width="0.2707%" height="15" fill="rgb(237,52,5)" fg:x="32084" fg:w="88"/><text x="98.9366%" y="1199.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (87 samples, 0.27%)</title><rect x="98.6897%" y="1173" width="0.2676%" height="15" fill="rgb(218,150,34)" fg:x="32085" fg:w="87"/><text x="98.9397%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.07%)</title><rect x="98.8896%" y="1157" width="0.0677%" height="15" fill="rgb(235,194,28)" fg:x="32150" fg:w="22"/><text x="99.1396%" y="1167.50"></text></g><g><title>aes_grinder::exhaustive_search::exhaustive_search (32,074 samples, 98.66%)</title><rect x="0.3045%" y="1381" width="98.6558%" height="15" fill="rgb(245,92,18)" fg:x="99" fg:w="32074"/><text x="0.5545%" y="1391.50">aes_grinder::exhaustive_search::exhaustive_search</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::take (97 samples, 0.30%)</title><rect x="98.6620%" y="1365" width="0.2984%" height="15" fill="rgb(253,203,53)" fg:x="32076" fg:w="97"/><text x="98.9120%" y="1375.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::take (97 samples, 0.30%)</title><rect x="98.6620%" y="1349" width="0.2984%" height="15" fill="rgb(249,185,47)" fg:x="32076" fg:w="97"/><text x="98.9120%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (97 samples, 0.30%)</title><rect x="98.6620%" y="1333" width="0.2984%" height="15" fill="rgb(252,194,52)" fg:x="32076" fg:w="97"/><text x="98.9120%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (89 samples, 0.27%)</title><rect x="98.6866%" y="1317" width="0.2738%" height="15" fill="rgb(210,53,36)" fg:x="32084" fg:w="89"/><text x="98.9366%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (4 samples, 0.01%)</title><rect x="98.9911%" y="1141" width="0.0123%" height="15" fill="rgb(237,37,25)" fg:x="32183" fg:w="4"/><text x="99.2411%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.03%)</title><rect x="98.9757%" y="1173" width="0.0338%" height="15" fill="rgb(242,116,27)" fg:x="32178" fg:w="11"/><text x="99.2257%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.03%)</title><rect x="98.9788%" y="1157" width="0.0308%" height="15" fill="rgb(213,185,26)" fg:x="32179" fg:w="10"/><text x="99.2288%" y="1167.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_column (17 samples, 0.05%)</title><rect x="98.9604%" y="1333" width="0.0523%" height="15" fill="rgb(225,204,8)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.05%)</title><rect x="98.9604%" y="1317" width="0.0523%" height="15" fill="rgb(254,111,37)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="98.9604%" y="1301" width="0.0523%" height="15" fill="rgb(242,35,9)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="98.9604%" y="1285" width="0.0523%" height="15" fill="rgb(232,138,49)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="98.9604%" y="1269" width="0.0523%" height="15" fill="rgb(247,56,4)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (17 samples, 0.05%)</title><rect x="98.9604%" y="1253" width="0.0523%" height="15" fill="rgb(226,179,17)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (17 samples, 0.05%)</title><rect x="98.9604%" y="1237" width="0.0523%" height="15" fill="rgb(216,163,45)" fg:x="32173" fg:w="17"/><text x="99.2104%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="98.9696%" y="1221" width="0.0431%" height="15" fill="rgb(211,157,3)" fg:x="32176" fg:w="14"/><text x="99.2196%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.04%)</title><rect x="98.9757%" y="1205" width="0.0369%" height="15" fill="rgb(234,44,20)" fg:x="32178" fg:w="12"/><text x="99.2257%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.04%)</title><rect x="98.9757%" y="1189" width="0.0369%" height="15" fill="rgb(254,138,23)" fg:x="32178" fg:w="12"/><text x="99.2257%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="99.0188%" y="1317" width="0.0123%" height="15" fill="rgb(206,119,39)" fg:x="32192" fg:w="4"/><text x="99.2688%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::_{{closure}} (5 samples, 0.02%)</title><rect x="99.0557%" y="1125" width="0.0154%" height="15" fill="rgb(231,105,52)" fg:x="32204" fg:w="5"/><text x="99.3057%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="99.0465%" y="1189" width="0.0338%" height="15" fill="rgb(250,20,5)" fg:x="32201" fg:w="11"/><text x="99.2965%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (11 samples, 0.03%)</title><rect x="99.0465%" y="1173" width="0.0338%" height="15" fill="rgb(215,198,30)" fg:x="32201" fg:w="11"/><text x="99.2965%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.03%)</title><rect x="99.0465%" y="1157" width="0.0338%" height="15" fill="rgb(246,142,8)" fg:x="32201" fg:w="11"/><text x="99.2965%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="99.0465%" y="1141" width="0.0338%" height="15" fill="rgb(243,26,38)" fg:x="32201" fg:w="11"/><text x="99.2965%" y="1151.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_column (19 samples, 0.06%)</title><rect x="99.0311%" y="1317" width="0.0584%" height="15" fill="rgb(205,133,28)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.06%)</title><rect x="99.0311%" y="1301" width="0.0584%" height="15" fill="rgb(212,34,0)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.06%)</title><rect x="99.0311%" y="1285" width="0.0584%" height="15" fill="rgb(251,226,22)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.06%)</title><rect x="99.0311%" y="1269" width="0.0584%" height="15" fill="rgb(252,119,9)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.06%)</title><rect x="99.0311%" y="1253" width="0.0584%" height="15" fill="rgb(213,150,50)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.06%)</title><rect x="99.0311%" y="1237" width="0.0584%" height="15" fill="rgb(212,24,39)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (19 samples, 0.06%)</title><rect x="99.0311%" y="1221" width="0.0584%" height="15" fill="rgb(213,46,39)" fg:x="32196" fg:w="19"/><text x="99.2811%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.06%)</title><rect x="99.0342%" y="1205" width="0.0554%" height="15" fill="rgb(239,106,12)" fg:x="32197" fg:w="18"/><text x="99.2842%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.01%)</title><rect x="99.1018%" y="1301" width="0.0123%" height="15" fill="rgb(249,229,21)" fg:x="32219" fg:w="4"/><text x="99.3518%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (6 samples, 0.02%)</title><rect x="99.1172%" y="1285" width="0.0185%" height="15" fill="rgb(212,158,3)" fg:x="32224" fg:w="6"/><text x="99.3672%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="99.1172%" y="1269" width="0.0185%" height="15" fill="rgb(253,26,48)" fg:x="32224" fg:w="6"/><text x="99.3672%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="99.1141%" y="1301" width="0.0246%" height="15" fill="rgb(238,178,20)" fg:x="32223" fg:w="8"/><text x="99.3641%" y="1311.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_column (18 samples, 0.06%)</title><rect x="99.0895%" y="1317" width="0.0554%" height="15" fill="rgb(208,86,15)" fg:x="32215" fg:w="18"/><text x="99.3395%" y="1327.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_empty_colums (44 samples, 0.14%)</title><rect x="99.0126%" y="1333" width="0.1353%" height="15" fill="rgb(239,42,53)" fg:x="32190" fg:w="44"/><text x="99.2626%" y="1343.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (9 samples, 0.03%)</title><rect x="99.1880%" y="1317" width="0.0277%" height="15" fill="rgb(245,226,8)" fg:x="32247" fg:w="9"/><text x="99.4380%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.02%)</title><rect x="99.1941%" y="1301" width="0.0215%" height="15" fill="rgb(216,176,32)" fg:x="32249" fg:w="7"/><text x="99.4441%" y="1311.50"></text></g><g><title>aes_grinder::matrix::Matrix::remove_variable (90 samples, 0.28%)</title><rect x="98.9604%" y="1349" width="0.2768%" height="15" fill="rgb(231,186,21)" fg:x="32173" fg:w="90"/><text x="99.2104%" y="1359.50"></text></g><g><title>aes_grinder::matrix::Matrix::solve_on (29 samples, 0.09%)</title><rect x="99.1480%" y="1333" width="0.0892%" height="15" fill="rgb(205,95,49)" fg:x="32234" fg:w="29"/><text x="99.3980%" y="1343.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="99.2833%" y="1061" width="0.0308%" height="15" fill="rgb(217,145,8)" fg:x="32278" fg:w="10"/><text x="99.5333%" y="1071.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.01%)</title><rect x="99.3018%" y="1045" width="0.0123%" height="15" fill="rgb(239,144,48)" fg:x="32284" fg:w="4"/><text x="99.5518%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.07%)</title><rect x="99.2556%" y="1093" width="0.0738%" height="15" fill="rgb(214,189,23)" fg:x="32269" fg:w="24"/><text x="99.5056%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (22 samples, 0.07%)</title><rect x="99.2618%" y="1077" width="0.0677%" height="15" fill="rgb(229,157,17)" fg:x="32271" fg:w="22"/><text x="99.5118%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.09%)</title><rect x="99.2526%" y="1125" width="0.0861%" height="15" fill="rgb(230,5,48)" fg:x="32268" fg:w="28"/><text x="99.5026%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.09%)</title><rect x="99.2526%" y="1109" width="0.0861%" height="15" fill="rgb(224,156,48)" fg:x="32268" fg:w="28"/><text x="99.5026%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.09%)</title><rect x="99.2495%" y="1141" width="0.0923%" height="15" fill="rgb(223,14,29)" fg:x="32267" fg:w="30"/><text x="99.4995%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.11%)</title><rect x="99.2464%" y="1157" width="0.1138%" height="15" fill="rgb(229,96,36)" fg:x="32266" fg:w="37"/><text x="99.4964%" y="1167.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (6 samples, 0.02%)</title><rect x="99.3418%" y="1141" width="0.0185%" height="15" fill="rgb(231,102,53)" fg:x="32297" fg:w="6"/><text x="99.5918%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="99.3448%" y="1125" width="0.0154%" height="15" fill="rgb(210,77,38)" fg:x="32298" fg:w="5"/><text x="99.5948%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="99.3479%" y="1109" width="0.0123%" height="15" fill="rgb(235,131,6)" fg:x="32299" fg:w="4"/><text x="99.5979%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="99.3479%" y="1093" width="0.0123%" height="15" fill="rgb(252,55,38)" fg:x="32299" fg:w="4"/><text x="99.5979%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="99.3479%" y="1077" width="0.0123%" height="15" fill="rgb(246,38,14)" fg:x="32299" fg:w="4"/><text x="99.5979%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="99.3479%" y="1061" width="0.0123%" height="15" fill="rgb(242,27,5)" fg:x="32299" fg:w="4"/><text x="99.5979%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (39 samples, 0.12%)</title><rect x="99.2433%" y="1189" width="0.1200%" height="15" fill="rgb(228,65,35)" fg:x="32265" fg:w="39"/><text x="99.4933%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (39 samples, 0.12%)</title><rect x="99.2433%" y="1173" width="0.1200%" height="15" fill="rgb(245,93,11)" fg:x="32265" fg:w="39"/><text x="99.4933%" y="1183.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_all_variables (43 samples, 0.13%)</title><rect x="99.2403%" y="1269" width="0.1323%" height="15" fill="rgb(213,1,31)" fg:x="32264" fg:w="43"/><text x="99.4903%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.13%)</title><rect x="99.2403%" y="1253" width="0.1323%" height="15" fill="rgb(237,205,14)" fg:x="32264" fg:w="43"/><text x="99.4903%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (43 samples, 0.13%)</title><rect x="99.2403%" y="1237" width="0.1323%" height="15" fill="rgb(232,118,45)" fg:x="32264" fg:w="43"/><text x="99.4903%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.13%)</title><rect x="99.2433%" y="1221" width="0.1292%" height="15" fill="rgb(218,5,6)" fg:x="32265" fg:w="42"/><text x="99.4933%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (42 samples, 0.13%)</title><rect x="99.2433%" y="1205" width="0.1292%" height="15" fill="rgb(251,87,51)" fg:x="32265" fg:w="42"/><text x="99.4933%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.02%)</title><rect x="99.3725%" y="1189" width="0.0154%" height="15" fill="rgb(207,225,20)" fg:x="32307" fg:w="5"/><text x="99.6225%" y="1199.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (5 samples, 0.02%)</title><rect x="99.3725%" y="1173" width="0.0154%" height="15" fill="rgb(222,78,54)" fg:x="32307" fg:w="5"/><text x="99.6225%" y="1183.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (5 samples, 0.02%)</title><rect x="99.3725%" y="1157" width="0.0154%" height="15" fill="rgb(232,85,16)" fg:x="32307" fg:w="5"/><text x="99.6225%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (15 samples, 0.05%)</title><rect x="99.3725%" y="1269" width="0.0461%" height="15" fill="rgb(244,25,33)" fg:x="32307" fg:w="15"/><text x="99.6225%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.05%)</title><rect x="99.3725%" y="1253" width="0.0461%" height="15" fill="rgb(233,24,36)" fg:x="32307" fg:w="15"/><text x="99.6225%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (15 samples, 0.05%)</title><rect x="99.3725%" y="1237" width="0.0461%" height="15" fill="rgb(253,49,54)" fg:x="32307" fg:w="15"/><text x="99.6225%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15 samples, 0.05%)</title><rect x="99.3725%" y="1221" width="0.0461%" height="15" fill="rgb(245,12,22)" fg:x="32307" fg:w="15"/><text x="99.6225%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.05%)</title><rect x="99.3725%" y="1205" width="0.0461%" height="15" fill="rgb(253,141,28)" fg:x="32307" fg:w="15"/><text x="99.6225%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.03%)</title><rect x="99.3879%" y="1189" width="0.0308%" height="15" fill="rgb(225,207,27)" fg:x="32312" fg:w="10"/><text x="99.6379%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="99.3910%" y="1173" width="0.0277%" height="15" fill="rgb(220,84,2)" fg:x="32313" fg:w="9"/><text x="99.6410%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.02%)</title><rect x="99.4002%" y="1157" width="0.0185%" height="15" fill="rgb(224,37,37)" fg:x="32316" fg:w="6"/><text x="99.6502%" y="1167.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (4 samples, 0.01%)</title><rect x="99.4248%" y="1221" width="0.0123%" height="15" fill="rgb(220,143,18)" fg:x="32324" fg:w="4"/><text x="99.6748%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="99.4248%" y="1205" width="0.0123%" height="15" fill="rgb(210,88,33)" fg:x="32324" fg:w="4"/><text x="99.6748%" y="1215.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.01%)</title><rect x="99.4248%" y="1189" width="0.0123%" height="15" fill="rgb(219,87,51)" fg:x="32324" fg:w="4"/><text x="99.6748%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (67 samples, 0.21%)</title><rect x="99.2372%" y="1349" width="0.2061%" height="15" fill="rgb(211,7,35)" fg:x="32263" fg:w="67"/><text x="99.4872%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (67 samples, 0.21%)</title><rect x="99.2372%" y="1333" width="0.2061%" height="15" fill="rgb(232,77,2)" fg:x="32263" fg:w="67"/><text x="99.4872%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (67 samples, 0.21%)</title><rect x="99.2372%" y="1317" width="0.2061%" height="15" fill="rgb(249,94,25)" fg:x="32263" fg:w="67"/><text x="99.4872%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::_{{closure}} (66 samples, 0.20%)</title><rect x="99.2403%" y="1301" width="0.2030%" height="15" fill="rgb(215,112,2)" fg:x="32264" fg:w="66"/><text x="99.4903%" y="1311.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables::_{{closure}} (66 samples, 0.20%)</title><rect x="99.2403%" y="1285" width="0.2030%" height="15" fill="rgb(226,115,48)" fg:x="32264" fg:w="66"/><text x="99.4903%" y="1295.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (8 samples, 0.02%)</title><rect x="99.4187%" y="1269" width="0.0246%" height="15" fill="rgb(249,196,10)" fg:x="32322" fg:w="8"/><text x="99.6687%" y="1279.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (8 samples, 0.02%)</title><rect x="99.4187%" y="1253" width="0.0246%" height="15" fill="rgb(237,109,14)" fg:x="32322" fg:w="8"/><text x="99.6687%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (8 samples, 0.02%)</title><rect x="99.4187%" y="1237" width="0.0246%" height="15" fill="rgb(217,103,53)" fg:x="32322" fg:w="8"/><text x="99.6687%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables (162 samples, 0.50%)</title><rect x="98.9604%" y="1365" width="0.4983%" height="15" fill="rgb(244,137,9)" fg:x="32173" fg:w="162"/><text x="99.2104%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="99.4433%" y="1349" width="0.0154%" height="15" fill="rgb(227,201,3)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.02%)</title><rect x="99.4433%" y="1333" width="0.0154%" height="15" fill="rgb(243,94,6)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (5 samples, 0.02%)</title><rect x="99.4433%" y="1317" width="0.0154%" height="15" fill="rgb(235,118,5)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1327.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables::_{{closure}} (5 samples, 0.02%)</title><rect x="99.4433%" y="1301" width="0.0154%" height="15" fill="rgb(247,10,30)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.02%)</title><rect x="99.4433%" y="1285" width="0.0154%" height="15" fill="rgb(205,26,28)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.02%)</title><rect x="99.4433%" y="1269" width="0.0154%" height="15" fill="rgb(206,99,35)" fg:x="32330" fg:w="5"/><text x="99.6933%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.01%)</title><rect x="99.4463%" y="1253" width="0.0123%" height="15" fill="rgb(238,130,40)" fg:x="32331" fg:w="4"/><text x="99.6963%" y="1263.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables::_{{closure}}::_{{closure}} (4 samples, 0.01%)</title><rect x="99.4463%" y="1237" width="0.0123%" height="15" fill="rgb(224,126,31)" fg:x="32331" fg:w="4"/><text x="99.6963%" y="1247.50"></text></g><g><title>aes_grinder::matrix::Matrix::drop_linear_variables (163 samples, 0.50%)</title><rect x="98.9604%" y="1381" width="0.5014%" height="15" fill="rgb(254,105,17)" fg:x="32173" fg:w="163"/><text x="99.2104%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="99.5079%" y="1269" width="0.0338%" height="15" fill="rgb(216,87,36)" fg:x="32351" fg:w="11"/><text x="99.7579%" y="1279.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.03%)</title><rect x="99.7047%" y="1253" width="0.0277%" height="15" fill="rgb(240,21,12)" fg:x="32415" fg:w="9"/><text x="99.9547%" y="1263.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="99.7785%" y="1237" width="0.0123%" height="15" fill="rgb(245,192,34)" fg:x="32439" fg:w="4"/><text x="100.0285%" y="1247.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (105 samples, 0.32%)</title><rect x="99.4863%" y="1285" width="0.3230%" height="15" fill="rgb(226,100,49)" fg:x="32344" fg:w="105"/><text x="99.7363%" y="1295.50"></text></g><g><title>core::str::validations::next_code_point (87 samples, 0.27%)</title><rect x="99.5417%" y="1269" width="0.2676%" height="15" fill="rgb(245,188,27)" fg:x="32362" fg:w="87"/><text x="99.7917%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.08%)</title><rect x="99.7324%" y="1253" width="0.0769%" height="15" fill="rgb(212,170,8)" fg:x="32424" fg:w="25"/><text x="99.9824%" y="1263.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (6 samples, 0.02%)</title><rect x="99.7908%" y="1237" width="0.0185%" height="15" fill="rgb(217,113,29)" fg:x="32443" fg:w="6"/><text x="100.0408%" y="1247.50"></text></g><g><title>aes_grinder::parser::Parser::get_term (131 samples, 0.40%)</title><rect x="99.4709%" y="1349" width="0.4029%" height="15" fill="rgb(237,30,3)" fg:x="32339" fg:w="131"/><text x="99.7209%" y="1359.50"></text></g><g><title>aes_grinder::parser::Reader::next_char (131 samples, 0.40%)</title><rect x="99.4709%" y="1333" width="0.4029%" height="15" fill="rgb(227,19,28)" fg:x="32339" fg:w="131"/><text x="99.7209%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (130 samples, 0.40%)</title><rect x="99.4740%" y="1317" width="0.3999%" height="15" fill="rgb(239,172,45)" fg:x="32340" fg:w="130"/><text x="99.7240%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (130 samples, 0.40%)</title><rect x="99.4740%" y="1301" width="0.3999%" height="15" fill="rgb(254,55,39)" fg:x="32340" fg:w="130"/><text x="99.7240%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (19 samples, 0.06%)</title><rect x="99.8154%" y="1285" width="0.0584%" height="15" fill="rgb(249,208,12)" fg:x="32451" fg:w="19"/><text x="100.0654%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (19 samples, 0.06%)</title><rect x="99.8154%" y="1269" width="0.0584%" height="15" fill="rgb(240,52,13)" fg:x="32451" fg:w="19"/><text x="100.0654%" y="1279.50"></text></g><g><title>aes_grinder::parser::Parser::parse_line (132 samples, 0.41%)</title><rect x="99.4709%" y="1365" width="0.4060%" height="15" fill="rgb(252,149,13)" fg:x="32339" fg:w="132"/><text x="99.7209%" y="1375.50"></text></g><g><title>aes_grinder::parser::Parser::parse_system (136 samples, 0.42%)</title><rect x="99.4617%" y="1381" width="0.4183%" height="15" fill="rgb(232,81,48)" fg:x="32336" fg:w="136"/><text x="99.7117%" y="1391.50"></text></g><g><title>dialoguer::theme::render::TermThemeRenderer::fuzzy_select_prompt_item (8 samples, 0.02%)</title><rect x="99.8831%" y="1333" width="0.0246%" height="15" fill="rgb(222,144,2)" fg:x="32473" fg:w="8"/><text x="100.1331%" y="1343.50"></text></g><g><title>dialoguer::theme::render::TermThemeRenderer::write_formatted_line (8 samples, 0.02%)</title><rect x="99.8831%" y="1317" width="0.0246%" height="15" fill="rgb(216,81,32)" fg:x="32473" fg:w="8"/><text x="100.1331%" y="1327.50"></text></g><g><title>dialoguer::theme::render::TermThemeRenderer::fuzzy_select_prompt_item::_{{closure}} (5 samples, 0.02%)</title><rect x="99.8923%" y="1301" width="0.0154%" height="15" fill="rgb(244,78,51)" fg:x="32476" fg:w="5"/><text x="100.1423%" y="1311.50"></text></g><g><title>dialoguer::theme::Theme::format_fuzzy_select_prompt_item (5 samples, 0.02%)</title><rect x="99.8923%" y="1285" width="0.0154%" height="15" fill="rgb(217,66,21)" fg:x="32476" fg:w="5"/><text x="100.1423%" y="1295.50"></text></g><g><title>dialoguer::prompts::fuzzy_select::FuzzySelect::interact (10 samples, 0.03%)</title><rect x="99.8800%" y="1381" width="0.0308%" height="15" fill="rgb(247,101,42)" fg:x="32472" fg:w="10"/><text x="100.1300%" y="1391.50"></text></g><g><title>dialoguer::prompts::fuzzy_select::FuzzySelect::interact_on (10 samples, 0.03%)</title><rect x="99.8800%" y="1365" width="0.0308%" height="15" fill="rgb(227,81,39)" fg:x="32472" fg:w="10"/><text x="100.1300%" y="1375.50"></text></g><g><title>dialoguer::prompts::fuzzy_select::FuzzySelect::_interact_on (10 samples, 0.03%)</title><rect x="99.8800%" y="1349" width="0.0308%" height="15" fill="rgb(220,223,44)" fg:x="32472" fg:w="10"/><text x="100.1300%" y="1359.50"></text></g><g><title>_start (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1669" width="99.6124%" height="15" fill="rgb(205,218,2)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1679.50">_start</text></g><g><title>__libc_start_main (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1653" width="99.6124%" height="15" fill="rgb(212,207,28)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1663.50">__libc_start_main</text></g><g><title>[libc.so.6] (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1637" width="99.6124%" height="15" fill="rgb(224,12,41)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1647.50">[libc.so.6]</text></g><g><title>main (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1621" width="99.6124%" height="15" fill="rgb(216,118,12)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1631.50">main</text></g><g><title>std::rt::lang_start (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1605" width="99.6124%" height="15" fill="rgb(252,97,46)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1615.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1589" width="99.6124%" height="15" fill="rgb(244,206,19)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1599.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1573" width="99.6124%" height="15" fill="rgb(231,84,31)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1583.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1557" width="99.6124%" height="15" fill="rgb(244,133,0)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1567.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1541" width="99.6124%" height="15" fill="rgb(223,15,50)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1551.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1525" width="99.6124%" height="15" fill="rgb(250,118,49)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1535.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1509" width="99.6124%" height="15" fill="rgb(248,25,38)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1519.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1493" width="99.6124%" height="15" fill="rgb(215,70,14)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1503.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1477" width="99.6124%" height="15" fill="rgb(215,28,15)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1487.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1461" width="99.6124%" height="15" fill="rgb(243,6,28)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1471.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1445" width="99.6124%" height="15" fill="rgb(222,130,1)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1455.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1429" width="99.6124%" height="15" fill="rgb(236,166,44)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1439.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1413" width="99.6124%" height="15" fill="rgb(221,108,14)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1423.50">core::ops::function::FnOnce::call_once</text></g><g><title>aes_grinder::main (32,385 samples, 99.61%)</title><rect x="0.3045%" y="1397" width="99.6124%" height="15" fill="rgb(252,3,45)" fg:x="99" fg:w="32385"/><text x="0.5545%" y="1407.50">aes_grinder::main</text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.07%)</title><rect x="99.9170%" y="1669" width="0.0677%" height="15" fill="rgb(237,68,30)" fg:x="32484" fg:w="22"/><text x="100.1670%" y="1679.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.07%)</title><rect x="99.9170%" y="1653" width="0.0677%" height="15" fill="rgb(211,79,22)" fg:x="32484" fg:w="22"/><text x="100.1670%" y="1663.50"></text></g><g><title>malloc (22 samples, 0.07%)</title><rect x="99.9170%" y="1637" width="0.0677%" height="15" fill="rgb(252,185,21)" fg:x="32484" fg:w="22"/><text x="100.1670%" y="1647.50"></text></g><g><title>[libc.so.6] (22 samples, 0.07%)</title><rect x="99.9170%" y="1621" width="0.0677%" height="15" fill="rgb(225,189,26)" fg:x="32484" fg:w="22"/><text x="100.1670%" y="1631.50"></text></g><g><title>[unknown] (22 samples, 0.07%)</title><rect x="99.9170%" y="1605" width="0.0677%" height="15" fill="rgb(241,30,40)" fg:x="32484" fg:w="22"/><text x="100.1670%" y="1615.50"></text></g><g><title>all (32,511 samples, 100%)</title><rect x="0.0000%" y="1701" width="100.0000%" height="15" fill="rgb(235,215,44)" fg:x="0" fg:w="32511"/><text x="0.2500%" y="1711.50"></text></g><g><title>aes_grinder (32,511 samples, 100.00%)</title><rect x="0.0000%" y="1685" width="100.0000%" height="15" fill="rgb(205,8,29)" fg:x="0" fg:w="32511"/><text x="0.2500%" y="1695.50">aes_grinder</text></g><g><title>malloc (4 samples, 0.01%)</title><rect x="99.9877%" y="1669" width="0.0123%" height="15" fill="rgb(241,137,42)" fg:x="32507" fg:w="4"/><text x="100.2377%" y="1679.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="99.9877%" y="1653" width="0.0123%" height="15" fill="rgb(237,155,2)" fg:x="32507" fg:w="4"/><text x="100.2377%" y="1663.50"></text></g></svg></svg>