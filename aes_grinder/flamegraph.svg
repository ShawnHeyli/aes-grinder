<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1526" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1509.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1509.00"> </text><svg id="frames" x="10" width="1180" total_samples="58119"><g><title>[[heap]] (9 samples, 0.02%)</title><rect x="0.0000%" y="1445" width="0.0155%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="9"/><text x="0.2500%" y="1455.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="0.0000%" y="1429" width="0.0155%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="9"/><text x="0.2500%" y="1439.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="0.0000%" y="1413" width="0.0155%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="9"/><text x="0.2500%" y="1423.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.01%)</title><rect x="0.0206%" y="1429" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="7"/><text x="0.2706%" y="1439.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 0.02%)</title><rect x="0.0206%" y="1445" width="0.0155%" height="15" fill="rgb(208,68,35)" fg:x="12" fg:w="9"/><text x="0.2706%" y="1455.50"></text></g><g><title>[libc.so.6] (23 samples, 0.04%)</title><rect x="0.0465%" y="1429" width="0.0396%" height="15" fill="rgb(232,128,0)" fg:x="27" fg:w="23"/><text x="0.2965%" y="1439.50"></text></g><g><title>[unknown] (22 samples, 0.04%)</title><rect x="0.0482%" y="1413" width="0.0379%" height="15" fill="rgb(207,160,47)" fg:x="28" fg:w="22"/><text x="0.2982%" y="1423.50"></text></g><g><title>[unknown] (8 samples, 0.01%)</title><rect x="0.0723%" y="1397" width="0.0138%" height="15" fill="rgb(228,23,34)" fg:x="42" fg:w="8"/><text x="0.3223%" y="1407.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="0.0860%" y="1429" width="0.0155%" height="15" fill="rgb(218,30,26)" fg:x="50" fg:w="9"/><text x="0.3360%" y="1439.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="0.0860%" y="1413" width="0.0155%" height="15" fill="rgb(220,122,19)" fg:x="50" fg:w="9"/><text x="0.3360%" y="1423.50"></text></g><g><title>malloc (9 samples, 0.02%)</title><rect x="0.0860%" y="1397" width="0.0155%" height="15" fill="rgb(250,228,42)" fg:x="50" fg:w="9"/><text x="0.3360%" y="1407.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="0.0860%" y="1381" width="0.0155%" height="15" fill="rgb(240,193,28)" fg:x="50" fg:w="9"/><text x="0.3360%" y="1391.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="0.0860%" y="1365" width="0.0155%" height="15" fill="rgb(216,20,37)" fg:x="50" fg:w="9"/><text x="0.3360%" y="1375.50"></text></g><g><title>[unknown] (38 samples, 0.07%)</title><rect x="0.0396%" y="1445" width="0.0654%" height="15" fill="rgb(206,188,39)" fg:x="23" fg:w="38"/><text x="0.2896%" y="1455.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.02%)</title><rect x="0.1101%" y="933" width="0.0224%" height="15" fill="rgb(217,207,13)" fg:x="64" fg:w="13"/><text x="0.3601%" y="943.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="0.1101%" y="917" width="0.0224%" height="15" fill="rgb(231,73,38)" fg:x="64" fg:w="13"/><text x="0.3601%" y="927.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="0.1170%" y="901" width="0.0155%" height="15" fill="rgb(225,20,46)" fg:x="68" fg:w="9"/><text x="0.3670%" y="911.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="0.1170%" y="885" width="0.0155%" height="15" fill="rgb(210,31,41)" fg:x="68" fg:w="9"/><text x="0.3670%" y="895.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="0.1170%" y="869" width="0.0155%" height="15" fill="rgb(221,200,47)" fg:x="68" fg:w="9"/><text x="0.3670%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="0.1170%" y="853" width="0.0155%" height="15" fill="rgb(226,26,5)" fg:x="68" fg:w="9"/><text x="0.3670%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="0.1101%" y="965" width="0.0241%" height="15" fill="rgb(249,33,26)" fg:x="64" fg:w="14"/><text x="0.3601%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="0.1101%" y="949" width="0.0241%" height="15" fill="rgb(235,183,28)" fg:x="64" fg:w="14"/><text x="0.3601%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (7 samples, 0.01%)</title><rect x="0.1342%" y="901" width="0.0120%" height="15" fill="rgb(221,5,38)" fg:x="78" fg:w="7"/><text x="0.3842%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (7 samples, 0.01%)</title><rect x="0.1342%" y="885" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="78" fg:w="7"/><text x="0.3842%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="0.1101%" y="1029" width="0.0379%" height="15" fill="rgb(241,131,45)" fg:x="64" fg:w="22"/><text x="0.3601%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="0.1101%" y="1013" width="0.0379%" height="15" fill="rgb(249,31,29)" fg:x="64" fg:w="22"/><text x="0.3601%" y="1023.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (22 samples, 0.04%)</title><rect x="0.1101%" y="997" width="0.0379%" height="15" fill="rgb(225,111,53)" fg:x="64" fg:w="22"/><text x="0.3601%" y="1007.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (22 samples, 0.04%)</title><rect x="0.1101%" y="981" width="0.0379%" height="15" fill="rgb(238,160,17)" fg:x="64" fg:w="22"/><text x="0.3601%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.1342%" y="965" width="0.0138%" height="15" fill="rgb(214,148,48)" fg:x="78" fg:w="8"/><text x="0.3842%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.1342%" y="949" width="0.0138%" height="15" fill="rgb(232,36,49)" fg:x="78" fg:w="8"/><text x="0.3842%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.1342%" y="933" width="0.0138%" height="15" fill="rgb(209,103,24)" fg:x="78" fg:w="8"/><text x="0.3842%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="0.1342%" y="917" width="0.0138%" height="15" fill="rgb(229,88,8)" fg:x="78" fg:w="8"/><text x="0.3842%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (28 samples, 0.05%)</title><rect x="0.1101%" y="1061" width="0.0482%" height="15" fill="rgb(213,181,19)" fg:x="64" fg:w="28"/><text x="0.3601%" y="1071.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (28 samples, 0.05%)</title><rect x="0.1101%" y="1045" width="0.0482%" height="15" fill="rgb(254,191,54)" fg:x="64" fg:w="28"/><text x="0.3601%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1480%" y="1029" width="0.0103%" height="15" fill="rgb(241,83,37)" fg:x="86" fg:w="6"/><text x="0.3980%" y="1039.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1480%" y="1013" width="0.0103%" height="15" fill="rgb(233,36,39)" fg:x="86" fg:w="6"/><text x="0.3980%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1480%" y="997" width="0.0103%" height="15" fill="rgb(226,3,54)" fg:x="86" fg:w="6"/><text x="0.3980%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1480%" y="981" width="0.0103%" height="15" fill="rgb(245,192,40)" fg:x="86" fg:w="6"/><text x="0.3980%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.05%)</title><rect x="0.1101%" y="1093" width="0.0533%" height="15" fill="rgb(238,167,29)" fg:x="64" fg:w="31"/><text x="0.3601%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.05%)</title><rect x="0.1101%" y="1077" width="0.0533%" height="15" fill="rgb(232,182,51)" fg:x="64" fg:w="31"/><text x="0.3601%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.07%)</title><rect x="0.1084%" y="1141" width="0.0654%" height="15" fill="rgb(231,60,39)" fg:x="63" fg:w="38"/><text x="0.3584%" y="1151.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (38 samples, 0.07%)</title><rect x="0.1084%" y="1125" width="0.0654%" height="15" fill="rgb(208,69,12)" fg:x="63" fg:w="38"/><text x="0.3584%" y="1135.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (38 samples, 0.07%)</title><rect x="0.1084%" y="1109" width="0.0654%" height="15" fill="rgb(235,93,37)" fg:x="63" fg:w="38"/><text x="0.3584%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1635%" y="1093" width="0.0103%" height="15" fill="rgb(213,116,39)" fg:x="95" fg:w="6"/><text x="0.4135%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1635%" y="1077" width="0.0103%" height="15" fill="rgb(222,207,29)" fg:x="95" fg:w="6"/><text x="0.4135%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1635%" y="1061" width="0.0103%" height="15" fill="rgb(206,96,30)" fg:x="95" fg:w="6"/><text x="0.4135%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="0.1635%" y="1045" width="0.0103%" height="15" fill="rgb(218,138,4)" fg:x="95" fg:w="6"/><text x="0.4135%" y="1055.50"></text></g><g><title>aes_grinder::matrix::Matrix::scale_on (24 samples, 0.04%)</title><rect x="0.1738%" y="1109" width="0.0413%" height="15" fill="rgb(250,191,14)" fg:x="101" fg:w="24"/><text x="0.4238%" y="1119.50"></text></g><g><title>aes_grinder::algo::Algo::base_solver (25 samples, 0.04%)</title><rect x="0.1738%" y="1141" width="0.0430%" height="15" fill="rgb(239,60,40)" fg:x="101" fg:w="25"/><text x="0.4238%" y="1151.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions (25 samples, 0.04%)</title><rect x="0.1738%" y="1125" width="0.0430%" height="15" fill="rgb(206,27,48)" fg:x="101" fg:w="25"/><text x="0.4238%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="0.2202%" y="997" width="0.0103%" height="15" fill="rgb(225,35,8)" fg:x="128" fg:w="6"/><text x="0.4702%" y="1007.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="0.2202%" y="981" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="128" fg:w="6"/><text x="0.4702%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="0.2202%" y="965" width="0.0103%" height="15" fill="rgb(247,123,22)" fg:x="128" fg:w="6"/><text x="0.4702%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="0.2202%" y="1061" width="0.0120%" height="15" fill="rgb(231,138,38)" fg:x="128" fg:w="7"/><text x="0.4702%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="0.2202%" y="1045" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="128" fg:w="7"/><text x="0.4702%" y="1055.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="0.2202%" y="1029" width="0.0120%" height="15" fill="rgb(251,118,11)" fg:x="128" fg:w="7"/><text x="0.4702%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="0.2202%" y="1013" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="128" fg:w="7"/><text x="0.4702%" y="1023.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="0.2202%" y="1125" width="0.0172%" height="15" fill="rgb(247,81,37)" fg:x="128" fg:w="10"/><text x="0.4702%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="0.2202%" y="1109" width="0.0172%" height="15" fill="rgb(209,12,38)" fg:x="128" fg:w="10"/><text x="0.4702%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="0.2202%" y="1093" width="0.0172%" height="15" fill="rgb(227,1,9)" fg:x="128" fg:w="10"/><text x="0.4702%" y="1103.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="0.2202%" y="1077" width="0.0172%" height="15" fill="rgb(248,47,43)" fg:x="128" fg:w="10"/><text x="0.4702%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.2374%" y="1125" width="0.0120%" height="15" fill="rgb(221,10,30)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.2374%" y="1109" width="0.0120%" height="15" fill="rgb(210,229,1)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.2374%" y="1093" width="0.0120%" height="15" fill="rgb(222,148,37)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.2374%" y="1077" width="0.0120%" height="15" fill="rgb(234,67,33)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (7 samples, 0.01%)</title><rect x="0.2374%" y="1061" width="0.0120%" height="15" fill="rgb(247,98,35)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (7 samples, 0.01%)</title><rect x="0.2374%" y="1045" width="0.0120%" height="15" fill="rgb(247,138,52)" fg:x="138" fg:w="7"/><text x="0.4874%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="0.2581%" y="997" width="0.0189%" height="15" fill="rgb(213,79,30)" fg:x="150" fg:w="11"/><text x="0.5081%" y="1007.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (7 samples, 0.01%)</title><rect x="0.2650%" y="981" width="0.0120%" height="15" fill="rgb(246,177,23)" fg:x="154" fg:w="7"/><text x="0.5150%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="0.2650%" y="965" width="0.0120%" height="15" fill="rgb(230,62,27)" fg:x="154" fg:w="7"/><text x="0.5150%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.02%)</title><rect x="0.2546%" y="1029" width="0.0241%" height="15" fill="rgb(216,154,8)" fg:x="148" fg:w="14"/><text x="0.5046%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (14 samples, 0.02%)</title><rect x="0.2546%" y="1013" width="0.0241%" height="15" fill="rgb(244,35,45)" fg:x="148" fg:w="14"/><text x="0.5046%" y="1023.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_all_variables (20 samples, 0.03%)</title><rect x="0.2529%" y="1109" width="0.0344%" height="15" fill="rgb(251,115,12)" fg:x="147" fg:w="20"/><text x="0.5029%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.03%)</title><rect x="0.2529%" y="1093" width="0.0344%" height="15" fill="rgb(240,54,50)" fg:x="147" fg:w="20"/><text x="0.5029%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.03%)</title><rect x="0.2529%" y="1077" width="0.0344%" height="15" fill="rgb(233,84,52)" fg:x="147" fg:w="20"/><text x="0.5029%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="0.2546%" y="1061" width="0.0327%" height="15" fill="rgb(207,117,47)" fg:x="148" fg:w="19"/><text x="0.5046%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="0.2546%" y="1045" width="0.0327%" height="15" fill="rgb(249,43,39)" fg:x="148" fg:w="19"/><text x="0.5046%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.02%)</title><rect x="1.1717%" y="1093" width="0.0155%" height="15" fill="rgb(209,38,44)" fg:x="681" fg:w="9"/><text x="1.4217%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.10%)</title><rect x="1.6948%" y="1061" width="0.0998%" height="15" fill="rgb(236,212,23)" fg:x="985" fg:w="58"/><text x="1.9448%" y="1071.50"></text></g><g><title>core::slice::raw::from_raw_parts (57 samples, 0.10%)</title><rect x="1.6965%" y="1045" width="0.0981%" height="15" fill="rgb(242,79,21)" fg:x="986" fg:w="57"/><text x="1.9465%" y="1055.50"></text></g><g><title>core::ptr::slice_from_raw_parts (57 samples, 0.10%)</title><rect x="1.6965%" y="1029" width="0.0981%" height="15" fill="rgb(211,96,35)" fg:x="986" fg:w="57"/><text x="1.9465%" y="1039.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (57 samples, 0.10%)</title><rect x="1.6965%" y="1013" width="0.0981%" height="15" fill="rgb(253,215,40)" fg:x="986" fg:w="57"/><text x="1.9465%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (316 samples, 0.54%)</title><rect x="1.4229%" y="1077" width="0.5437%" height="15" fill="rgb(211,81,21)" fg:x="827" fg:w="316"/><text x="1.6729%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (100 samples, 0.17%)</title><rect x="1.7946%" y="1061" width="0.1721%" height="15" fill="rgb(208,190,38)" fg:x="1043" fg:w="100"/><text x="2.0446%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (83 samples, 0.14%)</title><rect x="1.8238%" y="1045" width="0.1428%" height="15" fill="rgb(235,213,38)" fg:x="1060" fg:w="83"/><text x="2.0738%" y="1055.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (454 samples, 0.78%)</title><rect x="1.1872%" y="1093" width="0.7812%" height="15" fill="rgb(237,122,38)" fg:x="690" fg:w="454"/><text x="1.4372%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.02%)</title><rect x="2.1473%" y="1061" width="0.0224%" height="15" fill="rgb(244,218,35)" fg:x="1248" fg:w="13"/><text x="2.3973%" y="1071.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (9 samples, 0.02%)</title><rect x="2.1542%" y="1045" width="0.0155%" height="15" fill="rgb(240,68,47)" fg:x="1252" fg:w="9"/><text x="2.4042%" y="1055.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (9 samples, 0.02%)</title><rect x="2.1542%" y="1029" width="0.0155%" height="15" fill="rgb(210,16,53)" fg:x="1252" fg:w="9"/><text x="2.4042%" y="1039.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (9 samples, 0.02%)</title><rect x="2.1542%" y="1013" width="0.0155%" height="15" fill="rgb(235,124,12)" fg:x="1252" fg:w="9"/><text x="2.4042%" y="1023.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (163 samples, 0.28%)</title><rect x="1.9684%" y="1093" width="0.2805%" height="15" fill="rgb(224,169,11)" fg:x="1144" fg:w="163"/><text x="2.2184%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (123 samples, 0.21%)</title><rect x="2.0372%" y="1077" width="0.2116%" height="15" fill="rgb(250,166,2)" fg:x="1184" fg:w="123"/><text x="2.2872%" y="1087.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (46 samples, 0.08%)</title><rect x="2.1697%" y="1061" width="0.0791%" height="15" fill="rgb(242,216,29)" fg:x="1261" fg:w="46"/><text x="2.4197%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (34 samples, 0.06%)</title><rect x="2.1903%" y="1045" width="0.0585%" height="15" fill="rgb(230,116,27)" fg:x="1273" fg:w="34"/><text x="2.4403%" y="1055.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::ops::arith::Add&gt;::add (87 samples, 0.15%)</title><rect x="2.2540%" y="1093" width="0.1497%" height="15" fill="rgb(228,99,48)" fg:x="1310" fg:w="87"/><text x="2.5040%" y="1103.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::ops::arith::Mul&gt;::mul (107 samples, 0.18%)</title><rect x="2.4037%" y="1093" width="0.1841%" height="15" fill="rgb(253,11,6)" fg:x="1397" fg:w="107"/><text x="2.6537%" y="1103.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (9 samples, 0.02%)</title><rect x="2.8046%" y="965" width="0.0155%" height="15" fill="rgb(247,143,39)" fg:x="1630" fg:w="9"/><text x="3.0546%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.07%)</title><rect x="2.7650%" y="997" width="0.0688%" height="15" fill="rgb(236,97,10)" fg:x="1607" fg:w="40"/><text x="3.0150%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (27 samples, 0.05%)</title><rect x="2.7874%" y="981" width="0.0465%" height="15" fill="rgb(233,208,19)" fg:x="1620" fg:w="27"/><text x="3.0374%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (8 samples, 0.01%)</title><rect x="2.8201%" y="965" width="0.0138%" height="15" fill="rgb(216,164,2)" fg:x="1639" fg:w="8"/><text x="3.0701%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (37 samples, 0.06%)</title><rect x="2.8356%" y="997" width="0.0637%" height="15" fill="rgb(220,129,5)" fg:x="1648" fg:w="37"/><text x="3.0856%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (139 samples, 0.24%)</title><rect x="2.7065%" y="1029" width="0.2392%" height="15" fill="rgb(242,17,10)" fg:x="1573" fg:w="139"/><text x="2.9565%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (127 samples, 0.22%)</title><rect x="2.7272%" y="1013" width="0.2185%" height="15" fill="rgb(242,107,0)" fg:x="1585" fg:w="127"/><text x="2.9772%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (25 samples, 0.04%)</title><rect x="2.9027%" y="997" width="0.0430%" height="15" fill="rgb(251,28,31)" fg:x="1687" fg:w="25"/><text x="3.1527%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (23 samples, 0.04%)</title><rect x="2.9061%" y="981" width="0.0396%" height="15" fill="rgb(233,223,10)" fg:x="1689" fg:w="23"/><text x="3.1561%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (22 samples, 0.04%)</title><rect x="2.9078%" y="965" width="0.0379%" height="15" fill="rgb(215,21,27)" fg:x="1690" fg:w="22"/><text x="3.1578%" y="975.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="2.9354%" y="949" width="0.0103%" height="15" fill="rgb(232,23,21)" fg:x="1706" fg:w="6"/><text x="3.1854%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (178 samples, 0.31%)</title><rect x="2.6515%" y="1061" width="0.3063%" height="15" fill="rgb(244,5,23)" fg:x="1541" fg:w="178"/><text x="2.9015%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (178 samples, 0.31%)</title><rect x="2.6515%" y="1045" width="0.3063%" height="15" fill="rgb(226,81,46)" fg:x="1541" fg:w="178"/><text x="2.9015%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (7 samples, 0.01%)</title><rect x="2.9457%" y="1029" width="0.0120%" height="15" fill="rgb(247,70,30)" fg:x="1712" fg:w="7"/><text x="3.1957%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="2.9594%" y="1061" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="1720" fg:w="6"/><text x="3.2094%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (13 samples, 0.02%)</title><rect x="2.9698%" y="1061" width="0.0224%" height="15" fill="rgb(240,187,13)" fg:x="1726" fg:w="13"/><text x="3.2198%" y="1071.50"></text></g><g><title>core::ptr::swap (7 samples, 0.01%)</title><rect x="2.9801%" y="1045" width="0.0120%" height="15" fill="rgb(223,113,26)" fg:x="1732" fg:w="7"/><text x="3.2301%" y="1055.50"></text></g><g><title>aes_grinder::matrix::Matrix::swap_columns (242 samples, 0.42%)</title><rect x="2.5930%" y="1077" width="0.4164%" height="15" fill="rgb(206,192,2)" fg:x="1507" fg:w="242"/><text x="2.8430%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (10 samples, 0.02%)</title><rect x="2.9921%" y="1061" width="0.0172%" height="15" fill="rgb(241,108,4)" fg:x="1739" fg:w="10"/><text x="3.2421%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (9 samples, 0.02%)</title><rect x="2.9939%" y="1045" width="0.0155%" height="15" fill="rgb(247,173,49)" fg:x="1740" fg:w="9"/><text x="3.2439%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (9 samples, 0.02%)</title><rect x="2.9939%" y="1029" width="0.0155%" height="15" fill="rgb(224,114,35)" fg:x="1740" fg:w="9"/><text x="3.2439%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (7 samples, 0.01%)</title><rect x="3.0093%" y="1077" width="0.0120%" height="15" fill="rgb(245,159,27)" fg:x="1749" fg:w="7"/><text x="3.2593%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="3.0093%" y="1061" width="0.0120%" height="15" fill="rgb(245,172,44)" fg:x="1749" fg:w="7"/><text x="3.2593%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (7 samples, 0.01%)</title><rect x="3.0093%" y="1045" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="1749" fg:w="7"/><text x="3.2593%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.01%)</title><rect x="3.0093%" y="1029" width="0.0120%" height="15" fill="rgb(205,117,38)" fg:x="1749" fg:w="7"/><text x="3.2593%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.01%)</title><rect x="3.0093%" y="1013" width="0.0120%" height="15" fill="rgb(237,72,25)" fg:x="1749" fg:w="7"/><text x="3.2593%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.01%)</title><rect x="3.0111%" y="997" width="0.0103%" height="15" fill="rgb(244,70,9)" fg:x="1750" fg:w="6"/><text x="3.2611%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="3.0300%" y="901" width="0.0103%" height="15" fill="rgb(217,125,39)" fg:x="1761" fg:w="6"/><text x="3.2800%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="3.0214%" y="1029" width="0.0206%" height="15" fill="rgb(235,36,10)" fg:x="1756" fg:w="12"/><text x="3.2714%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="3.0214%" y="1013" width="0.0206%" height="15" fill="rgb(251,123,47)" fg:x="1756" fg:w="12"/><text x="3.2714%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.01%)</title><rect x="3.0300%" y="997" width="0.0120%" height="15" fill="rgb(221,13,13)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="3.0300%" y="981" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.01%)</title><rect x="3.0300%" y="965" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (7 samples, 0.01%)</title><rect x="3.0300%" y="949" width="0.0120%" height="15" fill="rgb(245,182,24)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="959.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (7 samples, 0.01%)</title><rect x="3.0300%" y="933" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="943.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (7 samples, 0.01%)</title><rect x="3.0300%" y="917" width="0.0120%" height="15" fill="rgb(246,228,12)" fg:x="1761" fg:w="7"/><text x="3.2800%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (6 samples, 0.01%)</title><rect x="3.0541%" y="981" width="0.0103%" height="15" fill="rgb(213,55,15)" fg:x="1775" fg:w="6"/><text x="3.3041%" y="991.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (6 samples, 0.01%)</title><rect x="3.0541%" y="965" width="0.0103%" height="15" fill="rgb(209,9,3)" fg:x="1775" fg:w="6"/><text x="3.3041%" y="975.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.01%)</title><rect x="3.0541%" y="949" width="0.0103%" height="15" fill="rgb(230,59,30)" fg:x="1775" fg:w="6"/><text x="3.3041%" y="959.50"></text></g><g><title>aes_grinder::matrix::Matrix::sort_left (279 samples, 0.48%)</title><rect x="2.5930%" y="1093" width="0.4800%" height="15" fill="rgb(209,121,21)" fg:x="1507" fg:w="279"/><text x="2.8430%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.05%)</title><rect x="3.0214%" y="1077" width="0.0516%" height="15" fill="rgb(220,109,13)" fg:x="1756" fg:w="30"/><text x="3.2714%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30 samples, 0.05%)</title><rect x="3.0214%" y="1061" width="0.0516%" height="15" fill="rgb(232,18,1)" fg:x="1756" fg:w="30"/><text x="3.2714%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.05%)</title><rect x="3.0214%" y="1045" width="0.0516%" height="15" fill="rgb(215,41,42)" fg:x="1756" fg:w="30"/><text x="3.2714%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.03%)</title><rect x="3.0420%" y="1029" width="0.0310%" height="15" fill="rgb(224,123,36)" fg:x="1768" fg:w="18"/><text x="3.2920%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.03%)</title><rect x="3.0455%" y="1013" width="0.0275%" height="15" fill="rgb(240,125,3)" fg:x="1770" fg:w="16"/><text x="3.2955%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (16 samples, 0.03%)</title><rect x="3.0455%" y="997" width="0.0275%" height="15" fill="rgb(205,98,50)" fg:x="1770" fg:w="16"/><text x="3.2955%" y="1007.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (34 samples, 0.06%)</title><rect x="3.1023%" y="1077" width="0.0585%" height="15" fill="rgb(205,185,37)" fg:x="1803" fg:w="34"/><text x="3.3523%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (20 samples, 0.03%)</title><rect x="3.1263%" y="1061" width="0.0344%" height="15" fill="rgb(238,207,15)" fg:x="1817" fg:w="20"/><text x="3.3763%" y="1071.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (7 samples, 0.01%)</title><rect x="3.1487%" y="1045" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="1830" fg:w="7"/><text x="3.3987%" y="1055.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (24 samples, 0.04%)</title><rect x="3.1608%" y="1077" width="0.0413%" height="15" fill="rgb(235,201,11)" fg:x="1837" fg:w="24"/><text x="3.4108%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (14 samples, 0.02%)</title><rect x="3.1780%" y="1061" width="0.0241%" height="15" fill="rgb(207,46,11)" fg:x="1847" fg:w="14"/><text x="3.4280%" y="1071.50"></text></g><g><title>aes_grinder::matrix::Matrix::swap_lines (79 samples, 0.14%)</title><rect x="3.0730%" y="1093" width="0.1359%" height="15" fill="rgb(241,35,35)" fg:x="1786" fg:w="79"/><text x="3.3230%" y="1103.50"></text></g><g><title>core::cmp::PartialOrd::gt (10 samples, 0.02%)</title><rect x="3.2089%" y="1093" width="0.0172%" height="15" fill="rgb(243,32,47)" fg:x="1865" fg:w="10"/><text x="3.4589%" y="1103.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="3.2141%" y="1077" width="0.0120%" height="15" fill="rgb(247,202,23)" fg:x="1868" fg:w="7"/><text x="3.4641%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u8&gt;::partial_cmp (7 samples, 0.01%)</title><rect x="3.2141%" y="1061" width="0.0120%" height="15" fill="rgb(219,102,11)" fg:x="1868" fg:w="7"/><text x="3.4641%" y="1071.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (139 samples, 0.24%)</title><rect x="3.2261%" y="1093" width="0.2392%" height="15" fill="rgb(243,110,44)" fg:x="1875" fg:w="139"/><text x="3.4761%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (138 samples, 0.24%)</title><rect x="3.2279%" y="1077" width="0.2374%" height="15" fill="rgb(222,74,54)" fg:x="1876" fg:w="138"/><text x="3.4779%" y="1087.50"></text></g><g><title>aes_grinder::matrix::Matrix::scale_on (1,849 samples, 3.18%)</title><rect x="0.2925%" y="1109" width="3.1814%" height="15" fill="rgb(216,99,12)" fg:x="170" fg:w="1849"/><text x="0.5425%" y="1119.50">aes..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="3.4877%" y="885" width="0.0103%" height="15" fill="rgb(226,22,26)" fg:x="2027" fg:w="6"/><text x="3.7377%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="3.4877%" y="869" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="2027" fg:w="6"/><text x="3.7377%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="3.4877%" y="853" width="0.0103%" height="15" fill="rgb(213,25,53)" fg:x="2027" fg:w="6"/><text x="3.7377%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="3.4877%" y="917" width="0.0258%" height="15" fill="rgb(252,105,26)" fg:x="2027" fg:w="15"/><text x="3.7377%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.03%)</title><rect x="3.4877%" y="901" width="0.0258%" height="15" fill="rgb(220,39,43)" fg:x="2027" fg:w="15"/><text x="3.7377%" y="911.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions::_{{closure}} (29 samples, 0.05%)</title><rect x="3.4877%" y="997" width="0.0499%" height="15" fill="rgb(229,68,48)" fg:x="2027" fg:w="29"/><text x="3.7377%" y="1007.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (29 samples, 0.05%)</title><rect x="3.4877%" y="981" width="0.0499%" height="15" fill="rgb(252,8,32)" fg:x="2027" fg:w="29"/><text x="3.7377%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (29 samples, 0.05%)</title><rect x="3.4877%" y="965" width="0.0499%" height="15" fill="rgb(223,20,43)" fg:x="2027" fg:w="29"/><text x="3.7377%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.05%)</title><rect x="3.4877%" y="949" width="0.0499%" height="15" fill="rgb(229,81,49)" fg:x="2027" fg:w="29"/><text x="3.7377%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (29 samples, 0.05%)</title><rect x="3.4877%" y="933" width="0.0499%" height="15" fill="rgb(236,28,36)" fg:x="2027" fg:w="29"/><text x="3.7377%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.02%)</title><rect x="3.5135%" y="917" width="0.0241%" height="15" fill="rgb(249,185,26)" fg:x="2042" fg:w="14"/><text x="3.7635%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.02%)</title><rect x="3.5135%" y="901" width="0.0241%" height="15" fill="rgb(249,174,33)" fg:x="2042" fg:w="14"/><text x="3.7635%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (14 samples, 0.02%)</title><rect x="3.5135%" y="885" width="0.0241%" height="15" fill="rgb(233,201,37)" fg:x="2042" fg:w="14"/><text x="3.7635%" y="895.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (39 samples, 0.07%)</title><rect x="3.4739%" y="1061" width="0.0671%" height="15" fill="rgb(221,78,26)" fg:x="2019" fg:w="39"/><text x="3.7239%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (39 samples, 0.07%)</title><rect x="3.4739%" y="1045" width="0.0671%" height="15" fill="rgb(250,127,30)" fg:x="2019" fg:w="39"/><text x="3.7239%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (39 samples, 0.07%)</title><rect x="3.4739%" y="1029" width="0.0671%" height="15" fill="rgb(230,49,44)" fg:x="2019" fg:w="39"/><text x="3.7239%" y="1039.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::_{{closure}} (32 samples, 0.06%)</title><rect x="3.4860%" y="1013" width="0.0551%" height="15" fill="rgb(229,67,23)" fg:x="2026" fg:w="32"/><text x="3.7360%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (41 samples, 0.07%)</title><rect x="3.4739%" y="1109" width="0.0705%" height="15" fill="rgb(249,83,47)" fg:x="2019" fg:w="41"/><text x="3.7239%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (41 samples, 0.07%)</title><rect x="3.4739%" y="1093" width="0.0705%" height="15" fill="rgb(215,43,3)" fg:x="2019" fg:w="41"/><text x="3.7239%" y="1103.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (41 samples, 0.07%)</title><rect x="3.4739%" y="1077" width="0.0705%" height="15" fill="rgb(238,154,13)" fg:x="2019" fg:w="41"/><text x="3.7239%" y="1087.50"></text></g><g><title>aes_grinder::matrix::Matrix::number_solutions (1,916 samples, 3.30%)</title><rect x="0.2529%" y="1125" width="3.2967%" height="15" fill="rgb(219,56,2)" fg:x="147" fg:w="1916"/><text x="0.5029%" y="1135.50">aes..</text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.02%)</title><rect x="3.5496%" y="1013" width="0.0224%" height="15" fill="rgb(233,0,4)" fg:x="2063" fg:w="13"/><text x="3.7996%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (13 samples, 0.02%)</title><rect x="3.5496%" y="997" width="0.0224%" height="15" fill="rgb(235,30,7)" fg:x="2063" fg:w="13"/><text x="3.7996%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (13 samples, 0.02%)</title><rect x="3.5496%" y="981" width="0.0224%" height="15" fill="rgb(250,79,13)" fg:x="2063" fg:w="13"/><text x="3.7996%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (11 samples, 0.02%)</title><rect x="3.5531%" y="965" width="0.0189%" height="15" fill="rgb(211,146,34)" fg:x="2065" fg:w="11"/><text x="3.8031%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (10 samples, 0.02%)</title><rect x="3.5548%" y="949" width="0.0172%" height="15" fill="rgb(228,22,38)" fg:x="2066" fg:w="10"/><text x="3.8048%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (9 samples, 0.02%)</title><rect x="3.5565%" y="933" width="0.0155%" height="15" fill="rgb(235,168,5)" fg:x="2067" fg:w="9"/><text x="3.8065%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (9 samples, 0.02%)</title><rect x="3.5565%" y="917" width="0.0155%" height="15" fill="rgb(221,155,16)" fg:x="2067" fg:w="9"/><text x="3.8065%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.02%)</title><rect x="3.5565%" y="901" width="0.0155%" height="15" fill="rgb(215,215,53)" fg:x="2067" fg:w="9"/><text x="3.8065%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.01%)</title><rect x="3.5582%" y="885" width="0.0138%" height="15" fill="rgb(223,4,10)" fg:x="2068" fg:w="8"/><text x="3.8082%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.01%)</title><rect x="3.5840%" y="933" width="0.0138%" height="15" fill="rgb(234,103,6)" fg:x="2083" fg:w="8"/><text x="3.8340%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (7 samples, 0.01%)</title><rect x="3.5857%" y="917" width="0.0120%" height="15" fill="rgb(227,97,0)" fg:x="2084" fg:w="7"/><text x="3.8357%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="3.5754%" y="997" width="0.0258%" height="15" fill="rgb(234,150,53)" fg:x="2078" fg:w="15"/><text x="3.8254%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.03%)</title><rect x="3.5754%" y="981" width="0.0258%" height="15" fill="rgb(228,201,54)" fg:x="2078" fg:w="15"/><text x="3.8254%" y="991.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (15 samples, 0.03%)</title><rect x="3.5754%" y="965" width="0.0258%" height="15" fill="rgb(222,22,37)" fg:x="2078" fg:w="15"/><text x="3.8254%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="3.5754%" y="949" width="0.0258%" height="15" fill="rgb(237,53,32)" fg:x="2078" fg:w="15"/><text x="3.8254%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 0.05%)</title><rect x="3.5496%" y="1045" width="0.0533%" height="15" fill="rgb(233,25,53)" fg:x="2063" fg:w="31"/><text x="3.7996%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (31 samples, 0.05%)</title><rect x="3.5496%" y="1029" width="0.0533%" height="15" fill="rgb(210,40,34)" fg:x="2063" fg:w="31"/><text x="3.7996%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.03%)</title><rect x="3.5720%" y="1013" width="0.0310%" height="15" fill="rgb(241,220,44)" fg:x="2076" fg:w="18"/><text x="3.8220%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (37 samples, 0.06%)</title><rect x="3.5496%" y="1093" width="0.0637%" height="15" fill="rgb(235,28,35)" fg:x="2063" fg:w="37"/><text x="3.7996%" y="1103.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (37 samples, 0.06%)</title><rect x="3.5496%" y="1077" width="0.0637%" height="15" fill="rgb(210,56,17)" fg:x="2063" fg:w="37"/><text x="3.7996%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (37 samples, 0.06%)</title><rect x="3.5496%" y="1061" width="0.0637%" height="15" fill="rgb(224,130,29)" fg:x="2063" fg:w="37"/><text x="3.7996%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.01%)</title><rect x="3.6030%" y="1045" width="0.0103%" height="15" fill="rgb(235,212,8)" fg:x="2094" fg:w="6"/><text x="3.8530%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.01%)</title><rect x="3.6030%" y="1029" width="0.0103%" height="15" fill="rgb(223,33,50)" fg:x="2094" fg:w="6"/><text x="3.8530%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (38 samples, 0.07%)</title><rect x="3.5496%" y="1125" width="0.0654%" height="15" fill="rgb(219,149,13)" fg:x="2063" fg:w="38"/><text x="3.7996%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (38 samples, 0.07%)</title><rect x="3.5496%" y="1109" width="0.0654%" height="15" fill="rgb(250,156,29)" fg:x="2063" fg:w="38"/><text x="3.7996%" y="1119.50"></text></g><g><title>aes_grinder::algo::Algo::fusion_two_algo (1,981 samples, 3.41%)</title><rect x="0.2168%" y="1141" width="3.4085%" height="15" fill="rgb(216,193,19)" fg:x="126" fg:w="1981"/><text x="0.4668%" y="1151.50">aes..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.01%)</title><rect x="3.6288%" y="1109" width="0.0103%" height="15" fill="rgb(216,135,14)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1119.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="1093" width="0.0103%" height="15" fill="rgb(241,47,5)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="1077" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="1061" width="0.0103%" height="15" fill="rgb(231,13,6)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1071.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.01%)</title><rect x="3.6288%" y="1045" width="0.0103%" height="15" fill="rgb(207,181,40)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1055.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="1029" width="0.0103%" height="15" fill="rgb(254,173,49)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="1013" width="0.0103%" height="15" fill="rgb(221,1,38)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="997" width="0.0103%" height="15" fill="rgb(206,124,46)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="1007.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.01%)</title><rect x="3.6288%" y="981" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="991.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="965" width="0.0103%" height="15" fill="rgb(222,201,40)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="949" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="3.6288%" y="933" width="0.0103%" height="15" fill="rgb(219,207,3)" fg:x="2109" fg:w="6"/><text x="3.8788%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="3.6288%" y="1125" width="0.0120%" height="15" fill="rgb(222,56,46)" fg:x="2109" fg:w="7"/><text x="3.8788%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="3.6597%" y="885" width="0.0206%" height="15" fill="rgb(239,76,54)" fg:x="2127" fg:w="12"/><text x="3.9097%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (11 samples, 0.02%)</title><rect x="3.6615%" y="869" width="0.0189%" height="15" fill="rgb(231,124,27)" fg:x="2128" fg:w="11"/><text x="3.9115%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="3.6563%" y="949" width="0.0275%" height="15" fill="rgb(249,195,6)" fg:x="2125" fg:w="16"/><text x="3.9063%" y="959.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="3.6580%" y="933" width="0.0258%" height="15" fill="rgb(237,174,47)" fg:x="2126" fg:w="15"/><text x="3.9080%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="3.6580%" y="917" width="0.0258%" height="15" fill="rgb(206,201,31)" fg:x="2126" fg:w="15"/><text x="3.9080%" y="927.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="3.6580%" y="901" width="0.0258%" height="15" fill="rgb(231,57,52)" fg:x="2126" fg:w="15"/><text x="3.9080%" y="911.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="3.9230%" y="453" width="0.0155%" height="15" fill="rgb(248,177,22)" fg:x="2280" fg:w="9"/><text x="4.1730%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="3.9230%" y="437" width="0.0155%" height="15" fill="rgb(215,211,37)" fg:x="2280" fg:w="9"/><text x="4.1730%" y="447.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (13 samples, 0.02%)</title><rect x="3.9178%" y="517" width="0.0224%" height="15" fill="rgb(241,128,51)" fg:x="2277" fg:w="13"/><text x="4.1678%" y="527.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (13 samples, 0.02%)</title><rect x="3.9178%" y="501" width="0.0224%" height="15" fill="rgb(227,165,31)" fg:x="2277" fg:w="13"/><text x="4.1678%" y="511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="3.9230%" y="485" width="0.0172%" height="15" fill="rgb(228,167,24)" fg:x="2280" fg:w="10"/><text x="4.1730%" y="495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.02%)</title><rect x="3.9230%" y="469" width="0.0172%" height="15" fill="rgb(228,143,12)" fg:x="2280" fg:w="10"/><text x="4.1730%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="3.9127%" y="549" width="0.0293%" height="15" fill="rgb(249,149,8)" fg:x="2274" fg:w="17"/><text x="4.1627%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.02%)</title><rect x="3.9178%" y="533" width="0.0241%" height="15" fill="rgb(243,35,44)" fg:x="2277" fg:w="14"/><text x="4.1678%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="3.9608%" y="421" width="0.0120%" height="15" fill="rgb(246,89,9)" fg:x="2302" fg:w="7"/><text x="4.2108%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="3.9557%" y="453" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="2299" fg:w="14"/><text x="4.2057%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (11 samples, 0.02%)</title><rect x="3.9608%" y="437" width="0.0189%" height="15" fill="rgb(233,141,41)" fg:x="2302" fg:w="11"/><text x="4.2108%" y="447.50"></text></g><g><title>core::clone::Clone::clone (13 samples, 0.02%)</title><rect x="3.9849%" y="453" width="0.0224%" height="15" fill="rgb(239,167,4)" fg:x="2316" fg:w="13"/><text x="4.2349%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="3.9866%" y="437" width="0.0206%" height="15" fill="rgb(209,217,16)" fg:x="2317" fg:w="12"/><text x="4.2366%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.02%)</title><rect x="3.9884%" y="421" width="0.0189%" height="15" fill="rgb(219,88,35)" fg:x="2318" fg:w="11"/><text x="4.2384%" y="431.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.02%)</title><rect x="3.9884%" y="405" width="0.0189%" height="15" fill="rgb(220,193,23)" fg:x="2318" fg:w="11"/><text x="4.2384%" y="415.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.02%)</title><rect x="3.9884%" y="389" width="0.0189%" height="15" fill="rgb(230,90,52)" fg:x="2318" fg:w="11"/><text x="4.2384%" y="399.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.02%)</title><rect x="3.9884%" y="373" width="0.0189%" height="15" fill="rgb(252,106,19)" fg:x="2318" fg:w="11"/><text x="4.2384%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.01%)</title><rect x="3.9935%" y="357" width="0.0138%" height="15" fill="rgb(206,74,20)" fg:x="2321" fg:w="8"/><text x="4.2435%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="3.9935%" y="341" width="0.0138%" height="15" fill="rgb(230,138,44)" fg:x="2321" fg:w="8"/><text x="4.2435%" y="351.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="3.9935%" y="325" width="0.0138%" height="15" fill="rgb(235,182,43)" fg:x="2321" fg:w="8"/><text x="4.2435%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (7 samples, 0.01%)</title><rect x="4.0073%" y="453" width="0.0120%" height="15" fill="rgb(242,16,51)" fg:x="2329" fg:w="7"/><text x="4.2573%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="4.0073%" y="437" width="0.0120%" height="15" fill="rgb(248,9,4)" fg:x="2329" fg:w="7"/><text x="4.2573%" y="447.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="4.0073%" y="421" width="0.0120%" height="15" fill="rgb(210,31,22)" fg:x="2329" fg:w="7"/><text x="4.2573%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (18 samples, 0.03%)</title><rect x="4.0365%" y="453" width="0.0310%" height="15" fill="rgb(239,54,39)" fg:x="2346" fg:w="18"/><text x="4.2865%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (13 samples, 0.02%)</title><rect x="4.0451%" y="437" width="0.0224%" height="15" fill="rgb(230,99,41)" fg:x="2351" fg:w="13"/><text x="4.2951%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (9 samples, 0.02%)</title><rect x="4.0520%" y="421" width="0.0155%" height="15" fill="rgb(253,106,12)" fg:x="2355" fg:w="9"/><text x="4.3020%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (9 samples, 0.02%)</title><rect x="4.0520%" y="405" width="0.0155%" height="15" fill="rgb(213,46,41)" fg:x="2355" fg:w="9"/><text x="4.3020%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.02%)</title><rect x="4.0520%" y="389" width="0.0155%" height="15" fill="rgb(215,133,35)" fg:x="2355" fg:w="9"/><text x="4.3020%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (71 samples, 0.12%)</title><rect x="3.9505%" y="485" width="0.1222%" height="15" fill="rgb(213,28,5)" fg:x="2296" fg:w="71"/><text x="4.2005%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (71 samples, 0.12%)</title><rect x="3.9505%" y="469" width="0.1222%" height="15" fill="rgb(215,77,49)" fg:x="2296" fg:w="71"/><text x="4.2005%" y="479.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (14 samples, 0.02%)</title><rect x="4.0916%" y="453" width="0.0241%" height="15" fill="rgb(248,100,22)" fg:x="2378" fg:w="14"/><text x="4.3416%" y="463.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.01%)</title><rect x="4.1174%" y="405" width="0.0120%" height="15" fill="rgb(208,67,9)" fg:x="2393" fg:w="7"/><text x="4.3674%" y="415.50"></text></g><g><title>malloc (7 samples, 0.01%)</title><rect x="4.1174%" y="389" width="0.0120%" height="15" fill="rgb(219,133,21)" fg:x="2393" fg:w="7"/><text x="4.3674%" y="399.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="4.1174%" y="373" width="0.0120%" height="15" fill="rgb(246,46,29)" fg:x="2393" fg:w="7"/><text x="4.3674%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (35 samples, 0.06%)</title><rect x="4.0761%" y="485" width="0.0602%" height="15" fill="rgb(246,185,52)" fg:x="2369" fg:w="35"/><text x="4.3261%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (32 samples, 0.06%)</title><rect x="4.0813%" y="469" width="0.0551%" height="15" fill="rgb(252,136,11)" fg:x="2372" fg:w="32"/><text x="4.3313%" y="479.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (12 samples, 0.02%)</title><rect x="4.1157%" y="453" width="0.0206%" height="15" fill="rgb(219,138,53)" fg:x="2392" fg:w="12"/><text x="4.3657%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.02%)</title><rect x="4.1157%" y="437" width="0.0206%" height="15" fill="rgb(211,51,23)" fg:x="2392" fg:w="12"/><text x="4.3657%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.02%)</title><rect x="4.1157%" y="421" width="0.0206%" height="15" fill="rgb(247,221,28)" fg:x="2392" fg:w="12"/><text x="4.3657%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (114 samples, 0.20%)</title><rect x="3.9419%" y="501" width="0.1961%" height="15" fill="rgb(251,222,45)" fg:x="2291" fg:w="114"/><text x="4.1919%" y="511.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (118 samples, 0.20%)</title><rect x="3.9419%" y="517" width="0.2030%" height="15" fill="rgb(217,162,53)" fg:x="2291" fg:w="118"/><text x="4.1919%" y="527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (123 samples, 0.21%)</title><rect x="3.9419%" y="549" width="0.2116%" height="15" fill="rgb(229,93,14)" fg:x="2291" fg:w="123"/><text x="4.1919%" y="559.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (123 samples, 0.21%)</title><rect x="3.9419%" y="533" width="0.2116%" height="15" fill="rgb(209,67,49)" fg:x="2291" fg:w="123"/><text x="4.1919%" y="543.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (143 samples, 0.25%)</title><rect x="3.9092%" y="565" width="0.2460%" height="15" fill="rgb(213,87,29)" fg:x="2272" fg:w="143"/><text x="4.1592%" y="575.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (147 samples, 0.25%)</title><rect x="3.9092%" y="581" width="0.2529%" height="15" fill="rgb(205,151,52)" fg:x="2272" fg:w="147"/><text x="4.1592%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="4.1673%" y="549" width="0.0172%" height="15" fill="rgb(253,215,39)" fg:x="2422" fg:w="10"/><text x="4.4173%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="4.1673%" y="533" width="0.0172%" height="15" fill="rgb(221,220,41)" fg:x="2422" fg:w="10"/><text x="4.4173%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (15 samples, 0.03%)</title><rect x="4.1622%" y="581" width="0.0258%" height="15" fill="rgb(218,133,21)" fg:x="2419" fg:w="15"/><text x="4.4122%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (13 samples, 0.02%)</title><rect x="4.1656%" y="565" width="0.0224%" height="15" fill="rgb(221,193,43)" fg:x="2421" fg:w="13"/><text x="4.4156%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (168 samples, 0.29%)</title><rect x="3.9023%" y="613" width="0.2891%" height="15" fill="rgb(240,128,52)" fg:x="2268" fg:w="168"/><text x="4.1523%" y="623.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (165 samples, 0.28%)</title><rect x="3.9075%" y="597" width="0.2839%" height="15" fill="rgb(253,114,12)" fg:x="2271" fg:w="165"/><text x="4.1575%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="4.2482%" y="485" width="0.0241%" height="15" fill="rgb(215,223,47)" fg:x="2469" fg:w="14"/><text x="4.4982%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="4.2602%" y="469" width="0.0120%" height="15" fill="rgb(248,225,23)" fg:x="2476" fg:w="7"/><text x="4.5102%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.06%)</title><rect x="4.2361%" y="517" width="0.0568%" height="15" fill="rgb(250,108,0)" fg:x="2462" fg:w="33"/><text x="4.4861%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (27 samples, 0.05%)</title><rect x="4.2465%" y="501" width="0.0465%" height="15" fill="rgb(228,208,7)" fg:x="2468" fg:w="27"/><text x="4.4965%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (12 samples, 0.02%)</title><rect x="4.2723%" y="485" width="0.0206%" height="15" fill="rgb(244,45,10)" fg:x="2483" fg:w="12"/><text x="4.5223%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="4.3101%" y="421" width="0.0155%" height="15" fill="rgb(207,125,25)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.02%)</title><rect x="4.3101%" y="405" width="0.0155%" height="15" fill="rgb(210,195,18)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.02%)</title><rect x="4.3101%" y="389" width="0.0155%" height="15" fill="rgb(249,80,12)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="4.3101%" y="373" width="0.0155%" height="15" fill="rgb(221,65,9)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="4.3101%" y="357" width="0.0155%" height="15" fill="rgb(235,49,36)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="367.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="4.3101%" y="341" width="0.0155%" height="15" fill="rgb(225,32,20)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="351.50"></text></g><g><title>malloc (9 samples, 0.02%)</title><rect x="4.3101%" y="325" width="0.0155%" height="15" fill="rgb(215,141,46)" fg:x="2505" fg:w="9"/><text x="4.5601%" y="335.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="4.3153%" y="309" width="0.0103%" height="15" fill="rgb(250,160,47)" fg:x="2508" fg:w="6"/><text x="4.5653%" y="319.50"></text></g><g><title>core::clone::Clone::clone (46 samples, 0.08%)</title><rect x="4.3015%" y="517" width="0.0791%" height="15" fill="rgb(216,222,40)" fg:x="2500" fg:w="46"/><text x="4.5515%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (46 samples, 0.08%)</title><rect x="4.3015%" y="501" width="0.0791%" height="15" fill="rgb(234,217,39)" fg:x="2500" fg:w="46"/><text x="4.5515%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.07%)</title><rect x="4.3101%" y="485" width="0.0705%" height="15" fill="rgb(207,178,40)" fg:x="2505" fg:w="41"/><text x="4.5601%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.07%)</title><rect x="4.3101%" y="469" width="0.0705%" height="15" fill="rgb(221,136,13)" fg:x="2505" fg:w="41"/><text x="4.5601%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.07%)</title><rect x="4.3101%" y="453" width="0.0705%" height="15" fill="rgb(249,199,10)" fg:x="2505" fg:w="41"/><text x="4.5601%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.07%)</title><rect x="4.3101%" y="437" width="0.0705%" height="15" fill="rgb(249,222,13)" fg:x="2505" fg:w="41"/><text x="4.5601%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (32 samples, 0.06%)</title><rect x="4.3256%" y="421" width="0.0551%" height="15" fill="rgb(244,185,38)" fg:x="2514" fg:w="32"/><text x="4.5756%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.06%)</title><rect x="4.3256%" y="405" width="0.0551%" height="15" fill="rgb(236,202,9)" fg:x="2514" fg:w="32"/><text x="4.5756%" y="415.50"></text></g><g><title>[libc.so.6] (32 samples, 0.06%)</title><rect x="4.3256%" y="389" width="0.0551%" height="15" fill="rgb(250,229,37)" fg:x="2514" fg:w="32"/><text x="4.5756%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (28 samples, 0.05%)</title><rect x="4.3807%" y="517" width="0.0482%" height="15" fill="rgb(206,174,23)" fg:x="2546" fg:w="28"/><text x="4.6307%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.05%)</title><rect x="4.3807%" y="501" width="0.0482%" height="15" fill="rgb(211,33,43)" fg:x="2546" fg:w="28"/><text x="4.6307%" y="511.50"></text></g><g><title>[libc.so.6] (27 samples, 0.05%)</title><rect x="4.3824%" y="485" width="0.0465%" height="15" fill="rgb(245,58,50)" fg:x="2547" fg:w="27"/><text x="4.6324%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (16 samples, 0.03%)</title><rect x="4.4340%" y="517" width="0.0275%" height="15" fill="rgb(244,68,36)" fg:x="2577" fg:w="16"/><text x="4.6840%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (14 samples, 0.02%)</title><rect x="4.4374%" y="501" width="0.0241%" height="15" fill="rgb(232,229,15)" fg:x="2579" fg:w="14"/><text x="4.6874%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (7 samples, 0.01%)</title><rect x="4.4633%" y="501" width="0.0120%" height="15" fill="rgb(254,30,23)" fg:x="2594" fg:w="7"/><text x="4.7133%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (9 samples, 0.02%)</title><rect x="4.4615%" y="517" width="0.0155%" height="15" fill="rgb(235,160,14)" fg:x="2593" fg:w="9"/><text x="4.7115%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.02%)</title><rect x="4.4891%" y="501" width="0.0206%" height="15" fill="rgb(212,155,44)" fg:x="2609" fg:w="12"/><text x="4.7391%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (45 samples, 0.08%)</title><rect x="4.4770%" y="517" width="0.0774%" height="15" fill="rgb(226,2,50)" fg:x="2602" fg:w="45"/><text x="4.7270%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (26 samples, 0.04%)</title><rect x="4.5097%" y="501" width="0.0447%" height="15" fill="rgb(234,177,6)" fg:x="2621" fg:w="26"/><text x="4.7597%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (19 samples, 0.03%)</title><rect x="4.5218%" y="485" width="0.0327%" height="15" fill="rgb(217,24,9)" fg:x="2628" fg:w="19"/><text x="4.7718%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.03%)</title><rect x="4.5269%" y="469" width="0.0275%" height="15" fill="rgb(220,13,46)" fg:x="2631" fg:w="16"/><text x="4.7769%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.03%)</title><rect x="4.5269%" y="453" width="0.0275%" height="15" fill="rgb(239,221,27)" fg:x="2631" fg:w="16"/><text x="4.7769%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (198 samples, 0.34%)</title><rect x="4.2189%" y="549" width="0.3407%" height="15" fill="rgb(222,198,25)" fg:x="2452" fg:w="198"/><text x="4.4689%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (198 samples, 0.34%)</title><rect x="4.2189%" y="533" width="0.3407%" height="15" fill="rgb(211,99,13)" fg:x="2452" fg:w="198"/><text x="4.4689%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="4.6336%" y="501" width="0.0120%" height="15" fill="rgb(232,111,31)" fg:x="2693" fg:w="7"/><text x="4.8836%" y="511.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (26 samples, 0.04%)</title><rect x="4.6164%" y="517" width="0.0447%" height="15" fill="rgb(245,82,37)" fg:x="2683" fg:w="26"/><text x="4.8664%" y="527.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.03%)</title><rect x="4.6904%" y="469" width="0.0258%" height="15" fill="rgb(227,149,46)" fg:x="2726" fg:w="15"/><text x="4.9404%" y="479.50"></text></g><g><title>malloc (14 samples, 0.02%)</title><rect x="4.6921%" y="453" width="0.0241%" height="15" fill="rgb(218,36,50)" fg:x="2727" fg:w="14"/><text x="4.9421%" y="463.50"></text></g><g><title>[libc.so.6] (11 samples, 0.02%)</title><rect x="4.6973%" y="437" width="0.0189%" height="15" fill="rgb(226,80,48)" fg:x="2730" fg:w="11"/><text x="4.9473%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (93 samples, 0.16%)</title><rect x="4.5665%" y="549" width="0.1600%" height="15" fill="rgb(238,224,15)" fg:x="2654" fg:w="93"/><text x="4.8165%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (81 samples, 0.14%)</title><rect x="4.5871%" y="533" width="0.1394%" height="15" fill="rgb(241,136,10)" fg:x="2666" fg:w="81"/><text x="4.8371%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (38 samples, 0.07%)</title><rect x="4.6611%" y="517" width="0.0654%" height="15" fill="rgb(208,32,45)" fg:x="2709" fg:w="38"/><text x="4.9111%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.05%)</title><rect x="4.6732%" y="501" width="0.0533%" height="15" fill="rgb(207,135,9)" fg:x="2716" fg:w="31"/><text x="4.9232%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.05%)</title><rect x="4.6732%" y="485" width="0.0533%" height="15" fill="rgb(206,86,44)" fg:x="2716" fg:w="31"/><text x="4.9232%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (317 samples, 0.55%)</title><rect x="4.1948%" y="565" width="0.5454%" height="15" fill="rgb(245,177,15)" fg:x="2438" fg:w="317"/><text x="4.4448%" y="575.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (341 samples, 0.59%)</title><rect x="4.1931%" y="581" width="0.5867%" height="15" fill="rgb(206,64,50)" fg:x="2437" fg:w="341"/><text x="4.4431%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (23 samples, 0.04%)</title><rect x="4.7403%" y="565" width="0.0396%" height="15" fill="rgb(234,36,40)" fg:x="2755" fg:w="23"/><text x="4.9903%" y="575.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (23 samples, 0.04%)</title><rect x="4.7403%" y="549" width="0.0396%" height="15" fill="rgb(213,64,8)" fg:x="2755" fg:w="23"/><text x="4.9903%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (350 samples, 0.60%)</title><rect x="4.1914%" y="613" width="0.6022%" height="15" fill="rgb(210,75,36)" fg:x="2436" fg:w="350"/><text x="4.4414%" y="623.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (350 samples, 0.60%)</title><rect x="4.1914%" y="597" width="0.6022%" height="15" fill="rgb(229,88,21)" fg:x="2436" fg:w="350"/><text x="4.4414%" y="607.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="4.7798%" y="581" width="0.0138%" height="15" fill="rgb(252,204,47)" fg:x="2778" fg:w="8"/><text x="5.0298%" y="591.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (528 samples, 0.91%)</title><rect x="3.8903%" y="629" width="0.9085%" height="15" fill="rgb(208,77,27)" fg:x="2261" fg:w="528"/><text x="4.1403%" y="639.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (536 samples, 0.92%)</title><rect x="3.8886%" y="645" width="0.9222%" height="15" fill="rgb(221,76,26)" fg:x="2260" fg:w="536"/><text x="4.1386%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.01%)</title><rect x="4.7988%" y="629" width="0.0120%" height="15" fill="rgb(225,139,18)" fg:x="2789" fg:w="7"/><text x="5.0488%" y="639.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="4.7988%" y="613" width="0.0120%" height="15" fill="rgb(230,137,11)" fg:x="2789" fg:w="7"/><text x="5.0488%" y="623.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="4.7988%" y="597" width="0.0120%" height="15" fill="rgb(212,28,1)" fg:x="2789" fg:w="7"/><text x="5.0488%" y="607.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.04%)</title><rect x="4.8401%" y="581" width="0.0413%" height="15" fill="rgb(248,164,17)" fg:x="2813" fg:w="24"/><text x="5.0901%" y="591.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="4.8470%" y="565" width="0.0344%" height="15" fill="rgb(222,171,42)" fg:x="2817" fg:w="20"/><text x="5.0970%" y="575.50"></text></g><g><title>[libc.so.6] (16 samples, 0.03%)</title><rect x="4.8538%" y="549" width="0.0275%" height="15" fill="rgb(243,84,45)" fg:x="2821" fg:w="16"/><text x="5.1038%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.07%)</title><rect x="4.8315%" y="613" width="0.0705%" height="15" fill="rgb(252,49,23)" fg:x="2808" fg:w="41"/><text x="5.0815%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41 samples, 0.07%)</title><rect x="4.8315%" y="597" width="0.0705%" height="15" fill="rgb(215,19,7)" fg:x="2808" fg:w="41"/><text x="5.0815%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (8 samples, 0.01%)</title><rect x="4.8882%" y="581" width="0.0138%" height="15" fill="rgb(238,81,41)" fg:x="2841" fg:w="8"/><text x="5.1382%" y="591.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (7 samples, 0.01%)</title><rect x="4.8900%" y="565" width="0.0120%" height="15" fill="rgb(210,199,37)" fg:x="2842" fg:w="7"/><text x="5.1400%" y="575.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (7 samples, 0.01%)</title><rect x="4.8900%" y="549" width="0.0120%" height="15" fill="rgb(244,192,49)" fg:x="2842" fg:w="7"/><text x="5.1400%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (54 samples, 0.09%)</title><rect x="4.8108%" y="645" width="0.0929%" height="15" fill="rgb(226,211,11)" fg:x="2796" fg:w="54"/><text x="5.0608%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (52 samples, 0.09%)</title><rect x="4.8143%" y="629" width="0.0895%" height="15" fill="rgb(236,162,54)" fg:x="2798" fg:w="52"/><text x="5.0643%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (607 samples, 1.04%)</title><rect x="3.8696%" y="677" width="1.0444%" height="15" fill="rgb(220,229,9)" fg:x="2249" fg:w="607"/><text x="4.1196%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (597 samples, 1.03%)</title><rect x="3.8869%" y="661" width="1.0272%" height="15" fill="rgb(250,87,22)" fg:x="2259" fg:w="597"/><text x="4.1369%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (6 samples, 0.01%)</title><rect x="4.9037%" y="645" width="0.0103%" height="15" fill="rgb(239,43,17)" fg:x="2850" fg:w="6"/><text x="5.1537%" y="655.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.02%)</title><rect x="4.9760%" y="581" width="0.0155%" height="15" fill="rgb(231,177,25)" fg:x="2892" fg:w="9"/><text x="5.2260%" y="591.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="4.9760%" y="565" width="0.0155%" height="15" fill="rgb(219,179,1)" fg:x="2892" fg:w="9"/><text x="5.2260%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="5.0276%" y="549" width="0.0413%" height="15" fill="rgb(238,219,53)" fg:x="2922" fg:w="24"/><text x="5.2776%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (11 samples, 0.02%)</title><rect x="5.0500%" y="533" width="0.0189%" height="15" fill="rgb(232,167,36)" fg:x="2935" fg:w="11"/><text x="5.3000%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.10%)</title><rect x="4.9915%" y="581" width="0.0998%" height="15" fill="rgb(244,19,51)" fg:x="2901" fg:w="58"/><text x="5.2415%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (47 samples, 0.08%)</title><rect x="5.0104%" y="565" width="0.0809%" height="15" fill="rgb(224,6,22)" fg:x="2912" fg:w="47"/><text x="5.2604%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (13 samples, 0.02%)</title><rect x="5.0689%" y="549" width="0.0224%" height="15" fill="rgb(224,145,5)" fg:x="2946" fg:w="13"/><text x="5.3189%" y="559.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="5.0913%" y="581" width="0.0138%" height="15" fill="rgb(234,130,49)" fg:x="2959" fg:w="8"/><text x="5.3413%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.03%)</title><rect x="5.1446%" y="485" width="0.0293%" height="15" fill="rgb(254,6,2)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.03%)</title><rect x="5.1446%" y="469" width="0.0293%" height="15" fill="rgb(208,96,46)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.03%)</title><rect x="5.1446%" y="453" width="0.0293%" height="15" fill="rgb(239,3,39)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.03%)</title><rect x="5.1446%" y="437" width="0.0293%" height="15" fill="rgb(233,210,1)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.03%)</title><rect x="5.1446%" y="421" width="0.0293%" height="15" fill="rgb(244,137,37)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="431.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.03%)</title><rect x="5.1446%" y="405" width="0.0293%" height="15" fill="rgb(240,136,2)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="415.50"></text></g><g><title>malloc (17 samples, 0.03%)</title><rect x="5.1446%" y="389" width="0.0293%" height="15" fill="rgb(239,18,37)" fg:x="2990" fg:w="17"/><text x="5.3946%" y="399.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="5.1532%" y="373" width="0.0206%" height="15" fill="rgb(218,185,22)" fg:x="2995" fg:w="12"/><text x="5.4032%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (83 samples, 0.14%)</title><rect x="5.1154%" y="565" width="0.1428%" height="15" fill="rgb(225,218,4)" fg:x="2973" fg:w="83"/><text x="5.3654%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.11%)</title><rect x="5.1446%" y="549" width="0.1136%" height="15" fill="rgb(230,182,32)" fg:x="2990" fg:w="66"/><text x="5.3946%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.11%)</title><rect x="5.1446%" y="533" width="0.1136%" height="15" fill="rgb(242,56,43)" fg:x="2990" fg:w="66"/><text x="5.3946%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.11%)</title><rect x="5.1446%" y="517" width="0.1136%" height="15" fill="rgb(233,99,24)" fg:x="2990" fg:w="66"/><text x="5.3946%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.11%)</title><rect x="5.1446%" y="501" width="0.1136%" height="15" fill="rgb(234,209,42)" fg:x="2990" fg:w="66"/><text x="5.3946%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (49 samples, 0.08%)</title><rect x="5.1739%" y="485" width="0.0843%" height="15" fill="rgb(227,7,12)" fg:x="3007" fg:w="49"/><text x="5.4239%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.08%)</title><rect x="5.1739%" y="469" width="0.0843%" height="15" fill="rgb(245,203,43)" fg:x="3007" fg:w="49"/><text x="5.4239%" y="479.50"></text></g><g><title>[libc.so.6] (49 samples, 0.08%)</title><rect x="5.1739%" y="453" width="0.0843%" height="15" fill="rgb(238,205,33)" fg:x="3007" fg:w="49"/><text x="5.4239%" y="463.50"></text></g><g><title>core::clone::Clone::clone (90 samples, 0.15%)</title><rect x="5.1050%" y="581" width="0.1549%" height="15" fill="rgb(231,56,7)" fg:x="2967" fg:w="90"/><text x="5.3550%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (49 samples, 0.08%)</title><rect x="5.2599%" y="581" width="0.0843%" height="15" fill="rgb(244,186,29)" fg:x="3057" fg:w="49"/><text x="5.5099%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.08%)</title><rect x="5.2599%" y="565" width="0.0843%" height="15" fill="rgb(234,111,31)" fg:x="3057" fg:w="49"/><text x="5.5099%" y="575.50"></text></g><g><title>[libc.so.6] (48 samples, 0.08%)</title><rect x="5.2616%" y="549" width="0.0826%" height="15" fill="rgb(241,149,10)" fg:x="3058" fg:w="48"/><text x="5.5116%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (15 samples, 0.03%)</title><rect x="5.3528%" y="581" width="0.0258%" height="15" fill="rgb(249,206,44)" fg:x="3111" fg:w="15"/><text x="5.6028%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.02%)</title><rect x="5.3580%" y="565" width="0.0206%" height="15" fill="rgb(251,153,30)" fg:x="3114" fg:w="12"/><text x="5.6080%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (25 samples, 0.04%)</title><rect x="5.3872%" y="565" width="0.0430%" height="15" fill="rgb(239,152,38)" fg:x="3131" fg:w="25"/><text x="5.6372%" y="575.50"></text></g><g><title>hashbrown::raw::offset_from (15 samples, 0.03%)</title><rect x="5.4044%" y="549" width="0.0258%" height="15" fill="rgb(249,139,47)" fg:x="3141" fg:w="15"/><text x="5.6544%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.02%)</title><rect x="5.4113%" y="533" width="0.0189%" height="15" fill="rgb(244,64,35)" fg:x="3145" fg:w="11"/><text x="5.6613%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (31 samples, 0.05%)</title><rect x="5.3786%" y="581" width="0.0533%" height="15" fill="rgb(216,46,15)" fg:x="3126" fg:w="31"/><text x="5.6286%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (12 samples, 0.02%)</title><rect x="5.4423%" y="565" width="0.0206%" height="15" fill="rgb(250,74,19)" fg:x="3163" fg:w="12"/><text x="5.6923%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (48 samples, 0.08%)</title><rect x="5.4320%" y="581" width="0.0826%" height="15" fill="rgb(249,42,33)" fg:x="3157" fg:w="48"/><text x="5.6820%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (30 samples, 0.05%)</title><rect x="5.4629%" y="565" width="0.0516%" height="15" fill="rgb(242,149,17)" fg:x="3175" fg:w="30"/><text x="5.7129%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (23 samples, 0.04%)</title><rect x="5.4750%" y="549" width="0.0396%" height="15" fill="rgb(244,29,21)" fg:x="3182" fg:w="23"/><text x="5.7250%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.04%)</title><rect x="5.4784%" y="533" width="0.0361%" height="15" fill="rgb(220,130,37)" fg:x="3184" fg:w="21"/><text x="5.7284%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (21 samples, 0.04%)</title><rect x="5.4784%" y="517" width="0.0361%" height="15" fill="rgb(211,67,2)" fg:x="3184" fg:w="21"/><text x="5.7284%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (331 samples, 0.57%)</title><rect x="4.9571%" y="613" width="0.5695%" height="15" fill="rgb(235,68,52)" fg:x="2881" fg:w="331"/><text x="5.2071%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (331 samples, 0.57%)</title><rect x="4.9571%" y="597" width="0.5695%" height="15" fill="rgb(246,142,3)" fg:x="2881" fg:w="331"/><text x="5.2071%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.02%)</title><rect x="5.5662%" y="597" width="0.0155%" height="15" fill="rgb(241,25,7)" fg:x="3235" fg:w="9"/><text x="5.8162%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (13 samples, 0.02%)</title><rect x="5.6780%" y="565" width="0.0224%" height="15" fill="rgb(242,119,39)" fg:x="3300" fg:w="13"/><text x="5.9280%" y="575.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (52 samples, 0.09%)</title><rect x="5.6264%" y="581" width="0.0895%" height="15" fill="rgb(241,98,45)" fg:x="3270" fg:w="52"/><text x="5.8764%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (9 samples, 0.02%)</title><rect x="5.7004%" y="565" width="0.0155%" height="15" fill="rgb(254,28,30)" fg:x="3313" fg:w="9"/><text x="5.9504%" y="575.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.06%)</title><rect x="5.7554%" y="533" width="0.0551%" height="15" fill="rgb(241,142,54)" fg:x="3345" fg:w="32"/><text x="6.0054%" y="543.50"></text></g><g><title>malloc (31 samples, 0.05%)</title><rect x="5.7572%" y="517" width="0.0533%" height="15" fill="rgb(222,85,15)" fg:x="3346" fg:w="31"/><text x="6.0072%" y="527.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="5.7761%" y="501" width="0.0344%" height="15" fill="rgb(210,85,47)" fg:x="3357" fg:w="20"/><text x="6.0261%" y="511.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="5.8191%" y="533" width="0.0155%" height="15" fill="rgb(224,206,25)" fg:x="3382" fg:w="9"/><text x="6.0691%" y="543.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (72 samples, 0.12%)</title><rect x="5.7159%" y="581" width="0.1239%" height="15" fill="rgb(243,201,19)" fg:x="3322" fg:w="72"/><text x="5.9659%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (64 samples, 0.11%)</title><rect x="5.7296%" y="565" width="0.1101%" height="15" fill="rgb(236,59,4)" fg:x="3330" fg:w="64"/><text x="5.9796%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (64 samples, 0.11%)</title><rect x="5.7296%" y="549" width="0.1101%" height="15" fill="rgb(254,179,45)" fg:x="3330" fg:w="64"/><text x="5.9796%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (178 samples, 0.31%)</title><rect x="5.5352%" y="613" width="0.3063%" height="15" fill="rgb(226,14,10)" fg:x="3217" fg:w="178"/><text x="5.7852%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (151 samples, 0.26%)</title><rect x="5.5817%" y="597" width="0.2598%" height="15" fill="rgb(244,27,41)" fg:x="3244" fg:w="151"/><text x="5.8317%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (537 samples, 0.92%)</title><rect x="4.9227%" y="629" width="0.9240%" height="15" fill="rgb(235,35,32)" fg:x="2861" fg:w="537"/><text x="5.1727%" y="639.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (585 samples, 1.01%)</title><rect x="4.9175%" y="645" width="1.0066%" height="15" fill="rgb(218,68,31)" fg:x="2858" fg:w="585"/><text x="5.1675%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (45 samples, 0.08%)</title><rect x="5.8466%" y="629" width="0.0774%" height="15" fill="rgb(207,120,37)" fg:x="3398" fg:w="45"/><text x="6.0966%" y="639.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (43 samples, 0.07%)</title><rect x="5.8501%" y="613" width="0.0740%" height="15" fill="rgb(227,98,0)" fg:x="3400" fg:w="43"/><text x="6.1001%" y="623.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="5.9241%" y="645" width="0.0241%" height="15" fill="rgb(207,7,3)" fg:x="3443" fg:w="14"/><text x="6.1741%" y="655.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (601 samples, 1.03%)</title><rect x="4.9158%" y="661" width="1.0341%" height="15" fill="rgb(206,98,19)" fg:x="2857" fg:w="601"/><text x="5.1658%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (609 samples, 1.05%)</title><rect x="4.9141%" y="677" width="1.0479%" height="15" fill="rgb(217,5,26)" fg:x="2856" fg:w="609"/><text x="5.1641%" y="687.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (1,236 samples, 2.13%)</title><rect x="3.8456%" y="693" width="2.1267%" height="15" fill="rgb(235,190,38)" fg:x="2235" fg:w="1236"/><text x="4.0956%" y="703.50">&lt;..</text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="5.9722%" y="661" width="0.0138%" height="15" fill="rgb(247,86,24)" fg:x="3471" fg:w="8"/><text x="6.2222%" y="671.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (1,245 samples, 2.14%)</title><rect x="3.8456%" y="709" width="2.1422%" height="15" fill="rgb(205,101,16)" fg:x="2235" fg:w="1245"/><text x="4.0956%" y="719.50">&lt;..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (9 samples, 0.02%)</title><rect x="5.9722%" y="693" width="0.0155%" height="15" fill="rgb(246,168,33)" fg:x="3471" fg:w="9"/><text x="6.2222%" y="703.50"></text></g><g><title>core::ptr::write (9 samples, 0.02%)</title><rect x="5.9722%" y="677" width="0.0155%" height="15" fill="rgb(231,114,1)" fg:x="3471" fg:w="9"/><text x="6.2222%" y="687.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.07%)</title><rect x="6.0720%" y="645" width="0.0705%" height="15" fill="rgb(207,184,53)" fg:x="3529" fg:w="41"/><text x="6.3220%" y="655.50"></text></g><g><title>malloc (36 samples, 0.06%)</title><rect x="6.0806%" y="629" width="0.0619%" height="15" fill="rgb(224,95,51)" fg:x="3534" fg:w="36"/><text x="6.3306%" y="639.50"></text></g><g><title>[libc.so.6] (25 samples, 0.04%)</title><rect x="6.0996%" y="613" width="0.0430%" height="15" fill="rgb(212,188,45)" fg:x="3545" fg:w="25"/><text x="6.3496%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.15%)</title><rect x="6.0411%" y="677" width="0.1497%" height="15" fill="rgb(223,154,38)" fg:x="3511" fg:w="87"/><text x="6.2911%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.15%)</title><rect x="6.0411%" y="661" width="0.1497%" height="15" fill="rgb(251,22,52)" fg:x="3511" fg:w="87"/><text x="6.2911%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (17 samples, 0.03%)</title><rect x="6.1615%" y="645" width="0.0293%" height="15" fill="rgb(229,209,22)" fg:x="3581" fg:w="17"/><text x="6.4115%" y="655.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (14 samples, 0.02%)</title><rect x="6.1667%" y="629" width="0.0241%" height="15" fill="rgb(234,138,34)" fg:x="3584" fg:w="14"/><text x="6.4167%" y="639.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (14 samples, 0.02%)</title><rect x="6.1667%" y="613" width="0.0241%" height="15" fill="rgb(212,95,11)" fg:x="3584" fg:w="14"/><text x="6.4167%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (118 samples, 0.20%)</title><rect x="6.0032%" y="693" width="0.2030%" height="15" fill="rgb(240,179,47)" fg:x="3489" fg:w="118"/><text x="6.2532%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (128 samples, 0.22%)</title><rect x="5.9877%" y="709" width="0.2202%" height="15" fill="rgb(240,163,11)" fg:x="3480" fg:w="128"/><text x="6.2377%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,400 samples, 2.41%)</title><rect x="3.8111%" y="741" width="2.4089%" height="15" fill="rgb(236,37,12)" fg:x="2215" fg:w="1400"/><text x="4.0611%" y="751.50">&lt;c..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,393 samples, 2.40%)</title><rect x="3.8232%" y="725" width="2.3968%" height="15" fill="rgb(232,164,16)" fg:x="2222" fg:w="1393"/><text x="4.0732%" y="735.50">&lt;a..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (7 samples, 0.01%)</title><rect x="6.2080%" y="709" width="0.0120%" height="15" fill="rgb(244,205,15)" fg:x="3608" fg:w="7"/><text x="6.4580%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::from_raw_in (7 samples, 0.01%)</title><rect x="6.2080%" y="693" width="0.0120%" height="15" fill="rgb(223,117,47)" fg:x="3608" fg:w="7"/><text x="6.4580%" y="703.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (11 samples, 0.02%)</title><rect x="6.2905%" y="645" width="0.0189%" height="15" fill="rgb(244,107,35)" fg:x="3656" fg:w="11"/><text x="6.5405%" y="655.50"></text></g><g><title>[libc.so.6] (11 samples, 0.02%)</title><rect x="6.2905%" y="629" width="0.0189%" height="15" fill="rgb(205,140,8)" fg:x="3656" fg:w="11"/><text x="6.5405%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.01%)</title><rect x="6.3783%" y="597" width="0.0103%" height="15" fill="rgb(228,84,46)" fg:x="3707" fg:w="6"/><text x="6.6283%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.06%)</title><rect x="6.3525%" y="613" width="0.0637%" height="15" fill="rgb(254,188,9)" fg:x="3692" fg:w="37"/><text x="6.6025%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.03%)</title><rect x="6.3886%" y="597" width="0.0275%" height="15" fill="rgb(206,112,54)" fg:x="3713" fg:w="16"/><text x="6.6386%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (6 samples, 0.01%)</title><rect x="6.4058%" y="581" width="0.0103%" height="15" fill="rgb(216,84,49)" fg:x="3723" fg:w="6"/><text x="6.6558%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.14%)</title><rect x="6.3095%" y="645" width="0.1411%" height="15" fill="rgb(214,194,35)" fg:x="3667" fg:w="82"/><text x="6.5595%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (69 samples, 0.12%)</title><rect x="6.3318%" y="629" width="0.1187%" height="15" fill="rgb(249,28,3)" fg:x="3680" fg:w="69"/><text x="6.5818%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (20 samples, 0.03%)</title><rect x="6.4161%" y="613" width="0.0344%" height="15" fill="rgb(222,56,52)" fg:x="3729" fg:w="20"/><text x="6.6661%" y="623.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="6.4506%" y="645" width="0.0138%" height="15" fill="rgb(245,217,50)" fg:x="3749" fg:w="8"/><text x="6.7006%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.04%)</title><rect x="6.5091%" y="549" width="0.0361%" height="15" fill="rgb(213,201,24)" fg:x="3783" fg:w="21"/><text x="6.7591%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.04%)</title><rect x="6.5091%" y="533" width="0.0361%" height="15" fill="rgb(248,116,28)" fg:x="3783" fg:w="21"/><text x="6.7591%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.04%)</title><rect x="6.5091%" y="517" width="0.0361%" height="15" fill="rgb(219,72,43)" fg:x="3783" fg:w="21"/><text x="6.7591%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.03%)</title><rect x="6.5125%" y="501" width="0.0327%" height="15" fill="rgb(209,138,14)" fg:x="3785" fg:w="19"/><text x="6.7625%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.03%)</title><rect x="6.5125%" y="485" width="0.0327%" height="15" fill="rgb(222,18,33)" fg:x="3785" fg:w="19"/><text x="6.7625%" y="495.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.03%)</title><rect x="6.5125%" y="469" width="0.0327%" height="15" fill="rgb(213,199,7)" fg:x="3785" fg:w="19"/><text x="6.7625%" y="479.50"></text></g><g><title>malloc (18 samples, 0.03%)</title><rect x="6.5142%" y="453" width="0.0310%" height="15" fill="rgb(250,110,10)" fg:x="3786" fg:w="18"/><text x="6.7642%" y="463.50"></text></g><g><title>[libc.so.6] (16 samples, 0.03%)</title><rect x="6.5177%" y="437" width="0.0275%" height="15" fill="rgb(248,123,6)" fg:x="3788" fg:w="16"/><text x="6.7677%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (114 samples, 0.20%)</title><rect x="6.4695%" y="629" width="0.1961%" height="15" fill="rgb(206,91,31)" fg:x="3760" fg:w="114"/><text x="6.7195%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (91 samples, 0.16%)</title><rect x="6.5091%" y="613" width="0.1566%" height="15" fill="rgb(211,154,13)" fg:x="3783" fg:w="91"/><text x="6.7591%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (91 samples, 0.16%)</title><rect x="6.5091%" y="597" width="0.1566%" height="15" fill="rgb(225,148,7)" fg:x="3783" fg:w="91"/><text x="6.7591%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (91 samples, 0.16%)</title><rect x="6.5091%" y="581" width="0.1566%" height="15" fill="rgb(220,160,43)" fg:x="3783" fg:w="91"/><text x="6.7591%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91 samples, 0.16%)</title><rect x="6.5091%" y="565" width="0.1566%" height="15" fill="rgb(213,52,39)" fg:x="3783" fg:w="91"/><text x="6.7591%" y="575.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (70 samples, 0.12%)</title><rect x="6.5452%" y="549" width="0.1204%" height="15" fill="rgb(243,137,7)" fg:x="3804" fg:w="70"/><text x="6.7952%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.12%)</title><rect x="6.5452%" y="533" width="0.1204%" height="15" fill="rgb(230,79,13)" fg:x="3804" fg:w="70"/><text x="6.7952%" y="543.50"></text></g><g><title>[libc.so.6] (70 samples, 0.12%)</title><rect x="6.5452%" y="517" width="0.1204%" height="15" fill="rgb(247,105,23)" fg:x="3804" fg:w="70"/><text x="6.7952%" y="527.50"></text></g><g><title>core::clone::Clone::clone (118 samples, 0.20%)</title><rect x="6.4643%" y="645" width="0.2030%" height="15" fill="rgb(223,179,41)" fg:x="3757" fg:w="118"/><text x="6.7143%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (45 samples, 0.08%)</title><rect x="6.6674%" y="645" width="0.0774%" height="15" fill="rgb(218,9,34)" fg:x="3875" fg:w="45"/><text x="6.9174%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.08%)</title><rect x="6.6674%" y="629" width="0.0774%" height="15" fill="rgb(222,106,8)" fg:x="3875" fg:w="45"/><text x="6.9174%" y="639.50"></text></g><g><title>[libc.so.6] (43 samples, 0.07%)</title><rect x="6.6708%" y="613" width="0.0740%" height="15" fill="rgb(211,220,0)" fg:x="3877" fg:w="43"/><text x="6.9208%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.01%)</title><rect x="6.7482%" y="629" width="0.0120%" height="15" fill="rgb(229,52,16)" fg:x="3922" fg:w="7"/><text x="6.9982%" y="639.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="6.7482%" y="613" width="0.0120%" height="15" fill="rgb(212,155,18)" fg:x="3922" fg:w="7"/><text x="6.9982%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="6.7482%" y="645" width="0.0138%" height="15" fill="rgb(242,21,14)" fg:x="3922" fg:w="8"/><text x="6.9982%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (29 samples, 0.05%)</title><rect x="6.7620%" y="645" width="0.0499%" height="15" fill="rgb(222,19,48)" fg:x="3930" fg:w="29"/><text x="7.0120%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (24 samples, 0.04%)</title><rect x="6.7706%" y="629" width="0.0413%" height="15" fill="rgb(232,45,27)" fg:x="3935" fg:w="24"/><text x="7.0206%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.01%)</title><rect x="6.7998%" y="613" width="0.0120%" height="15" fill="rgb(249,103,42)" fg:x="3952" fg:w="7"/><text x="7.0498%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (29 samples, 0.05%)</title><rect x="6.8274%" y="629" width="0.0499%" height="15" fill="rgb(246,81,33)" fg:x="3968" fg:w="29"/><text x="7.0774%" y="639.50"></text></g><g><title>hashbrown::raw::offset_from (20 samples, 0.03%)</title><rect x="6.8429%" y="613" width="0.0344%" height="15" fill="rgb(252,33,42)" fg:x="3977" fg:w="20"/><text x="7.0929%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (13 samples, 0.02%)</title><rect x="6.8549%" y="597" width="0.0224%" height="15" fill="rgb(209,212,41)" fg:x="3984" fg:w="13"/><text x="7.1049%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (39 samples, 0.07%)</title><rect x="6.8119%" y="645" width="0.0671%" height="15" fill="rgb(207,154,6)" fg:x="3959" fg:w="39"/><text x="7.0619%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.01%)</title><rect x="6.8893%" y="629" width="0.0120%" height="15" fill="rgb(223,64,47)" fg:x="4004" fg:w="7"/><text x="7.1393%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (51 samples, 0.09%)</title><rect x="6.8790%" y="645" width="0.0878%" height="15" fill="rgb(211,161,38)" fg:x="3998" fg:w="51"/><text x="7.1290%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (38 samples, 0.07%)</title><rect x="6.9014%" y="629" width="0.0654%" height="15" fill="rgb(219,138,40)" fg:x="4011" fg:w="38"/><text x="7.1514%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (27 samples, 0.05%)</title><rect x="6.9203%" y="613" width="0.0465%" height="15" fill="rgb(241,228,46)" fg:x="4022" fg:w="27"/><text x="7.1703%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (23 samples, 0.04%)</title><rect x="6.9272%" y="597" width="0.0396%" height="15" fill="rgb(223,209,38)" fg:x="4026" fg:w="23"/><text x="7.1772%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (23 samples, 0.04%)</title><rect x="6.9272%" y="581" width="0.0396%" height="15" fill="rgb(236,164,45)" fg:x="4026" fg:w="23"/><text x="7.1772%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (413 samples, 0.71%)</title><rect x="6.2596%" y="677" width="0.7106%" height="15" fill="rgb(231,15,5)" fg:x="3638" fg:w="413"/><text x="6.5096%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (410 samples, 0.71%)</title><rect x="6.2647%" y="661" width="0.7054%" height="15" fill="rgb(252,35,15)" fg:x="3641" fg:w="410"/><text x="6.5147%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.02%)</title><rect x="7.0665%" y="629" width="0.0189%" height="15" fill="rgb(248,181,18)" fg:x="4107" fg:w="11"/><text x="7.3165%" y="639.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (12 samples, 0.02%)</title><rect x="7.0906%" y="629" width="0.0206%" height="15" fill="rgb(233,39,42)" fg:x="4121" fg:w="12"/><text x="7.3406%" y="639.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (55 samples, 0.09%)</title><rect x="7.0304%" y="645" width="0.0946%" height="15" fill="rgb(238,110,33)" fg:x="4086" fg:w="55"/><text x="7.2804%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8 samples, 0.01%)</title><rect x="7.1113%" y="629" width="0.0138%" height="15" fill="rgb(233,195,10)" fg:x="4133" fg:w="8"/><text x="7.3613%" y="639.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.05%)</title><rect x="7.1594%" y="597" width="0.0533%" height="15" fill="rgb(254,105,3)" fg:x="4161" fg:w="31"/><text x="7.4094%" y="607.50"></text></g><g><title>malloc (27 samples, 0.05%)</title><rect x="7.1663%" y="581" width="0.0465%" height="15" fill="rgb(221,225,9)" fg:x="4165" fg:w="27"/><text x="7.4163%" y="591.50"></text></g><g><title>[libc.so.6] (19 samples, 0.03%)</title><rect x="7.1801%" y="565" width="0.0327%" height="15" fill="rgb(224,227,45)" fg:x="4173" fg:w="19"/><text x="7.4301%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (6 samples, 0.01%)</title><rect x="7.2128%" y="597" width="0.0103%" height="15" fill="rgb(229,198,43)" fg:x="4192" fg:w="6"/><text x="7.4628%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="7.2231%" y="597" width="0.0120%" height="15" fill="rgb(206,209,35)" fg:x="4198" fg:w="7"/><text x="7.4731%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (155 samples, 0.27%)</title><rect x="6.9736%" y="677" width="0.2667%" height="15" fill="rgb(245,195,53)" fg:x="4053" fg:w="155"/><text x="7.2236%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (141 samples, 0.24%)</title><rect x="6.9977%" y="661" width="0.2426%" height="15" fill="rgb(240,92,26)" fg:x="4067" fg:w="141"/><text x="7.2477%" y="671.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (67 samples, 0.12%)</title><rect x="7.1250%" y="645" width="0.1153%" height="15" fill="rgb(207,40,23)" fg:x="4141" fg:w="67"/><text x="7.3750%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (58 samples, 0.10%)</title><rect x="7.1405%" y="629" width="0.0998%" height="15" fill="rgb(223,111,35)" fg:x="4150" fg:w="58"/><text x="7.3905%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (58 samples, 0.10%)</title><rect x="7.1405%" y="613" width="0.0998%" height="15" fill="rgb(229,147,28)" fg:x="4150" fg:w="58"/><text x="7.3905%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (592 samples, 1.02%)</title><rect x="6.2303%" y="693" width="1.0186%" height="15" fill="rgb(211,29,28)" fg:x="3621" fg:w="592"/><text x="6.4803%" y="703.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (643 samples, 1.11%)</title><rect x="6.2234%" y="709" width="1.1064%" height="15" fill="rgb(228,72,33)" fg:x="3617" fg:w="643"/><text x="6.4734%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (47 samples, 0.08%)</title><rect x="7.2489%" y="693" width="0.0809%" height="15" fill="rgb(205,214,31)" fg:x="4213" fg:w="47"/><text x="7.4989%" y="703.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (44 samples, 0.08%)</title><rect x="7.2541%" y="677" width="0.0757%" height="15" fill="rgb(224,111,15)" fg:x="4216" fg:w="44"/><text x="7.5041%" y="687.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (656 samples, 1.13%)</title><rect x="6.2234%" y="725" width="1.1287%" height="15" fill="rgb(253,21,26)" fg:x="3617" fg:w="656"/><text x="6.4734%" y="735.50"></text></g><g><title>[libc.so.6] (13 samples, 0.02%)</title><rect x="7.3298%" y="709" width="0.0224%" height="15" fill="rgb(245,139,43)" fg:x="4260" fg:w="13"/><text x="7.5798%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (659 samples, 1.13%)</title><rect x="6.2200%" y="741" width="1.1339%" height="15" fill="rgb(252,170,7)" fg:x="3615" fg:w="659"/><text x="6.4700%" y="751.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (2,077 samples, 3.57%)</title><rect x="3.7871%" y="757" width="3.5737%" height="15" fill="rgb(231,118,14)" fg:x="2201" fg:w="2077"/><text x="4.0371%" y="767.50">&lt;aes..</text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="7.3625%" y="725" width="0.0138%" height="15" fill="rgb(238,83,0)" fg:x="4279" fg:w="8"/><text x="7.6125%" y="735.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2,088 samples, 3.59%)</title><rect x="3.7853%" y="773" width="3.5926%" height="15" fill="rgb(221,39,39)" fg:x="2200" fg:w="2088"/><text x="4.0353%" y="783.50">&lt;T a..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.02%)</title><rect x="7.3608%" y="757" width="0.0172%" height="15" fill="rgb(222,119,46)" fg:x="4278" fg:w="10"/><text x="7.6108%" y="767.50"></text></g><g><title>core::ptr::write (10 samples, 0.02%)</title><rect x="7.3608%" y="741" width="0.0172%" height="15" fill="rgb(222,165,49)" fg:x="4278" fg:w="10"/><text x="7.6108%" y="751.50"></text></g><g><title>alloc::alloc::alloc (38 samples, 0.07%)</title><rect x="7.4279%" y="709" width="0.0654%" height="15" fill="rgb(219,113,52)" fg:x="4317" fg:w="38"/><text x="7.6779%" y="719.50"></text></g><g><title>malloc (32 samples, 0.06%)</title><rect x="7.4382%" y="693" width="0.0551%" height="15" fill="rgb(214,7,15)" fg:x="4323" fg:w="32"/><text x="7.6882%" y="703.50"></text></g><g><title>[libc.so.6] (23 samples, 0.04%)</title><rect x="7.4537%" y="677" width="0.0396%" height="15" fill="rgb(235,32,4)" fg:x="4332" fg:w="23"/><text x="7.7037%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="7.4984%" y="709" width="0.0103%" height="15" fill="rgb(238,90,54)" fg:x="4358" fg:w="6"/><text x="7.7484%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (62 samples, 0.11%)</title><rect x="7.4072%" y="741" width="0.1067%" height="15" fill="rgb(213,208,19)" fg:x="4305" fg:w="62"/><text x="7.6572%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (61 samples, 0.10%)</title><rect x="7.4089%" y="725" width="0.1050%" height="15" fill="rgb(233,156,4)" fg:x="4306" fg:w="61"/><text x="7.6589%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (81 samples, 0.14%)</title><rect x="7.3848%" y="757" width="0.1394%" height="15" fill="rgb(207,194,5)" fg:x="4292" fg:w="81"/><text x="7.6348%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (88 samples, 0.15%)</title><rect x="7.3780%" y="773" width="0.1514%" height="15" fill="rgb(206,111,30)" fg:x="4288" fg:w="88"/><text x="7.6280%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,189 samples, 3.77%)</title><rect x="3.7716%" y="805" width="3.7664%" height="15" fill="rgb(243,70,54)" fg:x="2192" fg:w="2189"/><text x="4.0216%" y="815.50">&lt;cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,187 samples, 3.76%)</title><rect x="3.7750%" y="789" width="3.7630%" height="15" fill="rgb(242,28,8)" fg:x="2194" fg:w="2187"/><text x="4.0250%" y="799.50">&lt;all..</text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.01%)</title><rect x="7.5982%" y="709" width="0.0138%" height="15" fill="rgb(219,106,18)" fg:x="4416" fg:w="8"/><text x="7.8482%" y="719.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="7.5982%" y="693" width="0.0138%" height="15" fill="rgb(244,222,10)" fg:x="4416" fg:w="8"/><text x="7.8482%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.01%)</title><rect x="7.6584%" y="661" width="0.0103%" height="15" fill="rgb(236,179,52)" fg:x="4451" fg:w="6"/><text x="7.9084%" y="671.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (8 samples, 0.01%)</title><rect x="7.6825%" y="645" width="0.0138%" height="15" fill="rgb(213,23,39)" fg:x="4465" fg:w="8"/><text x="7.9325%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.07%)</title><rect x="7.6395%" y="677" width="0.0740%" height="15" fill="rgb(238,48,10)" fg:x="4440" fg:w="43"/><text x="7.8895%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (26 samples, 0.04%)</title><rect x="7.6687%" y="661" width="0.0447%" height="15" fill="rgb(251,196,23)" fg:x="4457" fg:w="26"/><text x="7.9187%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (10 samples, 0.02%)</title><rect x="7.6963%" y="645" width="0.0172%" height="15" fill="rgb(250,152,24)" fg:x="4473" fg:w="10"/><text x="7.9463%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (30 samples, 0.05%)</title><rect x="7.7152%" y="677" width="0.0516%" height="15" fill="rgb(209,150,17)" fg:x="4484" fg:w="30"/><text x="7.9652%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.01%)</title><rect x="7.7548%" y="661" width="0.0120%" height="15" fill="rgb(234,202,34)" fg:x="4507" fg:w="7"/><text x="8.0048%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.16%)</title><rect x="7.6120%" y="709" width="0.1566%" height="15" fill="rgb(253,148,53)" fg:x="4424" fg:w="91"/><text x="7.8620%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (86 samples, 0.15%)</title><rect x="7.6206%" y="693" width="0.1480%" height="15" fill="rgb(218,129,16)" fg:x="4429" fg:w="86"/><text x="7.8706%" y="703.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="7.7685%" y="709" width="0.0103%" height="15" fill="rgb(216,85,19)" fg:x="4515" fg:w="6"/><text x="8.0185%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="7.8219%" y="613" width="0.0344%" height="15" fill="rgb(235,228,7)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.03%)</title><rect x="7.8219%" y="597" width="0.0344%" height="15" fill="rgb(245,175,0)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.03%)</title><rect x="7.8219%" y="581" width="0.0344%" height="15" fill="rgb(208,168,36)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.03%)</title><rect x="7.8219%" y="565" width="0.0344%" height="15" fill="rgb(246,171,24)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.03%)</title><rect x="7.8219%" y="549" width="0.0344%" height="15" fill="rgb(215,142,24)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="559.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.03%)</title><rect x="7.8219%" y="533" width="0.0344%" height="15" fill="rgb(250,187,7)" fg:x="4546" fg:w="20"/><text x="8.0719%" y="543.50"></text></g><g><title>malloc (19 samples, 0.03%)</title><rect x="7.8236%" y="517" width="0.0327%" height="15" fill="rgb(228,66,33)" fg:x="4547" fg:w="19"/><text x="8.0736%" y="527.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="7.8356%" y="501" width="0.0206%" height="15" fill="rgb(234,215,21)" fg:x="4554" fg:w="12"/><text x="8.0856%" y="511.50"></text></g><g><title>core::clone::Clone::clone (147 samples, 0.25%)</title><rect x="7.7789%" y="709" width="0.2529%" height="15" fill="rgb(222,191,20)" fg:x="4521" fg:w="147"/><text x="8.0289%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (144 samples, 0.25%)</title><rect x="7.7840%" y="693" width="0.2478%" height="15" fill="rgb(245,79,54)" fg:x="4524" fg:w="144"/><text x="8.0340%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (122 samples, 0.21%)</title><rect x="7.8219%" y="677" width="0.2099%" height="15" fill="rgb(240,10,37)" fg:x="4546" fg:w="122"/><text x="8.0719%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (122 samples, 0.21%)</title><rect x="7.8219%" y="661" width="0.2099%" height="15" fill="rgb(214,192,32)" fg:x="4546" fg:w="122"/><text x="8.0719%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (122 samples, 0.21%)</title><rect x="7.8219%" y="645" width="0.2099%" height="15" fill="rgb(209,36,54)" fg:x="4546" fg:w="122"/><text x="8.0719%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (122 samples, 0.21%)</title><rect x="7.8219%" y="629" width="0.2099%" height="15" fill="rgb(220,10,11)" fg:x="4546" fg:w="122"/><text x="8.0719%" y="639.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (102 samples, 0.18%)</title><rect x="7.8563%" y="613" width="0.1755%" height="15" fill="rgb(221,106,17)" fg:x="4566" fg:w="102"/><text x="8.1063%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (102 samples, 0.18%)</title><rect x="7.8563%" y="597" width="0.1755%" height="15" fill="rgb(251,142,44)" fg:x="4566" fg:w="102"/><text x="8.1063%" y="607.50"></text></g><g><title>[libc.so.6] (102 samples, 0.18%)</title><rect x="7.8563%" y="581" width="0.1755%" height="15" fill="rgb(238,13,15)" fg:x="4566" fg:w="102"/><text x="8.1063%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_to_nonoverlapping (60 samples, 0.10%)</title><rect x="8.0318%" y="709" width="0.1032%" height="15" fill="rgb(208,107,27)" fg:x="4668" fg:w="60"/><text x="8.2818%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.10%)</title><rect x="8.0318%" y="693" width="0.1032%" height="15" fill="rgb(205,136,37)" fg:x="4668" fg:w="60"/><text x="8.2818%" y="703.50"></text></g><g><title>[libc.so.6] (58 samples, 0.10%)</title><rect x="8.0352%" y="677" width="0.0998%" height="15" fill="rgb(250,205,27)" fg:x="4670" fg:w="58"/><text x="8.2852%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.01%)</title><rect x="8.1385%" y="693" width="0.0120%" height="15" fill="rgb(210,80,43)" fg:x="4730" fg:w="7"/><text x="8.3885%" y="703.50"></text></g><g><title>core::ptr::write (7 samples, 0.01%)</title><rect x="8.1385%" y="677" width="0.0120%" height="15" fill="rgb(247,160,36)" fg:x="4730" fg:w="7"/><text x="8.3885%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="8.1385%" y="709" width="0.0138%" height="15" fill="rgb(234,13,49)" fg:x="4730" fg:w="8"/><text x="8.3885%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (23 samples, 0.04%)</title><rect x="8.1522%" y="709" width="0.0396%" height="15" fill="rgb(234,122,0)" fg:x="4738" fg:w="23"/><text x="8.4022%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (19 samples, 0.03%)</title><rect x="8.1591%" y="693" width="0.0327%" height="15" fill="rgb(207,146,38)" fg:x="4742" fg:w="19"/><text x="8.4091%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (22 samples, 0.04%)</title><rect x="8.1935%" y="693" width="0.0379%" height="15" fill="rgb(207,177,25)" fg:x="4762" fg:w="22"/><text x="8.4435%" y="703.50"></text></g><g><title>hashbrown::raw::offset_from (12 samples, 0.02%)</title><rect x="8.2107%" y="677" width="0.0206%" height="15" fill="rgb(211,178,42)" fg:x="4772" fg:w="12"/><text x="8.4607%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (11 samples, 0.02%)</title><rect x="8.2125%" y="661" width="0.0189%" height="15" fill="rgb(230,69,54)" fg:x="4773" fg:w="11"/><text x="8.4625%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (25 samples, 0.04%)</title><rect x="8.1918%" y="709" width="0.0430%" height="15" fill="rgb(214,135,41)" fg:x="4761" fg:w="25"/><text x="8.4418%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (421 samples, 0.72%)</title><rect x="7.5621%" y="741" width="0.7244%" height="15" fill="rgb(237,67,25)" fg:x="4395" fg:w="421"/><text x="7.8121%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (421 samples, 0.72%)</title><rect x="7.5621%" y="725" width="0.7244%" height="15" fill="rgb(222,189,50)" fg:x="4395" fg:w="421"/><text x="7.8121%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (30 samples, 0.05%)</title><rect x="8.2348%" y="709" width="0.0516%" height="15" fill="rgb(245,148,34)" fg:x="4786" fg:w="30"/><text x="8.4848%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (24 samples, 0.04%)</title><rect x="8.2452%" y="693" width="0.0413%" height="15" fill="rgb(222,29,6)" fg:x="4792" fg:w="24"/><text x="8.4952%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (17 samples, 0.03%)</title><rect x="8.2572%" y="677" width="0.0293%" height="15" fill="rgb(221,189,43)" fg:x="4799" fg:w="17"/><text x="8.5072%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (14 samples, 0.02%)</title><rect x="8.2624%" y="661" width="0.0241%" height="15" fill="rgb(207,36,27)" fg:x="4802" fg:w="14"/><text x="8.5124%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.02%)</title><rect x="8.2641%" y="645" width="0.0224%" height="15" fill="rgb(217,90,24)" fg:x="4803" fg:w="13"/><text x="8.5141%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="8.3363%" y="693" width="0.0138%" height="15" fill="rgb(224,66,35)" fg:x="4845" fg:w="8"/><text x="8.5863%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (6 samples, 0.01%)</title><rect x="8.3536%" y="693" width="0.0103%" height="15" fill="rgb(221,13,50)" fg:x="4855" fg:w="6"/><text x="8.6036%" y="703.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (29 samples, 0.05%)</title><rect x="8.3157%" y="709" width="0.0499%" height="15" fill="rgb(236,68,49)" fg:x="4833" fg:w="29"/><text x="8.5657%" y="719.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.03%)</title><rect x="8.3828%" y="661" width="0.0258%" height="15" fill="rgb(229,146,28)" fg:x="4872" fg:w="15"/><text x="8.6328%" y="671.50"></text></g><g><title>malloc (15 samples, 0.03%)</title><rect x="8.3828%" y="645" width="0.0258%" height="15" fill="rgb(225,31,38)" fg:x="4872" fg:w="15"/><text x="8.6328%" y="655.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="8.3931%" y="629" width="0.0155%" height="15" fill="rgb(250,208,3)" fg:x="4878" fg:w="9"/><text x="8.6431%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (78 samples, 0.13%)</title><rect x="8.2864%" y="741" width="0.1342%" height="15" fill="rgb(246,54,23)" fg:x="4816" fg:w="78"/><text x="8.5364%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (72 samples, 0.12%)</title><rect x="8.2968%" y="725" width="0.1239%" height="15" fill="rgb(243,76,11)" fg:x="4822" fg:w="72"/><text x="8.5468%" y="735.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (32 samples, 0.06%)</title><rect x="8.3656%" y="709" width="0.0551%" height="15" fill="rgb(245,21,50)" fg:x="4862" fg:w="32"/><text x="8.6156%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.05%)</title><rect x="8.3725%" y="693" width="0.0482%" height="15" fill="rgb(228,9,43)" fg:x="4866" fg:w="28"/><text x="8.6225%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.05%)</title><rect x="8.3725%" y="677" width="0.0482%" height="15" fill="rgb(208,100,47)" fg:x="4866" fg:w="28"/><text x="8.6225%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (514 samples, 0.88%)</title><rect x="7.5414%" y="757" width="0.8844%" height="15" fill="rgb(232,26,8)" fg:x="4383" fg:w="514"/><text x="7.7914%" y="767.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (554 samples, 0.95%)</title><rect x="7.5397%" y="773" width="0.9532%" height="15" fill="rgb(216,166,38)" fg:x="4382" fg:w="554"/><text x="7.7897%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::clone::Clone&gt;::clone (39 samples, 0.07%)</title><rect x="8.4258%" y="757" width="0.0671%" height="15" fill="rgb(251,202,51)" fg:x="4897" fg:w="39"/><text x="8.6758%" y="767.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u64&gt;::clone (39 samples, 0.07%)</title><rect x="8.4258%" y="741" width="0.0671%" height="15" fill="rgb(254,216,34)" fg:x="4897" fg:w="39"/><text x="8.6758%" y="751.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (559 samples, 0.96%)</title><rect x="7.5380%" y="789" width="0.9618%" height="15" fill="rgb(251,32,27)" fg:x="4381" fg:w="559"/><text x="7.7880%" y="799.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (560 samples, 0.96%)</title><rect x="7.5380%" y="805" width="0.9635%" height="15" fill="rgb(208,127,28)" fg:x="4381" fg:w="560"/><text x="7.7880%" y="815.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (2,756 samples, 4.74%)</title><rect x="3.7612%" y="821" width="4.7420%" height="15" fill="rgb(224,137,22)" fg:x="2186" fg:w="2756"/><text x="4.0112%" y="831.50">&lt;aes_g..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (2,765 samples, 4.76%)</title><rect x="3.7595%" y="837" width="4.7575%" height="15" fill="rgb(254,70,32)" fg:x="2185" fg:w="2765"/><text x="4.0095%" y="847.50">&lt;T as ..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (8 samples, 0.01%)</title><rect x="8.5032%" y="821" width="0.0138%" height="15" fill="rgb(229,75,37)" fg:x="4942" fg:w="8"/><text x="8.7532%" y="831.50"></text></g><g><title>core::ptr::write (8 samples, 0.01%)</title><rect x="8.5032%" y="805" width="0.0138%" height="15" fill="rgb(252,64,23)" fg:x="4942" fg:w="8"/><text x="8.7532%" y="815.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="8.5032%" y="789" width="0.0138%" height="15" fill="rgb(232,162,48)" fg:x="4942" fg:w="8"/><text x="8.7532%" y="799.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.04%)</title><rect x="8.5549%" y="773" width="0.0379%" height="15" fill="rgb(246,160,12)" fg:x="4972" fg:w="22"/><text x="8.8049%" y="783.50"></text></g><g><title>malloc (18 samples, 0.03%)</title><rect x="8.5617%" y="757" width="0.0310%" height="15" fill="rgb(247,166,0)" fg:x="4976" fg:w="18"/><text x="8.8117%" y="767.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="8.5686%" y="741" width="0.0241%" height="15" fill="rgb(249,219,21)" fg:x="4980" fg:w="14"/><text x="8.8186%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.06%)</title><rect x="8.5480%" y="805" width="0.0585%" height="15" fill="rgb(205,209,3)" fg:x="4968" fg:w="34"/><text x="8.7980%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.06%)</title><rect x="8.5480%" y="789" width="0.0585%" height="15" fill="rgb(243,44,1)" fg:x="4968" fg:w="34"/><text x="8.7980%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (54 samples, 0.09%)</title><rect x="8.5273%" y="821" width="0.0929%" height="15" fill="rgb(206,159,16)" fg:x="4956" fg:w="54"/><text x="8.7773%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (61 samples, 0.10%)</title><rect x="8.5170%" y="837" width="0.1050%" height="15" fill="rgb(244,77,30)" fg:x="4950" fg:w="61"/><text x="8.7670%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2,842 samples, 4.89%)</title><rect x="3.7458%" y="869" width="4.8900%" height="15" fill="rgb(218,69,12)" fg:x="2177" fg:w="2842"/><text x="3.9958%" y="879.50">&lt;core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (2,839 samples, 4.88%)</title><rect x="3.7509%" y="853" width="4.8848%" height="15" fill="rgb(212,87,7)" fg:x="2180" fg:w="2839"/><text x="4.0009%" y="863.50">&lt;alloc..</text></g><g><title>alloc::boxed::Box&lt;core::mem::maybe_uninit::MaybeUninit&lt;T&gt;,A&gt;::assume_init (8 samples, 0.01%)</title><rect x="8.6220%" y="837" width="0.0138%" height="15" fill="rgb(245,114,25)" fg:x="5011" fg:w="8"/><text x="8.8720%" y="847.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (8 samples, 0.01%)</title><rect x="8.7562%" y="709" width="0.0138%" height="15" fill="rgb(210,61,42)" fg:x="5089" fg:w="8"/><text x="9.0062%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.07%)</title><rect x="8.7149%" y="741" width="0.0654%" height="15" fill="rgb(211,52,33)" fg:x="5065" fg:w="38"/><text x="8.9649%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (20 samples, 0.03%)</title><rect x="8.7458%" y="725" width="0.0344%" height="15" fill="rgb(234,58,33)" fg:x="5083" fg:w="20"/><text x="8.9958%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (6 samples, 0.01%)</title><rect x="8.7699%" y="709" width="0.0103%" height="15" fill="rgb(220,115,36)" fg:x="5097" fg:w="6"/><text x="9.0199%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (14 samples, 0.02%)</title><rect x="8.7803%" y="741" width="0.0241%" height="15" fill="rgb(243,153,54)" fg:x="5103" fg:w="14"/><text x="9.0303%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.14%)</title><rect x="8.6650%" y="773" width="0.1428%" height="15" fill="rgb(251,47,18)" fg:x="5036" fg:w="83"/><text x="8.9150%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (70 samples, 0.12%)</title><rect x="8.6873%" y="757" width="0.1204%" height="15" fill="rgb(242,102,42)" fg:x="5049" fg:w="70"/><text x="8.9373%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="8.8198%" y="677" width="0.0206%" height="15" fill="rgb(234,31,38)" fg:x="5126" fg:w="12"/><text x="9.0698%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.02%)</title><rect x="8.8198%" y="661" width="0.0206%" height="15" fill="rgb(221,117,51)" fg:x="5126" fg:w="12"/><text x="9.0698%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.02%)</title><rect x="8.8198%" y="645" width="0.0206%" height="15" fill="rgb(212,20,18)" fg:x="5126" fg:w="12"/><text x="9.0698%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="8.8233%" y="629" width="0.0172%" height="15" fill="rgb(245,133,36)" fg:x="5128" fg:w="10"/><text x="9.0733%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="8.8233%" y="613" width="0.0172%" height="15" fill="rgb(212,6,19)" fg:x="5128" fg:w="10"/><text x="9.0733%" y="623.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="8.8233%" y="597" width="0.0172%" height="15" fill="rgb(218,1,36)" fg:x="5128" fg:w="10"/><text x="9.0733%" y="607.50"></text></g><g><title>malloc (9 samples, 0.02%)</title><rect x="8.8250%" y="581" width="0.0155%" height="15" fill="rgb(246,84,54)" fg:x="5129" fg:w="9"/><text x="9.0750%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (21 samples, 0.04%)</title><rect x="8.8181%" y="757" width="0.0361%" height="15" fill="rgb(242,110,6)" fg:x="5125" fg:w="21"/><text x="9.0681%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.03%)</title><rect x="8.8198%" y="741" width="0.0344%" height="15" fill="rgb(214,47,5)" fg:x="5126" fg:w="20"/><text x="9.0698%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.03%)</title><rect x="8.8198%" y="725" width="0.0344%" height="15" fill="rgb(218,159,25)" fg:x="5126" fg:w="20"/><text x="9.0698%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.03%)</title><rect x="8.8198%" y="709" width="0.0344%" height="15" fill="rgb(215,211,28)" fg:x="5126" fg:w="20"/><text x="9.0698%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.03%)</title><rect x="8.8198%" y="693" width="0.0344%" height="15" fill="rgb(238,59,32)" fg:x="5126" fg:w="20"/><text x="9.0698%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (8 samples, 0.01%)</title><rect x="8.8405%" y="677" width="0.0138%" height="15" fill="rgb(226,82,3)" fg:x="5138" fg:w="8"/><text x="9.0905%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="8.8405%" y="661" width="0.0138%" height="15" fill="rgb(240,164,32)" fg:x="5138" fg:w="8"/><text x="9.0905%" y="671.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="8.8405%" y="645" width="0.0138%" height="15" fill="rgb(232,46,7)" fg:x="5138" fg:w="8"/><text x="9.0905%" y="655.50"></text></g><g><title>core::clone::Clone::clone (27 samples, 0.05%)</title><rect x="8.8130%" y="773" width="0.0465%" height="15" fill="rgb(229,129,53)" fg:x="5122" fg:w="27"/><text x="9.0630%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (6 samples, 0.01%)</title><rect x="8.8697%" y="757" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="5155" fg:w="6"/><text x="9.1197%" y="767.50"></text></g><g><title>core::ptr::write (6 samples, 0.01%)</title><rect x="8.8697%" y="741" width="0.0103%" height="15" fill="rgb(246,141,4)" fg:x="5155" fg:w="6"/><text x="9.1197%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (8 samples, 0.01%)</title><rect x="8.8697%" y="773" width="0.0138%" height="15" fill="rgb(229,23,39)" fg:x="5155" fg:w="8"/><text x="9.1197%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (23 samples, 0.04%)</title><rect x="8.8887%" y="757" width="0.0396%" height="15" fill="rgb(206,12,3)" fg:x="5166" fg:w="23"/><text x="9.1387%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.01%)</title><rect x="8.9162%" y="741" width="0.0120%" height="15" fill="rgb(252,226,20)" fg:x="5182" fg:w="7"/><text x="9.1662%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (27 samples, 0.05%)</title><rect x="8.8835%" y="773" width="0.0465%" height="15" fill="rgb(216,123,35)" fg:x="5163" fg:w="27"/><text x="9.1335%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::to_base_index (29 samples, 0.05%)</title><rect x="8.9368%" y="757" width="0.0499%" height="15" fill="rgb(212,68,40)" fg:x="5194" fg:w="29"/><text x="9.1868%" y="767.50"></text></g><g><title>hashbrown::raw::offset_from (17 samples, 0.03%)</title><rect x="8.9575%" y="741" width="0.0293%" height="15" fill="rgb(254,125,32)" fg:x="5206" fg:w="17"/><text x="9.2075%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset_from (9 samples, 0.02%)</title><rect x="8.9712%" y="725" width="0.0155%" height="15" fill="rgb(253,97,22)" fg:x="5214" fg:w="9"/><text x="9.2212%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket_index (34 samples, 0.06%)</title><rect x="8.9300%" y="773" width="0.0585%" height="15" fill="rgb(241,101,14)" fg:x="5190" fg:w="34"/><text x="9.1800%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (21 samples, 0.04%)</title><rect x="8.9885%" y="773" width="0.0361%" height="15" fill="rgb(238,103,29)" fg:x="5224" fg:w="21"/><text x="9.2385%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (12 samples, 0.02%)</title><rect x="9.0039%" y="757" width="0.0206%" height="15" fill="rgb(233,195,47)" fg:x="5233" fg:w="12"/><text x="9.2539%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (9 samples, 0.02%)</title><rect x="9.0091%" y="741" width="0.0155%" height="15" fill="rgb(246,218,30)" fg:x="5236" fg:w="9"/><text x="9.2591%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.01%)</title><rect x="9.0108%" y="725" width="0.0138%" height="15" fill="rgb(219,145,47)" fg:x="5237" fg:w="8"/><text x="9.2608%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="9.0108%" y="709" width="0.0138%" height="15" fill="rgb(243,12,26)" fg:x="5237" fg:w="8"/><text x="9.2608%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (224 samples, 0.39%)</title><rect x="8.6409%" y="805" width="0.3854%" height="15" fill="rgb(214,87,16)" fg:x="5022" fg:w="224"/><text x="8.8909%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (224 samples, 0.39%)</title><rect x="8.6409%" y="789" width="0.3854%" height="15" fill="rgb(208,99,42)" fg:x="5022" fg:w="224"/><text x="8.8909%" y="799.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (15 samples, 0.03%)</title><rect x="9.0452%" y="773" width="0.0258%" height="15" fill="rgb(253,99,2)" fg:x="5257" fg:w="15"/><text x="9.2952%" y="783.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="9.0848%" y="725" width="0.0155%" height="15" fill="rgb(220,168,23)" fg:x="5280" fg:w="9"/><text x="9.3348%" y="735.50"></text></g><g><title>malloc (8 samples, 0.01%)</title><rect x="9.0865%" y="709" width="0.0138%" height="15" fill="rgb(242,38,24)" fg:x="5281" fg:w="8"/><text x="9.3365%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (48 samples, 0.08%)</title><rect x="9.0263%" y="805" width="0.0826%" height="15" fill="rgb(225,182,9)" fg:x="5246" fg:w="48"/><text x="9.2763%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (44 samples, 0.08%)</title><rect x="9.0332%" y="789" width="0.0757%" height="15" fill="rgb(243,178,37)" fg:x="5250" fg:w="44"/><text x="9.2832%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (22 samples, 0.04%)</title><rect x="9.0710%" y="773" width="0.0379%" height="15" fill="rgb(232,139,19)" fg:x="5272" fg:w="22"/><text x="9.3210%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.03%)</title><rect x="9.0779%" y="757" width="0.0310%" height="15" fill="rgb(225,201,24)" fg:x="5276" fg:w="18"/><text x="9.3279%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.03%)</title><rect x="9.0779%" y="741" width="0.0310%" height="15" fill="rgb(221,47,46)" fg:x="5276" fg:w="18"/><text x="9.3279%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (278 samples, 0.48%)</title><rect x="8.6375%" y="821" width="0.4783%" height="15" fill="rgb(249,23,13)" fg:x="5020" fg:w="278"/><text x="8.8875%" y="831.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (280 samples, 0.48%)</title><rect x="8.6357%" y="837" width="0.4818%" height="15" fill="rgb(219,9,5)" fg:x="5019" fg:w="280"/><text x="8.8857%" y="847.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (284 samples, 0.49%)</title><rect x="8.6357%" y="853" width="0.4887%" height="15" fill="rgb(254,171,16)" fg:x="5019" fg:w="284"/><text x="8.8857%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (285 samples, 0.49%)</title><rect x="8.6357%" y="869" width="0.4904%" height="15" fill="rgb(230,171,20)" fg:x="5019" fg:w="285"/><text x="8.8857%" y="879.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (3,135 samples, 5.39%)</title><rect x="3.7354%" y="885" width="5.3941%" height="15" fill="rgb(210,71,41)" fg:x="2171" fg:w="3135"/><text x="3.9854%" y="895.50">&lt;aes_gr..</text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (3,140 samples, 5.40%)</title><rect x="3.7320%" y="901" width="5.4027%" height="15" fill="rgb(206,173,20)" fg:x="2169" fg:w="3140"/><text x="3.9820%" y="911.50">&lt;T as a..</text></g><g><title>alloc::alloc::alloc (8 samples, 0.01%)</title><rect x="9.1450%" y="837" width="0.0138%" height="15" fill="rgb(233,88,34)" fg:x="5315" fg:w="8"/><text x="9.3950%" y="847.50"></text></g><g><title>malloc (7 samples, 0.01%)</title><rect x="9.1468%" y="821" width="0.0120%" height="15" fill="rgb(223,209,46)" fg:x="5316" fg:w="7"/><text x="9.3968%" y="831.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="9.1485%" y="805" width="0.0103%" height="15" fill="rgb(250,43,18)" fg:x="5317" fg:w="6"/><text x="9.3985%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.03%)</title><rect x="9.1416%" y="869" width="0.0275%" height="15" fill="rgb(208,13,10)" fg:x="5313" fg:w="16"/><text x="9.3916%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.03%)</title><rect x="9.1416%" y="853" width="0.0275%" height="15" fill="rgb(212,200,36)" fg:x="5313" fg:w="16"/><text x="9.3916%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (3,167 samples, 5.45%)</title><rect x="3.7234%" y="917" width="5.4492%" height="15" fill="rgb(225,90,30)" fg:x="2164" fg:w="3167"/><text x="3.9734%" y="927.50">&lt;alloc:..</text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (21 samples, 0.04%)</title><rect x="9.1364%" y="901" width="0.0361%" height="15" fill="rgb(236,182,39)" fg:x="5310" fg:w="21"/><text x="9.3864%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.03%)</title><rect x="9.1381%" y="885" width="0.0344%" height="15" fill="rgb(212,144,35)" fg:x="5311" fg:w="20"/><text x="9.3881%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cloned (9 samples, 0.02%)</title><rect x="9.1829%" y="901" width="0.0155%" height="15" fill="rgb(228,63,44)" fg:x="5337" fg:w="9"/><text x="9.4329%" y="911.50"></text></g><g><title>core::iter::adapters::cloned::Cloned&lt;I&gt;::new (9 samples, 0.02%)</title><rect x="9.1829%" y="885" width="0.0155%" height="15" fill="rgb(228,109,6)" fg:x="5337" fg:w="9"/><text x="9.4329%" y="895.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="9.1829%" y="869" width="0.0155%" height="15" fill="rgb(238,117,24)" fg:x="5337" fg:w="9"/><text x="9.4329%" y="879.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (10 samples, 0.02%)</title><rect x="9.2483%" y="805" width="0.0172%" height="15" fill="rgb(242,26,26)" fg:x="5375" fg:w="10"/><text x="9.4983%" y="815.50"></text></g><g><title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="9.2551%" y="789" width="0.0103%" height="15" fill="rgb(221,92,48)" fg:x="5379" fg:w="6"/><text x="9.5051%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (39 samples, 0.07%)</title><rect x="9.2070%" y="869" width="0.0671%" height="15" fill="rgb(209,209,32)" fg:x="5351" fg:w="39"/><text x="9.4570%" y="879.50"></text></g><g><title>std::collections::hash::map::RandomState::new (39 samples, 0.07%)</title><rect x="9.2070%" y="853" width="0.0671%" height="15" fill="rgb(221,70,22)" fg:x="5351" fg:w="39"/><text x="9.4570%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.07%)</title><rect x="9.2070%" y="837" width="0.0671%" height="15" fill="rgb(248,145,5)" fg:x="5351" fg:w="39"/><text x="9.4570%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.06%)</title><rect x="9.2104%" y="821" width="0.0637%" height="15" fill="rgb(226,116,26)" fg:x="5353" fg:w="37"/><text x="9.4604%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (8 samples, 0.01%)</title><rect x="9.2827%" y="837" width="0.0138%" height="15" fill="rgb(244,5,17)" fg:x="5395" fg:w="8"/><text x="9.5327%" y="847.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="9.2827%" y="821" width="0.0138%" height="15" fill="rgb(252,159,33)" fg:x="5395" fg:w="8"/><text x="9.5327%" y="831.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (14 samples, 0.02%)</title><rect x="9.6767%" y="613" width="0.0241%" height="15" fill="rgb(206,71,0)" fg:x="5624" fg:w="14"/><text x="9.9267%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (85 samples, 0.15%)</title><rect x="9.5855%" y="645" width="0.1463%" height="15" fill="rgb(233,118,54)" fg:x="5571" fg:w="85"/><text x="9.8355%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (54 samples, 0.09%)</title><rect x="9.6388%" y="629" width="0.0929%" height="15" fill="rgb(234,83,48)" fg:x="5602" fg:w="54"/><text x="9.8888%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (18 samples, 0.03%)</title><rect x="9.7008%" y="613" width="0.0310%" height="15" fill="rgb(228,3,54)" fg:x="5638" fg:w="18"/><text x="9.9508%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (181 samples, 0.31%)</title><rect x="9.4960%" y="677" width="0.3114%" height="15" fill="rgb(226,155,13)" fg:x="5519" fg:w="181"/><text x="9.7460%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (154 samples, 0.26%)</title><rect x="9.5425%" y="661" width="0.2650%" height="15" fill="rgb(241,28,37)" fg:x="5546" fg:w="154"/><text x="9.7925%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (42 samples, 0.07%)</title><rect x="9.7352%" y="645" width="0.0723%" height="15" fill="rgb(233,93,10)" fg:x="5658" fg:w="42"/><text x="9.9852%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.02%)</title><rect x="9.7834%" y="629" width="0.0241%" height="15" fill="rgb(225,113,19)" fg:x="5686" fg:w="14"/><text x="10.0334%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (244 samples, 0.42%)</title><rect x="9.4134%" y="741" width="0.4198%" height="15" fill="rgb(241,2,18)" fg:x="5471" fg:w="244"/><text x="9.6634%" y="751.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (243 samples, 0.42%)</title><rect x="9.4152%" y="725" width="0.4181%" height="15" fill="rgb(228,207,21)" fg:x="5472" fg:w="243"/><text x="9.6652%" y="735.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (243 samples, 0.42%)</title><rect x="9.4152%" y="709" width="0.4181%" height="15" fill="rgb(213,211,35)" fg:x="5472" fg:w="243"/><text x="9.6652%" y="719.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (231 samples, 0.40%)</title><rect x="9.4358%" y="693" width="0.3975%" height="15" fill="rgb(209,83,10)" fg:x="5484" fg:w="231"/><text x="9.6858%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15 samples, 0.03%)</title><rect x="9.8075%" y="677" width="0.0258%" height="15" fill="rgb(209,164,1)" fg:x="5700" fg:w="15"/><text x="10.0575%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (11 samples, 0.02%)</title><rect x="9.8143%" y="661" width="0.0189%" height="15" fill="rgb(213,184,43)" fg:x="5704" fg:w="11"/><text x="10.0643%" y="671.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend::_{{closure}} (12 samples, 0.02%)</title><rect x="9.9451%" y="709" width="0.0206%" height="15" fill="rgb(231,61,34)" fg:x="5780" fg:w="12"/><text x="10.1951%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (71 samples, 0.12%)</title><rect x="10.0965%" y="581" width="0.1222%" height="15" fill="rgb(235,75,3)" fg:x="5868" fg:w="71"/><text x="10.3465%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (321 samples, 0.55%)</title><rect x="10.0552%" y="629" width="0.5523%" height="15" fill="rgb(220,106,47)" fg:x="5844" fg:w="321"/><text x="10.3052%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (321 samples, 0.55%)</title><rect x="10.0552%" y="613" width="0.5523%" height="15" fill="rgb(210,196,33)" fg:x="5844" fg:w="321"/><text x="10.3052%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (321 samples, 0.55%)</title><rect x="10.0552%" y="597" width="0.5523%" height="15" fill="rgb(229,154,42)" fg:x="5844" fg:w="321"/><text x="10.3052%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (226 samples, 0.39%)</title><rect x="10.2187%" y="581" width="0.3889%" height="15" fill="rgb(228,114,26)" fg:x="5939" fg:w="226"/><text x="10.4687%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.03%)</title><rect x="10.5783%" y="565" width="0.0293%" height="15" fill="rgb(208,144,1)" fg:x="6148" fg:w="17"/><text x="10.8283%" y="575.50"></text></g><g><title>[libc.so.6] (45 samples, 0.08%)</title><rect x="10.6179%" y="613" width="0.0774%" height="15" fill="rgb(239,112,37)" fg:x="6171" fg:w="45"/><text x="10.8679%" y="623.50"></text></g><g><title>[libc.so.6] (46 samples, 0.08%)</title><rect x="10.6953%" y="597" width="0.0791%" height="15" fill="rgb(210,96,50)" fg:x="6216" fg:w="46"/><text x="10.9453%" y="607.50"></text></g><g><title>[libc.so.6] (61 samples, 0.10%)</title><rect x="10.7830%" y="581" width="0.1050%" height="15" fill="rgb(222,178,2)" fg:x="6267" fg:w="61"/><text x="11.0330%" y="591.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (72 samples, 0.12%)</title><rect x="10.7744%" y="597" width="0.1239%" height="15" fill="rgb(226,74,18)" fg:x="6262" fg:w="72"/><text x="11.0244%" y="607.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (6 samples, 0.01%)</title><rect x="10.8880%" y="581" width="0.0103%" height="15" fill="rgb(225,67,54)" fg:x="6328" fg:w="6"/><text x="11.1380%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (170 samples, 0.29%)</title><rect x="10.6075%" y="629" width="0.2925%" height="15" fill="rgb(251,92,32)" fg:x="6165" fg:w="170"/><text x="10.8575%" y="639.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (119 samples, 0.20%)</title><rect x="10.6953%" y="613" width="0.2048%" height="15" fill="rgb(228,149,22)" fg:x="6216" fg:w="119"/><text x="10.9453%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (67 samples, 0.12%)</title><rect x="11.0394%" y="517" width="0.1153%" height="15" fill="rgb(243,54,13)" fg:x="6416" fg:w="67"/><text x="11.2894%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (145 samples, 0.25%)</title><rect x="10.9087%" y="533" width="0.2495%" height="15" fill="rgb(243,180,28)" fg:x="6340" fg:w="145"/><text x="11.1587%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (712 samples, 1.23%)</title><rect x="10.0311%" y="661" width="1.2251%" height="15" fill="rgb(208,167,24)" fg:x="5830" fg:w="712"/><text x="10.2811%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (712 samples, 1.23%)</title><rect x="10.0311%" y="645" width="1.2251%" height="15" fill="rgb(245,73,45)" fg:x="5830" fg:w="712"/><text x="10.2811%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (207 samples, 0.36%)</title><rect x="10.9000%" y="629" width="0.3562%" height="15" fill="rgb(237,203,48)" fg:x="6335" fg:w="207"/><text x="11.1500%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (205 samples, 0.35%)</title><rect x="10.9035%" y="613" width="0.3527%" height="15" fill="rgb(211,197,16)" fg:x="6337" fg:w="205"/><text x="11.1535%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (203 samples, 0.35%)</title><rect x="10.9069%" y="597" width="0.3493%" height="15" fill="rgb(243,99,51)" fg:x="6339" fg:w="203"/><text x="11.1569%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (203 samples, 0.35%)</title><rect x="10.9069%" y="581" width="0.3493%" height="15" fill="rgb(215,123,29)" fg:x="6339" fg:w="203"/><text x="11.1569%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (203 samples, 0.35%)</title><rect x="10.9069%" y="565" width="0.3493%" height="15" fill="rgb(239,186,37)" fg:x="6339" fg:w="203"/><text x="11.1569%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (202 samples, 0.35%)</title><rect x="10.9087%" y="549" width="0.3476%" height="15" fill="rgb(252,136,39)" fg:x="6340" fg:w="202"/><text x="11.1587%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u8 (57 samples, 0.10%)</title><rect x="11.1581%" y="533" width="0.0981%" height="15" fill="rgb(223,213,32)" fg:x="6485" fg:w="57"/><text x="11.4081%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (56 samples, 0.10%)</title><rect x="11.1599%" y="517" width="0.0964%" height="15" fill="rgb(233,115,5)" fg:x="6486" fg:w="56"/><text x="11.4099%" y="527.50"></text></g><g><title>core::hash::sip::u8to64_le (37 samples, 0.06%)</title><rect x="11.1926%" y="501" width="0.0637%" height="15" fill="rgb(207,226,44)" fg:x="6505" fg:w="37"/><text x="11.4426%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="11.2665%" y="645" width="0.0155%" height="15" fill="rgb(208,126,0)" fg:x="6548" fg:w="9"/><text x="11.5165%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.02%)</title><rect x="11.3681%" y="629" width="0.0155%" height="15" fill="rgb(244,66,21)" fg:x="6607" fg:w="9"/><text x="11.6181%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="11.3835%" y="629" width="0.0361%" height="15" fill="rgb(222,97,12)" fg:x="6616" fg:w="21"/><text x="11.6335%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (8 samples, 0.01%)</title><rect x="11.4248%" y="629" width="0.0138%" height="15" fill="rgb(219,213,19)" fg:x="6640" fg:w="8"/><text x="11.6748%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::ctrl (6 samples, 0.01%)</title><rect x="11.4386%" y="629" width="0.0103%" height="15" fill="rgb(252,169,30)" fg:x="6648" fg:w="6"/><text x="11.6886%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="11.4386%" y="613" width="0.0103%" height="15" fill="rgb(206,32,51)" fg:x="6648" fg:w="6"/><text x="11.6886%" y="623.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (14 samples, 0.02%)</title><rect x="11.5315%" y="597" width="0.0241%" height="15" fill="rgb(250,172,42)" fg:x="6702" fg:w="14"/><text x="11.7815%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (41 samples, 0.07%)</title><rect x="11.5005%" y="613" width="0.0705%" height="15" fill="rgb(209,34,43)" fg:x="6684" fg:w="41"/><text x="11.7505%" y="623.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (9 samples, 0.02%)</title><rect x="11.5556%" y="597" width="0.0155%" height="15" fill="rgb(223,11,35)" fg:x="6716" fg:w="9"/><text x="11.8056%" y="607.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (6 samples, 0.01%)</title><rect x="11.5608%" y="581" width="0.0103%" height="15" fill="rgb(251,219,26)" fg:x="6719" fg:w="6"/><text x="11.8108%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (152 samples, 0.26%)</title><rect x="11.4489%" y="629" width="0.2615%" height="15" fill="rgb(231,119,3)" fg:x="6654" fg:w="152"/><text x="11.6989%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (81 samples, 0.14%)</title><rect x="11.5711%" y="613" width="0.1394%" height="15" fill="rgb(216,97,11)" fg:x="6725" fg:w="81"/><text x="11.8211%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (77 samples, 0.13%)</title><rect x="11.5780%" y="597" width="0.1325%" height="15" fill="rgb(223,59,9)" fg:x="6729" fg:w="77"/><text x="11.8280%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (14 samples, 0.02%)</title><rect x="11.7105%" y="629" width="0.0241%" height="15" fill="rgb(233,93,31)" fg:x="6806" fg:w="14"/><text x="11.9605%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.01%)</title><rect x="11.7225%" y="613" width="0.0120%" height="15" fill="rgb(239,81,33)" fg:x="6813" fg:w="7"/><text x="11.9725%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="11.7225%" y="597" width="0.0120%" height="15" fill="rgb(213,120,34)" fg:x="6813" fg:w="7"/><text x="11.9725%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (72 samples, 0.12%)</title><rect x="11.7431%" y="629" width="0.1239%" height="15" fill="rgb(243,49,53)" fg:x="6825" fg:w="72"/><text x="11.9931%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (58 samples, 0.10%)</title><rect x="11.7672%" y="613" width="0.0998%" height="15" fill="rgb(247,216,33)" fg:x="6839" fg:w="58"/><text x="12.0172%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (41 samples, 0.07%)</title><rect x="11.9118%" y="613" width="0.0705%" height="15" fill="rgb(226,26,14)" fg:x="6923" fg:w="41"/><text x="12.1618%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (14 samples, 0.02%)</title><rect x="11.9582%" y="597" width="0.0241%" height="15" fill="rgb(215,49,53)" fg:x="6950" fg:w="14"/><text x="12.2082%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (88 samples, 0.15%)</title><rect x="11.9823%" y="613" width="0.1514%" height="15" fill="rgb(245,162,40)" fg:x="6964" fg:w="88"/><text x="12.2323%" y="623.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="12.1234%" y="597" width="0.0103%" height="15" fill="rgb(229,68,17)" fg:x="7046" fg:w="6"/><text x="12.3734%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (197 samples, 0.34%)</title><rect x="11.8670%" y="629" width="0.3390%" height="15" fill="rgb(213,182,10)" fg:x="6897" fg:w="197"/><text x="12.1170%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (42 samples, 0.07%)</title><rect x="12.1337%" y="613" width="0.0723%" height="15" fill="rgb(245,125,30)" fg:x="7052" fg:w="42"/><text x="12.3837%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (42 samples, 0.07%)</title><rect x="12.1337%" y="597" width="0.0723%" height="15" fill="rgb(232,202,2)" fg:x="7052" fg:w="42"/><text x="12.3837%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (31 samples, 0.05%)</title><rect x="12.2490%" y="597" width="0.0533%" height="15" fill="rgb(237,140,51)" fg:x="7119" fg:w="31"/><text x="12.4990%" y="607.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (10 samples, 0.02%)</title><rect x="12.2851%" y="581" width="0.0172%" height="15" fill="rgb(236,157,25)" fg:x="7140" fg:w="10"/><text x="12.5351%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (79 samples, 0.14%)</title><rect x="12.3023%" y="597" width="0.1359%" height="15" fill="rgb(219,209,0)" fg:x="7150" fg:w="79"/><text x="12.5523%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (747 samples, 1.29%)</title><rect x="11.2562%" y="661" width="1.2853%" height="15" fill="rgb(240,116,54)" fg:x="6542" fg:w="747"/><text x="11.5062%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (732 samples, 1.26%)</title><rect x="11.2820%" y="645" width="1.2595%" height="15" fill="rgb(216,10,36)" fg:x="6557" fg:w="732"/><text x="11.5320%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (195 samples, 0.34%)</title><rect x="12.2060%" y="629" width="0.3355%" height="15" fill="rgb(222,72,44)" fg:x="7094" fg:w="195"/><text x="12.4560%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (194 samples, 0.33%)</title><rect x="12.2077%" y="613" width="0.3338%" height="15" fill="rgb(232,159,9)" fg:x="7095" fg:w="194"/><text x="12.4577%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (60 samples, 0.10%)</title><rect x="12.4383%" y="597" width="0.1032%" height="15" fill="rgb(210,39,32)" fg:x="7229" fg:w="60"/><text x="12.6883%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (59 samples, 0.10%)</title><rect x="12.4400%" y="581" width="0.1015%" height="15" fill="rgb(216,194,45)" fg:x="7230" fg:w="59"/><text x="12.6900%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (13 samples, 0.02%)</title><rect x="12.5656%" y="629" width="0.0224%" height="15" fill="rgb(218,18,35)" fg:x="7303" fg:w="13"/><text x="12.8156%" y="639.50"></text></g><g><title>core::ptr::write (13 samples, 0.02%)</title><rect x="12.5656%" y="613" width="0.0224%" height="15" fill="rgb(207,83,51)" fg:x="7303" fg:w="13"/><text x="12.8156%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (29 samples, 0.05%)</title><rect x="12.5656%" y="645" width="0.0499%" height="15" fill="rgb(225,63,43)" fg:x="7303" fg:w="29"/><text x="12.8156%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.03%)</title><rect x="12.5880%" y="629" width="0.0275%" height="15" fill="rgb(207,57,36)" fg:x="7316" fg:w="16"/><text x="12.8380%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.02%)</title><rect x="12.5914%" y="613" width="0.0241%" height="15" fill="rgb(216,99,33)" fg:x="7318" fg:w="14"/><text x="12.8414%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (14 samples, 0.02%)</title><rect x="12.5914%" y="597" width="0.0241%" height="15" fill="rgb(225,42,16)" fg:x="7318" fg:w="14"/><text x="12.8414%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (60 samples, 0.10%)</title><rect x="12.6533%" y="629" width="0.1032%" height="15" fill="rgb(220,201,45)" fg:x="7354" fg:w="60"/><text x="12.9033%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.01%)</title><rect x="12.7445%" y="613" width="0.0120%" height="15" fill="rgb(225,33,4)" fg:x="7407" fg:w="7"/><text x="12.9945%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (89 samples, 0.15%)</title><rect x="12.6155%" y="645" width="0.1531%" height="15" fill="rgb(224,33,50)" fg:x="7332" fg:w="89"/><text x="12.8655%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (7 samples, 0.01%)</title><rect x="12.7566%" y="629" width="0.0120%" height="15" fill="rgb(246,198,51)" fg:x="7414" fg:w="7"/><text x="13.0066%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (10 samples, 0.02%)</title><rect x="12.7790%" y="613" width="0.0172%" height="15" fill="rgb(205,22,4)" fg:x="7427" fg:w="10"/><text x="13.0290%" y="623.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,686 samples, 2.90%)</title><rect x="9.8987%" y="725" width="2.9009%" height="15" fill="rgb(206,3,8)" fg:x="5753" fg:w="1686"/><text x="10.1487%" y="735.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (1,647 samples, 2.83%)</title><rect x="9.9658%" y="709" width="2.8338%" height="15" fill="rgb(251,23,15)" fg:x="5792" fg:w="1647"/><text x="10.2158%" y="719.50">co..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (1,639 samples, 2.82%)</title><rect x="9.9795%" y="693" width="2.8201%" height="15" fill="rgb(252,88,28)" fg:x="5800" fg:w="1639"/><text x="10.2295%" y="703.50">&lt;h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,633 samples, 2.81%)</title><rect x="9.9898%" y="677" width="2.8098%" height="15" fill="rgb(212,127,14)" fg:x="5806" fg:w="1633"/><text x="10.2398%" y="687.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (150 samples, 0.26%)</title><rect x="12.5415%" y="661" width="0.2581%" height="15" fill="rgb(247,145,37)" fg:x="7289" fg:w="150"/><text x="12.7915%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::record_item_insert_at (15 samples, 0.03%)</title><rect x="12.7738%" y="645" width="0.0258%" height="15" fill="rgb(209,117,53)" fg:x="7424" fg:w="15"/><text x="13.0238%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (12 samples, 0.02%)</title><rect x="12.7790%" y="629" width="0.0206%" height="15" fill="rgb(212,90,42)" fg:x="7427" fg:w="12"/><text x="13.0290%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (38 samples, 0.07%)</title><rect x="12.8478%" y="629" width="0.0654%" height="15" fill="rgb(218,164,37)" fg:x="7467" fg:w="38"/><text x="13.0978%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (38 samples, 0.07%)</title><rect x="12.8478%" y="613" width="0.0654%" height="15" fill="rgb(246,65,34)" fg:x="7467" fg:w="38"/><text x="13.0978%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (38 samples, 0.07%)</title><rect x="12.8478%" y="597" width="0.0654%" height="15" fill="rgb(231,100,33)" fg:x="7467" fg:w="38"/><text x="13.0978%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.06%)</title><rect x="12.8512%" y="581" width="0.0619%" height="15" fill="rgb(228,126,14)" fg:x="7469" fg:w="36"/><text x="13.1012%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.06%)</title><rect x="12.8512%" y="565" width="0.0619%" height="15" fill="rgb(215,173,21)" fg:x="7469" fg:w="36"/><text x="13.1012%" y="575.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.06%)</title><rect x="12.8512%" y="549" width="0.0619%" height="15" fill="rgb(210,6,40)" fg:x="7469" fg:w="36"/><text x="13.1012%" y="559.50"></text></g><g><title>malloc (35 samples, 0.06%)</title><rect x="12.8529%" y="533" width="0.0602%" height="15" fill="rgb(212,48,18)" fg:x="7470" fg:w="35"/><text x="13.1029%" y="543.50"></text></g><g><title>[libc.so.6] (28 samples, 0.05%)</title><rect x="12.8650%" y="517" width="0.0482%" height="15" fill="rgb(230,214,11)" fg:x="7477" fg:w="28"/><text x="13.1150%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,208 samples, 3.80%)</title><rect x="9.3429%" y="773" width="3.7991%" height="15" fill="rgb(254,105,39)" fg:x="5430" fg:w="2208"/><text x="9.5929%" y="783.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (2,202 samples, 3.79%)</title><rect x="9.3532%" y="757" width="3.7888%" height="15" fill="rgb(245,158,5)" fg:x="5436" fg:w="2202"/><text x="9.6032%" y="767.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,923 samples, 3.31%)</title><rect x="9.8333%" y="741" width="3.3087%" height="15" fill="rgb(249,208,11)" fg:x="5715" fg:w="1923"/><text x="10.0833%" y="751.50">cor..</text></g><g><title>core::ops::function::FnMut::call_mut (199 samples, 0.34%)</title><rect x="12.7996%" y="725" width="0.3424%" height="15" fill="rgb(210,39,28)" fg:x="7439" fg:w="199"/><text x="13.0496%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (190 samples, 0.33%)</title><rect x="12.8151%" y="709" width="0.3269%" height="15" fill="rgb(211,56,53)" fg:x="7448" fg:w="190"/><text x="13.0651%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (171 samples, 0.29%)</title><rect x="12.8478%" y="693" width="0.2942%" height="15" fill="rgb(226,201,30)" fg:x="7467" fg:w="171"/><text x="13.0978%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (171 samples, 0.29%)</title><rect x="12.8478%" y="677" width="0.2942%" height="15" fill="rgb(239,101,34)" fg:x="7467" fg:w="171"/><text x="13.0978%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (171 samples, 0.29%)</title><rect x="12.8478%" y="661" width="0.2942%" height="15" fill="rgb(226,209,5)" fg:x="7467" fg:w="171"/><text x="13.0978%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (171 samples, 0.29%)</title><rect x="12.8478%" y="645" width="0.2942%" height="15" fill="rgb(250,105,47)" fg:x="7467" fg:w="171"/><text x="13.0978%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (133 samples, 0.23%)</title><rect x="12.9132%" y="629" width="0.2288%" height="15" fill="rgb(230,72,3)" fg:x="7505" fg:w="133"/><text x="13.1632%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (133 samples, 0.23%)</title><rect x="12.9132%" y="613" width="0.2288%" height="15" fill="rgb(232,218,39)" fg:x="7505" fg:w="133"/><text x="13.1632%" y="623.50"></text></g><g><title>[libc.so.6] (132 samples, 0.23%)</title><rect x="12.9149%" y="597" width="0.2271%" height="15" fill="rgb(248,166,6)" fg:x="7506" fg:w="132"/><text x="13.1649%" y="607.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="13.1420%" y="741" width="0.0103%" height="15" fill="rgb(247,89,20)" fg:x="7638" fg:w="6"/><text x="13.3920%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,220 samples, 3.82%)</title><rect x="9.3343%" y="789" width="3.8197%" height="15" fill="rgb(248,130,54)" fg:x="5425" fg:w="2220"/><text x="9.5843%" y="799.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::map (7 samples, 0.01%)</title><rect x="13.1420%" y="773" width="0.0120%" height="15" fill="rgb(234,196,4)" fg:x="7638" fg:w="7"/><text x="13.3920%" y="783.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (7 samples, 0.01%)</title><rect x="13.1420%" y="757" width="0.0120%" height="15" fill="rgb(250,143,31)" fg:x="7638" fg:w="7"/><text x="13.3920%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2,235 samples, 3.85%)</title><rect x="9.3136%" y="821" width="3.8456%" height="15" fill="rgb(211,110,34)" fg:x="5413" fg:w="2235"/><text x="9.5636%" y="831.50">core..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,232 samples, 3.84%)</title><rect x="9.3188%" y="805" width="3.8404%" height="15" fill="rgb(215,124,48)" fg:x="5416" fg:w="2232"/><text x="9.5688%" y="815.50">&lt;cor..</text></g><g><title>core::cmp::Ord::max (13 samples, 0.02%)</title><rect x="13.1885%" y="757" width="0.0224%" height="15" fill="rgb(216,46,13)" fg:x="7665" fg:w="13"/><text x="13.4385%" y="767.50"></text></g><g><title>core::cmp::max_by (13 samples, 0.02%)</title><rect x="13.1885%" y="741" width="0.0224%" height="15" fill="rgb(205,184,25)" fg:x="7665" fg:w="13"/><text x="13.4385%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="13.1971%" y="725" width="0.0138%" height="15" fill="rgb(228,1,10)" fg:x="7670" fg:w="8"/><text x="13.4471%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="13.3450%" y="677" width="0.0206%" height="15" fill="rgb(213,116,27)" fg:x="7756" fg:w="12"/><text x="13.5950%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (10 samples, 0.02%)</title><rect x="13.3657%" y="677" width="0.0172%" height="15" fill="rgb(241,95,50)" fg:x="7768" fg:w="10"/><text x="13.6157%" y="687.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (34 samples, 0.06%)</title><rect x="13.3261%" y="693" width="0.0585%" height="15" fill="rgb(238,48,32)" fg:x="7745" fg:w="34"/><text x="13.5761%" y="703.50"></text></g><g><title>alloc::alloc::alloc (22 samples, 0.04%)</title><rect x="13.4156%" y="645" width="0.0379%" height="15" fill="rgb(235,113,49)" fg:x="7797" fg:w="22"/><text x="13.6656%" y="655.50"></text></g><g><title>malloc (20 samples, 0.03%)</title><rect x="13.4190%" y="629" width="0.0344%" height="15" fill="rgb(205,127,43)" fg:x="7799" fg:w="20"/><text x="13.6690%" y="639.50"></text></g><g><title>[libc.so.6] (14 samples, 0.02%)</title><rect x="13.4293%" y="613" width="0.0241%" height="15" fill="rgb(250,162,2)" fg:x="7805" fg:w="14"/><text x="13.6793%" y="623.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (50 samples, 0.09%)</title><rect x="13.3846%" y="693" width="0.0860%" height="15" fill="rgb(220,13,41)" fg:x="7779" fg:w="50"/><text x="13.6346%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (42 samples, 0.07%)</title><rect x="13.3984%" y="677" width="0.0723%" height="15" fill="rgb(249,221,25)" fg:x="7787" fg:w="42"/><text x="13.6484%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (42 samples, 0.07%)</title><rect x="13.3984%" y="661" width="0.0723%" height="15" fill="rgb(215,208,19)" fg:x="7787" fg:w="42"/><text x="13.6484%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (90 samples, 0.15%)</title><rect x="13.3175%" y="709" width="0.1549%" height="15" fill="rgb(236,175,2)" fg:x="7740" fg:w="90"/><text x="13.5675%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (116 samples, 0.20%)</title><rect x="13.2865%" y="725" width="0.1996%" height="15" fill="rgb(241,52,2)" fg:x="7722" fg:w="116"/><text x="13.5365%" y="735.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (8 samples, 0.01%)</title><rect x="13.4724%" y="709" width="0.0138%" height="15" fill="rgb(248,140,14)" fg:x="7830" fg:w="8"/><text x="13.7224%" y="719.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2,437 samples, 4.19%)</title><rect x="9.2964%" y="837" width="4.1931%" height="15" fill="rgb(253,22,42)" fg:x="5403" fg:w="2437"/><text x="9.5464%" y="847.50">&lt;hash..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (192 samples, 0.33%)</title><rect x="13.1592%" y="821" width="0.3304%" height="15" fill="rgb(234,61,47)" fg:x="7648" fg:w="192"/><text x="13.4092%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (192 samples, 0.33%)</title><rect x="13.1592%" y="805" width="0.3304%" height="15" fill="rgb(208,226,15)" fg:x="7648" fg:w="192"/><text x="13.4092%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (188 samples, 0.32%)</title><rect x="13.1661%" y="789" width="0.3235%" height="15" fill="rgb(217,221,4)" fg:x="7652" fg:w="188"/><text x="13.4161%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (181 samples, 0.31%)</title><rect x="13.1781%" y="773" width="0.3114%" height="15" fill="rgb(212,174,34)" fg:x="7659" fg:w="181"/><text x="13.4281%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (161 samples, 0.28%)</title><rect x="13.2125%" y="757" width="0.2770%" height="15" fill="rgb(253,83,4)" fg:x="7679" fg:w="161"/><text x="13.4625%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (136 samples, 0.23%)</title><rect x="13.2556%" y="741" width="0.2340%" height="15" fill="rgb(250,195,49)" fg:x="7704" fg:w="136"/><text x="13.5056%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,453 samples, 4.22%)</title><rect x="9.2741%" y="869" width="4.2207%" height="15" fill="rgb(241,192,25)" fg:x="5390" fg:w="2453"/><text x="9.5241%" y="879.50">&lt;std:..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2,451 samples, 4.22%)</title><rect x="9.2775%" y="853" width="4.2172%" height="15" fill="rgb(208,124,10)" fg:x="5392" fg:w="2451"/><text x="9.5275%" y="863.50">&lt;hash..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,515 samples, 4.33%)</title><rect x="9.1984%" y="901" width="4.3273%" height="15" fill="rgb(222,33,0)" fg:x="5346" fg:w="2515"/><text x="9.4484%" y="911.50">core:..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,514 samples, 4.33%)</title><rect x="9.2001%" y="885" width="4.3256%" height="15" fill="rgb(234,209,28)" fg:x="5347" fg:w="2514"/><text x="9.4501%" y="895.50">&lt;std:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::with_hasher (14 samples, 0.02%)</title><rect x="13.5016%" y="869" width="0.0241%" height="15" fill="rgb(224,11,23)" fg:x="7847" fg:w="14"/><text x="13.7516%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S&gt;::with_hasher (14 samples, 0.02%)</title><rect x="13.5016%" y="853" width="0.0241%" height="15" fill="rgb(232,99,1)" fg:x="7847" fg:w="14"/><text x="13.7516%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (9 samples, 0.02%)</title><rect x="13.5102%" y="837" width="0.0155%" height="15" fill="rgb(237,95,45)" fg:x="7852" fg:w="9"/><text x="13.7602%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (6 samples, 0.01%)</title><rect x="13.5154%" y="821" width="0.0103%" height="15" fill="rgb(208,109,11)" fg:x="7855" fg:w="6"/><text x="13.7654%" y="831.50"></text></g><g><title>[libc.so.6] (8 samples, 0.01%)</title><rect x="13.5481%" y="837" width="0.0138%" height="15" fill="rgb(216,190,48)" fg:x="7874" fg:w="8"/><text x="13.7981%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.01%)</title><rect x="13.5773%" y="821" width="0.0120%" height="15" fill="rgb(251,171,36)" fg:x="7891" fg:w="7"/><text x="13.8273%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (39 samples, 0.07%)</title><rect x="13.5997%" y="805" width="0.0671%" height="15" fill="rgb(230,62,22)" fg:x="7904" fg:w="39"/><text x="13.8497%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (36 samples, 0.06%)</title><rect x="13.6048%" y="789" width="0.0619%" height="15" fill="rgb(225,114,35)" fg:x="7907" fg:w="36"/><text x="13.8548%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (75 samples, 0.13%)</title><rect x="13.5894%" y="821" width="0.1290%" height="15" fill="rgb(215,118,42)" fg:x="7898" fg:w="75"/><text x="13.8394%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (30 samples, 0.05%)</title><rect x="13.6668%" y="805" width="0.0516%" height="15" fill="rgb(243,119,21)" fg:x="7943" fg:w="30"/><text x="13.9168%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (27 samples, 0.05%)</title><rect x="13.6719%" y="789" width="0.0465%" height="15" fill="rgb(252,177,53)" fg:x="7946" fg:w="27"/><text x="13.9219%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.05%)</title><rect x="13.6719%" y="773" width="0.0465%" height="15" fill="rgb(237,209,29)" fg:x="7946" fg:w="27"/><text x="13.9219%" y="783.50"></text></g><g><title>aes_grinder::algo::Algo::get_all_variables (2,684 samples, 4.62%)</title><rect x="9.1726%" y="917" width="4.6181%" height="15" fill="rgb(212,65,23)" fg:x="5331" fg:w="2684"/><text x="9.4226%" y="927.50">aes_g..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (154 samples, 0.26%)</title><rect x="13.5257%" y="901" width="0.2650%" height="15" fill="rgb(230,222,46)" fg:x="7861" fg:w="154"/><text x="13.7757%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (148 samples, 0.25%)</title><rect x="13.5360%" y="885" width="0.2546%" height="15" fill="rgb(215,135,32)" fg:x="7867" fg:w="148"/><text x="13.7860%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (143 samples, 0.25%)</title><rect x="13.5446%" y="869" width="0.2460%" height="15" fill="rgb(246,101,22)" fg:x="7872" fg:w="143"/><text x="13.7946%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (141 samples, 0.24%)</title><rect x="13.5481%" y="853" width="0.2426%" height="15" fill="rgb(206,107,13)" fg:x="7874" fg:w="141"/><text x="13.7981%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (133 samples, 0.23%)</title><rect x="13.5618%" y="837" width="0.2288%" height="15" fill="rgb(250,100,44)" fg:x="7882" fg:w="133"/><text x="13.8118%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (42 samples, 0.07%)</title><rect x="13.7184%" y="821" width="0.0723%" height="15" fill="rgb(231,147,38)" fg:x="7973" fg:w="42"/><text x="13.9684%" y="831.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.02%)</title><rect x="13.8234%" y="821" width="0.0172%" height="15" fill="rgb(229,8,40)" fg:x="8034" fg:w="10"/><text x="14.0734%" y="831.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="13.8251%" y="805" width="0.0155%" height="15" fill="rgb(221,135,30)" fg:x="8035" fg:w="9"/><text x="14.0751%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.02%)</title><rect x="13.9679%" y="773" width="0.0155%" height="15" fill="rgb(249,193,18)" fg:x="8118" fg:w="9"/><text x="14.2179%" y="783.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (20 samples, 0.03%)</title><rect x="14.0161%" y="757" width="0.0344%" height="15" fill="rgb(209,133,39)" fg:x="8146" fg:w="20"/><text x="14.2661%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (86 samples, 0.15%)</title><rect x="13.9283%" y="789" width="0.1480%" height="15" fill="rgb(232,100,14)" fg:x="8095" fg:w="86"/><text x="14.1783%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (54 samples, 0.09%)</title><rect x="13.9834%" y="773" width="0.0929%" height="15" fill="rgb(224,185,1)" fg:x="8127" fg:w="54"/><text x="14.2334%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (15 samples, 0.03%)</title><rect x="14.0505%" y="757" width="0.0258%" height="15" fill="rgb(223,139,8)" fg:x="8166" fg:w="15"/><text x="14.3005%" y="767.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (8 samples, 0.01%)</title><rect x="14.0625%" y="741" width="0.0138%" height="15" fill="rgb(232,213,38)" fg:x="8173" fg:w="8"/><text x="14.3125%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (45 samples, 0.08%)</title><rect x="14.0780%" y="789" width="0.0774%" height="15" fill="rgb(207,94,22)" fg:x="8182" fg:w="45"/><text x="14.3280%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (18 samples, 0.03%)</title><rect x="14.1245%" y="773" width="0.0310%" height="15" fill="rgb(219,183,54)" fg:x="8209" fg:w="18"/><text x="14.3745%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (184 samples, 0.32%)</title><rect x="13.8406%" y="821" width="0.3166%" height="15" fill="rgb(216,185,54)" fg:x="8044" fg:w="184"/><text x="14.0906%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (158 samples, 0.27%)</title><rect x="13.8853%" y="805" width="0.2719%" height="15" fill="rgb(254,217,39)" fg:x="8070" fg:w="158"/><text x="14.1353%" y="815.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="14.1572%" y="821" width="0.0120%" height="15" fill="rgb(240,178,23)" fg:x="8228" fg:w="7"/><text x="14.4072%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="14.2225%" y="741" width="0.0275%" height="15" fill="rgb(218,11,47)" fg:x="8266" fg:w="16"/><text x="14.4725%" y="751.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (16 samples, 0.03%)</title><rect x="14.2225%" y="725" width="0.0275%" height="15" fill="rgb(218,51,51)" fg:x="8266" fg:w="16"/><text x="14.4725%" y="735.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (16 samples, 0.03%)</title><rect x="14.2225%" y="709" width="0.0275%" height="15" fill="rgb(238,126,27)" fg:x="8266" fg:w="16"/><text x="14.4725%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.09%)</title><rect x="14.2759%" y="709" width="0.0895%" height="15" fill="rgb(249,202,22)" fg:x="8297" fg:w="52"/><text x="14.5259%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.07%)</title><rect x="14.2983%" y="693" width="0.0671%" height="15" fill="rgb(254,195,49)" fg:x="8310" fg:w="39"/><text x="14.5483%" y="703.50"></text></g><g><title>cfree (34 samples, 0.06%)</title><rect x="14.3069%" y="677" width="0.0585%" height="15" fill="rgb(208,123,14)" fg:x="8315" fg:w="34"/><text x="14.5569%" y="687.50"></text></g><g><title>[libc.so.6] (24 samples, 0.04%)</title><rect x="14.3241%" y="661" width="0.0413%" height="15" fill="rgb(224,200,8)" fg:x="8325" fg:w="24"/><text x="14.5741%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (13 samples, 0.02%)</title><rect x="14.4135%" y="693" width="0.0224%" height="15" fill="rgb(217,61,36)" fg:x="8377" fg:w="13"/><text x="14.6635%" y="703.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (13 samples, 0.02%)</title><rect x="14.4135%" y="677" width="0.0224%" height="15" fill="rgb(206,35,45)" fg:x="8377" fg:w="13"/><text x="14.6635%" y="687.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (13 samples, 0.02%)</title><rect x="14.4135%" y="661" width="0.0224%" height="15" fill="rgb(217,65,33)" fg:x="8377" fg:w="13"/><text x="14.6635%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (13 samples, 0.02%)</title><rect x="14.4135%" y="645" width="0.0224%" height="15" fill="rgb(222,158,48)" fg:x="8377" fg:w="13"/><text x="14.6635%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (160 samples, 0.28%)</title><rect x="14.1761%" y="805" width="0.2753%" height="15" fill="rgb(254,2,54)" fg:x="8239" fg:w="160"/><text x="14.4261%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,())&gt; (154 samples, 0.26%)</title><rect x="14.1864%" y="789" width="0.2650%" height="15" fill="rgb(250,143,38)" fg:x="8245" fg:w="154"/><text x="14.4364%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (152 samples, 0.26%)</title><rect x="14.1899%" y="773" width="0.2615%" height="15" fill="rgb(248,25,0)" fg:x="8247" fg:w="152"/><text x="14.4399%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (139 samples, 0.24%)</title><rect x="14.2122%" y="757" width="0.2392%" height="15" fill="rgb(206,152,27)" fg:x="8260" fg:w="139"/><text x="14.4622%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (117 samples, 0.20%)</title><rect x="14.2501%" y="741" width="0.2013%" height="15" fill="rgb(240,77,30)" fg:x="8282" fg:w="117"/><text x="14.5001%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.19%)</title><rect x="14.2621%" y="725" width="0.1893%" height="15" fill="rgb(231,5,3)" fg:x="8289" fg:w="110"/><text x="14.5121%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (50 samples, 0.09%)</title><rect x="14.3654%" y="709" width="0.0860%" height="15" fill="rgb(207,226,32)" fg:x="8349" fg:w="50"/><text x="14.6154%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (180 samples, 0.31%)</title><rect x="14.1692%" y="821" width="0.3097%" height="15" fill="rgb(222,207,47)" fg:x="8235" fg:w="180"/><text x="14.4192%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.03%)</title><rect x="14.4514%" y="805" width="0.0275%" height="15" fill="rgb(229,115,45)" fg:x="8399" fg:w="16"/><text x="14.7014%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.02%)</title><rect x="14.4565%" y="789" width="0.0224%" height="15" fill="rgb(224,191,6)" fg:x="8402" fg:w="13"/><text x="14.7065%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.02%)</title><rect x="14.4617%" y="773" width="0.0172%" height="15" fill="rgb(230,227,24)" fg:x="8405" fg:w="10"/><text x="14.7117%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.02%)</title><rect x="14.4978%" y="805" width="0.0155%" height="15" fill="rgb(228,80,19)" fg:x="8426" fg:w="9"/><text x="14.7478%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (442 samples, 0.76%)</title><rect x="13.8027%" y="837" width="0.7605%" height="15" fill="rgb(247,229,0)" fg:x="8022" fg:w="442"/><text x="14.0527%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (49 samples, 0.08%)</title><rect x="14.4789%" y="821" width="0.0843%" height="15" fill="rgb(237,194,15)" fg:x="8415" fg:w="49"/><text x="14.7289%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (29 samples, 0.05%)</title><rect x="14.5133%" y="805" width="0.0499%" height="15" fill="rgb(219,203,20)" fg:x="8435" fg:w="29"/><text x="14.7633%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (22 samples, 0.04%)</title><rect x="14.5254%" y="789" width="0.0379%" height="15" fill="rgb(234,128,8)" fg:x="8442" fg:w="22"/><text x="14.7754%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (21 samples, 0.04%)</title><rect x="14.5271%" y="773" width="0.0361%" height="15" fill="rgb(248,202,8)" fg:x="8443" fg:w="21"/><text x="14.7771%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (21 samples, 0.04%)</title><rect x="14.5271%" y="757" width="0.0361%" height="15" fill="rgb(206,104,37)" fg:x="8443" fg:w="21"/><text x="14.7771%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.02%)</title><rect x="14.5735%" y="805" width="0.0189%" height="15" fill="rgb(223,8,27)" fg:x="8470" fg:w="11"/><text x="14.8235%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.01%)</title><rect x="14.5787%" y="789" width="0.0138%" height="15" fill="rgb(216,217,28)" fg:x="8473" fg:w="8"/><text x="14.8287%" y="799.50"></text></g><g><title>cfree (8 samples, 0.01%)</title><rect x="14.5787%" y="773" width="0.0138%" height="15" fill="rgb(249,199,1)" fg:x="8473" fg:w="8"/><text x="14.8287%" y="783.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="14.5822%" y="757" width="0.0103%" height="15" fill="rgb(240,85,17)" fg:x="8475" fg:w="6"/><text x="14.8322%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (10 samples, 0.02%)</title><rect x="14.6355%" y="773" width="0.0172%" height="15" fill="rgb(206,108,45)" fg:x="8506" fg:w="10"/><text x="14.8855%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (504 samples, 0.87%)</title><rect x="13.7907%" y="917" width="0.8672%" height="15" fill="rgb(245,210,41)" fg:x="8015" fg:w="504"/><text x="14.0407%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (503 samples, 0.87%)</title><rect x="13.7924%" y="901" width="0.8655%" height="15" fill="rgb(206,13,37)" fg:x="8016" fg:w="503"/><text x="14.0424%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (502 samples, 0.86%)</title><rect x="13.7941%" y="885" width="0.8637%" height="15" fill="rgb(250,61,18)" fg:x="8017" fg:w="502"/><text x="14.0441%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (500 samples, 0.86%)</title><rect x="13.7976%" y="869" width="0.8603%" height="15" fill="rgb(235,172,48)" fg:x="8019" fg:w="500"/><text x="14.0476%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (500 samples, 0.86%)</title><rect x="13.7976%" y="853" width="0.8603%" height="15" fill="rgb(249,201,17)" fg:x="8019" fg:w="500"/><text x="14.0476%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (55 samples, 0.09%)</title><rect x="14.5632%" y="837" width="0.0946%" height="15" fill="rgb(219,208,6)" fg:x="8464" fg:w="55"/><text x="14.8132%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (53 samples, 0.09%)</title><rect x="14.5667%" y="821" width="0.0912%" height="15" fill="rgb(248,31,23)" fg:x="8466" fg:w="53"/><text x="14.8167%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::allocation_info (38 samples, 0.07%)</title><rect x="14.5925%" y="805" width="0.0654%" height="15" fill="rgb(245,15,42)" fg:x="8481" fg:w="38"/><text x="14.8425%" y="815.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (27 samples, 0.05%)</title><rect x="14.6114%" y="789" width="0.0465%" height="15" fill="rgb(222,217,39)" fg:x="8492" fg:w="27"/><text x="14.8614%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="14.7060%" y="773" width="0.0155%" height="15" fill="rgb(210,219,27)" fg:x="8547" fg:w="9"/><text x="14.9560%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.03%)</title><rect x="14.6974%" y="805" width="0.0344%" height="15" fill="rgb(252,166,36)" fg:x="8542" fg:w="20"/><text x="14.9474%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (17 samples, 0.03%)</title><rect x="14.7026%" y="789" width="0.0293%" height="15" fill="rgb(245,132,34)" fg:x="8545" fg:w="17"/><text x="14.9526%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (6 samples, 0.01%)</title><rect x="14.7215%" y="773" width="0.0103%" height="15" fill="rgb(236,54,3)" fg:x="8556" fg:w="6"/><text x="14.9715%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="14.6940%" y="869" width="0.0413%" height="15" fill="rgb(241,173,43)" fg:x="8540" fg:w="24"/><text x="14.9440%" y="879.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="14.6940%" y="853" width="0.0413%" height="15" fill="rgb(215,190,9)" fg:x="8540" fg:w="24"/><text x="14.9440%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="14.6940%" y="837" width="0.0413%" height="15" fill="rgb(242,101,16)" fg:x="8540" fg:w="24"/><text x="14.9440%" y="847.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.04%)</title><rect x="14.6957%" y="821" width="0.0396%" height="15" fill="rgb(223,190,21)" fg:x="8541" fg:w="23"/><text x="14.9457%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="14.7439%" y="693" width="0.0120%" height="15" fill="rgb(215,228,25)" fg:x="8569" fg:w="7"/><text x="14.9939%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (28 samples, 0.05%)</title><rect x="14.7387%" y="741" width="0.0482%" height="15" fill="rgb(225,36,22)" fg:x="8566" fg:w="28"/><text x="14.9887%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (28 samples, 0.05%)</title><rect x="14.7387%" y="725" width="0.0482%" height="15" fill="rgb(251,106,46)" fg:x="8566" fg:w="28"/><text x="14.9887%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (28 samples, 0.05%)</title><rect x="14.7387%" y="709" width="0.0482%" height="15" fill="rgb(208,90,1)" fg:x="8566" fg:w="28"/><text x="14.9887%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (18 samples, 0.03%)</title><rect x="14.7559%" y="693" width="0.0310%" height="15" fill="rgb(243,10,4)" fg:x="8576" fg:w="18"/><text x="15.0059%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.02%)</title><rect x="14.7869%" y="741" width="0.0241%" height="15" fill="rgb(212,137,27)" fg:x="8594" fg:w="14"/><text x="15.0369%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (11 samples, 0.02%)</title><rect x="14.7921%" y="725" width="0.0189%" height="15" fill="rgb(231,220,49)" fg:x="8597" fg:w="11"/><text x="15.0421%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.01%)</title><rect x="14.7989%" y="709" width="0.0120%" height="15" fill="rgb(237,96,20)" fg:x="8601" fg:w="7"/><text x="15.0489%" y="719.50"></text></g><g><title>[libc.so.6] (7 samples, 0.01%)</title><rect x="14.7989%" y="693" width="0.0120%" height="15" fill="rgb(239,229,30)" fg:x="8601" fg:w="7"/><text x="15.0489%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.03%)</title><rect x="14.8127%" y="645" width="0.0258%" height="15" fill="rgb(219,65,33)" fg:x="8609" fg:w="15"/><text x="15.0627%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (62 samples, 0.11%)</title><rect x="14.7370%" y="773" width="0.1067%" height="15" fill="rgb(243,134,7)" fg:x="8565" fg:w="62"/><text x="14.9870%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (62 samples, 0.11%)</title><rect x="14.7370%" y="757" width="0.1067%" height="15" fill="rgb(216,177,54)" fg:x="8565" fg:w="62"/><text x="14.9870%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (19 samples, 0.03%)</title><rect x="14.8110%" y="741" width="0.0327%" height="15" fill="rgb(211,160,20)" fg:x="8608" fg:w="19"/><text x="15.0610%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (19 samples, 0.03%)</title><rect x="14.8110%" y="725" width="0.0327%" height="15" fill="rgb(239,85,39)" fg:x="8608" fg:w="19"/><text x="15.0610%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (19 samples, 0.03%)</title><rect x="14.8110%" y="709" width="0.0327%" height="15" fill="rgb(232,125,22)" fg:x="8608" fg:w="19"/><text x="15.0610%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (19 samples, 0.03%)</title><rect x="14.8110%" y="693" width="0.0327%" height="15" fill="rgb(244,57,34)" fg:x="8608" fg:w="19"/><text x="15.0610%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (18 samples, 0.03%)</title><rect x="14.8127%" y="677" width="0.0310%" height="15" fill="rgb(214,203,32)" fg:x="8609" fg:w="18"/><text x="15.0627%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (18 samples, 0.03%)</title><rect x="14.8127%" y="661" width="0.0310%" height="15" fill="rgb(207,58,43)" fg:x="8609" fg:w="18"/><text x="15.0627%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (8 samples, 0.01%)</title><rect x="14.8729%" y="709" width="0.0138%" height="15" fill="rgb(215,193,15)" fg:x="8644" fg:w="8"/><text x="15.1229%" y="719.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (8 samples, 0.01%)</title><rect x="14.8729%" y="693" width="0.0138%" height="15" fill="rgb(232,15,44)" fg:x="8644" fg:w="8"/><text x="15.1229%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.01%)</title><rect x="14.8747%" y="677" width="0.0120%" height="15" fill="rgb(212,3,48)" fg:x="8645" fg:w="7"/><text x="15.1247%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (10 samples, 0.02%)</title><rect x="14.8712%" y="725" width="0.0172%" height="15" fill="rgb(218,128,7)" fg:x="8643" fg:w="10"/><text x="15.1212%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.01%)</title><rect x="14.8884%" y="725" width="0.0103%" height="15" fill="rgb(226,216,39)" fg:x="8653" fg:w="6"/><text x="15.1384%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.01%)</title><rect x="14.8884%" y="709" width="0.0103%" height="15" fill="rgb(243,47,51)" fg:x="8653" fg:w="6"/><text x="15.1384%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (17 samples, 0.03%)</title><rect x="14.8987%" y="725" width="0.0293%" height="15" fill="rgb(241,183,40)" fg:x="8659" fg:w="17"/><text x="15.1487%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (8 samples, 0.01%)</title><rect x="14.9142%" y="709" width="0.0138%" height="15" fill="rgb(231,217,32)" fg:x="8668" fg:w="8"/><text x="15.1642%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (7 samples, 0.01%)</title><rect x="14.9159%" y="693" width="0.0120%" height="15" fill="rgb(229,61,38)" fg:x="8669" fg:w="7"/><text x="15.1659%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (164 samples, 0.28%)</title><rect x="14.6665%" y="901" width="0.2822%" height="15" fill="rgb(225,210,5)" fg:x="8524" fg:w="164"/><text x="14.9165%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (163 samples, 0.28%)</title><rect x="14.6682%" y="885" width="0.2805%" height="15" fill="rgb(231,79,45)" fg:x="8525" fg:w="163"/><text x="14.9182%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (124 samples, 0.21%)</title><rect x="14.7353%" y="869" width="0.2134%" height="15" fill="rgb(224,100,7)" fg:x="8564" fg:w="124"/><text x="14.9853%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset::_{{closure}} (124 samples, 0.21%)</title><rect x="14.7353%" y="853" width="0.2134%" height="15" fill="rgb(241,198,18)" fg:x="8564" fg:w="124"/><text x="14.9853%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (124 samples, 0.21%)</title><rect x="14.7353%" y="837" width="0.2134%" height="15" fill="rgb(252,97,53)" fg:x="8564" fg:w="124"/><text x="14.9853%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (124 samples, 0.21%)</title><rect x="14.7353%" y="821" width="0.2134%" height="15" fill="rgb(220,88,7)" fg:x="8564" fg:w="124"/><text x="14.9853%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (124 samples, 0.21%)</title><rect x="14.7353%" y="805" width="0.2134%" height="15" fill="rgb(213,176,14)" fg:x="8564" fg:w="124"/><text x="14.9853%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (123 samples, 0.21%)</title><rect x="14.7370%" y="789" width="0.2116%" height="15" fill="rgb(246,73,7)" fg:x="8565" fg:w="123"/><text x="14.9870%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (61 samples, 0.10%)</title><rect x="14.8437%" y="773" width="0.1050%" height="15" fill="rgb(245,64,36)" fg:x="8627" fg:w="61"/><text x="15.0937%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (59 samples, 0.10%)</title><rect x="14.8471%" y="757" width="0.1015%" height="15" fill="rgb(245,80,10)" fg:x="8629" fg:w="59"/><text x="15.0971%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (56 samples, 0.10%)</title><rect x="14.8523%" y="741" width="0.0964%" height="15" fill="rgb(232,107,50)" fg:x="8632" fg:w="56"/><text x="15.1023%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (12 samples, 0.02%)</title><rect x="14.9280%" y="725" width="0.0206%" height="15" fill="rgb(253,3,0)" fg:x="8676" fg:w="12"/><text x="15.1780%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (11 samples, 0.02%)</title><rect x="14.9297%" y="709" width="0.0189%" height="15" fill="rgb(212,99,53)" fg:x="8677" fg:w="11"/><text x="15.1797%" y="719.50"></text></g><g><title>aes_grinder::exaustive_search::update_queue::_{{closure}} (6,559 samples, 11.29%)</title><rect x="3.6993%" y="933" width="11.2855%" height="15" fill="rgb(249,111,54)" fg:x="2150" fg:w="6559"/><text x="3.9493%" y="943.50">aes_grinder::exau..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset (190 samples, 0.33%)</title><rect x="14.6579%" y="917" width="0.3269%" height="15" fill="rgb(249,55,30)" fg:x="8519" fg:w="190"/><text x="14.9079%" y="927.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (21 samples, 0.04%)</title><rect x="14.9486%" y="901" width="0.0361%" height="15" fill="rgb(237,47,42)" fg:x="8688" fg:w="21"/><text x="15.1986%" y="911.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (21 samples, 0.04%)</title><rect x="14.9486%" y="885" width="0.0361%" height="15" fill="rgb(211,20,18)" fg:x="8688" fg:w="21"/><text x="15.1986%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (20 samples, 0.03%)</title><rect x="14.9504%" y="869" width="0.0344%" height="15" fill="rgb(231,203,46)" fg:x="8689" fg:w="20"/><text x="15.2004%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (20 samples, 0.03%)</title><rect x="14.9504%" y="853" width="0.0344%" height="15" fill="rgb(237,142,3)" fg:x="8689" fg:w="20"/><text x="15.2004%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17 samples, 0.03%)</title><rect x="14.9555%" y="837" width="0.0293%" height="15" fill="rgb(241,107,1)" fg:x="8692" fg:w="17"/><text x="15.2055%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (8 samples, 0.01%)</title><rect x="14.9710%" y="821" width="0.0138%" height="15" fill="rgb(229,83,13)" fg:x="8701" fg:w="8"/><text x="15.2210%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (7 samples, 0.01%)</title><rect x="14.9727%" y="805" width="0.0120%" height="15" fill="rgb(241,91,40)" fg:x="8702" fg:w="7"/><text x="15.2227%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (7 samples, 0.01%)</title><rect x="14.9727%" y="789" width="0.0120%" height="15" fill="rgb(225,3,45)" fg:x="8702" fg:w="7"/><text x="15.2227%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (7 samples, 0.01%)</title><rect x="14.9727%" y="773" width="0.0120%" height="15" fill="rgb(244,223,14)" fg:x="8702" fg:w="7"/><text x="15.2227%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="15.0364%" y="725" width="0.0103%" height="15" fill="rgb(224,124,37)" fg:x="8739" fg:w="6"/><text x="15.2864%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.02%)</title><rect x="15.0364%" y="773" width="0.0241%" height="15" fill="rgb(251,171,30)" fg:x="8739" fg:w="14"/><text x="15.2864%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.02%)</title><rect x="15.0364%" y="757" width="0.0241%" height="15" fill="rgb(236,46,54)" fg:x="8739" fg:w="14"/><text x="15.2864%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.02%)</title><rect x="15.0364%" y="741" width="0.0241%" height="15" fill="rgb(245,213,5)" fg:x="8739" fg:w="14"/><text x="15.2864%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="15.0467%" y="725" width="0.0138%" height="15" fill="rgb(230,144,27)" fg:x="8745" fg:w="8"/><text x="15.2967%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="15.2515%" y="357" width="0.0155%" height="15" fill="rgb(220,86,6)" fg:x="8864" fg:w="9"/><text x="15.5015%" y="367.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (29 samples, 0.05%)</title><rect x="15.2222%" y="469" width="0.0499%" height="15" fill="rgb(240,20,13)" fg:x="8847" fg:w="29"/><text x="15.4722%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (21 samples, 0.04%)</title><rect x="15.2360%" y="453" width="0.0361%" height="15" fill="rgb(217,89,34)" fg:x="8855" fg:w="21"/><text x="15.4860%" y="463.50"></text></g><g><title>core::hash::Hasher::write_isize (21 samples, 0.04%)</title><rect x="15.2360%" y="437" width="0.0361%" height="15" fill="rgb(229,13,5)" fg:x="8855" fg:w="21"/><text x="15.4860%" y="447.50"></text></g><g><title>core::hash::Hasher::write_usize (21 samples, 0.04%)</title><rect x="15.2360%" y="421" width="0.0361%" height="15" fill="rgb(244,67,35)" fg:x="8855" fg:w="21"/><text x="15.4860%" y="431.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (20 samples, 0.03%)</title><rect x="15.2377%" y="405" width="0.0344%" height="15" fill="rgb(221,40,2)" fg:x="8856" fg:w="20"/><text x="15.4877%" y="415.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="15.2394%" y="389" width="0.0327%" height="15" fill="rgb(237,157,21)" fg:x="8857" fg:w="19"/><text x="15.4894%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (18 samples, 0.03%)</title><rect x="15.2411%" y="373" width="0.0310%" height="15" fill="rgb(222,94,11)" fg:x="8858" fg:w="18"/><text x="15.4911%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (11 samples, 0.02%)</title><rect x="15.2721%" y="469" width="0.0189%" height="15" fill="rgb(249,113,6)" fg:x="8876" fg:w="11"/><text x="15.5221%" y="479.50"></text></g><g><title>core::hash::Hasher::write_u32 (10 samples, 0.02%)</title><rect x="15.2738%" y="453" width="0.0172%" height="15" fill="rgb(238,137,36)" fg:x="8877" fg:w="10"/><text x="15.5238%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="15.2756%" y="437" width="0.0155%" height="15" fill="rgb(210,102,26)" fg:x="8878" fg:w="9"/><text x="15.5256%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="15.2756%" y="421" width="0.0155%" height="15" fill="rgb(218,30,30)" fg:x="8878" fg:w="9"/><text x="15.5256%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.01%)</title><rect x="15.2773%" y="405" width="0.0138%" height="15" fill="rgb(214,67,26)" fg:x="8879" fg:w="8"/><text x="15.5273%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="15.3151%" y="389" width="0.0103%" height="15" fill="rgb(251,9,53)" fg:x="8901" fg:w="6"/><text x="15.5651%" y="399.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="15.3255%" y="389" width="0.0103%" height="15" fill="rgb(228,204,25)" fg:x="8907" fg:w="6"/><text x="15.5755%" y="399.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="15.3255%" y="373" width="0.0103%" height="15" fill="rgb(207,153,8)" fg:x="8907" fg:w="6"/><text x="15.5755%" y="383.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="15.3255%" y="357" width="0.0103%" height="15" fill="rgb(242,9,16)" fg:x="8907" fg:w="6"/><text x="15.5755%" y="367.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (68 samples, 0.12%)</title><rect x="15.2205%" y="501" width="0.1170%" height="15" fill="rgb(217,211,10)" fg:x="8846" fg:w="68"/><text x="15.4705%" y="511.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (67 samples, 0.12%)</title><rect x="15.2222%" y="485" width="0.1153%" height="15" fill="rgb(219,228,52)" fg:x="8847" fg:w="67"/><text x="15.4722%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (27 samples, 0.05%)</title><rect x="15.2910%" y="469" width="0.0465%" height="15" fill="rgb(231,92,29)" fg:x="8887" fg:w="27"/><text x="15.5410%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (26 samples, 0.04%)</title><rect x="15.2928%" y="453" width="0.0447%" height="15" fill="rgb(232,8,23)" fg:x="8888" fg:w="26"/><text x="15.5428%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (25 samples, 0.04%)</title><rect x="15.2945%" y="437" width="0.0430%" height="15" fill="rgb(216,211,34)" fg:x="8889" fg:w="25"/><text x="15.5445%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (25 samples, 0.04%)</title><rect x="15.2945%" y="421" width="0.0430%" height="15" fill="rgb(236,151,0)" fg:x="8889" fg:w="25"/><text x="15.5445%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (25 samples, 0.04%)</title><rect x="15.2945%" y="405" width="0.0430%" height="15" fill="rgb(209,168,3)" fg:x="8889" fg:w="25"/><text x="15.5445%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (32 samples, 0.06%)</title><rect x="15.3650%" y="405" width="0.0551%" height="15" fill="rgb(208,129,28)" fg:x="8930" fg:w="32"/><text x="15.6150%" y="415.50"></text></g><g><title>core::cmp::min (12 samples, 0.02%)</title><rect x="15.4201%" y="405" width="0.0206%" height="15" fill="rgb(229,78,22)" fg:x="8962" fg:w="12"/><text x="15.6701%" y="415.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.02%)</title><rect x="15.4201%" y="389" width="0.0206%" height="15" fill="rgb(228,187,13)" fg:x="8962" fg:w="12"/><text x="15.6701%" y="399.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.02%)</title><rect x="15.4201%" y="373" width="0.0206%" height="15" fill="rgb(240,119,24)" fg:x="8962" fg:w="12"/><text x="15.6701%" y="383.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="15.4304%" y="357" width="0.0103%" height="15" fill="rgb(209,194,42)" fg:x="8968" fg:w="6"/><text x="15.6804%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (6 samples, 0.01%)</title><rect x="15.4304%" y="341" width="0.0103%" height="15" fill="rgb(247,200,46)" fg:x="8968" fg:w="6"/><text x="15.6804%" y="351.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.02%)</title><rect x="15.4407%" y="405" width="0.0189%" height="15" fill="rgb(218,76,16)" fg:x="8974" fg:w="11"/><text x="15.6907%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (150 samples, 0.26%)</title><rect x="15.2033%" y="517" width="0.2581%" height="15" fill="rgb(225,21,48)" fg:x="8836" fg:w="150"/><text x="15.4533%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (72 samples, 0.12%)</title><rect x="15.3375%" y="501" width="0.1239%" height="15" fill="rgb(239,223,50)" fg:x="8914" fg:w="72"/><text x="15.5875%" y="511.50"></text></g><g><title>core::hash::Hasher::write_isize (72 samples, 0.12%)</title><rect x="15.3375%" y="485" width="0.1239%" height="15" fill="rgb(244,45,21)" fg:x="8914" fg:w="72"/><text x="15.5875%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (72 samples, 0.12%)</title><rect x="15.3375%" y="469" width="0.1239%" height="15" fill="rgb(232,33,43)" fg:x="8914" fg:w="72"/><text x="15.5875%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (72 samples, 0.12%)</title><rect x="15.3375%" y="453" width="0.1239%" height="15" fill="rgb(209,8,3)" fg:x="8914" fg:w="72"/><text x="15.5875%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (69 samples, 0.12%)</title><rect x="15.3427%" y="437" width="0.1187%" height="15" fill="rgb(214,25,53)" fg:x="8917" fg:w="69"/><text x="15.5927%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (69 samples, 0.12%)</title><rect x="15.3427%" y="421" width="0.1187%" height="15" fill="rgb(254,186,54)" fg:x="8917" fg:w="69"/><text x="15.5927%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="15.4855%" y="437" width="0.0189%" height="15" fill="rgb(208,174,49)" fg:x="9000" fg:w="11"/><text x="15.7355%" y="447.50"></text></g><g><title>core::cmp::min (7 samples, 0.01%)</title><rect x="15.5044%" y="437" width="0.0120%" height="15" fill="rgb(233,191,51)" fg:x="9011" fg:w="7"/><text x="15.7544%" y="447.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="15.5044%" y="421" width="0.0120%" height="15" fill="rgb(222,134,10)" fg:x="9011" fg:w="7"/><text x="15.7544%" y="431.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.01%)</title><rect x="15.5044%" y="405" width="0.0120%" height="15" fill="rgb(230,226,20)" fg:x="9011" fg:w="7"/><text x="15.7544%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (33 samples, 0.06%)</title><rect x="15.4614%" y="517" width="0.0568%" height="15" fill="rgb(251,111,25)" fg:x="8986" fg:w="33"/><text x="15.7114%" y="527.50"></text></g><g><title>core::hash::Hasher::write_u32 (32 samples, 0.06%)</title><rect x="15.4631%" y="501" width="0.0551%" height="15" fill="rgb(224,40,46)" fg:x="8987" fg:w="32"/><text x="15.7131%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="15.4683%" y="485" width="0.0499%" height="15" fill="rgb(236,108,47)" fg:x="8990" fg:w="29"/><text x="15.7183%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="15.4683%" y="469" width="0.0499%" height="15" fill="rgb(234,93,0)" fg:x="8990" fg:w="29"/><text x="15.7183%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="15.4683%" y="453" width="0.0499%" height="15" fill="rgb(224,213,32)" fg:x="8990" fg:w="29"/><text x="15.7183%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="15.6214%" y="421" width="0.0103%" height="15" fill="rgb(251,11,48)" fg:x="9079" fg:w="6"/><text x="15.8714%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (41 samples, 0.07%)</title><rect x="15.5629%" y="437" width="0.0705%" height="15" fill="rgb(236,173,5)" fg:x="9045" fg:w="41"/><text x="15.8129%" y="447.50"></text></g><g><title>core::cmp::min (12 samples, 0.02%)</title><rect x="15.6334%" y="437" width="0.0206%" height="15" fill="rgb(230,95,12)" fg:x="9086" fg:w="12"/><text x="15.8834%" y="447.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.02%)</title><rect x="15.6334%" y="421" width="0.0206%" height="15" fill="rgb(232,209,1)" fg:x="9086" fg:w="12"/><text x="15.8834%" y="431.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.02%)</title><rect x="15.6334%" y="405" width="0.0206%" height="15" fill="rgb(232,6,1)" fg:x="9086" fg:w="12"/><text x="15.8834%" y="415.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.02%)</title><rect x="15.6541%" y="437" width="0.0172%" height="15" fill="rgb(210,224,50)" fg:x="9098" fg:w="10"/><text x="15.9041%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (278 samples, 0.48%)</title><rect x="15.1964%" y="549" width="0.4783%" height="15" fill="rgb(228,127,35)" fg:x="8832" fg:w="278"/><text x="15.4464%" y="559.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (278 samples, 0.48%)</title><rect x="15.1964%" y="533" width="0.4783%" height="15" fill="rgb(245,102,45)" fg:x="8832" fg:w="278"/><text x="15.4464%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (91 samples, 0.16%)</title><rect x="15.5182%" y="517" width="0.1566%" height="15" fill="rgb(214,1,49)" fg:x="9019" fg:w="91"/><text x="15.7682%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (90 samples, 0.15%)</title><rect x="15.5199%" y="501" width="0.1549%" height="15" fill="rgb(226,163,40)" fg:x="9020" fg:w="90"/><text x="15.7699%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="15.5216%" y="485" width="0.1531%" height="15" fill="rgb(239,212,28)" fg:x="9021" fg:w="89"/><text x="15.7716%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="15.5216%" y="469" width="0.1531%" height="15" fill="rgb(220,20,13)" fg:x="9021" fg:w="89"/><text x="15.7716%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="15.5216%" y="453" width="0.1531%" height="15" fill="rgb(210,164,35)" fg:x="9021" fg:w="89"/><text x="15.7716%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (40 samples, 0.07%)</title><rect x="15.7264%" y="453" width="0.0688%" height="15" fill="rgb(248,109,41)" fg:x="9140" fg:w="40"/><text x="15.9764%" y="463.50"></text></g><g><title>core::cmp::min (27 samples, 0.05%)</title><rect x="15.7952%" y="453" width="0.0465%" height="15" fill="rgb(238,23,50)" fg:x="9180" fg:w="27"/><text x="16.0452%" y="463.50"></text></g><g><title>core::cmp::Ord::min (27 samples, 0.05%)</title><rect x="15.7952%" y="437" width="0.0465%" height="15" fill="rgb(211,48,49)" fg:x="9180" fg:w="27"/><text x="16.0452%" y="447.50"></text></g><g><title>core::cmp::min_by (25 samples, 0.04%)</title><rect x="15.7986%" y="421" width="0.0430%" height="15" fill="rgb(223,36,21)" fg:x="9182" fg:w="25"/><text x="16.0486%" y="431.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="15.8193%" y="405" width="0.0224%" height="15" fill="rgb(207,123,46)" fg:x="9194" fg:w="13"/><text x="16.0693%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (8 samples, 0.01%)</title><rect x="15.8279%" y="389" width="0.0138%" height="15" fill="rgb(240,218,32)" fg:x="9199" fg:w="8"/><text x="16.0779%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (397 samples, 0.68%)</title><rect x="15.1706%" y="565" width="0.6831%" height="15" fill="rgb(252,5,43)" fg:x="8817" fg:w="397"/><text x="15.4206%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (104 samples, 0.18%)</title><rect x="15.6747%" y="549" width="0.1789%" height="15" fill="rgb(252,84,19)" fg:x="9110" fg:w="104"/><text x="15.9247%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (104 samples, 0.18%)</title><rect x="15.6747%" y="533" width="0.1789%" height="15" fill="rgb(243,152,39)" fg:x="9110" fg:w="104"/><text x="15.9247%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (104 samples, 0.18%)</title><rect x="15.6747%" y="517" width="0.1789%" height="15" fill="rgb(234,160,15)" fg:x="9110" fg:w="104"/><text x="15.9247%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (104 samples, 0.18%)</title><rect x="15.6747%" y="501" width="0.1789%" height="15" fill="rgb(237,34,20)" fg:x="9110" fg:w="104"/><text x="15.9247%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (102 samples, 0.18%)</title><rect x="15.6782%" y="485" width="0.1755%" height="15" fill="rgb(229,97,13)" fg:x="9112" fg:w="102"/><text x="15.9282%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (102 samples, 0.18%)</title><rect x="15.6782%" y="469" width="0.1755%" height="15" fill="rgb(234,71,50)" fg:x="9112" fg:w="102"/><text x="15.9282%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.01%)</title><rect x="15.8416%" y="453" width="0.0120%" height="15" fill="rgb(253,155,4)" fg:x="9207" fg:w="7"/><text x="16.0916%" y="463.50"></text></g><g><title>core::cmp::min (11 samples, 0.02%)</title><rect x="15.8864%" y="485" width="0.0189%" height="15" fill="rgb(222,185,37)" fg:x="9233" fg:w="11"/><text x="16.1364%" y="495.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.02%)</title><rect x="15.8864%" y="469" width="0.0189%" height="15" fill="rgb(251,177,13)" fg:x="9233" fg:w="11"/><text x="16.1364%" y="479.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.02%)</title><rect x="15.8864%" y="453" width="0.0189%" height="15" fill="rgb(250,179,40)" fg:x="9233" fg:w="11"/><text x="16.1364%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="15.8950%" y="437" width="0.0103%" height="15" fill="rgb(242,44,2)" fg:x="9238" fg:w="6"/><text x="16.1450%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="15.9053%" y="485" width="0.0138%" height="15" fill="rgb(216,177,13)" fg:x="9244" fg:w="8"/><text x="16.1553%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (40 samples, 0.07%)</title><rect x="15.8537%" y="565" width="0.0688%" height="15" fill="rgb(216,106,43)" fg:x="9214" fg:w="40"/><text x="16.1037%" y="575.50"></text></g><g><title>core::hash::Hasher::write_u32 (37 samples, 0.06%)</title><rect x="15.8588%" y="549" width="0.0637%" height="15" fill="rgb(216,183,2)" fg:x="9217" fg:w="37"/><text x="16.1088%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (34 samples, 0.06%)</title><rect x="15.8640%" y="533" width="0.0585%" height="15" fill="rgb(249,75,3)" fg:x="9220" fg:w="34"/><text x="16.1140%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (34 samples, 0.06%)</title><rect x="15.8640%" y="517" width="0.0585%" height="15" fill="rgb(219,67,39)" fg:x="9220" fg:w="34"/><text x="16.1140%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (34 samples, 0.06%)</title><rect x="15.8640%" y="501" width="0.0585%" height="15" fill="rgb(253,228,2)" fg:x="9220" fg:w="34"/><text x="16.1140%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (36 samples, 0.06%)</title><rect x="15.9844%" y="485" width="0.0619%" height="15" fill="rgb(235,138,27)" fg:x="9290" fg:w="36"/><text x="16.2344%" y="495.50"></text></g><g><title>core::cmp::min (23 samples, 0.04%)</title><rect x="16.0464%" y="485" width="0.0396%" height="15" fill="rgb(236,97,51)" fg:x="9326" fg:w="23"/><text x="16.2964%" y="495.50"></text></g><g><title>core::cmp::Ord::min (23 samples, 0.04%)</title><rect x="16.0464%" y="469" width="0.0396%" height="15" fill="rgb(240,80,30)" fg:x="9326" fg:w="23"/><text x="16.2964%" y="479.50"></text></g><g><title>core::cmp::min_by (22 samples, 0.04%)</title><rect x="16.0481%" y="453" width="0.0379%" height="15" fill="rgb(230,178,19)" fg:x="9327" fg:w="22"/><text x="16.2981%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.02%)</title><rect x="16.0688%" y="437" width="0.0172%" height="15" fill="rgb(210,190,27)" fg:x="9339" fg:w="10"/><text x="16.3188%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.02%)</title><rect x="16.0860%" y="485" width="0.0206%" height="15" fill="rgb(222,107,31)" fg:x="9349" fg:w="12"/><text x="16.3360%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (553 samples, 0.95%)</title><rect x="15.1586%" y="597" width="0.9515%" height="15" fill="rgb(216,127,34)" fg:x="8810" fg:w="553"/><text x="15.4086%" y="607.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (550 samples, 0.95%)</title><rect x="15.1637%" y="581" width="0.9463%" height="15" fill="rgb(234,116,52)" fg:x="8813" fg:w="550"/><text x="15.4137%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (109 samples, 0.19%)</title><rect x="15.9225%" y="565" width="0.1875%" height="15" fill="rgb(222,124,15)" fg:x="9254" fg:w="109"/><text x="16.1725%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (103 samples, 0.18%)</title><rect x="15.9328%" y="549" width="0.1772%" height="15" fill="rgb(231,179,28)" fg:x="9260" fg:w="103"/><text x="16.1828%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (101 samples, 0.17%)</title><rect x="15.9363%" y="533" width="0.1738%" height="15" fill="rgb(226,93,45)" fg:x="9262" fg:w="101"/><text x="16.1863%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (101 samples, 0.17%)</title><rect x="15.9363%" y="517" width="0.1738%" height="15" fill="rgb(215,8,51)" fg:x="9262" fg:w="101"/><text x="16.1863%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (101 samples, 0.17%)</title><rect x="15.9363%" y="501" width="0.1738%" height="15" fill="rgb(223,106,5)" fg:x="9262" fg:w="101"/><text x="16.1863%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (53 samples, 0.09%)</title><rect x="16.1703%" y="501" width="0.0912%" height="15" fill="rgb(250,191,5)" fg:x="9398" fg:w="53"/><text x="16.4203%" y="511.50"></text></g><g><title>core::cmp::min (20 samples, 0.03%)</title><rect x="16.2615%" y="501" width="0.0344%" height="15" fill="rgb(242,132,44)" fg:x="9451" fg:w="20"/><text x="16.5115%" y="511.50"></text></g><g><title>core::cmp::Ord::min (20 samples, 0.03%)</title><rect x="16.2615%" y="485" width="0.0344%" height="15" fill="rgb(251,152,29)" fg:x="9451" fg:w="20"/><text x="16.5115%" y="495.50"></text></g><g><title>core::cmp::min_by (20 samples, 0.03%)</title><rect x="16.2615%" y="469" width="0.0344%" height="15" fill="rgb(218,179,5)" fg:x="9451" fg:w="20"/><text x="16.5115%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.02%)</title><rect x="16.2769%" y="453" width="0.0189%" height="15" fill="rgb(227,67,19)" fg:x="9460" fg:w="11"/><text x="16.5269%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (11 samples, 0.02%)</title><rect x="16.2769%" y="437" width="0.0189%" height="15" fill="rgb(233,119,31)" fg:x="9460" fg:w="11"/><text x="16.5269%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.03%)</title><rect x="16.2959%" y="501" width="0.0275%" height="15" fill="rgb(241,120,22)" fg:x="9471" fg:w="16"/><text x="16.5459%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (689 samples, 1.19%)</title><rect x="15.1448%" y="613" width="1.1855%" height="15" fill="rgb(224,102,30)" fg:x="8802" fg:w="689"/><text x="15.3948%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (128 samples, 0.22%)</title><rect x="16.1101%" y="597" width="0.2202%" height="15" fill="rgb(210,164,37)" fg:x="9363" fg:w="128"/><text x="16.3601%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (127 samples, 0.22%)</title><rect x="16.1118%" y="581" width="0.2185%" height="15" fill="rgb(226,191,16)" fg:x="9364" fg:w="127"/><text x="16.3618%" y="591.50"></text></g><g><title>core::hash::Hasher::write_usize (126 samples, 0.22%)</title><rect x="16.1135%" y="565" width="0.2168%" height="15" fill="rgb(214,40,45)" fg:x="9365" fg:w="126"/><text x="16.3635%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (124 samples, 0.21%)</title><rect x="16.1169%" y="549" width="0.2134%" height="15" fill="rgb(244,29,26)" fg:x="9367" fg:w="124"/><text x="16.3669%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (120 samples, 0.21%)</title><rect x="16.1238%" y="533" width="0.2065%" height="15" fill="rgb(216,16,5)" fg:x="9371" fg:w="120"/><text x="16.3738%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (119 samples, 0.20%)</title><rect x="16.1255%" y="517" width="0.2048%" height="15" fill="rgb(249,76,35)" fg:x="9372" fg:w="119"/><text x="16.3755%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="16.3544%" y="533" width="0.0138%" height="15" fill="rgb(207,11,44)" fg:x="9505" fg:w="8"/><text x="16.6044%" y="543.50"></text></g><g><title>core::cmp::min (9 samples, 0.02%)</title><rect x="16.3681%" y="533" width="0.0155%" height="15" fill="rgb(228,190,49)" fg:x="9513" fg:w="9"/><text x="16.6181%" y="543.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.02%)</title><rect x="16.3681%" y="517" width="0.0155%" height="15" fill="rgb(214,173,12)" fg:x="9513" fg:w="9"/><text x="16.6181%" y="527.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.01%)</title><rect x="16.3699%" y="501" width="0.0138%" height="15" fill="rgb(218,26,35)" fg:x="9514" fg:w="8"/><text x="16.6199%" y="511.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.02%)</title><rect x="16.3836%" y="533" width="0.0172%" height="15" fill="rgb(220,200,19)" fg:x="9522" fg:w="10"/><text x="16.6336%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (43 samples, 0.07%)</title><rect x="16.3303%" y="613" width="0.0740%" height="15" fill="rgb(239,95,49)" fg:x="9491" fg:w="43"/><text x="16.5803%" y="623.50"></text></g><g><title>core::hash::Hasher::write_u32 (39 samples, 0.07%)</title><rect x="16.3372%" y="597" width="0.0671%" height="15" fill="rgb(235,85,53)" fg:x="9495" fg:w="39"/><text x="16.5872%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (37 samples, 0.06%)</title><rect x="16.3406%" y="581" width="0.0637%" height="15" fill="rgb(233,133,31)" fg:x="9497" fg:w="37"/><text x="16.5906%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="16.3423%" y="565" width="0.0619%" height="15" fill="rgb(218,25,20)" fg:x="9498" fg:w="36"/><text x="16.5923%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="16.3423%" y="549" width="0.0619%" height="15" fill="rgb(252,210,38)" fg:x="9498" fg:w="36"/><text x="16.5923%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (34 samples, 0.06%)</title><rect x="16.4611%" y="533" width="0.0585%" height="15" fill="rgb(242,134,21)" fg:x="9567" fg:w="34"/><text x="16.7111%" y="543.50"></text></g><g><title>core::cmp::min (11 samples, 0.02%)</title><rect x="16.5196%" y="533" width="0.0189%" height="15" fill="rgb(213,28,48)" fg:x="9601" fg:w="11"/><text x="16.7696%" y="543.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.02%)</title><rect x="16.5196%" y="517" width="0.0189%" height="15" fill="rgb(250,196,2)" fg:x="9601" fg:w="11"/><text x="16.7696%" y="527.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.02%)</title><rect x="16.5196%" y="501" width="0.0189%" height="15" fill="rgb(227,5,17)" fg:x="9601" fg:w="11"/><text x="16.7696%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="16.5264%" y="485" width="0.0120%" height="15" fill="rgb(221,226,24)" fg:x="9605" fg:w="7"/><text x="16.7764%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.02%)</title><rect x="16.5385%" y="533" width="0.0224%" height="15" fill="rgb(211,5,48)" fg:x="9612" fg:w="13"/><text x="16.7885%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (95 samples, 0.16%)</title><rect x="16.4043%" y="613" width="0.1635%" height="15" fill="rgb(219,150,6)" fg:x="9534" fg:w="95"/><text x="16.6543%" y="623.50"></text></g><g><title>core::hash::Hasher::write_usize (92 samples, 0.16%)</title><rect x="16.4094%" y="597" width="0.1583%" height="15" fill="rgb(251,46,16)" fg:x="9537" fg:w="92"/><text x="16.6594%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (91 samples, 0.16%)</title><rect x="16.4112%" y="581" width="0.1566%" height="15" fill="rgb(220,204,40)" fg:x="9538" fg:w="91"/><text x="16.6612%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="16.4146%" y="565" width="0.1531%" height="15" fill="rgb(211,85,2)" fg:x="9540" fg:w="89"/><text x="16.6646%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="16.4146%" y="549" width="0.1531%" height="15" fill="rgb(229,17,7)" fg:x="9540" fg:w="89"/><text x="16.6646%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (833 samples, 1.43%)</title><rect x="15.1362%" y="645" width="1.4333%" height="15" fill="rgb(239,72,28)" fg:x="8797" fg:w="833"/><text x="15.3862%" y="655.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (832 samples, 1.43%)</title><rect x="15.1379%" y="629" width="1.4315%" height="15" fill="rgb(230,47,54)" fg:x="8798" fg:w="832"/><text x="15.3879%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (20 samples, 0.03%)</title><rect x="16.6056%" y="549" width="0.0344%" height="15" fill="rgb(214,50,8)" fg:x="9651" fg:w="20"/><text x="16.8556%" y="559.50"></text></g><g><title>core::cmp::min (10 samples, 0.02%)</title><rect x="16.6400%" y="549" width="0.0172%" height="15" fill="rgb(216,198,43)" fg:x="9671" fg:w="10"/><text x="16.8900%" y="559.50"></text></g><g><title>core::cmp::Ord::min (10 samples, 0.02%)</title><rect x="16.6400%" y="533" width="0.0172%" height="15" fill="rgb(234,20,35)" fg:x="9671" fg:w="10"/><text x="16.8900%" y="543.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.02%)</title><rect x="16.6400%" y="517" width="0.0172%" height="15" fill="rgb(254,45,19)" fg:x="9671" fg:w="10"/><text x="16.8900%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.01%)</title><rect x="16.6452%" y="501" width="0.0120%" height="15" fill="rgb(219,14,44)" fg:x="9674" fg:w="7"/><text x="16.8952%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (904 samples, 1.56%)</title><rect x="15.1087%" y="661" width="1.5554%" height="15" fill="rgb(217,220,26)" fg:x="8781" fg:w="904"/><text x="15.3587%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (55 samples, 0.09%)</title><rect x="16.5695%" y="645" width="0.0946%" height="15" fill="rgb(213,158,28)" fg:x="9630" fg:w="55"/><text x="16.8195%" y="655.50"></text></g><g><title>core::hash::Hasher::write_isize (55 samples, 0.09%)</title><rect x="16.5695%" y="629" width="0.0946%" height="15" fill="rgb(252,51,52)" fg:x="9630" fg:w="55"/><text x="16.8195%" y="639.50"></text></g><g><title>core::hash::Hasher::write_usize (55 samples, 0.09%)</title><rect x="16.5695%" y="613" width="0.0946%" height="15" fill="rgb(246,89,16)" fg:x="9630" fg:w="55"/><text x="16.8195%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (54 samples, 0.09%)</title><rect x="16.5712%" y="597" width="0.0929%" height="15" fill="rgb(216,158,49)" fg:x="9631" fg:w="54"/><text x="16.8212%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (52 samples, 0.09%)</title><rect x="16.5746%" y="581" width="0.0895%" height="15" fill="rgb(236,107,19)" fg:x="9633" fg:w="52"/><text x="16.8246%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (52 samples, 0.09%)</title><rect x="16.5746%" y="565" width="0.0895%" height="15" fill="rgb(228,185,30)" fg:x="9633" fg:w="52"/><text x="16.8246%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="16.6761%" y="581" width="0.0138%" height="15" fill="rgb(246,134,8)" fg:x="9692" fg:w="8"/><text x="16.9261%" y="591.50"></text></g><g><title>core::cmp::min (8 samples, 0.01%)</title><rect x="16.6899%" y="581" width="0.0138%" height="15" fill="rgb(214,143,50)" fg:x="9700" fg:w="8"/><text x="16.9399%" y="591.50"></text></g><g><title>core::cmp::Ord::min (8 samples, 0.01%)</title><rect x="16.6899%" y="565" width="0.0138%" height="15" fill="rgb(228,75,8)" fg:x="9700" fg:w="8"/><text x="16.9399%" y="575.50"></text></g><g><title>core::cmp::min_by (8 samples, 0.01%)</title><rect x="16.6899%" y="549" width="0.0138%" height="15" fill="rgb(207,175,4)" fg:x="9700" fg:w="8"/><text x="16.9399%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (29 samples, 0.05%)</title><rect x="16.6641%" y="661" width="0.0499%" height="15" fill="rgb(205,108,24)" fg:x="9685" fg:w="29"/><text x="16.9141%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u32 (28 samples, 0.05%)</title><rect x="16.6658%" y="645" width="0.0482%" height="15" fill="rgb(244,120,49)" fg:x="9686" fg:w="28"/><text x="16.9158%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.05%)</title><rect x="16.6658%" y="629" width="0.0482%" height="15" fill="rgb(223,47,38)" fg:x="9686" fg:w="28"/><text x="16.9158%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (26 samples, 0.04%)</title><rect x="16.6692%" y="613" width="0.0447%" height="15" fill="rgb(229,179,11)" fg:x="9688" fg:w="26"/><text x="16.9192%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (26 samples, 0.04%)</title><rect x="16.6692%" y="597" width="0.0447%" height="15" fill="rgb(231,122,1)" fg:x="9688" fg:w="26"/><text x="16.9192%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (31 samples, 0.05%)</title><rect x="16.7536%" y="581" width="0.0533%" height="15" fill="rgb(245,119,9)" fg:x="9737" fg:w="31"/><text x="17.0036%" y="591.50"></text></g><g><title>core::cmp::min (11 samples, 0.02%)</title><rect x="16.8069%" y="581" width="0.0189%" height="15" fill="rgb(241,163,25)" fg:x="9768" fg:w="11"/><text x="17.0569%" y="591.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.02%)</title><rect x="16.8069%" y="565" width="0.0189%" height="15" fill="rgb(217,214,3)" fg:x="9768" fg:w="11"/><text x="17.0569%" y="575.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.02%)</title><rect x="16.8069%" y="549" width="0.0189%" height="15" fill="rgb(240,86,28)" fg:x="9768" fg:w="11"/><text x="17.0569%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.01%)</title><rect x="16.8121%" y="533" width="0.0138%" height="15" fill="rgb(215,47,9)" fg:x="9771" fg:w="8"/><text x="17.0621%" y="543.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,006 samples, 1.73%)</title><rect x="15.1018%" y="693" width="1.7309%" height="15" fill="rgb(252,25,45)" fg:x="8777" fg:w="1006"/><text x="15.3518%" y="703.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,005 samples, 1.73%)</title><rect x="15.1035%" y="677" width="1.7292%" height="15" fill="rgb(251,164,9)" fg:x="8778" fg:w="1005"/><text x="15.3535%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (69 samples, 0.12%)</title><rect x="16.7140%" y="661" width="0.1187%" height="15" fill="rgb(233,194,0)" fg:x="9714" fg:w="69"/><text x="16.9640%" y="671.50"></text></g><g><title>core::hash::Hasher::write_usize (61 samples, 0.10%)</title><rect x="16.7277%" y="645" width="0.1050%" height="15" fill="rgb(249,111,24)" fg:x="9722" fg:w="61"/><text x="16.9777%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (61 samples, 0.10%)</title><rect x="16.7277%" y="629" width="0.1050%" height="15" fill="rgb(250,223,3)" fg:x="9722" fg:w="61"/><text x="16.9777%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (61 samples, 0.10%)</title><rect x="16.7277%" y="613" width="0.1050%" height="15" fill="rgb(236,178,37)" fg:x="9722" fg:w="61"/><text x="16.9777%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.10%)</title><rect x="16.7277%" y="597" width="0.1050%" height="15" fill="rgb(241,158,50)" fg:x="9722" fg:w="61"/><text x="16.9777%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (13 samples, 0.02%)</title><rect x="16.8534%" y="597" width="0.0224%" height="15" fill="rgb(213,121,41)" fg:x="9795" fg:w="13"/><text x="17.1034%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,049 samples, 1.80%)</title><rect x="15.0811%" y="709" width="1.8049%" height="15" fill="rgb(240,92,3)" fg:x="8765" fg:w="1049"/><text x="15.3311%" y="719.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (31 samples, 0.05%)</title><rect x="16.8327%" y="693" width="0.0533%" height="15" fill="rgb(205,123,3)" fg:x="9783" fg:w="31"/><text x="17.0827%" y="703.50"></text></g><g><title>core::hash::Hasher::write_isize (31 samples, 0.05%)</title><rect x="16.8327%" y="677" width="0.0533%" height="15" fill="rgb(205,97,47)" fg:x="9783" fg:w="31"/><text x="17.0827%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.05%)</title><rect x="16.8327%" y="661" width="0.0533%" height="15" fill="rgb(247,152,14)" fg:x="9783" fg:w="31"/><text x="17.0827%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="16.8361%" y="645" width="0.0499%" height="15" fill="rgb(248,195,53)" fg:x="9785" fg:w="29"/><text x="17.0861%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="16.8396%" y="629" width="0.0465%" height="15" fill="rgb(226,201,16)" fg:x="9787" fg:w="27"/><text x="17.0896%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="16.8396%" y="613" width="0.0465%" height="15" fill="rgb(205,98,0)" fg:x="9787" fg:w="27"/><text x="17.0896%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (17 samples, 0.03%)</title><rect x="16.8860%" y="709" width="0.0293%" height="15" fill="rgb(214,191,48)" fg:x="9814" fg:w="17"/><text x="17.1360%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u32 (15 samples, 0.03%)</title><rect x="16.8895%" y="693" width="0.0258%" height="15" fill="rgb(237,112,39)" fg:x="9816" fg:w="15"/><text x="17.1395%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="16.8929%" y="677" width="0.0224%" height="15" fill="rgb(247,203,27)" fg:x="9818" fg:w="13"/><text x="17.1429%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="16.8929%" y="661" width="0.0224%" height="15" fill="rgb(235,124,28)" fg:x="9818" fg:w="13"/><text x="17.1429%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.02%)</title><rect x="16.8929%" y="645" width="0.0224%" height="15" fill="rgb(208,207,46)" fg:x="9818" fg:w="13"/><text x="17.1429%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="16.9342%" y="629" width="0.0189%" height="15" fill="rgb(234,176,4)" fg:x="9842" fg:w="11"/><text x="17.1842%" y="639.50"></text></g><g><title>core::cmp::min (7 samples, 0.01%)</title><rect x="16.9531%" y="629" width="0.0120%" height="15" fill="rgb(230,133,28)" fg:x="9853" fg:w="7"/><text x="17.2031%" y="639.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="16.9531%" y="613" width="0.0120%" height="15" fill="rgb(211,137,40)" fg:x="9853" fg:w="7"/><text x="17.2031%" y="623.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.01%)</title><rect x="16.9531%" y="597" width="0.0120%" height="15" fill="rgb(254,35,13)" fg:x="9853" fg:w="7"/><text x="17.2031%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1,129 samples, 1.94%)</title><rect x="15.0312%" y="805" width="1.9426%" height="15" fill="rgb(225,49,51)" fg:x="8736" fg:w="1129"/><text x="15.2812%" y="815.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (1,129 samples, 1.94%)</title><rect x="15.0312%" y="789" width="1.9426%" height="15" fill="rgb(251,10,15)" fg:x="8736" fg:w="1129"/><text x="15.2812%" y="799.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,107 samples, 1.90%)</title><rect x="15.0691%" y="773" width="1.9047%" height="15" fill="rgb(228,207,15)" fg:x="8758" fg:w="1107"/><text x="15.3191%" y="783.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,104 samples, 1.90%)</title><rect x="15.0742%" y="757" width="1.8996%" height="15" fill="rgb(241,99,19)" fg:x="8761" fg:w="1104"/><text x="15.3242%" y="767.50">c..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,103 samples, 1.90%)</title><rect x="15.0760%" y="741" width="1.8978%" height="15" fill="rgb(207,104,49)" fg:x="8762" fg:w="1103"/><text x="15.3260%" y="751.50">&lt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,102 samples, 1.90%)</title><rect x="15.0777%" y="725" width="1.8961%" height="15" fill="rgb(234,99,18)" fg:x="8763" fg:w="1102"/><text x="15.3277%" y="735.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (34 samples, 0.06%)</title><rect x="16.9153%" y="709" width="0.0585%" height="15" fill="rgb(213,191,49)" fg:x="9831" fg:w="34"/><text x="17.1653%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.05%)</title><rect x="16.9205%" y="693" width="0.0533%" height="15" fill="rgb(210,226,19)" fg:x="9834" fg:w="31"/><text x="17.1705%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="16.9222%" y="677" width="0.0516%" height="15" fill="rgb(229,97,18)" fg:x="9835" fg:w="30"/><text x="17.1722%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="16.9222%" y="661" width="0.0516%" height="15" fill="rgb(211,167,15)" fg:x="9835" fg:w="30"/><text x="17.1722%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.05%)</title><rect x="16.9239%" y="645" width="0.0499%" height="15" fill="rgb(210,169,34)" fg:x="9836" fg:w="29"/><text x="17.1739%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.01%)</title><rect x="16.9910%" y="613" width="0.0120%" height="15" fill="rgb(241,121,31)" fg:x="9875" fg:w="7"/><text x="17.2410%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="16.9893%" y="661" width="0.0224%" height="15" fill="rgb(232,40,11)" fg:x="9874" fg:w="13"/><text x="17.2393%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="16.9893%" y="645" width="0.0224%" height="15" fill="rgb(205,86,26)" fg:x="9874" fg:w="13"/><text x="17.2393%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="16.9893%" y="629" width="0.0224%" height="15" fill="rgb(231,126,28)" fg:x="9874" fg:w="13"/><text x="17.2393%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.01%)</title><rect x="17.0116%" y="661" width="0.0120%" height="15" fill="rgb(219,221,18)" fg:x="9887" fg:w="7"/><text x="17.2616%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.03%)</title><rect x="17.2095%" y="245" width="0.0258%" height="15" fill="rgb(211,40,0)" fg:x="10002" fg:w="15"/><text x="17.4595%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (39 samples, 0.07%)</title><rect x="17.1803%" y="357" width="0.0671%" height="15" fill="rgb(239,85,43)" fg:x="9985" fg:w="39"/><text x="17.4303%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (31 samples, 0.05%)</title><rect x="17.1940%" y="341" width="0.0533%" height="15" fill="rgb(231,55,21)" fg:x="9993" fg:w="31"/><text x="17.4440%" y="351.50"></text></g><g><title>core::hash::Hasher::write_isize (31 samples, 0.05%)</title><rect x="17.1940%" y="325" width="0.0533%" height="15" fill="rgb(225,184,43)" fg:x="9993" fg:w="31"/><text x="17.4440%" y="335.50"></text></g><g><title>core::hash::Hasher::write_usize (31 samples, 0.05%)</title><rect x="17.1940%" y="309" width="0.0533%" height="15" fill="rgb(251,158,41)" fg:x="9993" fg:w="31"/><text x="17.4440%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="17.1958%" y="293" width="0.0516%" height="15" fill="rgb(234,159,37)" fg:x="9994" fg:w="30"/><text x="17.4458%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="17.1958%" y="277" width="0.0516%" height="15" fill="rgb(216,204,22)" fg:x="9994" fg:w="30"/><text x="17.4458%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="17.1958%" y="261" width="0.0516%" height="15" fill="rgb(214,17,3)" fg:x="9994" fg:w="30"/><text x="17.4458%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (13 samples, 0.02%)</title><rect x="17.2474%" y="357" width="0.0224%" height="15" fill="rgb(212,111,17)" fg:x="10024" fg:w="13"/><text x="17.4974%" y="367.50"></text></g><g><title>core::hash::Hasher::write_u32 (9 samples, 0.02%)</title><rect x="17.2543%" y="341" width="0.0155%" height="15" fill="rgb(221,157,24)" fg:x="10028" fg:w="9"/><text x="17.5043%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.02%)</title><rect x="17.2543%" y="325" width="0.0155%" height="15" fill="rgb(252,16,13)" fg:x="10028" fg:w="9"/><text x="17.5043%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="17.2577%" y="309" width="0.0120%" height="15" fill="rgb(221,62,2)" fg:x="10030" fg:w="7"/><text x="17.5077%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="17.2577%" y="293" width="0.0120%" height="15" fill="rgb(247,87,22)" fg:x="10030" fg:w="7"/><text x="17.5077%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="17.2973%" y="277" width="0.0206%" height="15" fill="rgb(215,73,9)" fg:x="10053" fg:w="12"/><text x="17.5473%" y="287.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (93 samples, 0.16%)</title><rect x="17.1751%" y="389" width="0.1600%" height="15" fill="rgb(207,175,33)" fg:x="9982" fg:w="93"/><text x="17.4251%" y="399.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (93 samples, 0.16%)</title><rect x="17.1751%" y="373" width="0.1600%" height="15" fill="rgb(243,129,54)" fg:x="9982" fg:w="93"/><text x="17.4251%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (38 samples, 0.07%)</title><rect x="17.2697%" y="357" width="0.0654%" height="15" fill="rgb(227,119,45)" fg:x="10037" fg:w="38"/><text x="17.5197%" y="367.50"></text></g><g><title>core::hash::Hasher::write_usize (28 samples, 0.05%)</title><rect x="17.2869%" y="341" width="0.0482%" height="15" fill="rgb(205,109,36)" fg:x="10047" fg:w="28"/><text x="17.5369%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (28 samples, 0.05%)</title><rect x="17.2869%" y="325" width="0.0482%" height="15" fill="rgb(205,6,39)" fg:x="10047" fg:w="28"/><text x="17.5369%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="17.2887%" y="309" width="0.0465%" height="15" fill="rgb(221,32,16)" fg:x="10048" fg:w="27"/><text x="17.5387%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.05%)</title><rect x="17.2887%" y="293" width="0.0465%" height="15" fill="rgb(228,144,50)" fg:x="10048" fg:w="27"/><text x="17.5387%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (30 samples, 0.05%)</title><rect x="17.3695%" y="293" width="0.0516%" height="15" fill="rgb(229,201,53)" fg:x="10095" fg:w="30"/><text x="17.6195%" y="303.50"></text></g><g><title>core::cmp::min (14 samples, 0.02%)</title><rect x="17.4212%" y="293" width="0.0241%" height="15" fill="rgb(249,153,27)" fg:x="10125" fg:w="14"/><text x="17.6712%" y="303.50"></text></g><g><title>core::cmp::Ord::min (14 samples, 0.02%)</title><rect x="17.4212%" y="277" width="0.0241%" height="15" fill="rgb(227,106,25)" fg:x="10125" fg:w="14"/><text x="17.6712%" y="287.50"></text></g><g><title>core::cmp::min_by (14 samples, 0.02%)</title><rect x="17.4212%" y="261" width="0.0241%" height="15" fill="rgb(230,65,29)" fg:x="10125" fg:w="14"/><text x="17.6712%" y="271.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.02%)</title><rect x="17.4298%" y="245" width="0.0155%" height="15" fill="rgb(221,57,46)" fg:x="10130" fg:w="9"/><text x="17.6798%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (7 samples, 0.01%)</title><rect x="17.4332%" y="229" width="0.0120%" height="15" fill="rgb(229,161,17)" fg:x="10132" fg:w="7"/><text x="17.6832%" y="239.50"></text></g><g><title>core::hash::sip::u8to64_le (17 samples, 0.03%)</title><rect x="17.4452%" y="293" width="0.0293%" height="15" fill="rgb(222,213,11)" fg:x="10139" fg:w="17"/><text x="17.6952%" y="303.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (188 samples, 0.32%)</title><rect x="17.1562%" y="405" width="0.3235%" height="15" fill="rgb(235,35,13)" fg:x="9971" fg:w="188"/><text x="17.4062%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (84 samples, 0.14%)</title><rect x="17.3351%" y="389" width="0.1445%" height="15" fill="rgb(233,158,34)" fg:x="10075" fg:w="84"/><text x="17.5851%" y="399.50"></text></g><g><title>core::hash::Hasher::write_isize (83 samples, 0.14%)</title><rect x="17.3368%" y="373" width="0.1428%" height="15" fill="rgb(215,151,48)" fg:x="10076" fg:w="83"/><text x="17.5868%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (83 samples, 0.14%)</title><rect x="17.3368%" y="357" width="0.1428%" height="15" fill="rgb(229,84,14)" fg:x="10076" fg:w="83"/><text x="17.5868%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (82 samples, 0.14%)</title><rect x="17.3386%" y="341" width="0.1411%" height="15" fill="rgb(229,68,14)" fg:x="10077" fg:w="82"/><text x="17.5886%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (81 samples, 0.14%)</title><rect x="17.3403%" y="325" width="0.1394%" height="15" fill="rgb(243,106,26)" fg:x="10078" fg:w="81"/><text x="17.5903%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (81 samples, 0.14%)</title><rect x="17.3403%" y="309" width="0.1394%" height="15" fill="rgb(206,45,38)" fg:x="10078" fg:w="81"/><text x="17.5903%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="17.5244%" y="325" width="0.0172%" height="15" fill="rgb(226,6,15)" fg:x="10185" fg:w="10"/><text x="17.7744%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="17.5485%" y="325" width="0.0138%" height="15" fill="rgb(232,22,54)" fg:x="10199" fg:w="8"/><text x="17.7985%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (49 samples, 0.08%)</title><rect x="17.4797%" y="405" width="0.0843%" height="15" fill="rgb(229,222,32)" fg:x="10159" fg:w="49"/><text x="17.7297%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u32 (37 samples, 0.06%)</title><rect x="17.5003%" y="389" width="0.0637%" height="15" fill="rgb(228,62,29)" fg:x="10171" fg:w="37"/><text x="17.7503%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="17.5020%" y="373" width="0.0619%" height="15" fill="rgb(251,103,34)" fg:x="10172" fg:w="36"/><text x="17.7520%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="17.5020%" y="357" width="0.0619%" height="15" fill="rgb(233,12,30)" fg:x="10172" fg:w="36"/><text x="17.7520%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="17.5020%" y="341" width="0.0619%" height="15" fill="rgb(238,52,0)" fg:x="10172" fg:w="36"/><text x="17.7520%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (21 samples, 0.04%)</title><rect x="17.6483%" y="325" width="0.0361%" height="15" fill="rgb(223,98,5)" fg:x="10257" fg:w="21"/><text x="17.8983%" y="335.50"></text></g><g><title>core::cmp::min (11 samples, 0.02%)</title><rect x="17.6844%" y="325" width="0.0189%" height="15" fill="rgb(228,75,37)" fg:x="10278" fg:w="11"/><text x="17.9344%" y="335.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.02%)</title><rect x="17.6844%" y="309" width="0.0189%" height="15" fill="rgb(205,115,49)" fg:x="10278" fg:w="11"/><text x="17.9344%" y="319.50"></text></g><g><title>core::cmp::min_by (11 samples, 0.02%)</title><rect x="17.6844%" y="293" width="0.0189%" height="15" fill="rgb(250,154,43)" fg:x="10278" fg:w="11"/><text x="17.9344%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (87 samples, 0.15%)</title><rect x="17.5640%" y="405" width="0.1497%" height="15" fill="rgb(226,43,29)" fg:x="10208" fg:w="87"/><text x="17.8140%" y="415.50"></text></g><g><title>core::hash::Hasher::write_usize (59 samples, 0.10%)</title><rect x="17.6121%" y="389" width="0.1015%" height="15" fill="rgb(249,228,39)" fg:x="10236" fg:w="59"/><text x="17.8621%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (58 samples, 0.10%)</title><rect x="17.6139%" y="373" width="0.0998%" height="15" fill="rgb(216,79,43)" fg:x="10237" fg:w="58"/><text x="17.8639%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (56 samples, 0.10%)</title><rect x="17.6173%" y="357" width="0.0964%" height="15" fill="rgb(228,95,12)" fg:x="10239" fg:w="56"/><text x="17.8673%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (55 samples, 0.09%)</title><rect x="17.6190%" y="341" width="0.0946%" height="15" fill="rgb(249,221,15)" fg:x="10240" fg:w="55"/><text x="17.8690%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (332 samples, 0.57%)</title><rect x="17.1441%" y="437" width="0.5712%" height="15" fill="rgb(233,34,13)" fg:x="9964" fg:w="332"/><text x="17.3941%" y="447.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (331 samples, 0.57%)</title><rect x="17.1459%" y="421" width="0.5695%" height="15" fill="rgb(214,103,39)" fg:x="9965" fg:w="331"/><text x="17.3959%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (42 samples, 0.07%)</title><rect x="17.7618%" y="341" width="0.0723%" height="15" fill="rgb(251,126,39)" fg:x="10323" fg:w="42"/><text x="18.0118%" y="351.50"></text></g><g><title>core::cmp::min (30 samples, 0.05%)</title><rect x="17.8341%" y="341" width="0.0516%" height="15" fill="rgb(214,216,36)" fg:x="10365" fg:w="30"/><text x="18.0841%" y="351.50"></text></g><g><title>core::cmp::Ord::min (30 samples, 0.05%)</title><rect x="17.8341%" y="325" width="0.0516%" height="15" fill="rgb(220,221,8)" fg:x="10365" fg:w="30"/><text x="18.0841%" y="335.50"></text></g><g><title>core::cmp::min_by (29 samples, 0.05%)</title><rect x="17.8358%" y="309" width="0.0499%" height="15" fill="rgb(240,216,3)" fg:x="10366" fg:w="29"/><text x="18.0858%" y="319.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.02%)</title><rect x="17.8651%" y="293" width="0.0206%" height="15" fill="rgb(232,218,17)" fg:x="10383" fg:w="12"/><text x="18.1151%" y="303.50"></text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.02%)</title><rect x="17.8857%" y="341" width="0.0224%" height="15" fill="rgb(229,163,45)" fg:x="10395" fg:w="13"/><text x="18.1357%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (459 samples, 0.79%)</title><rect x="17.1200%" y="453" width="0.7898%" height="15" fill="rgb(231,110,42)" fg:x="9950" fg:w="459"/><text x="17.3700%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (113 samples, 0.19%)</title><rect x="17.7154%" y="437" width="0.1944%" height="15" fill="rgb(208,170,48)" fg:x="10296" fg:w="113"/><text x="17.9654%" y="447.50"></text></g><g><title>core::hash::Hasher::write_isize (113 samples, 0.19%)</title><rect x="17.7154%" y="421" width="0.1944%" height="15" fill="rgb(239,116,25)" fg:x="10296" fg:w="113"/><text x="17.9654%" y="431.50"></text></g><g><title>core::hash::Hasher::write_usize (110 samples, 0.19%)</title><rect x="17.7205%" y="405" width="0.1893%" height="15" fill="rgb(219,200,50)" fg:x="10299" fg:w="110"/><text x="17.9705%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (110 samples, 0.19%)</title><rect x="17.7205%" y="389" width="0.1893%" height="15" fill="rgb(245,200,0)" fg:x="10299" fg:w="110"/><text x="17.9705%" y="399.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (109 samples, 0.19%)</title><rect x="17.7223%" y="373" width="0.1875%" height="15" fill="rgb(245,119,33)" fg:x="10300" fg:w="109"/><text x="17.9723%" y="383.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (109 samples, 0.19%)</title><rect x="17.7223%" y="357" width="0.1875%" height="15" fill="rgb(231,125,12)" fg:x="10300" fg:w="109"/><text x="17.9723%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (12 samples, 0.02%)</title><rect x="17.9700%" y="373" width="0.0206%" height="15" fill="rgb(216,96,41)" fg:x="10444" fg:w="12"/><text x="18.2200%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (11 samples, 0.02%)</title><rect x="17.9941%" y="373" width="0.0189%" height="15" fill="rgb(248,43,45)" fg:x="10458" fg:w="11"/><text x="18.2441%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (62 samples, 0.11%)</title><rect x="17.9098%" y="453" width="0.1067%" height="15" fill="rgb(217,222,7)" fg:x="10409" fg:w="62"/><text x="18.1598%" y="463.50"></text></g><g><title>core::hash::Hasher::write_u32 (45 samples, 0.08%)</title><rect x="17.9391%" y="437" width="0.0774%" height="15" fill="rgb(233,28,6)" fg:x="10426" fg:w="45"/><text x="18.1891%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (41 samples, 0.07%)</title><rect x="17.9459%" y="421" width="0.0705%" height="15" fill="rgb(231,218,15)" fg:x="10430" fg:w="41"/><text x="18.1959%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (41 samples, 0.07%)</title><rect x="17.9459%" y="405" width="0.0705%" height="15" fill="rgb(226,171,48)" fg:x="10430" fg:w="41"/><text x="18.1959%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (41 samples, 0.07%)</title><rect x="17.9459%" y="389" width="0.0705%" height="15" fill="rgb(235,201,9)" fg:x="10430" fg:w="41"/><text x="18.1959%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (39 samples, 0.07%)</title><rect x="18.1249%" y="373" width="0.0671%" height="15" fill="rgb(217,80,15)" fg:x="10534" fg:w="39"/><text x="18.3749%" y="383.50"></text></g><g><title>core::cmp::min (24 samples, 0.04%)</title><rect x="18.1920%" y="373" width="0.0413%" height="15" fill="rgb(219,152,8)" fg:x="10573" fg:w="24"/><text x="18.4420%" y="383.50"></text></g><g><title>core::cmp::Ord::min (24 samples, 0.04%)</title><rect x="18.1920%" y="357" width="0.0413%" height="15" fill="rgb(243,107,38)" fg:x="10573" fg:w="24"/><text x="18.4420%" y="367.50"></text></g><g><title>core::cmp::min_by (24 samples, 0.04%)</title><rect x="18.1920%" y="341" width="0.0413%" height="15" fill="rgb(231,17,5)" fg:x="10573" fg:w="24"/><text x="18.4420%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (13 samples, 0.02%)</title><rect x="18.2109%" y="325" width="0.0224%" height="15" fill="rgb(209,25,54)" fg:x="10584" fg:w="13"/><text x="18.4609%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (11 samples, 0.02%)</title><rect x="18.2144%" y="309" width="0.0189%" height="15" fill="rgb(219,0,2)" fg:x="10586" fg:w="11"/><text x="18.4644%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.02%)</title><rect x="18.2333%" y="373" width="0.0206%" height="15" fill="rgb(246,9,5)" fg:x="10597" fg:w="12"/><text x="18.4833%" y="383.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (668 samples, 1.15%)</title><rect x="17.1063%" y="485" width="1.1494%" height="15" fill="rgb(226,159,4)" fg:x="9942" fg:w="668"/><text x="17.3563%" y="495.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (667 samples, 1.15%)</title><rect x="17.1080%" y="469" width="1.1476%" height="15" fill="rgb(219,175,34)" fg:x="9943" fg:w="667"/><text x="17.3580%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (139 samples, 0.24%)</title><rect x="18.0165%" y="453" width="0.2392%" height="15" fill="rgb(236,10,46)" fg:x="10471" fg:w="139"/><text x="18.2665%" y="463.50"></text></g><g><title>core::hash::Hasher::write_usize (98 samples, 0.17%)</title><rect x="18.0870%" y="437" width="0.1686%" height="15" fill="rgb(240,211,16)" fg:x="10512" fg:w="98"/><text x="18.3370%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (97 samples, 0.17%)</title><rect x="18.0887%" y="421" width="0.1669%" height="15" fill="rgb(205,3,43)" fg:x="10513" fg:w="97"/><text x="18.3387%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (97 samples, 0.17%)</title><rect x="18.0887%" y="405" width="0.1669%" height="15" fill="rgb(245,7,22)" fg:x="10513" fg:w="97"/><text x="18.3387%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (97 samples, 0.17%)</title><rect x="18.0887%" y="389" width="0.1669%" height="15" fill="rgb(239,132,32)" fg:x="10513" fg:w="97"/><text x="18.3387%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (58 samples, 0.10%)</title><rect x="18.3245%" y="389" width="0.0998%" height="15" fill="rgb(228,202,34)" fg:x="10650" fg:w="58"/><text x="18.5745%" y="399.50"></text></g><g><title>core::cmp::min (17 samples, 0.03%)</title><rect x="18.4243%" y="389" width="0.0293%" height="15" fill="rgb(254,200,22)" fg:x="10708" fg:w="17"/><text x="18.6743%" y="399.50"></text></g><g><title>core::cmp::Ord::min (17 samples, 0.03%)</title><rect x="18.4243%" y="373" width="0.0293%" height="15" fill="rgb(219,10,39)" fg:x="10708" fg:w="17"/><text x="18.6743%" y="383.50"></text></g><g><title>core::cmp::min_by (17 samples, 0.03%)</title><rect x="18.4243%" y="357" width="0.0293%" height="15" fill="rgb(226,210,39)" fg:x="10708" fg:w="17"/><text x="18.6743%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.02%)</title><rect x="18.4294%" y="341" width="0.0241%" height="15" fill="rgb(208,219,16)" fg:x="10711" fg:w="14"/><text x="18.6794%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (10 samples, 0.02%)</title><rect x="18.4363%" y="325" width="0.0172%" height="15" fill="rgb(216,158,51)" fg:x="10715" fg:w="10"/><text x="18.6863%" y="335.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.03%)</title><rect x="18.4535%" y="389" width="0.0275%" height="15" fill="rgb(233,14,44)" fg:x="10725" fg:w="16"/><text x="18.7035%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (812 samples, 1.40%)</title><rect x="17.0856%" y="501" width="1.3971%" height="15" fill="rgb(237,97,39)" fg:x="9930" fg:w="812"/><text x="17.3356%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (132 samples, 0.23%)</title><rect x="18.2556%" y="485" width="0.2271%" height="15" fill="rgb(218,198,43)" fg:x="10610" fg:w="132"/><text x="18.5056%" y="495.50"></text></g><g><title>core::hash::Hasher::write_isize (132 samples, 0.23%)</title><rect x="18.2556%" y="469" width="0.2271%" height="15" fill="rgb(231,104,20)" fg:x="10610" fg:w="132"/><text x="18.5056%" y="479.50"></text></g><g><title>core::hash::Hasher::write_usize (132 samples, 0.23%)</title><rect x="18.2556%" y="453" width="0.2271%" height="15" fill="rgb(254,36,13)" fg:x="10610" fg:w="132"/><text x="18.5056%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (130 samples, 0.22%)</title><rect x="18.2591%" y="437" width="0.2237%" height="15" fill="rgb(248,14,50)" fg:x="10612" fg:w="130"/><text x="18.5091%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (129 samples, 0.22%)</title><rect x="18.2608%" y="421" width="0.2220%" height="15" fill="rgb(217,107,29)" fg:x="10613" fg:w="129"/><text x="18.5108%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (125 samples, 0.22%)</title><rect x="18.2677%" y="405" width="0.2151%" height="15" fill="rgb(251,169,33)" fg:x="10617" fg:w="125"/><text x="18.5177%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.02%)</title><rect x="18.5378%" y="421" width="0.0172%" height="15" fill="rgb(217,108,32)" fg:x="10774" fg:w="10"/><text x="18.7878%" y="431.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="18.5550%" y="421" width="0.0103%" height="15" fill="rgb(219,66,42)" fg:x="10784" fg:w="6"/><text x="18.8050%" y="431.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="18.5550%" y="405" width="0.0103%" height="15" fill="rgb(206,180,7)" fg:x="10784" fg:w="6"/><text x="18.8050%" y="415.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="18.5550%" y="389" width="0.0103%" height="15" fill="rgb(208,226,31)" fg:x="10784" fg:w="6"/><text x="18.8050%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (56 samples, 0.10%)</title><rect x="18.4828%" y="501" width="0.0964%" height="15" fill="rgb(218,26,49)" fg:x="10742" fg:w="56"/><text x="18.7328%" y="511.50"></text></g><g><title>core::hash::Hasher::write_u32 (39 samples, 0.07%)</title><rect x="18.5120%" y="485" width="0.0671%" height="15" fill="rgb(233,197,48)" fg:x="10759" fg:w="39"/><text x="18.7620%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (38 samples, 0.07%)</title><rect x="18.5137%" y="469" width="0.0654%" height="15" fill="rgb(252,181,51)" fg:x="10760" fg:w="38"/><text x="18.7637%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (38 samples, 0.07%)</title><rect x="18.5137%" y="453" width="0.0654%" height="15" fill="rgb(253,90,19)" fg:x="10760" fg:w="38"/><text x="18.7637%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (38 samples, 0.07%)</title><rect x="18.5137%" y="437" width="0.0654%" height="15" fill="rgb(215,171,30)" fg:x="10760" fg:w="38"/><text x="18.7637%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="18.5654%" y="421" width="0.0138%" height="15" fill="rgb(214,222,9)" fg:x="10790" fg:w="8"/><text x="18.8154%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (56 samples, 0.10%)</title><rect x="18.6996%" y="421" width="0.0964%" height="15" fill="rgb(223,3,22)" fg:x="10868" fg:w="56"/><text x="18.9496%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="18.7856%" y="405" width="0.0103%" height="15" fill="rgb(225,196,46)" fg:x="10918" fg:w="6"/><text x="19.0356%" y="415.50"></text></g><g><title>core::cmp::min (19 samples, 0.03%)</title><rect x="18.7959%" y="421" width="0.0327%" height="15" fill="rgb(209,110,37)" fg:x="10924" fg:w="19"/><text x="19.0459%" y="431.50"></text></g><g><title>core::cmp::Ord::min (19 samples, 0.03%)</title><rect x="18.7959%" y="405" width="0.0327%" height="15" fill="rgb(249,89,12)" fg:x="10924" fg:w="19"/><text x="19.0459%" y="415.50"></text></g><g><title>core::cmp::min_by (19 samples, 0.03%)</title><rect x="18.7959%" y="389" width="0.0327%" height="15" fill="rgb(226,27,33)" fg:x="10924" fg:w="19"/><text x="19.0459%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (20 samples, 0.03%)</title><rect x="18.8286%" y="421" width="0.0344%" height="15" fill="rgb(213,82,22)" fg:x="10943" fg:w="20"/><text x="19.0786%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (166 samples, 0.29%)</title><rect x="18.5791%" y="501" width="0.2856%" height="15" fill="rgb(248,140,0)" fg:x="10798" fg:w="166"/><text x="18.8291%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (128 samples, 0.22%)</title><rect x="18.6445%" y="485" width="0.2202%" height="15" fill="rgb(228,106,3)" fg:x="10836" fg:w="128"/><text x="18.8945%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (126 samples, 0.22%)</title><rect x="18.6479%" y="469" width="0.2168%" height="15" fill="rgb(209,23,37)" fg:x="10838" fg:w="126"/><text x="18.8979%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (122 samples, 0.21%)</title><rect x="18.6548%" y="453" width="0.2099%" height="15" fill="rgb(241,93,50)" fg:x="10842" fg:w="122"/><text x="18.9048%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (122 samples, 0.21%)</title><rect x="18.6548%" y="437" width="0.2099%" height="15" fill="rgb(253,46,43)" fg:x="10842" fg:w="122"/><text x="18.9048%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,042 samples, 1.79%)</title><rect x="17.0736%" y="533" width="1.7929%" height="15" fill="rgb(226,206,43)" fg:x="9923" fg:w="1042"/><text x="17.3236%" y="543.50">&lt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,040 samples, 1.79%)</title><rect x="17.0770%" y="517" width="1.7894%" height="15" fill="rgb(217,54,7)" fg:x="9925" fg:w="1040"/><text x="17.3270%" y="527.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (30 samples, 0.05%)</title><rect x="18.9112%" y="437" width="0.0516%" height="15" fill="rgb(223,5,52)" fg:x="10991" fg:w="30"/><text x="19.1612%" y="447.50"></text></g><g><title>core::cmp::min (16 samples, 0.03%)</title><rect x="18.9628%" y="437" width="0.0275%" height="15" fill="rgb(206,52,46)" fg:x="11021" fg:w="16"/><text x="19.2128%" y="447.50"></text></g><g><title>core::cmp::Ord::min (16 samples, 0.03%)</title><rect x="18.9628%" y="421" width="0.0275%" height="15" fill="rgb(253,136,11)" fg:x="11021" fg:w="16"/><text x="19.2128%" y="431.50"></text></g><g><title>core::cmp::min_by (15 samples, 0.03%)</title><rect x="18.9645%" y="405" width="0.0258%" height="15" fill="rgb(208,106,33)" fg:x="11022" fg:w="15"/><text x="19.2145%" y="415.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.01%)</title><rect x="18.9800%" y="389" width="0.0103%" height="15" fill="rgb(206,54,4)" fg:x="11031" fg:w="6"/><text x="19.2300%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,129 samples, 1.94%)</title><rect x="17.0581%" y="549" width="1.9426%" height="15" fill="rgb(213,3,15)" fg:x="9914" fg:w="1129"/><text x="17.3081%" y="559.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (78 samples, 0.13%)</title><rect x="18.8665%" y="533" width="0.1342%" height="15" fill="rgb(252,211,39)" fg:x="10965" fg:w="78"/><text x="19.1165%" y="543.50"></text></g><g><title>core::hash::Hasher::write_isize (77 samples, 0.13%)</title><rect x="18.8682%" y="517" width="0.1325%" height="15" fill="rgb(223,6,36)" fg:x="10966" fg:w="77"/><text x="19.1182%" y="527.50"></text></g><g><title>core::hash::Hasher::write_usize (77 samples, 0.13%)</title><rect x="18.8682%" y="501" width="0.1325%" height="15" fill="rgb(252,169,45)" fg:x="10966" fg:w="77"/><text x="19.1182%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (76 samples, 0.13%)</title><rect x="18.8699%" y="485" width="0.1308%" height="15" fill="rgb(212,48,26)" fg:x="10967" fg:w="76"/><text x="19.1199%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (76 samples, 0.13%)</title><rect x="18.8699%" y="469" width="0.1308%" height="15" fill="rgb(251,102,48)" fg:x="10967" fg:w="76"/><text x="19.1199%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (75 samples, 0.13%)</title><rect x="18.8716%" y="453" width="0.1290%" height="15" fill="rgb(243,208,16)" fg:x="10968" fg:w="75"/><text x="19.1216%" y="463.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="18.9903%" y="437" width="0.0103%" height="15" fill="rgb(219,96,24)" fg:x="11037" fg:w="6"/><text x="19.2403%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.01%)</title><rect x="19.0575%" y="469" width="0.0103%" height="15" fill="rgb(219,33,29)" fg:x="11076" fg:w="6"/><text x="19.3075%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="19.0764%" y="469" width="0.0138%" height="15" fill="rgb(223,176,5)" fg:x="11087" fg:w="8"/><text x="19.3264%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (53 samples, 0.09%)</title><rect x="19.0007%" y="549" width="0.0912%" height="15" fill="rgb(228,140,14)" fg:x="11043" fg:w="53"/><text x="19.2507%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u32 (32 samples, 0.06%)</title><rect x="19.0368%" y="533" width="0.0551%" height="15" fill="rgb(217,179,31)" fg:x="11064" fg:w="32"/><text x="19.2868%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (31 samples, 0.05%)</title><rect x="19.0385%" y="517" width="0.0533%" height="15" fill="rgb(230,9,30)" fg:x="11065" fg:w="31"/><text x="19.2885%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="19.0402%" y="501" width="0.0516%" height="15" fill="rgb(230,136,20)" fg:x="11066" fg:w="30"/><text x="19.2902%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (30 samples, 0.05%)</title><rect x="19.0402%" y="485" width="0.0516%" height="15" fill="rgb(215,210,22)" fg:x="11066" fg:w="30"/><text x="19.2902%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (36 samples, 0.06%)</title><rect x="19.1951%" y="469" width="0.0619%" height="15" fill="rgb(218,43,5)" fg:x="11156" fg:w="36"/><text x="19.4451%" y="479.50"></text></g><g><title>core::cmp::min (11 samples, 0.02%)</title><rect x="19.2570%" y="469" width="0.0189%" height="15" fill="rgb(216,11,5)" fg:x="11192" fg:w="11"/><text x="19.5070%" y="479.50"></text></g><g><title>core::cmp::Ord::min (11 samples, 0.02%)</title><rect x="19.2570%" y="453" width="0.0189%" height="15" fill="rgb(209,82,29)" fg:x="11192" fg:w="11"/><text x="19.5070%" y="463.50"></text></g><g><title>core::cmp::min_by (10 samples, 0.02%)</title><rect x="19.2588%" y="437" width="0.0172%" height="15" fill="rgb(244,115,12)" fg:x="11193" fg:w="10"/><text x="19.5088%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (113 samples, 0.19%)</title><rect x="19.0919%" y="549" width="0.1944%" height="15" fill="rgb(222,82,18)" fg:x="11096" fg:w="113"/><text x="19.3419%" y="559.50"></text></g><g><title>core::hash::Hasher::write_usize (72 samples, 0.12%)</title><rect x="19.1624%" y="533" width="0.1239%" height="15" fill="rgb(249,227,8)" fg:x="11137" fg:w="72"/><text x="19.4124%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (72 samples, 0.12%)</title><rect x="19.1624%" y="517" width="0.1239%" height="15" fill="rgb(253,141,45)" fg:x="11137" fg:w="72"/><text x="19.4124%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (71 samples, 0.12%)</title><rect x="19.1641%" y="501" width="0.1222%" height="15" fill="rgb(234,184,4)" fg:x="11138" fg:w="71"/><text x="19.4141%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (71 samples, 0.12%)</title><rect x="19.1641%" y="485" width="0.1222%" height="15" fill="rgb(218,194,23)" fg:x="11138" fg:w="71"/><text x="19.4141%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (6 samples, 0.01%)</title><rect x="19.2760%" y="469" width="0.0103%" height="15" fill="rgb(235,66,41)" fg:x="11203" fg:w="6"/><text x="19.5260%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,302 samples, 2.24%)</title><rect x="17.0495%" y="581" width="2.2402%" height="15" fill="rgb(245,217,1)" fg:x="9909" fg:w="1302"/><text x="17.2995%" y="591.50">&lt;..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,302 samples, 2.24%)</title><rect x="17.0495%" y="565" width="2.2402%" height="15" fill="rgb(229,91,1)" fg:x="9909" fg:w="1302"/><text x="17.2995%" y="575.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.01%)</title><rect x="19.3052%" y="485" width="0.0138%" height="15" fill="rgb(207,101,30)" fg:x="11220" fg:w="8"/><text x="19.5552%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (1,334 samples, 2.30%)</title><rect x="17.0323%" y="597" width="2.2953%" height="15" fill="rgb(223,82,49)" fg:x="9899" fg:w="1334"/><text x="17.2823%" y="607.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (22 samples, 0.04%)</title><rect x="19.2897%" y="581" width="0.0379%" height="15" fill="rgb(218,167,17)" fg:x="11211" fg:w="22"/><text x="19.5397%" y="591.50"></text></g><g><title>core::hash::Hasher::write_isize (22 samples, 0.04%)</title><rect x="19.2897%" y="565" width="0.0379%" height="15" fill="rgb(208,103,14)" fg:x="11211" fg:w="22"/><text x="19.5397%" y="575.50"></text></g><g><title>core::hash::Hasher::write_usize (22 samples, 0.04%)</title><rect x="19.2897%" y="549" width="0.0379%" height="15" fill="rgb(238,20,8)" fg:x="11211" fg:w="22"/><text x="19.5397%" y="559.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="19.2949%" y="533" width="0.0327%" height="15" fill="rgb(218,80,54)" fg:x="11214" fg:w="19"/><text x="19.5449%" y="543.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="19.2949%" y="517" width="0.0327%" height="15" fill="rgb(240,144,17)" fg:x="11214" fg:w="19"/><text x="19.5449%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (19 samples, 0.03%)</title><rect x="19.2949%" y="501" width="0.0327%" height="15" fill="rgb(245,27,50)" fg:x="11214" fg:w="19"/><text x="19.5449%" y="511.50"></text></g><g><title>core::cmp::min (6 samples, 0.01%)</title><rect x="19.3396%" y="517" width="0.0103%" height="15" fill="rgb(251,51,7)" fg:x="11240" fg:w="6"/><text x="19.5896%" y="527.50"></text></g><g><title>core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="19.3396%" y="501" width="0.0103%" height="15" fill="rgb(245,217,29)" fg:x="11240" fg:w="6"/><text x="19.5896%" y="511.50"></text></g><g><title>core::cmp::min_by (6 samples, 0.01%)</title><rect x="19.3396%" y="485" width="0.0103%" height="15" fill="rgb(221,176,29)" fg:x="11240" fg:w="6"/><text x="19.5896%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (15 samples, 0.03%)</title><rect x="19.3276%" y="597" width="0.0258%" height="15" fill="rgb(212,180,24)" fg:x="11233" fg:w="15"/><text x="19.5776%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u32 (11 samples, 0.02%)</title><rect x="19.3345%" y="581" width="0.0189%" height="15" fill="rgb(254,24,2)" fg:x="11237" fg:w="11"/><text x="19.5845%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="19.3345%" y="565" width="0.0189%" height="15" fill="rgb(230,100,2)" fg:x="11237" fg:w="11"/><text x="19.5845%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="19.3345%" y="549" width="0.0189%" height="15" fill="rgb(219,142,25)" fg:x="11237" fg:w="11"/><text x="19.5845%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (11 samples, 0.02%)</title><rect x="19.3345%" y="533" width="0.0189%" height="15" fill="rgb(240,73,43)" fg:x="11237" fg:w="11"/><text x="19.5845%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (15 samples, 0.03%)</title><rect x="19.4411%" y="517" width="0.0258%" height="15" fill="rgb(214,114,15)" fg:x="11299" fg:w="15"/><text x="19.6911%" y="527.50"></text></g><g><title>core::cmp::min (7 samples, 0.01%)</title><rect x="19.4670%" y="517" width="0.0120%" height="15" fill="rgb(207,130,4)" fg:x="11314" fg:w="7"/><text x="19.7170%" y="527.50"></text></g><g><title>core::cmp::Ord::min (7 samples, 0.01%)</title><rect x="19.4670%" y="501" width="0.0120%" height="15" fill="rgb(221,25,40)" fg:x="11314" fg:w="7"/><text x="19.7170%" y="511.50"></text></g><g><title>core::cmp::min_by (7 samples, 0.01%)</title><rect x="19.4670%" y="485" width="0.0120%" height="15" fill="rgb(241,184,7)" fg:x="11314" fg:w="7"/><text x="19.7170%" y="495.50"></text></g><g><title>hashbrown::map::make_hasher::_{{closure}} (1,456 samples, 2.51%)</title><rect x="16.9876%" y="709" width="2.5052%" height="15" fill="rgb(235,159,4)" fg:x="9873" fg:w="1456"/><text x="17.2376%" y="719.50">ha..</text></g><g><title>hashbrown::map::make_hash (1,456 samples, 2.51%)</title><rect x="16.9876%" y="693" width="2.5052%" height="15" fill="rgb(214,87,48)" fg:x="9873" fg:w="1456"/><text x="17.2376%" y="703.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (1,456 samples, 2.51%)</title><rect x="16.9876%" y="677" width="2.5052%" height="15" fill="rgb(246,198,24)" fg:x="9873" fg:w="1456"/><text x="17.2376%" y="687.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,435 samples, 2.47%)</title><rect x="17.0237%" y="661" width="2.4691%" height="15" fill="rgb(209,66,40)" fg:x="9894" fg:w="1435"/><text x="17.2737%" y="671.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,435 samples, 2.47%)</title><rect x="17.0237%" y="645" width="2.4691%" height="15" fill="rgb(233,147,39)" fg:x="9894" fg:w="1435"/><text x="17.2737%" y="655.50">co..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (1,433 samples, 2.47%)</title><rect x="17.0271%" y="629" width="2.4656%" height="15" fill="rgb(231,145,52)" fg:x="9896" fg:w="1433"/><text x="17.2771%" y="639.50">&lt;a..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (1,432 samples, 2.46%)</title><rect x="17.0289%" y="613" width="2.4639%" height="15" fill="rgb(206,20,26)" fg:x="9897" fg:w="1432"/><text x="17.2789%" y="623.50">&lt;a..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (81 samples, 0.14%)</title><rect x="19.3534%" y="597" width="0.1394%" height="15" fill="rgb(238,220,4)" fg:x="11248" fg:w="81"/><text x="19.6034%" y="607.50"></text></g><g><title>core::hash::Hasher::write_usize (36 samples, 0.06%)</title><rect x="19.4308%" y="581" width="0.0619%" height="15" fill="rgb(252,195,42)" fg:x="11293" fg:w="36"/><text x="19.6808%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="19.4308%" y="565" width="0.0619%" height="15" fill="rgb(209,10,6)" fg:x="11293" fg:w="36"/><text x="19.6808%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="19.4308%" y="549" width="0.0619%" height="15" fill="rgb(229,3,52)" fg:x="11293" fg:w="36"/><text x="19.6808%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (36 samples, 0.06%)</title><rect x="19.4308%" y="533" width="0.0619%" height="15" fill="rgb(253,49,37)" fg:x="11293" fg:w="36"/><text x="19.6808%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (8 samples, 0.01%)</title><rect x="19.4790%" y="517" width="0.0138%" height="15" fill="rgb(240,103,49)" fg:x="11321" fg:w="8"/><text x="19.7290%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (1,461 samples, 2.51%)</title><rect x="16.9841%" y="725" width="2.5138%" height="15" fill="rgb(250,182,30)" fg:x="9871" fg:w="1461"/><text x="17.2341%" y="735.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (27 samples, 0.05%)</title><rect x="19.5134%" y="693" width="0.0465%" height="15" fill="rgb(248,8,30)" fg:x="11341" fg:w="27"/><text x="19.7634%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (16 samples, 0.03%)</title><rect x="19.5323%" y="677" width="0.0275%" height="15" fill="rgb(237,120,30)" fg:x="11352" fg:w="16"/><text x="19.7823%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.03%)</title><rect x="19.5323%" y="661" width="0.0275%" height="15" fill="rgb(221,146,34)" fg:x="11352" fg:w="16"/><text x="19.7823%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,510 samples, 2.60%)</title><rect x="16.9772%" y="789" width="2.5981%" height="15" fill="rgb(242,55,13)" fg:x="9867" fg:w="1510"/><text x="17.2272%" y="799.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,509 samples, 2.60%)</title><rect x="16.9790%" y="773" width="2.5964%" height="15" fill="rgb(242,112,31)" fg:x="9868" fg:w="1509"/><text x="17.2290%" y="783.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1,509 samples, 2.60%)</title><rect x="16.9790%" y="757" width="2.5964%" height="15" fill="rgb(249,192,27)" fg:x="9868" fg:w="1509"/><text x="17.2290%" y="767.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1,509 samples, 2.60%)</title><rect x="16.9790%" y="741" width="2.5964%" height="15" fill="rgb(208,204,44)" fg:x="9868" fg:w="1509"/><text x="17.2290%" y="751.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (45 samples, 0.08%)</title><rect x="19.4979%" y="725" width="0.0774%" height="15" fill="rgb(208,93,54)" fg:x="11332" fg:w="45"/><text x="19.7479%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (44 samples, 0.08%)</title><rect x="19.4996%" y="709" width="0.0757%" height="15" fill="rgb(242,1,31)" fg:x="11333" fg:w="44"/><text x="19.7496%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.01%)</title><rect x="19.5633%" y="693" width="0.0120%" height="15" fill="rgb(241,83,25)" fg:x="11370" fg:w="7"/><text x="19.8133%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.01%)</title><rect x="19.5633%" y="677" width="0.0120%" height="15" fill="rgb(205,169,50)" fg:x="11370" fg:w="7"/><text x="19.8133%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="19.6872%" y="757" width="0.0120%" height="15" fill="rgb(239,186,37)" fg:x="11442" fg:w="7"/><text x="19.9372%" y="767.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (31 samples, 0.05%)</title><rect x="19.7336%" y="741" width="0.0533%" height="15" fill="rgb(205,221,10)" fg:x="11469" fg:w="31"/><text x="19.9836%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (96 samples, 0.17%)</title><rect x="19.6511%" y="773" width="0.1652%" height="15" fill="rgb(218,196,15)" fg:x="11421" fg:w="96"/><text x="19.9011%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (68 samples, 0.12%)</title><rect x="19.6992%" y="757" width="0.1170%" height="15" fill="rgb(218,196,35)" fg:x="11449" fg:w="68"/><text x="19.9492%" y="767.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (17 samples, 0.03%)</title><rect x="19.7870%" y="741" width="0.0293%" height="15" fill="rgb(233,63,24)" fg:x="11500" fg:w="17"/><text x="20.0370%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="20.4081%" y="101" width="0.0103%" height="15" fill="rgb(225,8,4)" fg:x="11861" fg:w="6"/><text x="20.6581%" y="111.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="20.4081%" y="85" width="0.0103%" height="15" fill="rgb(234,105,35)" fg:x="11861" fg:w="6"/><text x="20.6581%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="20.4081%" y="69" width="0.0103%" height="15" fill="rgb(236,21,32)" fg:x="11861" fg:w="6"/><text x="20.6581%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.02%)</title><rect x="20.4081%" y="133" width="0.0172%" height="15" fill="rgb(228,109,6)" fg:x="11861" fg:w="10"/><text x="20.6581%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.02%)</title><rect x="20.4081%" y="117" width="0.0172%" height="15" fill="rgb(229,215,31)" fg:x="11861" fg:w="10"/><text x="20.6581%" y="127.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (24 samples, 0.04%)</title><rect x="20.3995%" y="261" width="0.0413%" height="15" fill="rgb(221,52,54)" fg:x="11856" fg:w="24"/><text x="20.6495%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (24 samples, 0.04%)</title><rect x="20.3995%" y="245" width="0.0413%" height="15" fill="rgb(252,129,43)" fg:x="11856" fg:w="24"/><text x="20.6495%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (20 samples, 0.03%)</title><rect x="20.4064%" y="229" width="0.0344%" height="15" fill="rgb(248,183,27)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="239.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (20 samples, 0.03%)</title><rect x="20.4064%" y="213" width="0.0344%" height="15" fill="rgb(250,0,22)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="223.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (20 samples, 0.03%)</title><rect x="20.4064%" y="197" width="0.0344%" height="15" fill="rgb(213,166,10)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="207.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (20 samples, 0.03%)</title><rect x="20.4064%" y="181" width="0.0344%" height="15" fill="rgb(207,163,36)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (20 samples, 0.03%)</title><rect x="20.4064%" y="165" width="0.0344%" height="15" fill="rgb(208,122,22)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.03%)</title><rect x="20.4064%" y="149" width="0.0344%" height="15" fill="rgb(207,104,49)" fg:x="11860" fg:w="20"/><text x="20.6564%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.02%)</title><rect x="20.4253%" y="133" width="0.0155%" height="15" fill="rgb(248,211,50)" fg:x="11871" fg:w="9"/><text x="20.6753%" y="143.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.02%)</title><rect x="20.4253%" y="117" width="0.0155%" height="15" fill="rgb(217,13,45)" fg:x="11871" fg:w="9"/><text x="20.6753%" y="127.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9 samples, 0.02%)</title><rect x="20.4253%" y="101" width="0.0155%" height="15" fill="rgb(211,216,49)" fg:x="11871" fg:w="9"/><text x="20.6753%" y="111.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (42 samples, 0.07%)</title><rect x="20.3737%" y="341" width="0.0723%" height="15" fill="rgb(221,58,53)" fg:x="11841" fg:w="42"/><text x="20.6237%" y="351.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (41 samples, 0.07%)</title><rect x="20.3754%" y="325" width="0.0705%" height="15" fill="rgb(220,112,41)" fg:x="11842" fg:w="41"/><text x="20.6254%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.05%)</title><rect x="20.3926%" y="309" width="0.0533%" height="15" fill="rgb(236,38,28)" fg:x="11852" fg:w="31"/><text x="20.6426%" y="319.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (31 samples, 0.05%)</title><rect x="20.3926%" y="293" width="0.0533%" height="15" fill="rgb(227,195,22)" fg:x="11852" fg:w="31"/><text x="20.6426%" y="303.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (27 samples, 0.05%)</title><rect x="20.3995%" y="277" width="0.0465%" height="15" fill="rgb(214,55,33)" fg:x="11856" fg:w="27"/><text x="20.6495%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="20.5079%" y="197" width="0.0155%" height="15" fill="rgb(248,80,13)" fg:x="11919" fg:w="9"/><text x="20.7579%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.04%)</title><rect x="20.5028%" y="229" width="0.0361%" height="15" fill="rgb(238,52,6)" fg:x="11916" fg:w="21"/><text x="20.7528%" y="239.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (20 samples, 0.03%)</title><rect x="20.5045%" y="213" width="0.0344%" height="15" fill="rgb(224,198,47)" fg:x="11917" fg:w="20"/><text x="20.7545%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (9 samples, 0.02%)</title><rect x="20.5234%" y="197" width="0.0155%" height="15" fill="rgb(233,171,20)" fg:x="11928" fg:w="9"/><text x="20.7734%" y="207.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.07%)</title><rect x="20.4787%" y="293" width="0.0705%" height="15" fill="rgb(241,30,25)" fg:x="11902" fg:w="41"/><text x="20.7287%" y="303.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.07%)</title><rect x="20.4787%" y="277" width="0.0705%" height="15" fill="rgb(207,171,38)" fg:x="11902" fg:w="41"/><text x="20.7287%" y="287.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.07%)</title><rect x="20.4787%" y="261" width="0.0705%" height="15" fill="rgb(234,70,1)" fg:x="11902" fg:w="41"/><text x="20.7287%" y="271.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.06%)</title><rect x="20.4873%" y="245" width="0.0619%" height="15" fill="rgb(232,178,18)" fg:x="11907" fg:w="36"/><text x="20.7373%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="20.5389%" y="229" width="0.0103%" height="15" fill="rgb(241,78,40)" fg:x="11937" fg:w="6"/><text x="20.7889%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (9 samples, 0.02%)</title><rect x="20.5750%" y="117" width="0.0155%" height="15" fill="rgb(222,35,25)" fg:x="11958" fg:w="9"/><text x="20.8250%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (45 samples, 0.08%)</title><rect x="20.5647%" y="165" width="0.0774%" height="15" fill="rgb(207,92,16)" fg:x="11952" fg:w="45"/><text x="20.8147%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (45 samples, 0.08%)</title><rect x="20.5647%" y="149" width="0.0774%" height="15" fill="rgb(216,59,51)" fg:x="11952" fg:w="45"/><text x="20.8147%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (45 samples, 0.08%)</title><rect x="20.5647%" y="133" width="0.0774%" height="15" fill="rgb(213,80,28)" fg:x="11952" fg:w="45"/><text x="20.8147%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (30 samples, 0.05%)</title><rect x="20.5905%" y="117" width="0.0516%" height="15" fill="rgb(220,93,7)" fg:x="11967" fg:w="30"/><text x="20.8405%" y="127.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.02%)</title><rect x="20.6421%" y="165" width="0.0241%" height="15" fill="rgb(225,24,44)" fg:x="11997" fg:w="14"/><text x="20.8921%" y="175.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (8 samples, 0.01%)</title><rect x="20.6525%" y="149" width="0.0138%" height="15" fill="rgb(243,74,40)" fg:x="12003" fg:w="8"/><text x="20.9025%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.02%)</title><rect x="20.6817%" y="53" width="0.0189%" height="15" fill="rgb(228,39,7)" fg:x="12020" fg:w="11"/><text x="20.9317%" y="63.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (20 samples, 0.03%)</title><rect x="20.6697%" y="69" width="0.0344%" height="15" fill="rgb(227,79,8)" fg:x="12013" fg:w="20"/><text x="20.9197%" y="79.50"></text></g><g><title>hashbrown::map::make_hash (95 samples, 0.16%)</title><rect x="20.5613%" y="197" width="0.1635%" height="15" fill="rgb(236,58,11)" fg:x="11950" fg:w="95"/><text x="20.8113%" y="207.50"></text></g><g><title>core::hash::BuildHasher::hash_one (95 samples, 0.16%)</title><rect x="20.5613%" y="181" width="0.1635%" height="15" fill="rgb(249,63,35)" fg:x="11950" fg:w="95"/><text x="20.8113%" y="191.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (34 samples, 0.06%)</title><rect x="20.6662%" y="165" width="0.0585%" height="15" fill="rgb(252,114,16)" fg:x="12011" fg:w="34"/><text x="20.9162%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (34 samples, 0.06%)</title><rect x="20.6662%" y="149" width="0.0585%" height="15" fill="rgb(254,151,24)" fg:x="12011" fg:w="34"/><text x="20.9162%" y="159.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (32 samples, 0.06%)</title><rect x="20.6697%" y="133" width="0.0551%" height="15" fill="rgb(253,54,39)" fg:x="12013" fg:w="32"/><text x="20.9197%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (32 samples, 0.06%)</title><rect x="20.6697%" y="117" width="0.0551%" height="15" fill="rgb(243,25,45)" fg:x="12013" fg:w="32"/><text x="20.9197%" y="127.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (32 samples, 0.06%)</title><rect x="20.6697%" y="101" width="0.0551%" height="15" fill="rgb(234,134,9)" fg:x="12013" fg:w="32"/><text x="20.9197%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (32 samples, 0.06%)</title><rect x="20.6697%" y="85" width="0.0551%" height="15" fill="rgb(227,166,31)" fg:x="12013" fg:w="32"/><text x="20.9197%" y="95.50"></text></g><g><title>core::hash::Hasher::write_u8 (12 samples, 0.02%)</title><rect x="20.7041%" y="69" width="0.0206%" height="15" fill="rgb(245,143,41)" fg:x="12033" fg:w="12"/><text x="20.9541%" y="79.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.02%)</title><rect x="20.7041%" y="53" width="0.0206%" height="15" fill="rgb(238,181,32)" fg:x="12033" fg:w="12"/><text x="20.9541%" y="63.50"></text></g><g><title>core::hash::sip::u8to64_le (10 samples, 0.02%)</title><rect x="20.7075%" y="37" width="0.0172%" height="15" fill="rgb(224,113,18)" fg:x="12035" fg:w="10"/><text x="20.9575%" y="47.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="20.7781%" y="149" width="0.0258%" height="15" fill="rgb(240,229,28)" fg:x="12076" fg:w="15"/><text x="21.0281%" y="159.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (7 samples, 0.01%)</title><rect x="20.7918%" y="133" width="0.0120%" height="15" fill="rgb(250,185,3)" fg:x="12084" fg:w="7"/><text x="21.0418%" y="143.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12 samples, 0.02%)</title><rect x="20.8108%" y="133" width="0.0206%" height="15" fill="rgb(212,59,25)" fg:x="12095" fg:w="12"/><text x="21.0608%" y="143.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.02%)</title><rect x="20.8108%" y="117" width="0.0206%" height="15" fill="rgb(221,87,20)" fg:x="12095" fg:w="12"/><text x="21.0608%" y="127.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.02%)</title><rect x="20.8125%" y="101" width="0.0189%" height="15" fill="rgb(213,74,28)" fg:x="12096" fg:w="11"/><text x="21.0625%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="20.8142%" y="85" width="0.0172%" height="15" fill="rgb(224,132,34)" fg:x="12097" fg:w="10"/><text x="21.0642%" y="95.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.02%)</title><rect x="20.8142%" y="69" width="0.0172%" height="15" fill="rgb(222,101,24)" fg:x="12097" fg:w="10"/><text x="21.0642%" y="79.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (26 samples, 0.04%)</title><rect x="20.8039%" y="149" width="0.0447%" height="15" fill="rgb(254,142,4)" fg:x="12091" fg:w="26"/><text x="21.0539%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (8 samples, 0.01%)</title><rect x="20.8348%" y="133" width="0.0138%" height="15" fill="rgb(230,229,49)" fg:x="12109" fg:w="8"/><text x="21.0848%" y="143.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.01%)</title><rect x="20.8348%" y="117" width="0.0138%" height="15" fill="rgb(238,70,47)" fg:x="12109" fg:w="8"/><text x="21.0848%" y="127.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.03%)</title><rect x="20.8486%" y="149" width="0.0275%" height="15" fill="rgb(231,160,17)" fg:x="12117" fg:w="16"/><text x="21.0986%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.02%)</title><rect x="20.8520%" y="133" width="0.0241%" height="15" fill="rgb(218,68,53)" fg:x="12119" fg:w="14"/><text x="21.1020%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (11 samples, 0.02%)</title><rect x="20.8916%" y="133" width="0.0189%" height="15" fill="rgb(236,111,10)" fg:x="12142" fg:w="11"/><text x="21.1416%" y="143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (274 samples, 0.47%)</title><rect x="20.4494%" y="325" width="0.4714%" height="15" fill="rgb(224,34,41)" fg:x="11885" fg:w="274"/><text x="20.6994%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (273 samples, 0.47%)</title><rect x="20.4511%" y="309" width="0.4697%" height="15" fill="rgb(241,118,19)" fg:x="11886" fg:w="273"/><text x="20.7011%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (216 samples, 0.37%)</title><rect x="20.5492%" y="293" width="0.3717%" height="15" fill="rgb(238,129,25)" fg:x="11943" fg:w="216"/><text x="20.7992%" y="303.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (215 samples, 0.37%)</title><rect x="20.5509%" y="277" width="0.3699%" height="15" fill="rgb(238,22,31)" fg:x="11944" fg:w="215"/><text x="20.8009%" y="287.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (215 samples, 0.37%)</title><rect x="20.5509%" y="261" width="0.3699%" height="15" fill="rgb(222,174,48)" fg:x="11944" fg:w="215"/><text x="20.8009%" y="271.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (215 samples, 0.37%)</title><rect x="20.5509%" y="245" width="0.3699%" height="15" fill="rgb(206,152,40)" fg:x="11944" fg:w="215"/><text x="20.8009%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (215 samples, 0.37%)</title><rect x="20.5509%" y="229" width="0.3699%" height="15" fill="rgb(218,99,54)" fg:x="11944" fg:w="215"/><text x="20.8009%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (211 samples, 0.36%)</title><rect x="20.5578%" y="213" width="0.3630%" height="15" fill="rgb(220,174,26)" fg:x="11948" fg:w="211"/><text x="20.8078%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (114 samples, 0.20%)</title><rect x="20.7247%" y="197" width="0.1961%" height="15" fill="rgb(245,116,9)" fg:x="12045" fg:w="114"/><text x="20.9747%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112 samples, 0.19%)</title><rect x="20.7282%" y="181" width="0.1927%" height="15" fill="rgb(209,72,35)" fg:x="12047" fg:w="112"/><text x="20.9782%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (101 samples, 0.17%)</title><rect x="20.7471%" y="165" width="0.1738%" height="15" fill="rgb(226,126,21)" fg:x="12058" fg:w="101"/><text x="20.9971%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (26 samples, 0.04%)</title><rect x="20.8761%" y="149" width="0.0447%" height="15" fill="rgb(227,192,1)" fg:x="12133" fg:w="26"/><text x="21.1261%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="20.9105%" y="133" width="0.0103%" height="15" fill="rgb(237,180,29)" fg:x="12153" fg:w="6"/><text x="21.1605%" y="143.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (6 samples, 0.01%)</title><rect x="20.9105%" y="117" width="0.0103%" height="15" fill="rgb(230,197,35)" fg:x="12153" fg:w="6"/><text x="21.1605%" y="127.50"></text></g><g><title>[libc.so.6] (6 samples, 0.01%)</title><rect x="20.9295%" y="293" width="0.0103%" height="15" fill="rgb(246,193,31)" fg:x="12164" fg:w="6"/><text x="21.1795%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (9 samples, 0.02%)</title><rect x="20.9673%" y="245" width="0.0155%" height="15" fill="rgb(241,36,4)" fg:x="12186" fg:w="9"/><text x="21.2173%" y="255.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (413 samples, 0.71%)</title><rect x="20.3032%" y="405" width="0.7106%" height="15" fill="rgb(241,130,17)" fg:x="11800" fg:w="413"/><text x="20.5532%" y="415.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (407 samples, 0.70%)</title><rect x="20.3135%" y="389" width="0.7003%" height="15" fill="rgb(206,137,32)" fg:x="11806" fg:w="407"/><text x="20.5635%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (377 samples, 0.65%)</title><rect x="20.3651%" y="373" width="0.6487%" height="15" fill="rgb(237,228,51)" fg:x="11836" fg:w="377"/><text x="20.6151%" y="383.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (375 samples, 0.65%)</title><rect x="20.3686%" y="357" width="0.6452%" height="15" fill="rgb(243,6,42)" fg:x="11838" fg:w="375"/><text x="20.6186%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (330 samples, 0.57%)</title><rect x="20.4460%" y="341" width="0.5678%" height="15" fill="rgb(251,74,28)" fg:x="11883" fg:w="330"/><text x="20.6960%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (54 samples, 0.09%)</title><rect x="20.9209%" y="325" width="0.0929%" height="15" fill="rgb(218,20,49)" fg:x="12159" fg:w="54"/><text x="21.1709%" y="335.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (49 samples, 0.08%)</title><rect x="20.9295%" y="309" width="0.0843%" height="15" fill="rgb(238,28,14)" fg:x="12164" fg:w="49"/><text x="21.1795%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (43 samples, 0.07%)</title><rect x="20.9398%" y="293" width="0.0740%" height="15" fill="rgb(229,40,46)" fg:x="12170" fg:w="43"/><text x="21.1898%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (38 samples, 0.07%)</title><rect x="20.9484%" y="277" width="0.0654%" height="15" fill="rgb(244,195,20)" fg:x="12175" fg:w="38"/><text x="21.1984%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (35 samples, 0.06%)</title><rect x="20.9536%" y="261" width="0.0602%" height="15" fill="rgb(253,56,35)" fg:x="12178" fg:w="35"/><text x="21.2036%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (18 samples, 0.03%)</title><rect x="20.9828%" y="245" width="0.0310%" height="15" fill="rgb(210,149,44)" fg:x="12195" fg:w="18"/><text x="21.2328%" y="255.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (13 samples, 0.02%)</title><rect x="20.9914%" y="229" width="0.0224%" height="15" fill="rgb(240,135,12)" fg:x="12200" fg:w="13"/><text x="21.2414%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (11 samples, 0.02%)</title><rect x="20.9949%" y="213" width="0.0189%" height="15" fill="rgb(251,24,50)" fg:x="12202" fg:w="11"/><text x="21.2449%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (9 samples, 0.02%)</title><rect x="20.9983%" y="197" width="0.0155%" height="15" fill="rgb(243,200,47)" fg:x="12204" fg:w="9"/><text x="21.2483%" y="207.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="21.0189%" y="373" width="0.0103%" height="15" fill="rgb(224,166,26)" fg:x="12216" fg:w="6"/><text x="21.2689%" y="383.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.02%)</title><rect x="21.0895%" y="357" width="0.0224%" height="15" fill="rgb(233,0,47)" fg:x="12257" fg:w="13"/><text x="21.3395%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.04%)</title><rect x="21.1824%" y="261" width="0.0447%" height="15" fill="rgb(253,80,5)" fg:x="12311" fg:w="26"/><text x="21.4324%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.12%)</title><rect x="21.1583%" y="293" width="0.1153%" height="15" fill="rgb(214,133,25)" fg:x="12297" fg:w="67"/><text x="21.4083%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (63 samples, 0.11%)</title><rect x="21.1652%" y="277" width="0.1084%" height="15" fill="rgb(209,27,14)" fg:x="12301" fg:w="63"/><text x="21.4152%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (27 samples, 0.05%)</title><rect x="21.2271%" y="261" width="0.0465%" height="15" fill="rgb(219,102,51)" fg:x="12337" fg:w="27"/><text x="21.4771%" y="271.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.17%)</title><rect x="21.1136%" y="357" width="0.1703%" height="15" fill="rgb(237,18,16)" fg:x="12271" fg:w="99"/><text x="21.3636%" y="367.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.17%)</title><rect x="21.1136%" y="341" width="0.1703%" height="15" fill="rgb(241,85,17)" fg:x="12271" fg:w="99"/><text x="21.3636%" y="351.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.17%)</title><rect x="21.1136%" y="325" width="0.1703%" height="15" fill="rgb(236,90,42)" fg:x="12271" fg:w="99"/><text x="21.3636%" y="335.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.16%)</title><rect x="21.1273%" y="309" width="0.1566%" height="15" fill="rgb(249,57,21)" fg:x="12279" fg:w="91"/><text x="21.3773%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="21.2736%" y="293" width="0.0103%" height="15" fill="rgb(243,12,36)" fg:x="12364" fg:w="6"/><text x="21.5236%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (37 samples, 0.06%)</title><rect x="21.3665%" y="181" width="0.0637%" height="15" fill="rgb(253,128,47)" fg:x="12418" fg:w="37"/><text x="21.6165%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (157 samples, 0.27%)</title><rect x="21.3390%" y="229" width="0.2701%" height="15" fill="rgb(207,33,20)" fg:x="12402" fg:w="157"/><text x="21.5890%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (157 samples, 0.27%)</title><rect x="21.3390%" y="213" width="0.2701%" height="15" fill="rgb(233,215,35)" fg:x="12402" fg:w="157"/><text x="21.5890%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (157 samples, 0.27%)</title><rect x="21.3390%" y="197" width="0.2701%" height="15" fill="rgb(249,188,52)" fg:x="12402" fg:w="157"/><text x="21.5890%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (104 samples, 0.18%)</title><rect x="21.4302%" y="181" width="0.1789%" height="15" fill="rgb(225,12,32)" fg:x="12455" fg:w="104"/><text x="21.6802%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="21.5936%" y="165" width="0.0155%" height="15" fill="rgb(247,98,14)" fg:x="12550" fg:w="9"/><text x="21.8436%" y="175.50"></text></g><g><title>[libc.so.6] (27 samples, 0.05%)</title><rect x="21.6108%" y="213" width="0.0465%" height="15" fill="rgb(247,219,48)" fg:x="12560" fg:w="27"/><text x="21.8608%" y="223.50"></text></g><g><title>[libc.so.6] (34 samples, 0.06%)</title><rect x="21.6573%" y="197" width="0.0585%" height="15" fill="rgb(253,60,48)" fg:x="12587" fg:w="34"/><text x="21.9073%" y="207.50"></text></g><g><title>[libc.so.6] (38 samples, 0.07%)</title><rect x="21.7210%" y="181" width="0.0654%" height="15" fill="rgb(245,15,52)" fg:x="12624" fg:w="38"/><text x="21.9710%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (106 samples, 0.18%)</title><rect x="21.6091%" y="229" width="0.1824%" height="15" fill="rgb(220,133,28)" fg:x="12559" fg:w="106"/><text x="21.8591%" y="239.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (78 samples, 0.13%)</title><rect x="21.6573%" y="213" width="0.1342%" height="15" fill="rgb(217,180,4)" fg:x="12587" fg:w="78"/><text x="21.9073%" y="223.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (44 samples, 0.08%)</title><rect x="21.7158%" y="197" width="0.0757%" height="15" fill="rgb(251,24,1)" fg:x="12621" fg:w="44"/><text x="21.9658%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (43 samples, 0.07%)</title><rect x="21.8741%" y="117" width="0.0740%" height="15" fill="rgb(212,185,49)" fg:x="12713" fg:w="43"/><text x="22.1241%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 samples, 0.15%)</title><rect x="21.8053%" y="133" width="0.1531%" height="15" fill="rgb(215,175,22)" fg:x="12673" fg:w="89"/><text x="22.0553%" y="143.50"></text></g><g><title>hashbrown::map::make_hash (403 samples, 0.69%)</title><rect x="21.3287%" y="261" width="0.6934%" height="15" fill="rgb(250,205,14)" fg:x="12396" fg:w="403"/><text x="21.5787%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (403 samples, 0.69%)</title><rect x="21.3287%" y="245" width="0.6934%" height="15" fill="rgb(225,211,22)" fg:x="12396" fg:w="403"/><text x="21.5787%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (134 samples, 0.23%)</title><rect x="21.7915%" y="229" width="0.2306%" height="15" fill="rgb(251,179,42)" fg:x="12665" fg:w="134"/><text x="22.0415%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (134 samples, 0.23%)</title><rect x="21.7915%" y="213" width="0.2306%" height="15" fill="rgb(208,216,51)" fg:x="12665" fg:w="134"/><text x="22.0415%" y="223.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (126 samples, 0.22%)</title><rect x="21.8053%" y="197" width="0.2168%" height="15" fill="rgb(235,36,11)" fg:x="12673" fg:w="126"/><text x="22.0553%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (126 samples, 0.22%)</title><rect x="21.8053%" y="181" width="0.2168%" height="15" fill="rgb(213,189,28)" fg:x="12673" fg:w="126"/><text x="22.0553%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (126 samples, 0.22%)</title><rect x="21.8053%" y="165" width="0.2168%" height="15" fill="rgb(227,203,42)" fg:x="12673" fg:w="126"/><text x="22.0553%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (126 samples, 0.22%)</title><rect x="21.8053%" y="149" width="0.2168%" height="15" fill="rgb(244,72,36)" fg:x="12673" fg:w="126"/><text x="22.0553%" y="159.50"></text></g><g><title>core::hash::Hasher::write_u8 (37 samples, 0.06%)</title><rect x="21.9584%" y="133" width="0.0637%" height="15" fill="rgb(213,53,17)" fg:x="12762" fg:w="37"/><text x="22.2084%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (37 samples, 0.06%)</title><rect x="21.9584%" y="117" width="0.0637%" height="15" fill="rgb(207,167,3)" fg:x="12762" fg:w="37"/><text x="22.2084%" y="127.50"></text></g><g><title>core::hash::sip::u8to64_le (24 samples, 0.04%)</title><rect x="21.9808%" y="101" width="0.0413%" height="15" fill="rgb(216,98,30)" fg:x="12775" fg:w="24"/><text x="22.2308%" y="111.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (6 samples, 0.01%)</title><rect x="22.0530%" y="245" width="0.0103%" height="15" fill="rgb(236,123,15)" fg:x="12817" fg:w="6"/><text x="22.3030%" y="255.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="22.0530%" y="229" width="0.0103%" height="15" fill="rgb(248,81,50)" fg:x="12817" fg:w="6"/><text x="22.3030%" y="239.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.01%)</title><rect x="22.1046%" y="197" width="0.0120%" height="15" fill="rgb(214,120,4)" fg:x="12847" fg:w="7"/><text x="22.3546%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (19 samples, 0.03%)</title><rect x="22.0857%" y="229" width="0.0327%" height="15" fill="rgb(208,179,34)" fg:x="12836" fg:w="19"/><text x="22.3357%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (19 samples, 0.03%)</title><rect x="22.0857%" y="213" width="0.0327%" height="15" fill="rgb(227,140,7)" fg:x="12836" fg:w="19"/><text x="22.3357%" y="223.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="22.2475%" y="197" width="0.0120%" height="15" fill="rgb(214,22,6)" fg:x="12930" fg:w="7"/><text x="22.4975%" y="207.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (7 samples, 0.01%)</title><rect x="22.2698%" y="181" width="0.0120%" height="15" fill="rgb(207,137,27)" fg:x="12943" fg:w="7"/><text x="22.5198%" y="191.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.07%)</title><rect x="22.2182%" y="213" width="0.0688%" height="15" fill="rgb(210,8,46)" fg:x="12913" fg:w="40"/><text x="22.4682%" y="223.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (16 samples, 0.03%)</title><rect x="22.2595%" y="197" width="0.0275%" height="15" fill="rgb(240,16,54)" fg:x="12937" fg:w="16"/><text x="22.5095%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="22.3559%" y="101" width="0.0138%" height="15" fill="rgb(211,209,29)" fg:x="12993" fg:w="8"/><text x="22.6059%" y="111.50"></text></g><g><title>core::slice::raw::from_raw_parts (7 samples, 0.01%)</title><rect x="22.3576%" y="85" width="0.0120%" height="15" fill="rgb(226,228,24)" fg:x="12994" fg:w="7"/><text x="22.6076%" y="95.50"></text></g><g><title>core::ptr::slice_from_raw_parts (7 samples, 0.01%)</title><rect x="22.3576%" y="69" width="0.0120%" height="15" fill="rgb(222,84,9)" fg:x="12994" fg:w="7"/><text x="22.6076%" y="79.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (6 samples, 0.01%)</title><rect x="22.3593%" y="53" width="0.0103%" height="15" fill="rgb(234,203,30)" fg:x="12995" fg:w="6"/><text x="22.6093%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (19 samples, 0.03%)</title><rect x="22.3455%" y="117" width="0.0327%" height="15" fill="rgb(238,109,14)" fg:x="12987" fg:w="19"/><text x="22.5955%" y="127.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (55 samples, 0.09%)</title><rect x="22.3146%" y="197" width="0.0946%" height="15" fill="rgb(233,206,34)" fg:x="12969" fg:w="55"/><text x="22.5646%" y="207.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (55 samples, 0.09%)</title><rect x="22.3146%" y="181" width="0.0946%" height="15" fill="rgb(220,167,47)" fg:x="12969" fg:w="55"/><text x="22.5646%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (51 samples, 0.09%)</title><rect x="22.3214%" y="165" width="0.0878%" height="15" fill="rgb(238,105,10)" fg:x="12973" fg:w="51"/><text x="22.5714%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (41 samples, 0.07%)</title><rect x="22.3387%" y="149" width="0.0705%" height="15" fill="rgb(213,227,17)" fg:x="12983" fg:w="41"/><text x="22.5887%" y="159.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (40 samples, 0.07%)</title><rect x="22.3404%" y="133" width="0.0688%" height="15" fill="rgb(217,132,38)" fg:x="12984" fg:w="40"/><text x="22.5904%" y="143.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (18 samples, 0.03%)</title><rect x="22.3782%" y="117" width="0.0310%" height="15" fill="rgb(242,146,4)" fg:x="13006" fg:w="18"/><text x="22.6282%" y="127.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (18 samples, 0.03%)</title><rect x="22.3782%" y="101" width="0.0310%" height="15" fill="rgb(212,61,9)" fg:x="13006" fg:w="18"/><text x="22.6282%" y="111.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="22.3937%" y="85" width="0.0155%" height="15" fill="rgb(247,126,22)" fg:x="13015" fg:w="9"/><text x="22.6437%" y="95.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (25 samples, 0.04%)</title><rect x="22.4178%" y="181" width="0.0430%" height="15" fill="rgb(220,196,2)" fg:x="13029" fg:w="25"/><text x="22.6678%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.01%)</title><rect x="22.4488%" y="165" width="0.0120%" height="15" fill="rgb(208,46,4)" fg:x="13047" fg:w="7"/><text x="22.6988%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (102 samples, 0.18%)</title><rect x="22.2870%" y="213" width="0.1755%" height="15" fill="rgb(252,104,46)" fg:x="12953" fg:w="102"/><text x="22.5370%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (26 samples, 0.04%)</title><rect x="22.4178%" y="197" width="0.0447%" height="15" fill="rgb(237,152,48)" fg:x="13029" fg:w="26"/><text x="22.6678%" y="207.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (38 samples, 0.07%)</title><rect x="22.4625%" y="213" width="0.0654%" height="15" fill="rgb(221,59,37)" fg:x="13055" fg:w="38"/><text x="22.7125%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (31 samples, 0.05%)</title><rect x="22.4746%" y="197" width="0.0533%" height="15" fill="rgb(209,202,51)" fg:x="13062" fg:w="31"/><text x="22.7246%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (14 samples, 0.02%)</title><rect x="22.5709%" y="197" width="0.0241%" height="15" fill="rgb(228,81,30)" fg:x="13118" fg:w="14"/><text x="22.8209%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.05%)</title><rect x="22.5950%" y="197" width="0.0465%" height="15" fill="rgb(227,42,39)" fg:x="13132" fg:w="27"/><text x="22.8450%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (969 samples, 1.67%)</title><rect x="21.0189%" y="389" width="1.6673%" height="15" fill="rgb(221,26,2)" fg:x="12216" fg:w="969"/><text x="21.2689%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (963 samples, 1.66%)</title><rect x="21.0293%" y="373" width="1.6569%" height="15" fill="rgb(254,61,31)" fg:x="12222" fg:w="963"/><text x="21.2793%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (815 samples, 1.40%)</title><rect x="21.2839%" y="357" width="1.4023%" height="15" fill="rgb(222,173,38)" fg:x="12370" fg:w="815"/><text x="21.5339%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (806 samples, 1.39%)</title><rect x="21.2994%" y="341" width="1.3868%" height="15" fill="rgb(218,50,12)" fg:x="12379" fg:w="806"/><text x="21.5494%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (804 samples, 1.38%)</title><rect x="21.3028%" y="325" width="1.3834%" height="15" fill="rgb(223,88,40)" fg:x="12381" fg:w="804"/><text x="21.5528%" y="335.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (804 samples, 1.38%)</title><rect x="21.3028%" y="309" width="1.3834%" height="15" fill="rgb(237,54,19)" fg:x="12381" fg:w="804"/><text x="21.5528%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (804 samples, 1.38%)</title><rect x="21.3028%" y="293" width="1.3834%" height="15" fill="rgb(251,129,25)" fg:x="12381" fg:w="804"/><text x="21.5528%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (800 samples, 1.38%)</title><rect x="21.3097%" y="277" width="1.3765%" height="15" fill="rgb(238,97,19)" fg:x="12385" fg:w="800"/><text x="21.5597%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (386 samples, 0.66%)</title><rect x="22.0221%" y="261" width="0.6642%" height="15" fill="rgb(240,169,18)" fg:x="12799" fg:w="386"/><text x="22.2721%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (362 samples, 0.62%)</title><rect x="22.0634%" y="245" width="0.6229%" height="15" fill="rgb(230,187,49)" fg:x="12823" fg:w="362"/><text x="22.3134%" y="255.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (330 samples, 0.57%)</title><rect x="22.1184%" y="229" width="0.5678%" height="15" fill="rgb(209,44,26)" fg:x="12855" fg:w="330"/><text x="22.3684%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (92 samples, 0.16%)</title><rect x="22.5279%" y="213" width="0.1583%" height="15" fill="rgb(244,0,6)" fg:x="13093" fg:w="92"/><text x="22.7779%" y="223.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (26 samples, 0.04%)</title><rect x="22.6415%" y="197" width="0.0447%" height="15" fill="rgb(248,18,21)" fg:x="13159" fg:w="26"/><text x="22.8915%" y="207.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (26 samples, 0.04%)</title><rect x="22.6415%" y="181" width="0.0447%" height="15" fill="rgb(245,180,19)" fg:x="13159" fg:w="26"/><text x="22.8915%" y="191.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="22.6862%" y="373" width="0.0206%" height="15" fill="rgb(252,118,36)" fg:x="13185" fg:w="12"/><text x="22.9362%" y="383.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="22.7086%" y="357" width="0.0155%" height="15" fill="rgb(210,224,19)" fg:x="13198" fg:w="9"/><text x="22.9586%" y="367.50"></text></g><g><title>[libc.so.6] (19 samples, 0.03%)</title><rect x="22.7241%" y="341" width="0.0327%" height="15" fill="rgb(218,30,24)" fg:x="13207" fg:w="19"/><text x="22.9741%" y="351.50"></text></g><g><title>[libc.so.6] (10 samples, 0.02%)</title><rect x="22.7585%" y="325" width="0.0172%" height="15" fill="rgb(219,75,50)" fg:x="13227" fg:w="10"/><text x="23.0085%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (19 samples, 0.03%)</title><rect x="22.7860%" y="309" width="0.0327%" height="15" fill="rgb(234,72,50)" fg:x="13243" fg:w="19"/><text x="23.0360%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (63 samples, 0.11%)</title><rect x="22.8187%" y="309" width="0.1084%" height="15" fill="rgb(219,100,48)" fg:x="13262" fg:w="63"/><text x="23.0687%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (51 samples, 0.09%)</title><rect x="22.8393%" y="293" width="0.0878%" height="15" fill="rgb(253,5,41)" fg:x="13274" fg:w="51"/><text x="23.0893%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (45 samples, 0.08%)</title><rect x="22.8497%" y="277" width="0.0774%" height="15" fill="rgb(247,181,11)" fg:x="13280" fg:w="45"/><text x="23.0997%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (40 samples, 0.07%)</title><rect x="22.8583%" y="261" width="0.0688%" height="15" fill="rgb(222,223,25)" fg:x="13285" fg:w="40"/><text x="23.1083%" y="271.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,567 samples, 2.70%)</title><rect x="20.2326%" y="469" width="2.6962%" height="15" fill="rgb(214,198,28)" fg:x="11759" fg:w="1567"/><text x="20.4826%" y="479.50">&lt;c..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (1,564 samples, 2.69%)</title><rect x="20.2378%" y="453" width="2.6910%" height="15" fill="rgb(230,46,43)" fg:x="11762" fg:w="1564"/><text x="20.4878%" y="463.50">&lt;T..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (1,538 samples, 2.65%)</title><rect x="20.2825%" y="437" width="2.6463%" height="15" fill="rgb(233,65,53)" fg:x="11788" fg:w="1538"/><text x="20.5325%" y="447.50">&lt;a..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (1,536 samples, 2.64%)</title><rect x="20.2860%" y="421" width="2.6429%" height="15" fill="rgb(221,121,27)" fg:x="11790" fg:w="1536"/><text x="20.5360%" y="431.50">&lt;a..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1,113 samples, 1.92%)</title><rect x="21.0138%" y="405" width="1.9150%" height="15" fill="rgb(247,70,47)" fg:x="12213" fg:w="1113"/><text x="21.2638%" y="415.50">&lt;..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (141 samples, 0.24%)</title><rect x="22.6862%" y="389" width="0.2426%" height="15" fill="rgb(228,85,35)" fg:x="13185" fg:w="141"/><text x="22.9362%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (129 samples, 0.22%)</title><rect x="22.7069%" y="373" width="0.2220%" height="15" fill="rgb(209,50,18)" fg:x="13197" fg:w="129"/><text x="22.9569%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (119 samples, 0.20%)</title><rect x="22.7241%" y="357" width="0.2048%" height="15" fill="rgb(250,19,35)" fg:x="13207" fg:w="119"/><text x="22.9741%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (100 samples, 0.17%)</title><rect x="22.7568%" y="341" width="0.1721%" height="15" fill="rgb(253,107,29)" fg:x="13226" fg:w="100"/><text x="23.0068%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (89 samples, 0.15%)</title><rect x="22.7757%" y="325" width="0.1531%" height="15" fill="rgb(252,179,29)" fg:x="13237" fg:w="89"/><text x="23.0257%" y="335.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (9 samples, 0.02%)</title><rect x="22.9477%" y="437" width="0.0155%" height="15" fill="rgb(238,194,6)" fg:x="13337" fg:w="9"/><text x="23.1977%" y="447.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.04%)</title><rect x="23.0802%" y="421" width="0.0447%" height="15" fill="rgb(238,164,29)" fg:x="13414" fg:w="26"/><text x="23.3302%" y="431.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="23.3590%" y="309" width="0.0103%" height="15" fill="rgb(224,25,9)" fg:x="13576" fg:w="6"/><text x="23.6090%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.08%)</title><rect x="23.2919%" y="325" width="0.0809%" height="15" fill="rgb(244,153,23)" fg:x="13537" fg:w="47"/><text x="23.5419%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="23.4725%" y="309" width="0.0103%" height="15" fill="rgb(212,203,14)" fg:x="13642" fg:w="6"/><text x="23.7225%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (148 samples, 0.25%)</title><rect x="23.2299%" y="357" width="0.2546%" height="15" fill="rgb(220,164,20)" fg:x="13501" fg:w="148"/><text x="23.4799%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (133 samples, 0.23%)</title><rect x="23.2557%" y="341" width="0.2288%" height="15" fill="rgb(222,203,48)" fg:x="13516" fg:w="133"/><text x="23.5057%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (65 samples, 0.11%)</title><rect x="23.3727%" y="325" width="0.1118%" height="15" fill="rgb(215,159,22)" fg:x="13584" fg:w="65"/><text x="23.6227%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (222 samples, 0.38%)</title><rect x="23.1267%" y="421" width="0.3820%" height="15" fill="rgb(216,183,47)" fg:x="13441" fg:w="222"/><text x="23.3767%" y="431.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (221 samples, 0.38%)</title><rect x="23.1284%" y="405" width="0.3803%" height="15" fill="rgb(229,195,25)" fg:x="13442" fg:w="221"/><text x="23.3784%" y="415.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (221 samples, 0.38%)</title><rect x="23.1284%" y="389" width="0.3803%" height="15" fill="rgb(224,132,51)" fg:x="13442" fg:w="221"/><text x="23.3784%" y="399.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.35%)</title><rect x="23.1628%" y="373" width="0.3458%" height="15" fill="rgb(240,63,7)" fg:x="13462" fg:w="201"/><text x="23.4128%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (14 samples, 0.02%)</title><rect x="23.4846%" y="357" width="0.0241%" height="15" fill="rgb(249,182,41)" fg:x="13649" fg:w="14"/><text x="23.7346%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (6 samples, 0.01%)</title><rect x="23.4983%" y="341" width="0.0103%" height="15" fill="rgb(243,47,26)" fg:x="13657" fg:w="6"/><text x="23.7483%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (9 samples, 0.02%)</title><rect x="23.5482%" y="341" width="0.0155%" height="15" fill="rgb(233,48,2)" fg:x="13686" fg:w="9"/><text x="23.7982%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.12%)</title><rect x="23.6566%" y="245" width="0.1204%" height="15" fill="rgb(244,165,34)" fg:x="13749" fg:w="70"/><text x="23.9066%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (297 samples, 0.51%)</title><rect x="23.5947%" y="293" width="0.5110%" height="15" fill="rgb(207,89,7)" fg:x="13713" fg:w="297"/><text x="23.8447%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (297 samples, 0.51%)</title><rect x="23.5947%" y="277" width="0.5110%" height="15" fill="rgb(244,117,36)" fg:x="13713" fg:w="297"/><text x="23.8447%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (297 samples, 0.51%)</title><rect x="23.5947%" y="261" width="0.5110%" height="15" fill="rgb(226,144,34)" fg:x="13713" fg:w="297"/><text x="23.8447%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (191 samples, 0.33%)</title><rect x="23.7771%" y="245" width="0.3286%" height="15" fill="rgb(213,23,19)" fg:x="13819" fg:w="191"/><text x="24.0271%" y="255.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.03%)</title><rect x="24.0799%" y="229" width="0.0258%" height="15" fill="rgb(217,75,12)" fg:x="13995" fg:w="15"/><text x="24.3299%" y="239.50"></text></g><g><title>[libc.so.6] (39 samples, 0.07%)</title><rect x="24.1092%" y="277" width="0.0671%" height="15" fill="rgb(224,159,17)" fg:x="14012" fg:w="39"/><text x="24.3592%" y="287.50"></text></g><g><title>[libc.so.6] (52 samples, 0.09%)</title><rect x="24.1763%" y="261" width="0.0895%" height="15" fill="rgb(217,118,1)" fg:x="14051" fg:w="52"/><text x="24.4263%" y="271.50"></text></g><g><title>[libc.so.6] (47 samples, 0.08%)</title><rect x="24.2795%" y="245" width="0.0809%" height="15" fill="rgb(232,180,48)" fg:x="14111" fg:w="47"/><text x="24.5295%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (150 samples, 0.26%)</title><rect x="24.1057%" y="293" width="0.2581%" height="15" fill="rgb(230,27,33)" fg:x="14010" fg:w="150"/><text x="24.3557%" y="303.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (109 samples, 0.19%)</title><rect x="24.1763%" y="277" width="0.1875%" height="15" fill="rgb(205,31,21)" fg:x="14051" fg:w="109"/><text x="24.4263%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (57 samples, 0.10%)</title><rect x="24.2657%" y="261" width="0.0981%" height="15" fill="rgb(253,59,4)" fg:x="14103" fg:w="57"/><text x="24.5157%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (62 samples, 0.11%)</title><rect x="24.4791%" y="181" width="0.1067%" height="15" fill="rgb(224,201,9)" fg:x="14227" fg:w="62"/><text x="24.7291%" y="191.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.01%)</title><rect x="24.5858%" y="181" width="0.0120%" height="15" fill="rgb(229,206,30)" fg:x="14289" fg:w="7"/><text x="24.8358%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (129 samples, 0.22%)</title><rect x="24.3793%" y="197" width="0.2220%" height="15" fill="rgb(212,67,47)" fg:x="14169" fg:w="129"/><text x="24.6293%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (636 samples, 1.09%)</title><rect x="23.5809%" y="325" width="1.0943%" height="15" fill="rgb(211,96,50)" fg:x="13705" fg:w="636"/><text x="23.8309%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (636 samples, 1.09%)</title><rect x="23.5809%" y="309" width="1.0943%" height="15" fill="rgb(252,114,18)" fg:x="13705" fg:w="636"/><text x="23.8309%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (181 samples, 0.31%)</title><rect x="24.3638%" y="293" width="0.3114%" height="15" fill="rgb(223,58,37)" fg:x="14160" fg:w="181"/><text x="24.6138%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (180 samples, 0.31%)</title><rect x="24.3655%" y="277" width="0.3097%" height="15" fill="rgb(237,70,4)" fg:x="14161" fg:w="180"/><text x="24.6155%" y="287.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (175 samples, 0.30%)</title><rect x="24.3741%" y="261" width="0.3011%" height="15" fill="rgb(244,85,46)" fg:x="14166" fg:w="175"/><text x="24.6241%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (175 samples, 0.30%)</title><rect x="24.3741%" y="245" width="0.3011%" height="15" fill="rgb(223,39,52)" fg:x="14166" fg:w="175"/><text x="24.6241%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (173 samples, 0.30%)</title><rect x="24.3776%" y="229" width="0.2977%" height="15" fill="rgb(218,200,14)" fg:x="14168" fg:w="173"/><text x="24.6276%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (172 samples, 0.30%)</title><rect x="24.3793%" y="213" width="0.2959%" height="15" fill="rgb(208,171,16)" fg:x="14169" fg:w="172"/><text x="24.6293%" y="223.50"></text></g><g><title>core::hash::Hasher::write_u8 (43 samples, 0.07%)</title><rect x="24.6012%" y="197" width="0.0740%" height="15" fill="rgb(234,200,18)" fg:x="14298" fg:w="43"/><text x="24.8512%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (40 samples, 0.07%)</title><rect x="24.6064%" y="181" width="0.0688%" height="15" fill="rgb(228,45,11)" fg:x="14301" fg:w="40"/><text x="24.8564%" y="191.50"></text></g><g><title>core::hash::sip::u8to64_le (25 samples, 0.04%)</title><rect x="24.6322%" y="165" width="0.0430%" height="15" fill="rgb(237,182,11)" fg:x="14316" fg:w="25"/><text x="24.8822%" y="175.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (10 samples, 0.02%)</title><rect x="24.7200%" y="309" width="0.0172%" height="15" fill="rgb(241,175,49)" fg:x="14367" fg:w="10"/><text x="24.9700%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="24.7200%" y="293" width="0.0172%" height="15" fill="rgb(247,38,35)" fg:x="14367" fg:w="10"/><text x="24.9700%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (30 samples, 0.05%)</title><rect x="24.7699%" y="293" width="0.0516%" height="15" fill="rgb(228,39,49)" fg:x="14396" fg:w="30"/><text x="25.0199%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (30 samples, 0.05%)</title><rect x="24.7699%" y="277" width="0.0516%" height="15" fill="rgb(226,101,26)" fg:x="14396" fg:w="30"/><text x="25.0199%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.03%)</title><rect x="24.9763%" y="277" width="0.0293%" height="15" fill="rgb(206,141,19)" fg:x="14516" fg:w="17"/><text x="25.2263%" y="287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (10 samples, 0.02%)</title><rect x="25.0555%" y="261" width="0.0172%" height="15" fill="rgb(211,200,13)" fg:x="14562" fg:w="10"/><text x="25.3055%" y="271.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (18 samples, 0.03%)</title><rect x="25.0968%" y="245" width="0.0310%" height="15" fill="rgb(241,121,6)" fg:x="14586" fg:w="18"/><text x="25.3468%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.15%)</title><rect x="25.0056%" y="277" width="0.1514%" height="15" fill="rgb(234,221,29)" fg:x="14533" fg:w="88"/><text x="25.2556%" y="287.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (49 samples, 0.08%)</title><rect x="25.0727%" y="261" width="0.0843%" height="15" fill="rgb(229,136,5)" fg:x="14572" fg:w="49"/><text x="25.3227%" y="271.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (17 samples, 0.03%)</title><rect x="25.1278%" y="245" width="0.0293%" height="15" fill="rgb(238,36,11)" fg:x="14604" fg:w="17"/><text x="25.3778%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (33 samples, 0.06%)</title><rect x="25.2809%" y="165" width="0.0568%" height="15" fill="rgb(251,55,41)" fg:x="14693" fg:w="33"/><text x="25.5309%" y="175.50"></text></g><g><title>core::slice::raw::from_raw_parts (31 samples, 0.05%)</title><rect x="25.2843%" y="149" width="0.0533%" height="15" fill="rgb(242,34,40)" fg:x="14695" fg:w="31"/><text x="25.5343%" y="159.50"></text></g><g><title>core::ptr::slice_from_raw_parts (31 samples, 0.05%)</title><rect x="25.2843%" y="133" width="0.0533%" height="15" fill="rgb(215,42,17)" fg:x="14695" fg:w="31"/><text x="25.5343%" y="143.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (31 samples, 0.05%)</title><rect x="25.2843%" y="117" width="0.0533%" height="15" fill="rgb(207,44,46)" fg:x="14695" fg:w="31"/><text x="25.5343%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (52 samples, 0.09%)</title><rect x="25.2534%" y="181" width="0.0895%" height="15" fill="rgb(211,206,28)" fg:x="14677" fg:w="52"/><text x="25.5034%" y="191.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (132 samples, 0.23%)</title><rect x="25.1880%" y="261" width="0.2271%" height="15" fill="rgb(237,167,16)" fg:x="14639" fg:w="132"/><text x="25.4380%" y="271.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (130 samples, 0.22%)</title><rect x="25.1914%" y="245" width="0.2237%" height="15" fill="rgb(233,66,6)" fg:x="14641" fg:w="130"/><text x="25.4414%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (118 samples, 0.20%)</title><rect x="25.2121%" y="229" width="0.2030%" height="15" fill="rgb(246,123,29)" fg:x="14653" fg:w="118"/><text x="25.4621%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (111 samples, 0.19%)</title><rect x="25.2241%" y="213" width="0.1910%" height="15" fill="rgb(209,62,40)" fg:x="14660" fg:w="111"/><text x="25.4741%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (105 samples, 0.18%)</title><rect x="25.2344%" y="197" width="0.1807%" height="15" fill="rgb(218,4,25)" fg:x="14666" fg:w="105"/><text x="25.4844%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (42 samples, 0.07%)</title><rect x="25.3428%" y="181" width="0.0723%" height="15" fill="rgb(253,91,49)" fg:x="14729" fg:w="42"/><text x="25.5928%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (42 samples, 0.07%)</title><rect x="25.3428%" y="165" width="0.0723%" height="15" fill="rgb(228,155,29)" fg:x="14729" fg:w="42"/><text x="25.5928%" y="175.50"></text></g><g><title>[libc.so.6] (27 samples, 0.05%)</title><rect x="25.3686%" y="149" width="0.0465%" height="15" fill="rgb(243,57,37)" fg:x="14744" fg:w="27"/><text x="25.6186%" y="159.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (10 samples, 0.02%)</title><rect x="25.4151%" y="261" width="0.0172%" height="15" fill="rgb(244,167,17)" fg:x="14771" fg:w="10"/><text x="25.6651%" y="271.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="25.4151%" y="245" width="0.0172%" height="15" fill="rgb(207,181,38)" fg:x="14771" fg:w="10"/><text x="25.6651%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.02%)</title><rect x="25.4684%" y="229" width="0.0172%" height="15" fill="rgb(211,8,23)" fg:x="14802" fg:w="10"/><text x="25.7184%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (32 samples, 0.06%)</title><rect x="25.4323%" y="245" width="0.0551%" height="15" fill="rgb(235,11,44)" fg:x="14781" fg:w="32"/><text x="25.6823%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (194 samples, 0.33%)</title><rect x="25.1570%" y="277" width="0.3338%" height="15" fill="rgb(248,18,52)" fg:x="14621" fg:w="194"/><text x="25.4070%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (34 samples, 0.06%)</title><rect x="25.4323%" y="261" width="0.0585%" height="15" fill="rgb(208,4,7)" fg:x="14781" fg:w="34"/><text x="25.6823%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (59 samples, 0.10%)</title><rect x="25.4960%" y="277" width="0.1015%" height="15" fill="rgb(240,17,39)" fg:x="14818" fg:w="59"/><text x="25.7460%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (49 samples, 0.08%)</title><rect x="25.5132%" y="261" width="0.0843%" height="15" fill="rgb(207,170,3)" fg:x="14828" fg:w="49"/><text x="25.7632%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (31 samples, 0.05%)</title><rect x="25.6577%" y="261" width="0.0533%" height="15" fill="rgb(236,100,52)" fg:x="14912" fg:w="31"/><text x="25.9077%" y="271.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (6 samples, 0.01%)</title><rect x="25.7007%" y="245" width="0.0103%" height="15" fill="rgb(246,78,51)" fg:x="14937" fg:w="6"/><text x="25.9507%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (84 samples, 0.14%)</title><rect x="25.7110%" y="261" width="0.1445%" height="15" fill="rgb(211,17,15)" fg:x="14943" fg:w="84"/><text x="25.9610%" y="271.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.01%)</title><rect x="25.8435%" y="245" width="0.0120%" height="15" fill="rgb(209,59,46)" fg:x="15020" fg:w="7"/><text x="26.0935%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,736 samples, 2.99%)</title><rect x="22.9426%" y="453" width="2.9870%" height="15" fill="rgb(210,92,25)" fg:x="13334" fg:w="1736"/><text x="23.1926%" y="463.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,724 samples, 2.97%)</title><rect x="22.9632%" y="437" width="2.9663%" height="15" fill="rgb(238,174,52)" fg:x="13346" fg:w="1724"/><text x="23.2132%" y="447.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1,407 samples, 2.42%)</title><rect x="23.5087%" y="421" width="2.4209%" height="15" fill="rgb(230,73,7)" fg:x="13663" fg:w="1407"/><text x="23.7587%" y="431.50">co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1,394 samples, 2.40%)</title><rect x="23.5310%" y="405" width="2.3985%" height="15" fill="rgb(243,124,40)" fg:x="13676" fg:w="1394"/><text x="23.7810%" y="415.50">&lt;s..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,392 samples, 2.40%)</title><rect x="23.5345%" y="389" width="2.3951%" height="15" fill="rgb(244,170,11)" fg:x="13678" fg:w="1392"/><text x="23.7845%" y="399.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,392 samples, 2.40%)</title><rect x="23.5345%" y="373" width="2.3951%" height="15" fill="rgb(207,114,54)" fg:x="13678" fg:w="1392"/><text x="23.7845%" y="383.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,388 samples, 2.39%)</title><rect x="23.5414%" y="357" width="2.3882%" height="15" fill="rgb(205,42,20)" fg:x="13682" fg:w="1388"/><text x="23.7914%" y="367.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,375 samples, 2.37%)</title><rect x="23.5637%" y="341" width="2.3658%" height="15" fill="rgb(230,30,28)" fg:x="13695" fg:w="1375"/><text x="23.8137%" y="351.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (729 samples, 1.25%)</title><rect x="24.6752%" y="325" width="1.2543%" height="15" fill="rgb(205,73,54)" fg:x="14341" fg:w="729"/><text x="24.9252%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (693 samples, 1.19%)</title><rect x="24.7372%" y="309" width="1.1924%" height="15" fill="rgb(254,227,23)" fg:x="14377" fg:w="693"/><text x="24.9872%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (644 samples, 1.11%)</title><rect x="24.8215%" y="293" width="1.1081%" height="15" fill="rgb(228,202,34)" fg:x="14426" fg:w="644"/><text x="25.0715%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (193 samples, 0.33%)</title><rect x="25.5975%" y="277" width="0.3321%" height="15" fill="rgb(222,225,37)" fg:x="14877" fg:w="193"/><text x="25.8475%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (43 samples, 0.07%)</title><rect x="25.8556%" y="261" width="0.0740%" height="15" fill="rgb(221,14,54)" fg:x="15027" fg:w="43"/><text x="26.1056%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (42 samples, 0.07%)</title><rect x="25.8573%" y="245" width="0.0723%" height="15" fill="rgb(254,102,2)" fg:x="15028" fg:w="42"/><text x="26.1073%" y="255.50"></text></g><g><title>[libc.so.6] (12 samples, 0.02%)</title><rect x="25.9296%" y="437" width="0.0206%" height="15" fill="rgb(232,104,17)" fg:x="15070" fg:w="12"/><text x="26.1796%" y="447.50"></text></g><g><title>[libc.so.6] (15 samples, 0.03%)</title><rect x="25.9554%" y="421" width="0.0258%" height="15" fill="rgb(250,220,14)" fg:x="15085" fg:w="15"/><text x="26.2054%" y="431.50"></text></g><g><title>[libc.so.6] (24 samples, 0.04%)</title><rect x="25.9812%" y="405" width="0.0413%" height="15" fill="rgb(241,158,9)" fg:x="15100" fg:w="24"/><text x="26.2312%" y="415.50"></text></g><g><title>[libc.so.6] (18 samples, 0.03%)</title><rect x="26.0242%" y="389" width="0.0310%" height="15" fill="rgb(246,9,43)" fg:x="15125" fg:w="18"/><text x="26.2742%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (24 samples, 0.04%)</title><rect x="26.0947%" y="373" width="0.0413%" height="15" fill="rgb(206,73,33)" fg:x="15166" fg:w="24"/><text x="26.3447%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (7 samples, 0.01%)</title><rect x="26.1601%" y="357" width="0.0120%" height="15" fill="rgb(222,79,8)" fg:x="15204" fg:w="7"/><text x="26.4101%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (73 samples, 0.13%)</title><rect x="26.1360%" y="373" width="0.1256%" height="15" fill="rgb(234,8,54)" fg:x="15190" fg:w="73"/><text x="26.3860%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (52 samples, 0.09%)</title><rect x="26.1722%" y="357" width="0.0895%" height="15" fill="rgb(209,134,38)" fg:x="15211" fg:w="52"/><text x="26.4222%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (47 samples, 0.08%)</title><rect x="26.1808%" y="341" width="0.0809%" height="15" fill="rgb(230,127,29)" fg:x="15216" fg:w="47"/><text x="26.4308%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (43 samples, 0.07%)</title><rect x="26.1876%" y="325" width="0.0740%" height="15" fill="rgb(242,44,41)" fg:x="15220" fg:w="43"/><text x="26.4376%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (140 samples, 0.24%)</title><rect x="26.0225%" y="405" width="0.2409%" height="15" fill="rgb(222,56,43)" fg:x="15124" fg:w="140"/><text x="26.2725%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (121 samples, 0.21%)</title><rect x="26.0552%" y="389" width="0.2082%" height="15" fill="rgb(238,39,47)" fg:x="15143" fg:w="121"/><text x="26.3052%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3,572 samples, 6.15%)</title><rect x="20.1208%" y="533" width="6.1460%" height="15" fill="rgb(226,79,43)" fg:x="11694" fg:w="3572"/><text x="20.3708%" y="543.50">&lt;core::o..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (3,566 samples, 6.14%)</title><rect x="20.1311%" y="517" width="6.1357%" height="15" fill="rgb(242,105,53)" fg:x="11700" fg:w="3566"/><text x="20.3811%" y="527.50">&lt;T as co..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (3,526 samples, 6.07%)</title><rect x="20.1999%" y="501" width="6.0669%" height="15" fill="rgb(251,132,46)" fg:x="11740" fg:w="3526"/><text x="20.4499%" y="511.50">&lt;alloc::..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (3,525 samples, 6.07%)</title><rect x="20.2017%" y="485" width="6.0651%" height="15" fill="rgb(231,77,14)" fg:x="11741" fg:w="3525"/><text x="20.4517%" y="495.50">&lt;aes_gri..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1,940 samples, 3.34%)</title><rect x="22.9288%" y="469" width="3.3380%" height="15" fill="rgb(240,135,9)" fg:x="13326" fg:w="1940"/><text x="23.1788%" y="479.50">&lt;st..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (196 samples, 0.34%)</title><rect x="25.9296%" y="453" width="0.3372%" height="15" fill="rgb(248,109,14)" fg:x="15070" fg:w="196"/><text x="26.1796%" y="463.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (184 samples, 0.32%)</title><rect x="25.9502%" y="437" width="0.3166%" height="15" fill="rgb(227,146,52)" fg:x="15082" fg:w="184"/><text x="26.2002%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (166 samples, 0.29%)</title><rect x="25.9812%" y="421" width="0.2856%" height="15" fill="rgb(232,54,3)" fg:x="15100" fg:w="166"/><text x="26.2312%" y="431.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="26.2857%" y="501" width="0.0224%" height="15" fill="rgb(229,201,43)" fg:x="15277" fg:w="13"/><text x="26.5357%" y="511.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.05%)</title><rect x="26.4561%" y="485" width="0.0533%" height="15" fill="rgb(252,161,33)" fg:x="15376" fg:w="31"/><text x="26.7061%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.02%)</title><rect x="26.7606%" y="373" width="0.0155%" height="15" fill="rgb(226,146,40)" fg:x="15553" fg:w="9"/><text x="27.0106%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.10%)</title><rect x="26.6832%" y="389" width="0.0964%" height="15" fill="rgb(219,47,25)" fg:x="15508" fg:w="56"/><text x="26.9332%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.02%)</title><rect x="26.8518%" y="373" width="0.0206%" height="15" fill="rgb(250,135,13)" fg:x="15606" fg:w="12"/><text x="27.1018%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (54 samples, 0.09%)</title><rect x="26.7813%" y="389" width="0.0929%" height="15" fill="rgb(219,229,18)" fg:x="15565" fg:w="54"/><text x="27.0313%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (153 samples, 0.26%)</title><rect x="26.6126%" y="421" width="0.2633%" height="15" fill="rgb(217,152,27)" fg:x="15467" fg:w="153"/><text x="26.8626%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (137 samples, 0.24%)</title><rect x="26.6402%" y="405" width="0.2357%" height="15" fill="rgb(225,71,47)" fg:x="15483" fg:w="137"/><text x="26.8902%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 0.40%)</title><rect x="26.5111%" y="485" width="0.3992%" height="15" fill="rgb(220,139,14)" fg:x="15408" fg:w="232"/><text x="26.7611%" y="495.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 0.40%)</title><rect x="26.5111%" y="469" width="0.3992%" height="15" fill="rgb(247,54,32)" fg:x="15408" fg:w="232"/><text x="26.7611%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (232 samples, 0.40%)</title><rect x="26.5111%" y="453" width="0.3992%" height="15" fill="rgb(252,131,39)" fg:x="15408" fg:w="232"/><text x="26.7611%" y="463.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (206 samples, 0.35%)</title><rect x="26.5559%" y="437" width="0.3544%" height="15" fill="rgb(210,108,39)" fg:x="15434" fg:w="206"/><text x="26.8059%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (20 samples, 0.03%)</title><rect x="26.8759%" y="421" width="0.0344%" height="15" fill="rgb(205,23,29)" fg:x="15620" fg:w="20"/><text x="27.1259%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="26.8897%" y="405" width="0.0206%" height="15" fill="rgb(246,139,46)" fg:x="15628" fg:w="12"/><text x="27.1397%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (16 samples, 0.03%)</title><rect x="26.9516%" y="405" width="0.0275%" height="15" fill="rgb(250,81,26)" fg:x="15664" fg:w="16"/><text x="27.2016%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (68 samples, 0.12%)</title><rect x="27.1082%" y="309" width="0.1170%" height="15" fill="rgb(214,104,7)" fg:x="15755" fg:w="68"/><text x="27.3582%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (336 samples, 0.58%)</title><rect x="27.0428%" y="357" width="0.5781%" height="15" fill="rgb(233,189,8)" fg:x="15717" fg:w="336"/><text x="27.2928%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (334 samples, 0.57%)</title><rect x="27.0462%" y="341" width="0.5747%" height="15" fill="rgb(228,141,17)" fg:x="15719" fg:w="334"/><text x="27.2962%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (334 samples, 0.57%)</title><rect x="27.0462%" y="325" width="0.5747%" height="15" fill="rgb(247,157,1)" fg:x="15719" fg:w="334"/><text x="27.2962%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (230 samples, 0.40%)</title><rect x="27.2252%" y="309" width="0.3957%" height="15" fill="rgb(249,225,5)" fg:x="15823" fg:w="230"/><text x="27.4752%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (11 samples, 0.02%)</title><rect x="27.6020%" y="293" width="0.0189%" height="15" fill="rgb(242,55,13)" fg:x="16042" fg:w="11"/><text x="27.8520%" y="303.50"></text></g><g><title>[libc.so.6] (45 samples, 0.08%)</title><rect x="27.6330%" y="341" width="0.0774%" height="15" fill="rgb(230,49,50)" fg:x="16060" fg:w="45"/><text x="27.8830%" y="351.50"></text></g><g><title>[libc.so.6] (44 samples, 0.08%)</title><rect x="27.7121%" y="325" width="0.0757%" height="15" fill="rgb(241,111,38)" fg:x="16106" fg:w="44"/><text x="27.9621%" y="335.50"></text></g><g><title>[libc.so.6] (71 samples, 0.12%)</title><rect x="27.7947%" y="309" width="0.1222%" height="15" fill="rgb(252,155,4)" fg:x="16154" fg:w="71"/><text x="28.0447%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (173 samples, 0.30%)</title><rect x="27.6209%" y="357" width="0.2977%" height="15" fill="rgb(212,69,32)" fg:x="16053" fg:w="173"/><text x="27.8709%" y="367.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (121 samples, 0.21%)</title><rect x="27.7104%" y="341" width="0.2082%" height="15" fill="rgb(243,107,47)" fg:x="16105" fg:w="121"/><text x="27.9604%" y="351.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (76 samples, 0.13%)</title><rect x="27.7878%" y="325" width="0.1308%" height="15" fill="rgb(247,130,12)" fg:x="16150" fg:w="76"/><text x="28.0378%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="27.9255%" y="325" width="0.0138%" height="15" fill="rgb(233,74,16)" fg:x="16230" fg:w="8"/><text x="28.1755%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.01%)</title><rect x="27.9255%" y="309" width="0.0138%" height="15" fill="rgb(208,58,18)" fg:x="16230" fg:w="8"/><text x="28.1755%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (70 samples, 0.12%)</title><rect x="28.0356%" y="245" width="0.1204%" height="15" fill="rgb(242,225,1)" fg:x="16294" fg:w="70"/><text x="28.2856%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (131 samples, 0.23%)</title><rect x="27.9409%" y="261" width="0.2254%" height="15" fill="rgb(249,39,40)" fg:x="16239" fg:w="131"/><text x="28.1909%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="28.2816%" y="213" width="0.0138%" height="15" fill="rgb(207,72,44)" fg:x="16437" fg:w="8"/><text x="28.5316%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (750 samples, 1.29%)</title><rect x="27.0067%" y="389" width="1.2905%" height="15" fill="rgb(215,193,12)" fg:x="15696" fg:w="750"/><text x="27.2567%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (750 samples, 1.29%)</title><rect x="27.0067%" y="373" width="1.2905%" height="15" fill="rgb(248,41,39)" fg:x="15696" fg:w="750"/><text x="27.2567%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (220 samples, 0.38%)</title><rect x="27.9186%" y="357" width="0.3785%" height="15" fill="rgb(253,85,4)" fg:x="16226" fg:w="220"/><text x="28.1686%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (219 samples, 0.38%)</title><rect x="27.9203%" y="341" width="0.3768%" height="15" fill="rgb(243,70,31)" fg:x="16227" fg:w="219"/><text x="28.1703%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (208 samples, 0.36%)</title><rect x="27.9392%" y="325" width="0.3579%" height="15" fill="rgb(253,195,26)" fg:x="16238" fg:w="208"/><text x="28.1892%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (208 samples, 0.36%)</title><rect x="27.9392%" y="309" width="0.3579%" height="15" fill="rgb(243,42,11)" fg:x="16238" fg:w="208"/><text x="28.1892%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (208 samples, 0.36%)</title><rect x="27.9392%" y="293" width="0.3579%" height="15" fill="rgb(239,66,17)" fg:x="16238" fg:w="208"/><text x="28.1892%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (207 samples, 0.36%)</title><rect x="27.9409%" y="277" width="0.3562%" height="15" fill="rgb(217,132,21)" fg:x="16239" fg:w="207"/><text x="28.1909%" y="287.50"></text></g><g><title>core::hash::Hasher::write_u8 (76 samples, 0.13%)</title><rect x="28.1663%" y="261" width="0.1308%" height="15" fill="rgb(252,202,21)" fg:x="16370" fg:w="76"/><text x="28.4163%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 samples, 0.12%)</title><rect x="28.1732%" y="245" width="0.1239%" height="15" fill="rgb(233,98,36)" fg:x="16374" fg:w="72"/><text x="28.4232%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (39 samples, 0.07%)</title><rect x="28.2300%" y="229" width="0.0671%" height="15" fill="rgb(216,153,54)" fg:x="16407" fg:w="39"/><text x="28.4800%" y="239.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="28.3642%" y="373" width="0.0206%" height="15" fill="rgb(250,99,7)" fg:x="16485" fg:w="12"/><text x="28.6142%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="28.3642%" y="357" width="0.0206%" height="15" fill="rgb(207,56,50)" fg:x="16485" fg:w="12"/><text x="28.6142%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (11 samples, 0.02%)</title><rect x="28.4933%" y="325" width="0.0189%" height="15" fill="rgb(244,61,34)" fg:x="16560" fg:w="11"/><text x="28.7433%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (53 samples, 0.09%)</title><rect x="28.4244%" y="357" width="0.0912%" height="15" fill="rgb(241,50,38)" fg:x="16520" fg:w="53"/><text x="28.6744%" y="367.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (52 samples, 0.09%)</title><rect x="28.4262%" y="341" width="0.0895%" height="15" fill="rgb(212,166,30)" fg:x="16521" fg:w="52"/><text x="28.6762%" y="351.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (17 samples, 0.03%)</title><rect x="28.7531%" y="341" width="0.0293%" height="15" fill="rgb(249,127,32)" fg:x="16711" fg:w="17"/><text x="29.0031%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.01%)</title><rect x="28.8339%" y="325" width="0.0103%" height="15" fill="rgb(209,103,0)" fg:x="16758" fg:w="6"/><text x="29.0839%" y="335.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (18 samples, 0.03%)</title><rect x="28.8770%" y="309" width="0.0310%" height="15" fill="rgb(238,209,51)" fg:x="16783" fg:w="18"/><text x="29.1270%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.14%)</title><rect x="28.7823%" y="341" width="0.1445%" height="15" fill="rgb(237,56,23)" fg:x="16728" fg:w="84"/><text x="29.0323%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (48 samples, 0.08%)</title><rect x="28.8443%" y="325" width="0.0826%" height="15" fill="rgb(215,153,46)" fg:x="16764" fg:w="48"/><text x="29.0943%" y="335.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (11 samples, 0.02%)</title><rect x="28.9079%" y="309" width="0.0189%" height="15" fill="rgb(224,49,31)" fg:x="16801" fg:w="11"/><text x="29.1579%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.06%)</title><rect x="29.0456%" y="229" width="0.0602%" height="15" fill="rgb(250,18,42)" fg:x="16881" fg:w="35"/><text x="29.2956%" y="239.50"></text></g><g><title>core::slice::raw::from_raw_parts (32 samples, 0.06%)</title><rect x="29.0507%" y="213" width="0.0551%" height="15" fill="rgb(215,176,39)" fg:x="16884" fg:w="32"/><text x="29.3007%" y="223.50"></text></g><g><title>core::ptr::slice_from_raw_parts (32 samples, 0.06%)</title><rect x="29.0507%" y="197" width="0.0551%" height="15" fill="rgb(223,77,29)" fg:x="16884" fg:w="32"/><text x="29.3007%" y="207.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (32 samples, 0.06%)</title><rect x="29.0507%" y="181" width="0.0551%" height="15" fill="rgb(234,94,52)" fg:x="16884" fg:w="32"/><text x="29.3007%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (53 samples, 0.09%)</title><rect x="29.0215%" y="245" width="0.0912%" height="15" fill="rgb(220,154,50)" fg:x="16867" fg:w="53"/><text x="29.2715%" y="255.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (133 samples, 0.23%)</title><rect x="28.9578%" y="325" width="0.2288%" height="15" fill="rgb(212,11,10)" fg:x="16830" fg:w="133"/><text x="29.2078%" y="335.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (129 samples, 0.22%)</title><rect x="28.9647%" y="309" width="0.2220%" height="15" fill="rgb(205,166,19)" fg:x="16834" fg:w="129"/><text x="29.2147%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (123 samples, 0.21%)</title><rect x="28.9750%" y="293" width="0.2116%" height="15" fill="rgb(244,198,16)" fg:x="16840" fg:w="123"/><text x="29.2250%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (108 samples, 0.19%)</title><rect x="29.0008%" y="277" width="0.1858%" height="15" fill="rgb(219,69,12)" fg:x="16855" fg:w="108"/><text x="29.2508%" y="287.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (104 samples, 0.18%)</title><rect x="29.0077%" y="261" width="0.1789%" height="15" fill="rgb(245,30,7)" fg:x="16859" fg:w="104"/><text x="29.2577%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (43 samples, 0.07%)</title><rect x="29.1127%" y="245" width="0.0740%" height="15" fill="rgb(218,221,48)" fg:x="16920" fg:w="43"/><text x="29.3627%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (43 samples, 0.07%)</title><rect x="29.1127%" y="229" width="0.0740%" height="15" fill="rgb(216,66,15)" fg:x="16920" fg:w="43"/><text x="29.3627%" y="239.50"></text></g><g><title>[libc.so.6] (28 samples, 0.05%)</title><rect x="29.1385%" y="213" width="0.0482%" height="15" fill="rgb(226,122,50)" fg:x="16935" fg:w="28"/><text x="29.3885%" y="223.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15 samples, 0.03%)</title><rect x="29.1867%" y="325" width="0.0258%" height="15" fill="rgb(239,156,16)" fg:x="16963" fg:w="15"/><text x="29.4367%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (15 samples, 0.03%)</title><rect x="29.1867%" y="309" width="0.0258%" height="15" fill="rgb(224,27,38)" fg:x="16963" fg:w="15"/><text x="29.4367%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (10 samples, 0.02%)</title><rect x="29.2744%" y="293" width="0.0172%" height="15" fill="rgb(224,39,27)" fg:x="17014" fg:w="10"/><text x="29.5244%" y="303.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (47 samples, 0.08%)</title><rect x="29.2125%" y="309" width="0.0809%" height="15" fill="rgb(215,92,29)" fg:x="16978" fg:w="47"/><text x="29.4625%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (214 samples, 0.37%)</title><rect x="28.9269%" y="341" width="0.3682%" height="15" fill="rgb(207,159,16)" fg:x="16812" fg:w="214"/><text x="29.1769%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (48 samples, 0.08%)</title><rect x="29.2125%" y="325" width="0.0826%" height="15" fill="rgb(238,163,47)" fg:x="16978" fg:w="48"/><text x="29.4625%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (82 samples, 0.14%)</title><rect x="29.2968%" y="341" width="0.1411%" height="15" fill="rgb(219,91,49)" fg:x="17027" fg:w="82"/><text x="29.5468%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (71 samples, 0.12%)</title><rect x="29.3157%" y="325" width="0.1222%" height="15" fill="rgb(227,167,31)" fg:x="17038" fg:w="71"/><text x="29.5657%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="29.4258%" y="309" width="0.0120%" height="15" fill="rgb(234,80,54)" fg:x="17102" fg:w="7"/><text x="29.6758%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (32 samples, 0.06%)</title><rect x="29.4998%" y="325" width="0.0551%" height="15" fill="rgb(212,114,2)" fg:x="17145" fg:w="32"/><text x="29.7498%" y="335.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (8 samples, 0.01%)</title><rect x="29.5411%" y="309" width="0.0138%" height="15" fill="rgb(234,50,24)" fg:x="17169" fg:w="8"/><text x="29.7911%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (110 samples, 0.19%)</title><rect x="29.5549%" y="325" width="0.1893%" height="15" fill="rgb(221,68,8)" fg:x="17177" fg:w="110"/><text x="29.8049%" y="335.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (8 samples, 0.01%)</title><rect x="29.7304%" y="309" width="0.0138%" height="15" fill="rgb(254,180,31)" fg:x="17279" fg:w="8"/><text x="29.9804%" y="319.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2,077 samples, 3.57%)</title><rect x="26.2840%" y="517" width="3.5737%" height="15" fill="rgb(247,130,50)" fg:x="15276" fg:w="2077"/><text x="26.5340%" y="527.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,063 samples, 3.55%)</title><rect x="26.3081%" y="501" width="3.5496%" height="15" fill="rgb(211,109,4)" fg:x="15290" fg:w="2063"/><text x="26.5581%" y="511.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1,713 samples, 2.95%)</title><rect x="26.9103%" y="485" width="2.9474%" height="15" fill="rgb(238,50,21)" fg:x="15640" fg:w="1713"/><text x="27.1603%" y="495.50">co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1,699 samples, 2.92%)</title><rect x="26.9344%" y="469" width="2.9233%" height="15" fill="rgb(225,57,45)" fg:x="15654" fg:w="1699"/><text x="27.1844%" y="479.50">&lt;s..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,696 samples, 2.92%)</title><rect x="26.9396%" y="453" width="2.9182%" height="15" fill="rgb(209,196,50)" fg:x="15657" fg:w="1696"/><text x="27.1896%" y="463.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,696 samples, 2.92%)</title><rect x="26.9396%" y="437" width="2.9182%" height="15" fill="rgb(242,140,13)" fg:x="15657" fg:w="1696"/><text x="27.1896%" y="447.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,693 samples, 2.91%)</title><rect x="26.9447%" y="421" width="2.9130%" height="15" fill="rgb(217,111,7)" fg:x="15660" fg:w="1693"/><text x="27.1947%" y="431.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,673 samples, 2.88%)</title><rect x="26.9791%" y="405" width="2.8786%" height="15" fill="rgb(253,193,51)" fg:x="15680" fg:w="1673"/><text x="27.2291%" y="415.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (907 samples, 1.56%)</title><rect x="28.2971%" y="389" width="1.5606%" height="15" fill="rgb(252,70,29)" fg:x="16446" fg:w="907"/><text x="28.5471%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (856 samples, 1.47%)</title><rect x="28.3849%" y="373" width="1.4728%" height="15" fill="rgb(232,127,12)" fg:x="16497" fg:w="856"/><text x="28.6349%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (780 samples, 1.34%)</title><rect x="28.5156%" y="357" width="1.3421%" height="15" fill="rgb(211,180,21)" fg:x="16573" fg:w="780"/><text x="28.7656%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (244 samples, 0.42%)</title><rect x="29.4379%" y="341" width="0.4198%" height="15" fill="rgb(229,72,13)" fg:x="17109" fg:w="244"/><text x="29.6879%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (66 samples, 0.11%)</title><rect x="29.7441%" y="325" width="0.1136%" height="15" fill="rgb(240,211,49)" fg:x="17287" fg:w="66"/><text x="29.9941%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (66 samples, 0.11%)</title><rect x="29.7441%" y="309" width="0.1136%" height="15" fill="rgb(219,149,40)" fg:x="17287" fg:w="66"/><text x="29.9941%" y="319.50"></text></g><g><title>[libc.so.6] (20 samples, 0.03%)</title><rect x="29.8577%" y="501" width="0.0344%" height="15" fill="rgb(210,127,46)" fg:x="17353" fg:w="20"/><text x="30.1077%" y="511.50"></text></g><g><title>[libc.so.6] (15 samples, 0.03%)</title><rect x="29.8921%" y="485" width="0.0258%" height="15" fill="rgb(220,106,7)" fg:x="17373" fg:w="15"/><text x="30.1421%" y="495.50"></text></g><g><title>[libc.so.6] (22 samples, 0.04%)</title><rect x="29.9179%" y="469" width="0.0379%" height="15" fill="rgb(249,31,22)" fg:x="17388" fg:w="22"/><text x="30.1679%" y="479.50"></text></g><g><title>[libc.so.6] (18 samples, 0.03%)</title><rect x="29.9575%" y="453" width="0.0310%" height="15" fill="rgb(253,1,49)" fg:x="17411" fg:w="18"/><text x="30.2075%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (8 samples, 0.01%)</title><rect x="30.0143%" y="437" width="0.0138%" height="15" fill="rgb(227,144,33)" fg:x="17444" fg:w="8"/><text x="30.2643%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.01%)</title><rect x="30.0504%" y="421" width="0.0138%" height="15" fill="rgb(249,163,44)" fg:x="17465" fg:w="8"/><text x="30.3004%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (144 samples, 0.25%)</title><rect x="29.9558%" y="469" width="0.2478%" height="15" fill="rgb(234,15,39)" fg:x="17410" fg:w="144"/><text x="30.2058%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (125 samples, 0.22%)</title><rect x="29.9885%" y="453" width="0.2151%" height="15" fill="rgb(207,66,16)" fg:x="17429" fg:w="125"/><text x="30.2385%" y="463.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (102 samples, 0.18%)</title><rect x="30.0280%" y="437" width="0.1755%" height="15" fill="rgb(233,112,24)" fg:x="17452" fg:w="102"/><text x="30.2780%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (81 samples, 0.14%)</title><rect x="30.0642%" y="421" width="0.1394%" height="15" fill="rgb(230,90,22)" fg:x="17473" fg:w="81"/><text x="30.3142%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (71 samples, 0.12%)</title><rect x="30.0814%" y="405" width="0.1222%" height="15" fill="rgb(229,61,13)" fg:x="17483" fg:w="71"/><text x="30.3314%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (68 samples, 0.12%)</title><rect x="30.0865%" y="389" width="0.1170%" height="15" fill="rgb(225,57,24)" fg:x="17486" fg:w="68"/><text x="30.3365%" y="399.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (9 samples, 0.02%)</title><rect x="30.1881%" y="373" width="0.0155%" height="15" fill="rgb(208,169,48)" fg:x="17545" fg:w="9"/><text x="30.4381%" y="383.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (5,905 samples, 10.16%)</title><rect x="20.0451%" y="597" width="10.1602%" height="15" fill="rgb(244,218,51)" fg:x="11650" fg:w="5905"/><text x="20.2951%" y="607.50">&lt;core::option::..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (5,901 samples, 10.15%)</title><rect x="20.0520%" y="581" width="10.1533%" height="15" fill="rgb(214,148,10)" fg:x="11654" fg:w="5901"/><text x="20.3020%" y="591.50">&lt;T as core::opt..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (5,881 samples, 10.12%)</title><rect x="20.0864%" y="565" width="10.1189%" height="15" fill="rgb(225,174,27)" fg:x="11674" fg:w="5881"/><text x="20.3364%" y="575.50">&lt;alloc::boxed::..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (5,878 samples, 10.11%)</title><rect x="20.0915%" y="549" width="10.1137%" height="15" fill="rgb(230,96,26)" fg:x="11677" fg:w="5878"/><text x="20.3415%" y="559.50">&lt;aes_grinder::a..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (2,289 samples, 3.94%)</title><rect x="26.2668%" y="533" width="3.9385%" height="15" fill="rgb(232,10,30)" fg:x="15266" fg:w="2289"/><text x="26.5168%" y="543.50">&lt;std..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (202 samples, 0.35%)</title><rect x="29.8577%" y="517" width="0.3476%" height="15" fill="rgb(222,8,50)" fg:x="17353" fg:w="202"/><text x="30.1077%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (182 samples, 0.31%)</title><rect x="29.8921%" y="501" width="0.3132%" height="15" fill="rgb(213,81,27)" fg:x="17373" fg:w="182"/><text x="30.1421%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (167 samples, 0.29%)</title><rect x="29.9179%" y="485" width="0.2873%" height="15" fill="rgb(245,50,10)" fg:x="17388" fg:w="167"/><text x="30.1679%" y="495.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.04%)</title><rect x="30.3687%" y="549" width="0.0447%" height="15" fill="rgb(216,100,18)" fg:x="17650" fg:w="26"/><text x="30.6187%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (15 samples, 0.03%)</title><rect x="30.6131%" y="437" width="0.0258%" height="15" fill="rgb(236,147,54)" fg:x="17792" fg:w="15"/><text x="30.8631%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.07%)</title><rect x="30.5700%" y="453" width="0.0705%" height="15" fill="rgb(205,143,26)" fg:x="17767" fg:w="41"/><text x="30.8200%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (140 samples, 0.24%)</title><rect x="30.5064%" y="485" width="0.2409%" height="15" fill="rgb(236,26,9)" fg:x="17730" fg:w="140"/><text x="30.7564%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (125 samples, 0.22%)</title><rect x="30.5322%" y="469" width="0.2151%" height="15" fill="rgb(221,165,53)" fg:x="17745" fg:w="125"/><text x="30.7822%" y="479.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (62 samples, 0.11%)</title><rect x="30.6406%" y="453" width="0.1067%" height="15" fill="rgb(214,110,17)" fg:x="17808" fg:w="62"/><text x="30.8906%" y="463.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (209 samples, 0.36%)</title><rect x="30.4135%" y="549" width="0.3596%" height="15" fill="rgb(237,197,12)" fg:x="17676" fg:w="209"/><text x="30.6635%" y="559.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (208 samples, 0.36%)</title><rect x="30.4152%" y="533" width="0.3579%" height="15" fill="rgb(205,84,17)" fg:x="17677" fg:w="208"/><text x="30.6652%" y="543.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (208 samples, 0.36%)</title><rect x="30.4152%" y="517" width="0.3579%" height="15" fill="rgb(237,18,45)" fg:x="17677" fg:w="208"/><text x="30.6652%" y="527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (193 samples, 0.33%)</title><rect x="30.4410%" y="501" width="0.3321%" height="15" fill="rgb(221,87,14)" fg:x="17692" fg:w="193"/><text x="30.6910%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (15 samples, 0.03%)</title><rect x="30.7473%" y="485" width="0.0258%" height="15" fill="rgb(238,186,15)" fg:x="17870" fg:w="15"/><text x="30.9973%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (10 samples, 0.02%)</title><rect x="30.7559%" y="469" width="0.0172%" height="15" fill="rgb(208,115,11)" fg:x="17875" fg:w="10"/><text x="31.0059%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.03%)</title><rect x="30.8144%" y="469" width="0.0293%" height="15" fill="rgb(254,175,0)" fg:x="17909" fg:w="17"/><text x="31.0644%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (81 samples, 0.14%)</title><rect x="30.9520%" y="373" width="0.1394%" height="15" fill="rgb(227,24,42)" fg:x="17989" fg:w="81"/><text x="31.2020%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.01%)</title><rect x="31.0811%" y="357" width="0.0103%" height="15" fill="rgb(223,211,37)" fg:x="18064" fg:w="6"/><text x="31.3311%" y="367.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (341 samples, 0.59%)</title><rect x="30.8729%" y="421" width="0.5867%" height="15" fill="rgb(235,49,27)" fg:x="17943" fg:w="341"/><text x="31.1229%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (340 samples, 0.59%)</title><rect x="30.8746%" y="405" width="0.5850%" height="15" fill="rgb(254,97,51)" fg:x="17944" fg:w="340"/><text x="31.1246%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (340 samples, 0.59%)</title><rect x="30.8746%" y="389" width="0.5850%" height="15" fill="rgb(249,51,40)" fg:x="17944" fg:w="340"/><text x="31.1246%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (214 samples, 0.37%)</title><rect x="31.0914%" y="373" width="0.3682%" height="15" fill="rgb(210,128,45)" fg:x="18070" fg:w="214"/><text x="31.3414%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (22 samples, 0.04%)</title><rect x="31.4217%" y="357" width="0.0379%" height="15" fill="rgb(224,137,50)" fg:x="18262" fg:w="22"/><text x="31.6717%" y="367.50"></text></g><g><title>[libc.so.6] (46 samples, 0.08%)</title><rect x="31.4665%" y="405" width="0.0791%" height="15" fill="rgb(242,15,9)" fg:x="18288" fg:w="46"/><text x="31.7165%" y="415.50"></text></g><g><title>[libc.so.6] (50 samples, 0.09%)</title><rect x="31.5525%" y="389" width="0.0860%" height="15" fill="rgb(233,187,41)" fg:x="18338" fg:w="50"/><text x="31.8025%" y="399.50"></text></g><g><title>[libc.so.6] (81 samples, 0.14%)</title><rect x="31.6471%" y="373" width="0.1394%" height="15" fill="rgb(227,2,29)" fg:x="18393" fg:w="81"/><text x="31.8971%" y="383.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (90 samples, 0.15%)</title><rect x="31.6385%" y="389" width="0.1549%" height="15" fill="rgb(222,70,3)" fg:x="18388" fg:w="90"/><text x="31.8885%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (196 samples, 0.34%)</title><rect x="31.4596%" y="421" width="0.3372%" height="15" fill="rgb(213,11,42)" fg:x="18284" fg:w="196"/><text x="31.7096%" y="431.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (146 samples, 0.25%)</title><rect x="31.5456%" y="405" width="0.2512%" height="15" fill="rgb(225,150,9)" fg:x="18334" fg:w="146"/><text x="31.7956%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (91 samples, 0.16%)</title><rect x="31.9328%" y="309" width="0.1566%" height="15" fill="rgb(230,162,45)" fg:x="18559" fg:w="91"/><text x="32.1828%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.01%)</title><rect x="32.0773%" y="293" width="0.0120%" height="15" fill="rgb(222,14,52)" fg:x="18643" fg:w="7"/><text x="32.3273%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (168 samples, 0.29%)</title><rect x="31.8123%" y="325" width="0.2891%" height="15" fill="rgb(254,198,14)" fg:x="18489" fg:w="168"/><text x="32.0623%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (783 samples, 1.35%)</title><rect x="30.8591%" y="453" width="1.3472%" height="15" fill="rgb(220,217,30)" fg:x="17935" fg:w="783"/><text x="31.1091%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (783 samples, 1.35%)</title><rect x="30.8591%" y="437" width="1.3472%" height="15" fill="rgb(215,146,41)" fg:x="17935" fg:w="783"/><text x="31.1091%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (238 samples, 0.41%)</title><rect x="31.7968%" y="421" width="0.4095%" height="15" fill="rgb(217,27,36)" fg:x="18480" fg:w="238"/><text x="32.0468%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (237 samples, 0.41%)</title><rect x="31.7986%" y="405" width="0.4078%" height="15" fill="rgb(219,218,39)" fg:x="18481" fg:w="237"/><text x="32.0486%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (231 samples, 0.40%)</title><rect x="31.8089%" y="389" width="0.3975%" height="15" fill="rgb(219,4,42)" fg:x="18487" fg:w="231"/><text x="32.0589%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (231 samples, 0.40%)</title><rect x="31.8089%" y="373" width="0.3975%" height="15" fill="rgb(249,119,36)" fg:x="18487" fg:w="231"/><text x="32.0589%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (231 samples, 0.40%)</title><rect x="31.8089%" y="357" width="0.3975%" height="15" fill="rgb(209,23,33)" fg:x="18487" fg:w="231"/><text x="32.0589%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (229 samples, 0.39%)</title><rect x="31.8123%" y="341" width="0.3940%" height="15" fill="rgb(211,10,0)" fg:x="18489" fg:w="229"/><text x="32.0623%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (61 samples, 0.10%)</title><rect x="32.1014%" y="325" width="0.1050%" height="15" fill="rgb(208,99,37)" fg:x="18657" fg:w="61"/><text x="32.3514%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (61 samples, 0.10%)</title><rect x="32.1014%" y="309" width="0.1050%" height="15" fill="rgb(213,132,31)" fg:x="18657" fg:w="61"/><text x="32.3514%" y="319.50"></text></g><g><title>core::hash::sip::u8to64_le (34 samples, 0.06%)</title><rect x="32.1478%" y="293" width="0.0585%" height="15" fill="rgb(243,129,40)" fg:x="18684" fg:w="34"/><text x="32.3978%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="32.1908%" y="277" width="0.0155%" height="15" fill="rgb(210,66,33)" fg:x="18709" fg:w="9"/><text x="32.4408%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="32.2752%" y="437" width="0.0206%" height="15" fill="rgb(209,189,4)" fg:x="18758" fg:w="12"/><text x="32.5252%" y="447.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="32.2752%" y="421" width="0.0206%" height="15" fill="rgb(214,107,37)" fg:x="18758" fg:w="12"/><text x="32.5252%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (42 samples, 0.07%)</title><rect x="32.3509%" y="405" width="0.0723%" height="15" fill="rgb(245,88,54)" fg:x="18802" fg:w="42"/><text x="32.6009%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (8 samples, 0.01%)</title><rect x="32.4094%" y="389" width="0.0138%" height="15" fill="rgb(205,146,20)" fg:x="18836" fg:w="8"/><text x="32.6594%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (49 samples, 0.08%)</title><rect x="32.3405%" y="421" width="0.0843%" height="15" fill="rgb(220,161,25)" fg:x="18796" fg:w="49"/><text x="32.5905%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.02%)</title><rect x="32.5849%" y="405" width="0.0172%" height="15" fill="rgb(215,152,15)" fg:x="18938" fg:w="10"/><text x="32.8349%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.03%)</title><rect x="32.6589%" y="389" width="0.0310%" height="15" fill="rgb(233,192,44)" fg:x="18981" fg:w="18"/><text x="32.9089%" y="399.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (26 samples, 0.04%)</title><rect x="32.7225%" y="373" width="0.0447%" height="15" fill="rgb(240,170,46)" fg:x="19018" fg:w="26"/><text x="32.9725%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (109 samples, 0.19%)</title><rect x="32.6021%" y="405" width="0.1875%" height="15" fill="rgb(207,104,33)" fg:x="18948" fg:w="109"/><text x="32.8521%" y="415.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (58 samples, 0.10%)</title><rect x="32.6898%" y="389" width="0.0998%" height="15" fill="rgb(219,21,39)" fg:x="18999" fg:w="58"/><text x="32.9398%" y="399.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (13 samples, 0.02%)</title><rect x="32.7673%" y="373" width="0.0224%" height="15" fill="rgb(214,133,29)" fg:x="19044" fg:w="13"/><text x="33.0173%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.05%)</title><rect x="32.9169%" y="293" width="0.0465%" height="15" fill="rgb(226,93,6)" fg:x="19131" fg:w="27"/><text x="33.1669%" y="303.50"></text></g><g><title>core::slice::raw::from_raw_parts (24 samples, 0.04%)</title><rect x="32.9221%" y="277" width="0.0413%" height="15" fill="rgb(252,222,34)" fg:x="19134" fg:w="24"/><text x="33.1721%" y="287.50"></text></g><g><title>core::ptr::slice_from_raw_parts (24 samples, 0.04%)</title><rect x="32.9221%" y="261" width="0.0413%" height="15" fill="rgb(252,92,48)" fg:x="19134" fg:w="24"/><text x="33.1721%" y="271.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (24 samples, 0.04%)</title><rect x="32.9221%" y="245" width="0.0413%" height="15" fill="rgb(245,223,24)" fg:x="19134" fg:w="24"/><text x="33.1721%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (45 samples, 0.08%)</title><rect x="32.8877%" y="309" width="0.0774%" height="15" fill="rgb(205,176,3)" fg:x="19114" fg:w="45"/><text x="33.1377%" y="319.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (126 samples, 0.22%)</title><rect x="32.8240%" y="389" width="0.2168%" height="15" fill="rgb(235,151,15)" fg:x="19077" fg:w="126"/><text x="33.0740%" y="399.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (121 samples, 0.21%)</title><rect x="32.8326%" y="373" width="0.2082%" height="15" fill="rgb(237,209,11)" fg:x="19082" fg:w="121"/><text x="33.0826%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (112 samples, 0.19%)</title><rect x="32.8481%" y="357" width="0.1927%" height="15" fill="rgb(243,227,24)" fg:x="19091" fg:w="112"/><text x="33.0981%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (106 samples, 0.18%)</title><rect x="32.8584%" y="341" width="0.1824%" height="15" fill="rgb(239,193,16)" fg:x="19097" fg:w="106"/><text x="33.1084%" y="351.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (102 samples, 0.18%)</title><rect x="32.8653%" y="325" width="0.1755%" height="15" fill="rgb(231,27,9)" fg:x="19101" fg:w="102"/><text x="33.1153%" y="335.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (44 samples, 0.08%)</title><rect x="32.9651%" y="309" width="0.0757%" height="15" fill="rgb(219,169,10)" fg:x="19159" fg:w="44"/><text x="33.2151%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (44 samples, 0.08%)</title><rect x="32.9651%" y="293" width="0.0757%" height="15" fill="rgb(244,229,43)" fg:x="19159" fg:w="44"/><text x="33.2151%" y="303.50"></text></g><g><title>[libc.so.6] (30 samples, 0.05%)</title><rect x="32.9892%" y="277" width="0.0516%" height="15" fill="rgb(254,38,20)" fg:x="19173" fg:w="30"/><text x="33.2392%" y="287.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (14 samples, 0.02%)</title><rect x="33.0408%" y="389" width="0.0241%" height="15" fill="rgb(250,47,30)" fg:x="19203" fg:w="14"/><text x="33.2908%" y="399.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (14 samples, 0.02%)</title><rect x="33.0408%" y="373" width="0.0241%" height="15" fill="rgb(224,124,36)" fg:x="19203" fg:w="14"/><text x="33.2908%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.02%)</title><rect x="33.1286%" y="357" width="0.0206%" height="15" fill="rgb(246,68,51)" fg:x="19254" fg:w="12"/><text x="33.3786%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="33.1389%" y="341" width="0.0103%" height="15" fill="rgb(253,43,49)" fg:x="19260" fg:w="6"/><text x="33.3889%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (51 samples, 0.09%)</title><rect x="33.0649%" y="373" width="0.0878%" height="15" fill="rgb(219,54,36)" fg:x="19217" fg:w="51"/><text x="33.3149%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (213 samples, 0.37%)</title><rect x="32.7896%" y="405" width="0.3665%" height="15" fill="rgb(227,133,34)" fg:x="19057" fg:w="213"/><text x="33.0396%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (53 samples, 0.09%)</title><rect x="33.0649%" y="389" width="0.0912%" height="15" fill="rgb(247,227,15)" fg:x="19217" fg:w="53"/><text x="33.3149%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (80 samples, 0.14%)</title><rect x="33.1578%" y="405" width="0.1376%" height="15" fill="rgb(229,96,14)" fg:x="19271" fg:w="80"/><text x="33.4078%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (72 samples, 0.12%)</title><rect x="33.1716%" y="389" width="0.1239%" height="15" fill="rgb(220,79,17)" fg:x="19279" fg:w="72"/><text x="33.4216%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="33.2852%" y="373" width="0.0103%" height="15" fill="rgb(205,131,53)" fg:x="19345" fg:w="6"/><text x="33.5352%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (42 samples, 0.07%)</title><rect x="33.3763%" y="389" width="0.0723%" height="15" fill="rgb(209,50,29)" fg:x="19398" fg:w="42"/><text x="33.6263%" y="399.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (14 samples, 0.02%)</title><rect x="33.4245%" y="373" width="0.0241%" height="15" fill="rgb(245,86,46)" fg:x="19426" fg:w="14"/><text x="33.6745%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (80 samples, 0.14%)</title><rect x="33.4486%" y="389" width="0.1376%" height="15" fill="rgb(235,66,46)" fg:x="19440" fg:w="80"/><text x="33.6986%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2,026 samples, 3.49%)</title><rect x="30.2156%" y="581" width="3.4860%" height="15" fill="rgb(232,148,31)" fg:x="17561" fg:w="2026"/><text x="30.4656%" y="591.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2,021 samples, 3.48%)</title><rect x="30.2242%" y="565" width="3.4773%" height="15" fill="rgb(217,149,8)" fg:x="17566" fg:w="2021"/><text x="30.4742%" y="575.50">cor..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (1,702 samples, 2.93%)</title><rect x="30.7731%" y="549" width="2.9285%" height="15" fill="rgb(209,183,11)" fg:x="17885" fg:w="1702"/><text x="31.0231%" y="559.50">co..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (1,684 samples, 2.90%)</title><rect x="30.8040%" y="533" width="2.8975%" height="15" fill="rgb(208,55,20)" fg:x="17903" fg:w="1684"/><text x="31.0540%" y="543.50">&lt;s..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,684 samples, 2.90%)</title><rect x="30.8040%" y="517" width="2.8975%" height="15" fill="rgb(218,39,14)" fg:x="17903" fg:w="1684"/><text x="31.0540%" y="527.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,684 samples, 2.90%)</title><rect x="30.8040%" y="501" width="2.8975%" height="15" fill="rgb(216,169,33)" fg:x="17903" fg:w="1684"/><text x="31.0540%" y="511.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,683 samples, 2.90%)</title><rect x="30.8058%" y="485" width="2.8958%" height="15" fill="rgb(233,80,24)" fg:x="17904" fg:w="1683"/><text x="31.0558%" y="495.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,661 samples, 2.86%)</title><rect x="30.8436%" y="469" width="2.8579%" height="15" fill="rgb(213,179,31)" fg:x="17926" fg:w="1661"/><text x="31.0936%" y="479.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (869 samples, 1.50%)</title><rect x="32.2063%" y="453" width="1.4952%" height="15" fill="rgb(209,19,5)" fg:x="18718" fg:w="869"/><text x="32.4563%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (817 samples, 1.41%)</title><rect x="32.2958%" y="437" width="1.4057%" height="15" fill="rgb(219,18,35)" fg:x="18770" fg:w="817"/><text x="32.5458%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (742 samples, 1.28%)</title><rect x="32.4249%" y="421" width="1.2767%" height="15" fill="rgb(209,169,16)" fg:x="18845" fg:w="742"/><text x="32.6749%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (236 samples, 0.41%)</title><rect x="33.2955%" y="405" width="0.4061%" height="15" fill="rgb(245,90,51)" fg:x="19351" fg:w="236"/><text x="33.5455%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (67 samples, 0.12%)</title><rect x="33.5863%" y="389" width="0.1153%" height="15" fill="rgb(220,99,45)" fg:x="19520" fg:w="67"/><text x="33.8363%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (66 samples, 0.11%)</title><rect x="33.5880%" y="373" width="0.1136%" height="15" fill="rgb(249,89,25)" fg:x="19521" fg:w="66"/><text x="33.8380%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.02%)</title><rect x="33.7101%" y="549" width="0.0172%" height="15" fill="rgb(239,193,0)" fg:x="19592" fg:w="10"/><text x="33.9601%" y="559.50"></text></g><g><title>[libc.so.6] (11 samples, 0.02%)</title><rect x="33.7274%" y="533" width="0.0189%" height="15" fill="rgb(231,126,1)" fg:x="19602" fg:w="11"/><text x="33.9774%" y="543.50"></text></g><g><title>[libc.so.6] (15 samples, 0.03%)</title><rect x="33.7497%" y="517" width="0.0258%" height="15" fill="rgb(243,166,3)" fg:x="19615" fg:w="15"/><text x="33.9997%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (10 samples, 0.02%)</title><rect x="33.7979%" y="501" width="0.0172%" height="15" fill="rgb(223,22,34)" fg:x="19643" fg:w="10"/><text x="34.0479%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (95 samples, 0.16%)</title><rect x="33.7463%" y="533" width="0.1635%" height="15" fill="rgb(251,52,51)" fg:x="19613" fg:w="95"/><text x="33.9963%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (78 samples, 0.13%)</title><rect x="33.7755%" y="517" width="0.1342%" height="15" fill="rgb(221,165,28)" fg:x="19630" fg:w="78"/><text x="34.0255%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (55 samples, 0.09%)</title><rect x="33.8151%" y="501" width="0.0946%" height="15" fill="rgb(218,121,47)" fg:x="19653" fg:w="55"/><text x="34.0651%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (43 samples, 0.07%)</title><rect x="33.8358%" y="485" width="0.0740%" height="15" fill="rgb(209,120,9)" fg:x="19665" fg:w="43"/><text x="34.0858%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (40 samples, 0.07%)</title><rect x="33.8409%" y="469" width="0.0688%" height="15" fill="rgb(236,68,12)" fg:x="19668" fg:w="40"/><text x="34.0909%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (39 samples, 0.07%)</title><rect x="33.8426%" y="453" width="0.0671%" height="15" fill="rgb(225,194,26)" fg:x="19669" fg:w="39"/><text x="34.0926%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8,096 samples, 13.93%)</title><rect x="19.9814%" y="661" width="13.9300%" height="15" fill="rgb(231,84,39)" fg:x="11613" fg:w="8096"/><text x="20.2314%" y="671.50">&lt;core::option::Option..</text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (8,091 samples, 13.92%)</title><rect x="19.9900%" y="645" width="13.9214%" height="15" fill="rgb(210,11,45)" fg:x="11618" fg:w="8091"/><text x="20.2400%" y="655.50">&lt;T as core::option::S..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (8,070 samples, 13.89%)</title><rect x="20.0262%" y="629" width="13.8853%" height="15" fill="rgb(224,54,52)" fg:x="11639" fg:w="8070"/><text x="20.2762%" y="639.50">&lt;alloc::boxed::Box&lt;T,..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (8,070 samples, 13.89%)</title><rect x="20.0262%" y="613" width="13.8853%" height="15" fill="rgb(238,102,14)" fg:x="11639" fg:w="8070"/><text x="20.2762%" y="623.50">&lt;aes_grinder::algo::A..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (2,154 samples, 3.71%)</title><rect x="30.2053%" y="597" width="3.7062%" height="15" fill="rgb(243,160,52)" fg:x="17555" fg:w="2154"/><text x="30.4553%" y="607.50">&lt;std..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (122 samples, 0.21%)</title><rect x="33.7015%" y="581" width="0.2099%" height="15" fill="rgb(216,114,19)" fg:x="19587" fg:w="122"/><text x="33.9515%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (118 samples, 0.20%)</title><rect x="33.7084%" y="565" width="0.2030%" height="15" fill="rgb(244,166,37)" fg:x="19591" fg:w="118"/><text x="33.9584%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (107 samples, 0.18%)</title><rect x="33.7274%" y="549" width="0.1841%" height="15" fill="rgb(246,29,44)" fg:x="19602" fg:w="107"/><text x="33.9774%" y="559.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (12 samples, 0.02%)</title><rect x="34.0267%" y="629" width="0.0206%" height="15" fill="rgb(215,56,53)" fg:x="19776" fg:w="12"/><text x="34.2767%" y="639.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (37 samples, 0.06%)</title><rect x="34.2539%" y="613" width="0.0637%" height="15" fill="rgb(217,60,2)" fg:x="19908" fg:w="37"/><text x="34.5039%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.01%)</title><rect x="34.8303%" y="501" width="0.0120%" height="15" fill="rgb(207,26,24)" fg:x="20243" fg:w="7"/><text x="35.0803%" y="511.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (12 samples, 0.02%)</title><rect x="34.8664%" y="485" width="0.0206%" height="15" fill="rgb(252,210,15)" fg:x="20264" fg:w="12"/><text x="35.1164%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (32 samples, 0.06%)</title><rect x="34.8423%" y="501" width="0.0551%" height="15" fill="rgb(253,209,26)" fg:x="20250" fg:w="32"/><text x="35.0923%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (6 samples, 0.01%)</title><rect x="34.8870%" y="485" width="0.0103%" height="15" fill="rgb(238,170,14)" fg:x="20276" fg:w="6"/><text x="35.1370%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.21%)</title><rect x="34.6943%" y="517" width="0.2099%" height="15" fill="rgb(216,178,15)" fg:x="20164" fg:w="122"/><text x="34.9443%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (12 samples, 0.02%)</title><rect x="35.0625%" y="501" width="0.0206%" height="15" fill="rgb(250,197,2)" fg:x="20378" fg:w="12"/><text x="35.3125%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="35.0729%" y="485" width="0.0103%" height="15" fill="rgb(212,70,42)" fg:x="20384" fg:w="6"/><text x="35.3229%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (103 samples, 0.18%)</title><rect x="34.9077%" y="517" width="0.1772%" height="15" fill="rgb(227,213,9)" fg:x="20288" fg:w="103"/><text x="35.1577%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (319 samples, 0.55%)</title><rect x="34.5395%" y="549" width="0.5489%" height="15" fill="rgb(245,99,25)" fg:x="20074" fg:w="319"/><text x="34.7895%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (288 samples, 0.50%)</title><rect x="34.5928%" y="533" width="0.4955%" height="15" fill="rgb(250,82,29)" fg:x="20105" fg:w="288"/><text x="34.8428%" y="543.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (490 samples, 0.84%)</title><rect x="34.3175%" y="613" width="0.8431%" height="15" fill="rgb(241,226,54)" fg:x="19945" fg:w="490"/><text x="34.5675%" y="623.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (490 samples, 0.84%)</title><rect x="34.3175%" y="597" width="0.8431%" height="15" fill="rgb(221,99,41)" fg:x="19945" fg:w="490"/><text x="34.5675%" y="607.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (490 samples, 0.84%)</title><rect x="34.3175%" y="581" width="0.8431%" height="15" fill="rgb(213,90,21)" fg:x="19945" fg:w="490"/><text x="34.5675%" y="591.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (444 samples, 0.76%)</title><rect x="34.3967%" y="565" width="0.7639%" height="15" fill="rgb(205,208,24)" fg:x="19991" fg:w="444"/><text x="34.6467%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (42 samples, 0.07%)</title><rect x="35.0884%" y="549" width="0.0723%" height="15" fill="rgb(246,31,12)" fg:x="20393" fg:w="42"/><text x="35.3384%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (20 samples, 0.03%)</title><rect x="35.1262%" y="533" width="0.0344%" height="15" fill="rgb(213,154,6)" fg:x="20415" fg:w="20"/><text x="35.3762%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (18 samples, 0.03%)</title><rect x="35.2260%" y="533" width="0.0310%" height="15" fill="rgb(222,163,29)" fg:x="20473" fg:w="18"/><text x="35.4760%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.02%)</title><rect x="35.7129%" y="421" width="0.0172%" height="15" fill="rgb(227,201,8)" fg:x="20756" fg:w="10"/><text x="35.9629%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (150 samples, 0.26%)</title><rect x="35.4738%" y="437" width="0.2581%" height="15" fill="rgb(233,9,32)" fg:x="20617" fg:w="150"/><text x="35.7238%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (716 samples, 1.23%)</title><rect x="35.3396%" y="485" width="1.2320%" height="15" fill="rgb(217,54,24)" fg:x="20539" fg:w="716"/><text x="35.5896%" y="495.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (714 samples, 1.23%)</title><rect x="35.3430%" y="469" width="1.2285%" height="15" fill="rgb(235,192,0)" fg:x="20541" fg:w="714"/><text x="35.5930%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (714 samples, 1.23%)</title><rect x="35.3430%" y="453" width="1.2285%" height="15" fill="rgb(235,45,9)" fg:x="20541" fg:w="714"/><text x="35.5930%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (488 samples, 0.84%)</title><rect x="35.7319%" y="437" width="0.8397%" height="15" fill="rgb(246,42,40)" fg:x="20767" fg:w="488"/><text x="35.9819%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (37 samples, 0.06%)</title><rect x="36.5079%" y="421" width="0.0637%" height="15" fill="rgb(248,111,24)" fg:x="21218" fg:w="37"/><text x="36.7579%" y="431.50"></text></g><g><title>[libc.so.6] (78 samples, 0.13%)</title><rect x="36.5870%" y="469" width="0.1342%" height="15" fill="rgb(249,65,22)" fg:x="21264" fg:w="78"/><text x="36.8370%" y="479.50"></text></g><g><title>[libc.so.6] (106 samples, 0.18%)</title><rect x="36.7229%" y="453" width="0.1824%" height="15" fill="rgb(238,111,51)" fg:x="21343" fg:w="106"/><text x="36.9729%" y="463.50"></text></g><g><title>[libc.so.6] (148 samples, 0.25%)</title><rect x="36.9294%" y="437" width="0.2546%" height="15" fill="rgb(250,118,22)" fg:x="21463" fg:w="148"/><text x="37.1794%" y="447.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (169 samples, 0.29%)</title><rect x="36.9053%" y="453" width="0.2908%" height="15" fill="rgb(234,84,26)" fg:x="21449" fg:w="169"/><text x="37.1553%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (365 samples, 0.63%)</title><rect x="36.5715%" y="485" width="0.6280%" height="15" fill="rgb(243,172,12)" fg:x="21255" fg:w="365"/><text x="36.8215%" y="495.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (278 samples, 0.48%)</title><rect x="36.7212%" y="469" width="0.4783%" height="15" fill="rgb(236,150,49)" fg:x="21342" fg:w="278"/><text x="36.9712%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="37.2150%" y="453" width="0.0103%" height="15" fill="rgb(225,197,26)" fg:x="21629" fg:w="6"/><text x="37.4650%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="37.2150%" y="437" width="0.0103%" height="15" fill="rgb(214,17,42)" fg:x="21629" fg:w="6"/><text x="37.4650%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (181 samples, 0.31%)</title><rect x="37.5179%" y="373" width="0.3114%" height="15" fill="rgb(224,165,40)" fg:x="21805" fg:w="181"/><text x="37.7679%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (9 samples, 0.02%)</title><rect x="37.8138%" y="357" width="0.0155%" height="15" fill="rgb(246,100,4)" fg:x="21977" fg:w="9"/><text x="38.0638%" y="367.50"></text></g><g><title>core::hash::sip::u8to64_le (9 samples, 0.02%)</title><rect x="37.8293%" y="373" width="0.0155%" height="15" fill="rgb(222,103,0)" fg:x="21986" fg:w="9"/><text x="38.0793%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.01%)</title><rect x="37.8327%" y="357" width="0.0120%" height="15" fill="rgb(227,189,26)" fg:x="21988" fg:w="7"/><text x="38.0827%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 samples, 0.63%)</title><rect x="37.2322%" y="389" width="0.6263%" height="15" fill="rgb(214,202,17)" fg:x="21639" fg:w="364"/><text x="37.4822%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.01%)</title><rect x="37.8448%" y="373" width="0.0138%" height="15" fill="rgb(229,111,3)" fg:x="21995" fg:w="8"/><text x="38.0948%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.02%)</title><rect x="38.0633%" y="341" width="0.0155%" height="15" fill="rgb(229,172,15)" fg:x="22122" fg:w="9"/><text x="38.3133%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (1,633 samples, 2.81%)</title><rect x="35.2793%" y="517" width="2.8098%" height="15" fill="rgb(230,224,35)" fg:x="20504" fg:w="1633"/><text x="35.5293%" y="527.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (1,633 samples, 2.81%)</title><rect x="35.2793%" y="501" width="2.8098%" height="15" fill="rgb(251,141,6)" fg:x="20504" fg:w="1633"/><text x="35.5293%" y="511.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (517 samples, 0.89%)</title><rect x="37.1995%" y="485" width="0.8896%" height="15" fill="rgb(225,208,6)" fg:x="21620" fg:w="517"/><text x="37.4495%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (515 samples, 0.89%)</title><rect x="37.2030%" y="469" width="0.8861%" height="15" fill="rgb(246,181,16)" fg:x="21622" fg:w="515"/><text x="37.4530%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (502 samples, 0.86%)</title><rect x="37.2253%" y="453" width="0.8637%" height="15" fill="rgb(227,129,36)" fg:x="21635" fg:w="502"/><text x="37.4753%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (502 samples, 0.86%)</title><rect x="37.2253%" y="437" width="0.8637%" height="15" fill="rgb(248,117,24)" fg:x="21635" fg:w="502"/><text x="37.4753%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (500 samples, 0.86%)</title><rect x="37.2288%" y="421" width="0.8603%" height="15" fill="rgb(214,185,35)" fg:x="21637" fg:w="500"/><text x="37.4788%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (498 samples, 0.86%)</title><rect x="37.2322%" y="405" width="0.8569%" height="15" fill="rgb(236,150,34)" fg:x="21639" fg:w="498"/><text x="37.4822%" y="415.50"></text></g><g><title>core::hash::Hasher::write_u8 (134 samples, 0.23%)</title><rect x="37.8585%" y="389" width="0.2306%" height="15" fill="rgb(243,228,27)" fg:x="22003" fg:w="134"/><text x="38.1085%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (133 samples, 0.23%)</title><rect x="37.8603%" y="373" width="0.2288%" height="15" fill="rgb(245,77,44)" fg:x="22004" fg:w="133"/><text x="38.1103%" y="383.50"></text></g><g><title>core::hash::sip::u8to64_le (78 samples, 0.13%)</title><rect x="37.9549%" y="357" width="0.1342%" height="15" fill="rgb(235,214,42)" fg:x="22059" fg:w="78"/><text x="38.2049%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="38.0788%" y="341" width="0.0103%" height="15" fill="rgb(221,74,3)" fg:x="22131" fg:w="6"/><text x="38.3288%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="38.0788%" y="325" width="0.0103%" height="15" fill="rgb(206,121,29)" fg:x="22131" fg:w="6"/><text x="38.3288%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (6 samples, 0.01%)</title><rect x="38.0788%" y="309" width="0.0103%" height="15" fill="rgb(249,131,53)" fg:x="22131" fg:w="6"/><text x="38.3288%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (14 samples, 0.02%)</title><rect x="38.1665%" y="501" width="0.0241%" height="15" fill="rgb(236,170,29)" fg:x="22182" fg:w="14"/><text x="38.4165%" y="511.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (14 samples, 0.02%)</title><rect x="38.1665%" y="485" width="0.0241%" height="15" fill="rgb(247,96,15)" fg:x="22182" fg:w="14"/><text x="38.4165%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.02%)</title><rect x="38.3162%" y="453" width="0.0224%" height="15" fill="rgb(211,210,7)" fg:x="22269" fg:w="13"/><text x="38.5662%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="38.3283%" y="437" width="0.0103%" height="15" fill="rgb(240,88,50)" fg:x="22276" fg:w="6"/><text x="38.5783%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (53 samples, 0.09%)</title><rect x="38.2491%" y="485" width="0.0912%" height="15" fill="rgb(209,229,26)" fg:x="22230" fg:w="53"/><text x="38.4991%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (48 samples, 0.08%)</title><rect x="38.2577%" y="469" width="0.0826%" height="15" fill="rgb(210,68,23)" fg:x="22235" fg:w="48"/><text x="38.5077%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.05%)</title><rect x="38.6982%" y="469" width="0.0533%" height="15" fill="rgb(229,180,13)" fg:x="22491" fg:w="31"/><text x="38.9482%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.02%)</title><rect x="38.8616%" y="453" width="0.0206%" height="15" fill="rgb(236,53,44)" fg:x="22586" fg:w="12"/><text x="39.1116%" y="463.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (34 samples, 0.06%)</title><rect x="38.9477%" y="437" width="0.0585%" height="15" fill="rgb(244,214,29)" fg:x="22636" fg:w="34"/><text x="39.1977%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 0.28%)</title><rect x="38.7515%" y="469" width="0.2805%" height="15" fill="rgb(220,75,29)" fg:x="22522" fg:w="163"/><text x="39.0015%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (87 samples, 0.15%)</title><rect x="38.8823%" y="453" width="0.1497%" height="15" fill="rgb(214,183,37)" fg:x="22598" fg:w="87"/><text x="39.1323%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (15 samples, 0.03%)</title><rect x="39.0062%" y="437" width="0.0258%" height="15" fill="rgb(239,117,29)" fg:x="22670" fg:w="15"/><text x="39.2562%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.03%)</title><rect x="39.2161%" y="341" width="0.0293%" height="15" fill="rgb(237,171,35)" fg:x="22792" fg:w="17"/><text x="39.4661%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (17 samples, 0.03%)</title><rect x="39.2161%" y="325" width="0.0293%" height="15" fill="rgb(229,178,53)" fg:x="22792" fg:w="17"/><text x="39.4661%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (53 samples, 0.09%)</title><rect x="39.2126%" y="357" width="0.0912%" height="15" fill="rgb(210,102,19)" fg:x="22790" fg:w="53"/><text x="39.4626%" y="367.50"></text></g><g><title>core::slice::raw::from_raw_parts (34 samples, 0.06%)</title><rect x="39.2453%" y="341" width="0.0585%" height="15" fill="rgb(235,127,22)" fg:x="22809" fg:w="34"/><text x="39.4953%" y="351.50"></text></g><g><title>core::ptr::slice_from_raw_parts (34 samples, 0.06%)</title><rect x="39.2453%" y="325" width="0.0585%" height="15" fill="rgb(244,31,31)" fg:x="22809" fg:w="34"/><text x="39.4953%" y="335.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (34 samples, 0.06%)</title><rect x="39.2453%" y="309" width="0.0585%" height="15" fill="rgb(231,43,21)" fg:x="22809" fg:w="34"/><text x="39.4953%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (74 samples, 0.13%)</title><rect x="39.1800%" y="373" width="0.1273%" height="15" fill="rgb(217,131,35)" fg:x="22771" fg:w="74"/><text x="39.4300%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (194 samples, 0.33%)</title><rect x="39.0991%" y="453" width="0.3338%" height="15" fill="rgb(221,149,4)" fg:x="22724" fg:w="194"/><text x="39.3491%" y="463.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (190 samples, 0.33%)</title><rect x="39.1060%" y="437" width="0.3269%" height="15" fill="rgb(232,170,28)" fg:x="22728" fg:w="190"/><text x="39.3560%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (175 samples, 0.30%)</title><rect x="39.1318%" y="421" width="0.3011%" height="15" fill="rgb(238,56,10)" fg:x="22743" fg:w="175"/><text x="39.3818%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (160 samples, 0.28%)</title><rect x="39.1576%" y="405" width="0.2753%" height="15" fill="rgb(235,196,14)" fg:x="22758" fg:w="160"/><text x="39.4076%" y="415.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (155 samples, 0.27%)</title><rect x="39.1662%" y="389" width="0.2667%" height="15" fill="rgb(216,45,48)" fg:x="22763" fg:w="155"/><text x="39.4162%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (73 samples, 0.13%)</title><rect x="39.3073%" y="373" width="0.1256%" height="15" fill="rgb(238,213,17)" fg:x="22845" fg:w="73"/><text x="39.5573%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (73 samples, 0.13%)</title><rect x="39.3073%" y="357" width="0.1256%" height="15" fill="rgb(212,13,2)" fg:x="22845" fg:w="73"/><text x="39.5573%" y="367.50"></text></g><g><title>[libc.so.6] (45 samples, 0.08%)</title><rect x="39.3555%" y="341" width="0.0774%" height="15" fill="rgb(240,114,20)" fg:x="22873" fg:w="45"/><text x="39.6055%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (20 samples, 0.03%)</title><rect x="39.4329%" y="453" width="0.0344%" height="15" fill="rgb(228,41,40)" fg:x="22918" fg:w="20"/><text x="39.6829%" y="463.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (20 samples, 0.03%)</title><rect x="39.4329%" y="437" width="0.0344%" height="15" fill="rgb(244,132,35)" fg:x="22918" fg:w="20"/><text x="39.6829%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (6 samples, 0.01%)</title><rect x="39.4570%" y="421" width="0.0103%" height="15" fill="rgb(253,189,4)" fg:x="22932" fg:w="6"/><text x="39.7070%" y="431.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (58 samples, 0.10%)</title><rect x="39.4673%" y="437" width="0.0998%" height="15" fill="rgb(224,37,19)" fg:x="22938" fg:w="58"/><text x="39.7173%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.03%)</title><rect x="39.5413%" y="421" width="0.0258%" height="15" fill="rgb(235,223,18)" fg:x="22981" fg:w="15"/><text x="39.7913%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (313 samples, 0.54%)</title><rect x="39.0320%" y="469" width="0.5386%" height="15" fill="rgb(235,163,25)" fg:x="22685" fg:w="313"/><text x="39.2820%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (60 samples, 0.10%)</title><rect x="39.4673%" y="453" width="0.1032%" height="15" fill="rgb(217,145,28)" fg:x="22938" fg:w="60"/><text x="39.7173%" y="463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (209 samples, 0.36%)</title><rect x="39.5860%" y="469" width="0.3596%" height="15" fill="rgb(223,223,32)" fg:x="23007" fg:w="209"/><text x="39.8360%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (188 samples, 0.32%)</title><rect x="39.6222%" y="453" width="0.3235%" height="15" fill="rgb(227,189,39)" fg:x="23028" fg:w="188"/><text x="39.8722%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.10%)</title><rect x="39.8441%" y="437" width="0.1015%" height="15" fill="rgb(248,10,22)" fg:x="23157" fg:w="59"/><text x="40.0941%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (63 samples, 0.11%)</title><rect x="40.0712%" y="453" width="0.1084%" height="15" fill="rgb(248,46,39)" fg:x="23289" fg:w="63"/><text x="40.3212%" y="463.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (22 samples, 0.04%)</title><rect x="40.1418%" y="437" width="0.0379%" height="15" fill="rgb(248,113,48)" fg:x="23330" fg:w="22"/><text x="40.3918%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (195 samples, 0.34%)</title><rect x="40.1796%" y="453" width="0.3355%" height="15" fill="rgb(245,16,25)" fg:x="23352" fg:w="195"/><text x="40.4296%" y="463.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (20 samples, 0.03%)</title><rect x="40.4807%" y="437" width="0.0344%" height="15" fill="rgb(249,152,16)" fg:x="23527" fg:w="20"/><text x="40.7307%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (444 samples, 0.76%)</title><rect x="39.9456%" y="469" width="0.7639%" height="15" fill="rgb(250,16,1)" fg:x="23216" fg:w="444"/><text x="40.1956%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (113 samples, 0.19%)</title><rect x="40.5151%" y="453" width="0.1944%" height="15" fill="rgb(249,138,3)" fg:x="23547" fg:w="113"/><text x="40.7651%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (110 samples, 0.19%)</title><rect x="40.5203%" y="437" width="0.1893%" height="15" fill="rgb(227,71,41)" fg:x="23550" fg:w="110"/><text x="40.7703%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (6 samples, 0.01%)</title><rect x="40.6993%" y="421" width="0.0103%" height="15" fill="rgb(209,184,23)" fg:x="23654" fg:w="6"/><text x="40.9493%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (39 samples, 0.07%)</title><rect x="40.7801%" y="437" width="0.0671%" height="15" fill="rgb(223,215,31)" fg:x="23701" fg:w="39"/><text x="41.0301%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (9 samples, 0.02%)</title><rect x="40.8317%" y="421" width="0.0155%" height="15" fill="rgb(210,146,28)" fg:x="23731" fg:w="9"/><text x="41.0817%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (75 samples, 0.13%)</title><rect x="40.8472%" y="437" width="0.1290%" height="15" fill="rgb(209,183,41)" fg:x="23740" fg:w="75"/><text x="41.0972%" y="447.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.01%)</title><rect x="40.9642%" y="421" width="0.0120%" height="15" fill="rgb(209,224,45)" fg:x="23808" fg:w="7"/><text x="41.2142%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4,106 samples, 7.06%)</title><rect x="34.0233%" y="645" width="7.0648%" height="15" fill="rgb(224,209,51)" fg:x="19774" fg:w="4106"/><text x="34.2733%" y="655.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4,092 samples, 7.04%)</title><rect x="34.0474%" y="629" width="7.0407%" height="15" fill="rgb(223,17,39)" fg:x="19788" fg:w="4092"/><text x="34.2974%" y="639.50">core::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (3,445 samples, 5.93%)</title><rect x="35.1606%" y="613" width="5.9275%" height="15" fill="rgb(234,204,37)" fg:x="20435" fg:w="3445"/><text x="35.4106%" y="623.50">core::it..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (3,421 samples, 5.89%)</title><rect x="35.2019%" y="597" width="5.8862%" height="15" fill="rgb(236,120,5)" fg:x="20459" fg:w="3421"/><text x="35.4519%" y="607.50">&lt;std::c..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (3,417 samples, 5.88%)</title><rect x="35.2088%" y="581" width="5.8793%" height="15" fill="rgb(248,97,27)" fg:x="20463" fg:w="3417"/><text x="35.4588%" y="591.50">std::co..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (3,417 samples, 5.88%)</title><rect x="35.2088%" y="565" width="5.8793%" height="15" fill="rgb(240,66,17)" fg:x="20463" fg:w="3417"/><text x="35.4588%" y="575.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3,417 samples, 5.88%)</title><rect x="35.2088%" y="549" width="5.8793%" height="15" fill="rgb(210,79,3)" fg:x="20463" fg:w="3417"/><text x="35.4588%" y="559.50">hashbro..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3,389 samples, 5.83%)</title><rect x="35.2570%" y="533" width="5.8311%" height="15" fill="rgb(214,176,27)" fg:x="20491" fg:w="3389"/><text x="35.5070%" y="543.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,743 samples, 3.00%)</title><rect x="38.0891%" y="517" width="2.9990%" height="15" fill="rgb(235,185,3)" fg:x="22137" fg:w="1743"/><text x="38.3391%" y="527.50">has..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,684 samples, 2.90%)</title><rect x="38.1906%" y="501" width="2.8975%" height="15" fill="rgb(227,24,12)" fg:x="22196" fg:w="1684"/><text x="38.4406%" y="511.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1,597 samples, 2.75%)</title><rect x="38.3403%" y="485" width="2.7478%" height="15" fill="rgb(252,169,48)" fg:x="22283" fg:w="1597"/><text x="38.5903%" y="495.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (220 samples, 0.38%)</title><rect x="40.7096%" y="469" width="0.3785%" height="15" fill="rgb(212,65,1)" fg:x="23660" fg:w="220"/><text x="40.9596%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (208 samples, 0.36%)</title><rect x="40.7302%" y="453" width="0.3579%" height="15" fill="rgb(242,39,24)" fg:x="23672" fg:w="208"/><text x="40.9802%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (65 samples, 0.11%)</title><rect x="40.9763%" y="437" width="0.1118%" height="15" fill="rgb(249,32,23)" fg:x="23815" fg:w="65"/><text x="41.2263%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (60 samples, 0.10%)</title><rect x="40.9849%" y="421" width="0.1032%" height="15" fill="rgb(251,195,23)" fg:x="23820" fg:w="60"/><text x="41.2349%" y="431.50"></text></g><g><title>[libc.so.6] (40 samples, 0.07%)</title><rect x="41.0916%" y="629" width="0.0688%" height="15" fill="rgb(236,174,8)" fg:x="23882" fg:w="40"/><text x="41.3416%" y="639.50"></text></g><g><title>[libc.so.6] (39 samples, 0.07%)</title><rect x="41.1621%" y="613" width="0.0671%" height="15" fill="rgb(220,197,8)" fg:x="23923" fg:w="39"/><text x="41.4121%" y="623.50"></text></g><g><title>[libc.so.6] (40 samples, 0.07%)</title><rect x="41.2292%" y="597" width="0.0688%" height="15" fill="rgb(240,108,37)" fg:x="23962" fg:w="40"/><text x="41.4792%" y="607.50"></text></g><g><title>[libc.so.6] (28 samples, 0.05%)</title><rect x="41.2997%" y="581" width="0.0482%" height="15" fill="rgb(232,176,24)" fg:x="24003" fg:w="28"/><text x="41.5497%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (18 samples, 0.03%)</title><rect x="41.4030%" y="565" width="0.0310%" height="15" fill="rgb(243,35,29)" fg:x="24063" fg:w="18"/><text x="41.6530%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (13 samples, 0.02%)</title><rect x="41.4391%" y="549" width="0.0224%" height="15" fill="rgb(210,37,18)" fg:x="24084" fg:w="13"/><text x="41.6891%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (18 samples, 0.03%)</title><rect x="41.4701%" y="549" width="0.0310%" height="15" fill="rgb(224,184,40)" fg:x="24102" fg:w="18"/><text x="41.7201%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (7 samples, 0.01%)</title><rect x="41.7144%" y="501" width="0.0120%" height="15" fill="rgb(236,39,29)" fg:x="24244" fg:w="7"/><text x="41.9644%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (256 samples, 0.44%)</title><rect x="41.2980%" y="597" width="0.4405%" height="15" fill="rgb(232,48,39)" fg:x="24002" fg:w="256"/><text x="41.5480%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (227 samples, 0.39%)</title><rect x="41.3479%" y="581" width="0.3906%" height="15" fill="rgb(236,34,42)" fg:x="24031" fg:w="227"/><text x="41.5979%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (177 samples, 0.30%)</title><rect x="41.4340%" y="565" width="0.3045%" height="15" fill="rgb(243,106,37)" fg:x="24081" fg:w="177"/><text x="41.6840%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (138 samples, 0.24%)</title><rect x="41.5011%" y="549" width="0.2374%" height="15" fill="rgb(218,96,6)" fg:x="24120" fg:w="138"/><text x="41.7511%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (116 samples, 0.20%)</title><rect x="41.5389%" y="533" width="0.1996%" height="15" fill="rgb(235,130,12)" fg:x="24142" fg:w="116"/><text x="41.7889%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (112 samples, 0.19%)</title><rect x="41.5458%" y="517" width="0.1927%" height="15" fill="rgb(231,95,0)" fg:x="24146" fg:w="112"/><text x="41.7958%" y="527.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (7 samples, 0.01%)</title><rect x="41.7265%" y="501" width="0.0120%" height="15" fill="rgb(228,12,23)" fg:x="24251" fg:w="7"/><text x="41.9765%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (381 samples, 0.66%)</title><rect x="41.0881%" y="645" width="0.6556%" height="15" fill="rgb(216,12,1)" fg:x="23880" fg:w="381"/><text x="41.3381%" y="655.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (339 samples, 0.58%)</title><rect x="41.1604%" y="629" width="0.5833%" height="15" fill="rgb(219,59,3)" fg:x="23922" fg:w="339"/><text x="41.4104%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (299 samples, 0.51%)</title><rect x="41.2292%" y="613" width="0.5145%" height="15" fill="rgb(215,208,46)" fg:x="23962" fg:w="299"/><text x="41.4792%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (12,724 samples, 21.89%)</title><rect x="19.8524%" y="757" width="21.8930%" height="15" fill="rgb(254,224,29)" fg:x="11538" fg:w="12724"/><text x="20.1024%" y="767.50">hashbrown::map::equivalent_key::_{{..</text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12,722 samples, 21.89%)</title><rect x="19.8558%" y="741" width="21.8896%" height="15" fill="rgb(232,14,29)" fg:x="11540" fg:w="12722"/><text x="20.1058%" y="751.50">&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::eq..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12,707 samples, 21.86%)</title><rect x="19.8816%" y="725" width="21.8638%" height="15" fill="rgb(208,45,52)" fg:x="11555" fg:w="12707"/><text x="20.1316%" y="735.50">core::cmp::impls::&lt;impl core::cmp::..</text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (12,694 samples, 21.84%)</title><rect x="19.9040%" y="709" width="21.8414%" height="15" fill="rgb(234,191,28)" fg:x="11568" fg:w="12694"/><text x="20.1540%" y="719.50">core::tuple::&lt;impl core::cmp::Parti..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (12,689 samples, 21.83%)</title><rect x="19.9126%" y="693" width="21.8328%" height="15" fill="rgb(244,67,43)" fg:x="11573" fg:w="12689"/><text x="20.1626%" y="703.50">&lt;alloc::boxed::Box&lt;T,A&gt; as core::cm..</text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (12,659 samples, 21.78%)</title><rect x="19.9642%" y="677" width="21.7812%" height="15" fill="rgb(236,189,24)" fg:x="11603" fg:w="12659"/><text x="20.2142%" y="687.50">&lt;aes_grinder::algo::Algo as core::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (4,553 samples, 7.83%)</title><rect x="33.9115%" y="661" width="7.8339%" height="15" fill="rgb(239,214,33)" fg:x="19709" fg:w="4553"/><text x="34.1615%" y="671.50">&lt;std::colle..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (12 samples, 0.02%)</title><rect x="41.7454%" y="757" width="0.0206%" height="15" fill="rgb(226,176,41)" fg:x="24262" fg:w="12"/><text x="41.9954%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="41.7454%" y="741" width="0.0206%" height="15" fill="rgb(248,47,8)" fg:x="24262" fg:w="12"/><text x="41.9954%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (42 samples, 0.07%)</title><rect x="41.7660%" y="741" width="0.0723%" height="15" fill="rgb(218,81,44)" fg:x="24274" fg:w="42"/><text x="42.0160%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.03%)</title><rect x="41.8108%" y="725" width="0.0275%" height="15" fill="rgb(213,98,6)" fg:x="24300" fg:w="16"/><text x="42.0608%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.01%)</title><rect x="41.8280%" y="709" width="0.0103%" height="15" fill="rgb(222,85,22)" fg:x="24310" fg:w="6"/><text x="42.0780%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (12,802 samples, 22.03%)</title><rect x="19.8162%" y="773" width="22.0272%" height="15" fill="rgb(239,46,39)" fg:x="11517" fg:w="12802"/><text x="20.0662%" y="783.50">hashbrown::raw::RawTable&lt;T,A&gt;::find..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (45 samples, 0.08%)</title><rect x="41.7660%" y="757" width="0.0774%" height="15" fill="rgb(237,12,29)" fg:x="24274" fg:w="45"/><text x="42.0160%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (19 samples, 0.03%)</title><rect x="41.8435%" y="773" width="0.0327%" height="15" fill="rgb(214,77,8)" fg:x="24319" fg:w="19"/><text x="42.0935%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (15 samples, 0.03%)</title><rect x="41.8503%" y="757" width="0.0258%" height="15" fill="rgb(217,168,37)" fg:x="24323" fg:w="15"/><text x="42.1003%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.02%)</title><rect x="41.8521%" y="741" width="0.0241%" height="15" fill="rgb(221,217,23)" fg:x="24324" fg:w="14"/><text x="42.1021%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (22 samples, 0.04%)</title><rect x="41.8813%" y="773" width="0.0379%" height="15" fill="rgb(243,229,36)" fg:x="24341" fg:w="22"/><text x="42.1313%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.03%)</title><rect x="41.8865%" y="757" width="0.0327%" height="15" fill="rgb(251,163,40)" fg:x="24344" fg:w="19"/><text x="42.1365%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.02%)</title><rect x="41.9002%" y="741" width="0.0189%" height="15" fill="rgb(237,222,12)" fg:x="24352" fg:w="11"/><text x="42.1502%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.01%)</title><rect x="41.9347%" y="757" width="0.0103%" height="15" fill="rgb(248,132,6)" fg:x="24372" fg:w="6"/><text x="42.1847%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.02%)</title><rect x="41.9450%" y="757" width="0.0172%" height="15" fill="rgb(227,167,50)" fg:x="24378" fg:w="10"/><text x="42.1950%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (35 samples, 0.06%)</title><rect x="41.9192%" y="773" width="0.0602%" height="15" fill="rgb(242,84,37)" fg:x="24363" fg:w="35"/><text x="42.1692%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (10 samples, 0.02%)</title><rect x="41.9622%" y="757" width="0.0172%" height="15" fill="rgb(212,4,50)" fg:x="24388" fg:w="10"/><text x="42.2122%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (10 samples, 0.02%)</title><rect x="41.9622%" y="741" width="0.0172%" height="15" fill="rgb(230,228,32)" fg:x="24388" fg:w="10"/><text x="42.2122%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (9 samples, 0.02%)</title><rect x="41.9811%" y="741" width="0.0155%" height="15" fill="rgb(248,217,23)" fg:x="24399" fg:w="9"/><text x="42.2311%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (13 samples, 0.02%)</title><rect x="41.9966%" y="741" width="0.0224%" height="15" fill="rgb(238,197,32)" fg:x="24408" fg:w="13"/><text x="42.2466%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (14,573 samples, 25.07%)</title><rect x="16.9738%" y="805" width="25.0744%" height="15" fill="rgb(236,106,1)" fg:x="9865" fg:w="14573"/><text x="17.2238%" y="815.50">hashbrown::raw::RawTable&lt;T,A&gt;::find_or_f..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (13,061 samples, 22.47%)</title><rect x="19.5754%" y="789" width="22.4729%" height="15" fill="rgb(219,228,13)" fg:x="11377" fg:w="13061"/><text x="19.8254%" y="799.50">hashbrown::raw::RawTableInner&lt;A&gt;::fi..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (40 samples, 0.07%)</title><rect x="41.9794%" y="773" width="0.0688%" height="15" fill="rgb(238,30,35)" fg:x="24398" fg:w="40"/><text x="42.2294%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (40 samples, 0.07%)</title><rect x="41.9794%" y="757" width="0.0688%" height="15" fill="rgb(236,70,23)" fg:x="24398" fg:w="40"/><text x="42.2294%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (17 samples, 0.03%)</title><rect x="42.0190%" y="741" width="0.0293%" height="15" fill="rgb(249,104,48)" fg:x="24421" fg:w="17"/><text x="42.2690%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.02%)</title><rect x="42.0241%" y="725" width="0.0241%" height="15" fill="rgb(254,117,50)" fg:x="24424" fg:w="14"/><text x="42.2741%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (6 samples, 0.01%)</title><rect x="42.0499%" y="789" width="0.0103%" height="15" fill="rgb(223,152,4)" fg:x="24439" fg:w="6"/><text x="42.2999%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (15,727 samples, 27.06%)</title><rect x="15.0054%" y="885" width="27.0600%" height="15" fill="rgb(245,6,2)" fg:x="8721" fg:w="15727"/><text x="15.2554%" y="895.50">core::ops::function::impls::&lt;impl core::ops..</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (15,726 samples, 27.06%)</title><rect x="15.0071%" y="869" width="27.0583%" height="15" fill="rgb(249,150,24)" fg:x="8722" fg:w="15726"/><text x="15.2571%" y="879.50">core::iter::adapters::map::map_fold::_{{clo..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15,718 samples, 27.04%)</title><rect x="15.0209%" y="853" width="27.0445%" height="15" fill="rgb(228,185,42)" fg:x="8730" fg:w="15718"/><text x="15.2709%" y="863.50">core::iter::traits::iterator::Iterator::for..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::_{{closure}} (15,716 samples, 27.04%)</title><rect x="15.0243%" y="837" width="27.0411%" height="15" fill="rgb(226,39,33)" fg:x="8732" fg:w="15716"/><text x="15.2743%" y="847.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15,713 samples, 27.04%)</title><rect x="15.0295%" y="821" width="27.0359%" height="15" fill="rgb(221,166,19)" fg:x="8735" fg:w="15713"/><text x="15.2795%" y="831.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (10 samples, 0.02%)</title><rect x="42.0482%" y="805" width="0.0172%" height="15" fill="rgb(209,109,2)" fg:x="24438" fg:w="10"/><text x="42.2982%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (22,333 samples, 38.43%)</title><rect x="3.6408%" y="1125" width="38.4263%" height="15" fill="rgb(252,216,26)" fg:x="2116" fg:w="22333"/><text x="3.8908%" y="1135.50">&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::trait..</text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (22,333 samples, 38.43%)</title><rect x="3.6408%" y="1109" width="38.4263%" height="15" fill="rgb(227,173,36)" fg:x="2116" fg:w="22333"/><text x="3.8908%" y="1119.50">&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect:..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (22,333 samples, 38.43%)</title><rect x="3.6408%" y="1093" width="38.4263%" height="15" fill="rgb(209,90,7)" fg:x="2116" fg:w="22333"/><text x="3.8908%" y="1103.50">&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collec..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22,332 samples, 38.42%)</title><rect x="3.6425%" y="1077" width="38.4246%" height="15" fill="rgb(250,194,11)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1087.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="1061" width="38.4246%" height="15" fill="rgb(220,72,50)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1071.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::ite..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="1045" width="38.4246%" height="15" fill="rgb(222,106,48)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1055.50">&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::t..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="1029" width="38.4246%" height="15" fill="rgb(216,220,45)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1039.50">&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::ite..</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="1013" width="38.4246%" height="15" fill="rgb(234,112,18)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1023.50">core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="997" width="38.4246%" height="15" fill="rgb(206,179,9)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="1007.50">&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::ite..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="981" width="38.4246%" height="15" fill="rgb(215,115,40)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="991.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (22,332 samples, 38.42%)</title><rect x="3.6425%" y="965" width="38.4246%" height="15" fill="rgb(222,69,34)" fg:x="2117" fg:w="22332"/><text x="3.8925%" y="975.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (22,308 samples, 38.38%)</title><rect x="3.6838%" y="949" width="38.3833%" height="15" fill="rgb(209,161,10)" fg:x="2141" fg:w="22308"/><text x="3.9338%" y="959.50">core::iter::adapters::map::map_fold::_{{closure}}</text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::_{{closure}} (15,740 samples, 27.08%)</title><rect x="14.9848%" y="933" width="27.0824%" height="15" fill="rgb(217,6,38)" fg:x="8709" fg:w="15740"/><text x="15.2348%" y="943.50">core::iter::adapters::flatten::FlattenCompa..</text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::_{{closure}} (15,738 samples, 27.08%)</title><rect x="14.9882%" y="917" width="27.0789%" height="15" fill="rgb(229,229,48)" fg:x="8711" fg:w="15738"/><text x="15.2382%" y="927.50">&lt;core::iter::adapters::flatten::FlattenComp..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (15,737 samples, 27.08%)</title><rect x="14.9899%" y="901" width="27.0772%" height="15" fill="rgb(225,21,28)" fg:x="8712" fg:w="15737"/><text x="15.2399%" y="911.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.01%)</title><rect x="42.0740%" y="1061" width="0.0138%" height="15" fill="rgb(206,33,13)" fg:x="24453" fg:w="8"/><text x="42.3240%" y="1071.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (7 samples, 0.01%)</title><rect x="42.0757%" y="1045" width="0.0120%" height="15" fill="rgb(242,178,17)" fg:x="24454" fg:w="7"/><text x="42.3257%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="42.0671%" y="1125" width="0.0224%" height="15" fill="rgb(220,162,5)" fg:x="24449" fg:w="13"/><text x="42.3171%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="42.0671%" y="1109" width="0.0224%" height="15" fill="rgb(210,33,43)" fg:x="24449" fg:w="13"/><text x="42.3171%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="42.0671%" y="1093" width="0.0224%" height="15" fill="rgb(216,116,54)" fg:x="24449" fg:w="13"/><text x="42.3171%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="42.0706%" y="1077" width="0.0189%" height="15" fill="rgb(249,92,24)" fg:x="24451" fg:w="11"/><text x="42.3206%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="42.1669%" y="1013" width="0.0120%" height="15" fill="rgb(231,189,14)" fg:x="24507" fg:w="7"/><text x="42.4169%" y="1023.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="42.1669%" y="997" width="0.0120%" height="15" fill="rgb(230,8,41)" fg:x="24507" fg:w="7"/><text x="42.4169%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="42.1669%" y="981" width="0.0120%" height="15" fill="rgb(249,7,27)" fg:x="24507" fg:w="7"/><text x="42.4169%" y="991.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="42.1669%" y="965" width="0.0120%" height="15" fill="rgb(232,86,5)" fg:x="24507" fg:w="7"/><text x="42.4169%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="42.1824%" y="885" width="0.0206%" height="15" fill="rgb(224,175,18)" fg:x="24516" fg:w="12"/><text x="42.4324%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="42.1824%" y="869" width="0.0206%" height="15" fill="rgb(220,129,12)" fg:x="24516" fg:w="12"/><text x="42.4324%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.02%)</title><rect x="42.1824%" y="853" width="0.0206%" height="15" fill="rgb(210,19,36)" fg:x="24516" fg:w="12"/><text x="42.4324%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (8 samples, 0.01%)</title><rect x="42.1893%" y="837" width="0.0138%" height="15" fill="rgb(219,96,14)" fg:x="24520" fg:w="8"/><text x="42.4393%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.01%)</title><rect x="42.2031%" y="885" width="0.0103%" height="15" fill="rgb(249,106,1)" fg:x="24528" fg:w="6"/><text x="42.4531%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="42.2134%" y="789" width="0.0120%" height="15" fill="rgb(249,155,20)" fg:x="24534" fg:w="7"/><text x="42.4634%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.04%)</title><rect x="42.1824%" y="917" width="0.0447%" height="15" fill="rgb(244,168,9)" fg:x="24516" fg:w="26"/><text x="42.4324%" y="927.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.04%)</title><rect x="42.1824%" y="901" width="0.0447%" height="15" fill="rgb(216,23,50)" fg:x="24516" fg:w="26"/><text x="42.4324%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.01%)</title><rect x="42.2134%" y="885" width="0.0138%" height="15" fill="rgb(224,219,20)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="42.2134%" y="869" width="0.0138%" height="15" fill="rgb(222,156,15)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.01%)</title><rect x="42.2134%" y="853" width="0.0138%" height="15" fill="rgb(231,97,17)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="42.2134%" y="837" width="0.0138%" height="15" fill="rgb(218,70,48)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="847.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="42.2134%" y="821" width="0.0138%" height="15" fill="rgb(212,196,52)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.01%)</title><rect x="42.2134%" y="805" width="0.0138%" height="15" fill="rgb(243,203,18)" fg:x="24534" fg:w="8"/><text x="42.4634%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (7 samples, 0.01%)</title><rect x="42.2426%" y="773" width="0.0120%" height="15" fill="rgb(252,125,41)" fg:x="24551" fg:w="7"/><text x="42.4926%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="42.2426%" y="757" width="0.0120%" height="15" fill="rgb(223,180,33)" fg:x="24551" fg:w="7"/><text x="42.4926%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.01%)</title><rect x="42.2426%" y="741" width="0.0120%" height="15" fill="rgb(254,159,46)" fg:x="24551" fg:w="7"/><text x="42.4926%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.01%)</title><rect x="42.2426%" y="725" width="0.0120%" height="15" fill="rgb(254,38,10)" fg:x="24551" fg:w="7"/><text x="42.4926%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (17 samples, 0.03%)</title><rect x="42.2409%" y="869" width="0.0293%" height="15" fill="rgb(208,217,32)" fg:x="24550" fg:w="17"/><text x="42.4909%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (16 samples, 0.03%)</title><rect x="42.2426%" y="853" width="0.0275%" height="15" fill="rgb(221,120,13)" fg:x="24551" fg:w="16"/><text x="42.4926%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (16 samples, 0.03%)</title><rect x="42.2426%" y="837" width="0.0275%" height="15" fill="rgb(246,54,52)" fg:x="24551" fg:w="16"/><text x="42.4926%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (16 samples, 0.03%)</title><rect x="42.2426%" y="821" width="0.0275%" height="15" fill="rgb(242,34,25)" fg:x="24551" fg:w="16"/><text x="42.4926%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (16 samples, 0.03%)</title><rect x="42.2426%" y="805" width="0.0275%" height="15" fill="rgb(247,209,9)" fg:x="24551" fg:w="16"/><text x="42.4926%" y="815.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (16 samples, 0.03%)</title><rect x="42.2426%" y="789" width="0.0275%" height="15" fill="rgb(228,71,26)" fg:x="24551" fg:w="16"/><text x="42.4926%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.02%)</title><rect x="42.2547%" y="773" width="0.0155%" height="15" fill="rgb(222,145,49)" fg:x="24558" fg:w="9"/><text x="42.5047%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.02%)</title><rect x="42.2547%" y="757" width="0.0155%" height="15" fill="rgb(218,121,17)" fg:x="24558" fg:w="9"/><text x="42.5047%" y="767.50"></text></g><g><title>[libc.so.6] (9 samples, 0.02%)</title><rect x="42.2547%" y="741" width="0.0155%" height="15" fill="rgb(244,50,7)" fg:x="24558" fg:w="9"/><text x="42.5047%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (14 samples, 0.02%)</title><rect x="42.2719%" y="869" width="0.0241%" height="15" fill="rgb(246,229,37)" fg:x="24568" fg:w="14"/><text x="42.5219%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (14 samples, 0.02%)</title><rect x="42.2719%" y="853" width="0.0241%" height="15" fill="rgb(225,18,5)" fg:x="24568" fg:w="14"/><text x="42.5219%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.02%)</title><rect x="42.2736%" y="837" width="0.0224%" height="15" fill="rgb(213,204,8)" fg:x="24569" fg:w="13"/><text x="42.5236%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (8 samples, 0.01%)</title><rect x="42.2960%" y="853" width="0.0138%" height="15" fill="rgb(238,103,6)" fg:x="24582" fg:w="8"/><text x="42.5460%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (9 samples, 0.02%)</title><rect x="42.2960%" y="869" width="0.0155%" height="15" fill="rgb(222,25,35)" fg:x="24582" fg:w="9"/><text x="42.5460%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (89 samples, 0.15%)</title><rect x="42.1635%" y="1045" width="0.1531%" height="15" fill="rgb(213,203,35)" fg:x="24505" fg:w="89"/><text x="42.4135%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89 samples, 0.15%)</title><rect x="42.1635%" y="1029" width="0.1531%" height="15" fill="rgb(221,79,53)" fg:x="24505" fg:w="89"/><text x="42.4135%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (80 samples, 0.14%)</title><rect x="42.1790%" y="1013" width="0.1376%" height="15" fill="rgb(243,200,35)" fg:x="24514" fg:w="80"/><text x="42.4290%" y="1023.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset::_{{closure}} (79 samples, 0.14%)</title><rect x="42.1807%" y="997" width="0.1359%" height="15" fill="rgb(248,60,25)" fg:x="24515" fg:w="79"/><text x="42.4307%" y="1007.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (79 samples, 0.14%)</title><rect x="42.1807%" y="981" width="0.1359%" height="15" fill="rgb(227,53,46)" fg:x="24515" fg:w="79"/><text x="42.4307%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (79 samples, 0.14%)</title><rect x="42.1807%" y="965" width="0.1359%" height="15" fill="rgb(216,120,32)" fg:x="24515" fg:w="79"/><text x="42.4307%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (79 samples, 0.14%)</title><rect x="42.1807%" y="949" width="0.1359%" height="15" fill="rgb(220,134,1)" fg:x="24515" fg:w="79"/><text x="42.4307%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (79 samples, 0.14%)</title><rect x="42.1807%" y="933" width="0.1359%" height="15" fill="rgb(237,168,5)" fg:x="24515" fg:w="79"/><text x="42.4307%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (52 samples, 0.09%)</title><rect x="42.2272%" y="917" width="0.0895%" height="15" fill="rgb(231,100,33)" fg:x="24542" fg:w="52"/><text x="42.4772%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (52 samples, 0.09%)</title><rect x="42.2272%" y="901" width="0.0895%" height="15" fill="rgb(236,177,47)" fg:x="24542" fg:w="52"/><text x="42.4772%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (49 samples, 0.08%)</title><rect x="42.2323%" y="885" width="0.0843%" height="15" fill="rgb(235,7,49)" fg:x="24545" fg:w="49"/><text x="42.4823%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (135 samples, 0.23%)</title><rect x="42.0895%" y="1125" width="0.2323%" height="15" fill="rgb(232,119,22)" fg:x="24462" fg:w="135"/><text x="42.3395%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialOrd&gt;::ge (135 samples, 0.23%)</title><rect x="42.0895%" y="1109" width="0.2323%" height="15" fill="rgb(254,73,53)" fg:x="24462" fg:w="135"/><text x="42.3395%" y="1119.50"></text></g><g><title>core::cmp::PartialOrd::ge (135 samples, 0.23%)</title><rect x="42.0895%" y="1093" width="0.2323%" height="15" fill="rgb(251,35,20)" fg:x="24462" fg:w="135"/><text x="42.3395%" y="1103.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialOrd&gt;::partial_cmp (135 samples, 0.23%)</title><rect x="42.0895%" y="1077" width="0.2323%" height="15" fill="rgb(241,119,20)" fg:x="24462" fg:w="135"/><text x="42.3395%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::is_subset (134 samples, 0.23%)</title><rect x="42.0912%" y="1061" width="0.2306%" height="15" fill="rgb(207,102,14)" fg:x="24463" fg:w="134"/><text x="42.3412%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="42.3218%" y="1045" width="0.0120%" height="15" fill="rgb(248,201,50)" fg:x="24597" fg:w="7"/><text x="42.5718%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (7 samples, 0.01%)</title><rect x="42.3218%" y="1029" width="0.0120%" height="15" fill="rgb(222,185,44)" fg:x="24597" fg:w="7"/><text x="42.5718%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (7 samples, 0.01%)</title><rect x="42.3218%" y="1013" width="0.0120%" height="15" fill="rgb(218,107,18)" fg:x="24597" fg:w="7"/><text x="42.5718%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (8 samples, 0.01%)</title><rect x="42.3218%" y="1125" width="0.0138%" height="15" fill="rgb(237,177,39)" fg:x="24597" fg:w="8"/><text x="42.5718%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (8 samples, 0.01%)</title><rect x="42.3218%" y="1109" width="0.0138%" height="15" fill="rgb(246,69,6)" fg:x="24597" fg:w="8"/><text x="42.5718%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (8 samples, 0.01%)</title><rect x="42.3218%" y="1093" width="0.0138%" height="15" fill="rgb(234,208,37)" fg:x="24597" fg:w="8"/><text x="42.5718%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (8 samples, 0.01%)</title><rect x="42.3218%" y="1077" width="0.0138%" height="15" fill="rgb(225,4,6)" fg:x="24597" fg:w="8"/><text x="42.5718%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (8 samples, 0.01%)</title><rect x="42.3218%" y="1061" width="0.0138%" height="15" fill="rgb(233,45,0)" fg:x="24597" fg:w="8"/><text x="42.5718%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (10 samples, 0.02%)</title><rect x="42.3356%" y="1125" width="0.0172%" height="15" fill="rgb(226,136,5)" fg:x="24605" fg:w="10"/><text x="42.5856%" y="1135.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="42.3356%" y="1109" width="0.0172%" height="15" fill="rgb(211,91,47)" fg:x="24605" fg:w="10"/><text x="42.5856%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.02%)</title><rect x="42.3356%" y="1093" width="0.0172%" height="15" fill="rgb(242,88,51)" fg:x="24605" fg:w="10"/><text x="42.5856%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.01%)</title><rect x="42.3407%" y="1077" width="0.0120%" height="15" fill="rgb(230,91,28)" fg:x="24608" fg:w="7"/><text x="42.5907%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (16 samples, 0.03%)</title><rect x="43.5623%" y="1045" width="0.0275%" height="15" fill="rgb(254,186,29)" fg:x="25318" fg:w="16"/><text x="43.8123%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (66 samples, 0.11%)</title><rect x="43.7929%" y="1029" width="0.1136%" height="15" fill="rgb(238,6,4)" fg:x="25452" fg:w="66"/><text x="44.0429%" y="1039.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (45 samples, 0.08%)</title><rect x="44.0183%" y="1013" width="0.0774%" height="15" fill="rgb(221,151,16)" fg:x="25583" fg:w="45"/><text x="44.2683%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (154 samples, 0.26%)</title><rect x="43.9065%" y="1029" width="0.2650%" height="15" fill="rgb(251,143,52)" fg:x="25518" fg:w="154"/><text x="44.1565%" y="1039.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (44 samples, 0.08%)</title><rect x="44.0957%" y="1013" width="0.0757%" height="15" fill="rgb(206,90,15)" fg:x="25628" fg:w="44"/><text x="44.3457%" y="1023.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (13 samples, 0.02%)</title><rect x="44.1491%" y="997" width="0.0224%" height="15" fill="rgb(218,35,8)" fg:x="25659" fg:w="13"/><text x="44.3991%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (339 samples, 0.58%)</title><rect x="43.5899%" y="1045" width="0.5833%" height="15" fill="rgb(239,215,6)" fg:x="25334" fg:w="339"/><text x="43.8399%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (96 samples, 0.17%)</title><rect x="44.5620%" y="1029" width="0.1652%" height="15" fill="rgb(245,116,39)" fg:x="25899" fg:w="96"/><text x="44.8120%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.03%)</title><rect x="44.6945%" y="1013" width="0.0327%" height="15" fill="rgb(242,65,28)" fg:x="25976" fg:w="19"/><text x="44.9445%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (324 samples, 0.56%)</title><rect x="44.1766%" y="1045" width="0.5575%" height="15" fill="rgb(252,132,53)" fg:x="25675" fg:w="324"/><text x="44.4266%" y="1055.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (47 samples, 0.08%)</title><rect x="44.7341%" y="1045" width="0.0809%" height="15" fill="rgb(224,159,50)" fg:x="25999" fg:w="47"/><text x="44.9841%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (37 samples, 0.06%)</title><rect x="44.7513%" y="1029" width="0.0637%" height="15" fill="rgb(224,93,4)" fg:x="26009" fg:w="37"/><text x="45.0013%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,096 samples, 1.89%)</title><rect x="43.0634%" y="1077" width="1.8858%" height="15" fill="rgb(208,81,34)" fg:x="25028" fg:w="1096"/><text x="43.3134%" y="1087.50">&lt;..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (998 samples, 1.72%)</title><rect x="43.2320%" y="1061" width="1.7172%" height="15" fill="rgb(233,92,54)" fg:x="25126" fg:w="998"/><text x="43.4820%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (78 samples, 0.13%)</title><rect x="44.8149%" y="1045" width="0.1342%" height="15" fill="rgb(237,21,14)" fg:x="26046" fg:w="78"/><text x="45.0649%" y="1055.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (68 samples, 0.12%)</title><rect x="44.8322%" y="1029" width="0.1170%" height="15" fill="rgb(249,128,51)" fg:x="26056" fg:w="68"/><text x="45.0822%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (66 samples, 0.11%)</title><rect x="44.8356%" y="1013" width="0.1136%" height="15" fill="rgb(223,129,24)" fg:x="26058" fg:w="66"/><text x="45.0856%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (58 samples, 0.10%)</title><rect x="44.9492%" y="1077" width="0.0998%" height="15" fill="rgb(231,168,25)" fg:x="26124" fg:w="58"/><text x="45.1992%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (58 samples, 0.10%)</title><rect x="44.9492%" y="1061" width="0.0998%" height="15" fill="rgb(224,39,20)" fg:x="26124" fg:w="58"/><text x="45.1992%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (19 samples, 0.03%)</title><rect x="45.0163%" y="1045" width="0.0327%" height="15" fill="rgb(225,152,53)" fg:x="26163" fg:w="19"/><text x="45.2663%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (8 samples, 0.01%)</title><rect x="45.0352%" y="1029" width="0.0138%" height="15" fill="rgb(252,17,24)" fg:x="26174" fg:w="8"/><text x="45.2852%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="965" width="0.0103%" height="15" fill="rgb(250,114,30)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="949" width="0.0103%" height="15" fill="rgb(229,5,4)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="933" width="0.0103%" height="15" fill="rgb(225,176,49)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="917" width="0.0103%" height="15" fill="rgb(224,221,49)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="901" width="0.0103%" height="15" fill="rgb(253,169,27)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (6 samples, 0.01%)</title><rect x="45.0490%" y="885" width="0.0103%" height="15" fill="rgb(211,206,16)" fg:x="26182" fg:w="6"/><text x="45.2990%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase (7 samples, 0.01%)</title><rect x="45.0490%" y="1077" width="0.0120%" height="15" fill="rgb(244,87,35)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.01%)</title><rect x="45.0490%" y="1061" width="0.0120%" height="15" fill="rgb(246,28,10)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.01%)</title><rect x="45.0490%" y="1045" width="0.0120%" height="15" fill="rgb(229,12,44)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;((alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;),())&gt; (7 samples, 0.01%)</title><rect x="45.0490%" y="1029" width="0.0120%" height="15" fill="rgb(210,145,37)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;)&gt; (7 samples, 0.01%)</title><rect x="45.0490%" y="1013" width="0.0120%" height="15" fill="rgb(227,112,52)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (7 samples, 0.01%)</title><rect x="45.0490%" y="997" width="0.0120%" height="15" fill="rgb(238,155,34)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (7 samples, 0.01%)</title><rect x="45.0490%" y="981" width="0.0120%" height="15" fill="rgb(239,226,36)" fg:x="26182" fg:w="7"/><text x="45.2990%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,394 samples, 2.40%)</title><rect x="45.7733%" y="1045" width="2.3985%" height="15" fill="rgb(230,16,23)" fg:x="26603" fg:w="1394"/><text x="46.0233%" y="1055.50">&lt;c..</text></g><g><title>&lt;core::cmp::Ordering as core::option::SpecOptionPartialEq&gt;::eq (1,341 samples, 2.31%)</title><rect x="45.8645%" y="1029" width="2.3073%" height="15" fill="rgb(236,171,36)" fg:x="26656" fg:w="1341"/><text x="46.1145%" y="1039.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::map_or (1,142 samples, 1.96%)</title><rect x="46.2069%" y="1013" width="1.9649%" height="15" fill="rgb(221,22,14)" fg:x="26855" fg:w="1142"/><text x="46.4569%" y="1023.50">c..</text></g><g><title>&lt;core::cmp::Ordering as core::option::SpecOptionPartialEq&gt;::eq::_{{closure}} (171 samples, 0.29%)</title><rect x="47.8776%" y="997" width="0.2942%" height="15" fill="rgb(242,43,11)" fg:x="27826" fg:w="171"/><text x="48.1276%" y="1007.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 0.04%)</title><rect x="62.5131%" y="997" width="0.0361%" height="15" fill="rgb(232,69,23)" fg:x="36332" fg:w="21"/><text x="62.7631%" y="1007.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (58 samples, 0.10%)</title><rect x="62.9725%" y="981" width="0.0998%" height="15" fill="rgb(216,180,54)" fg:x="36599" fg:w="58"/><text x="63.2225%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (18 samples, 0.03%)</title><rect x="64.2991%" y="869" width="0.0310%" height="15" fill="rgb(216,5,24)" fg:x="37370" fg:w="18"/><text x="64.5491%" y="879.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (35 samples, 0.06%)</title><rect x="64.3593%" y="853" width="0.0602%" height="15" fill="rgb(225,89,9)" fg:x="37405" fg:w="35"/><text x="64.6093%" y="863.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (67 samples, 0.12%)</title><rect x="64.3301%" y="869" width="0.1153%" height="15" fill="rgb(243,75,33)" fg:x="37388" fg:w="67"/><text x="64.5801%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (15 samples, 0.03%)</title><rect x="64.4196%" y="853" width="0.0258%" height="15" fill="rgb(247,141,45)" fg:x="37440" fg:w="15"/><text x="64.6696%" y="863.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (8 samples, 0.01%)</title><rect x="64.4316%" y="837" width="0.0138%" height="15" fill="rgb(232,177,36)" fg:x="37447" fg:w="8"/><text x="64.6816%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (286 samples, 0.49%)</title><rect x="63.9739%" y="885" width="0.4921%" height="15" fill="rgb(219,125,36)" fg:x="37181" fg:w="286"/><text x="64.2239%" y="895.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (12 samples, 0.02%)</title><rect x="64.4454%" y="869" width="0.0206%" height="15" fill="rgb(227,94,9)" fg:x="37455" fg:w="12"/><text x="64.6954%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (40 samples, 0.07%)</title><rect x="64.8187%" y="869" width="0.0688%" height="15" fill="rgb(240,34,52)" fg:x="37672" fg:w="40"/><text x="65.0687%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.03%)</title><rect x="64.8583%" y="853" width="0.0293%" height="15" fill="rgb(216,45,12)" fg:x="37695" fg:w="17"/><text x="65.1083%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (246 samples, 0.42%)</title><rect x="64.4660%" y="885" width="0.4233%" height="15" fill="rgb(246,21,19)" fg:x="37467" fg:w="246"/><text x="64.7160%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (753 samples, 1.30%)</title><rect x="63.6074%" y="917" width="1.2956%" height="15" fill="rgb(213,98,42)" fg:x="36968" fg:w="753"/><text x="63.8574%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (661 samples, 1.14%)</title><rect x="63.7657%" y="901" width="1.1373%" height="15" fill="rgb(250,136,47)" fg:x="37060" fg:w="661"/><text x="64.0157%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.01%)</title><rect x="64.8893%" y="885" width="0.0138%" height="15" fill="rgb(251,124,27)" fg:x="37713" fg:w="8"/><text x="65.1393%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,173 samples, 2.02%)</title><rect x="63.0723%" y="981" width="2.0183%" height="15" fill="rgb(229,180,14)" fg:x="36657" fg:w="1173"/><text x="63.3223%" y="991.50">&lt;..</text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,173 samples, 2.02%)</title><rect x="63.0723%" y="965" width="2.0183%" height="15" fill="rgb(245,216,25)" fg:x="36657" fg:w="1173"/><text x="63.3223%" y="975.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,173 samples, 2.02%)</title><rect x="63.0723%" y="949" width="2.0183%" height="15" fill="rgb(251,43,5)" fg:x="36657" fg:w="1173"/><text x="63.3223%" y="959.50">&lt;..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,081 samples, 1.86%)</title><rect x="63.2306%" y="933" width="1.8600%" height="15" fill="rgb(250,128,24)" fg:x="36749" fg:w="1081"/><text x="63.4806%" y="943.50">&lt;..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (109 samples, 0.19%)</title><rect x="64.9030%" y="917" width="0.1875%" height="15" fill="rgb(217,117,27)" fg:x="37721" fg:w="109"/><text x="65.1530%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (57 samples, 0.10%)</title><rect x="64.9925%" y="901" width="0.0981%" height="15" fill="rgb(245,147,4)" fg:x="37773" fg:w="57"/><text x="65.2425%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (15 samples, 0.03%)</title><rect x="65.0648%" y="885" width="0.0258%" height="15" fill="rgb(242,201,35)" fg:x="37815" fg:w="15"/><text x="65.3148%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (26 samples, 0.04%)</title><rect x="65.2609%" y="901" width="0.0447%" height="15" fill="rgb(218,181,1)" fg:x="37929" fg:w="26"/><text x="65.5109%" y="911.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.05%)</title><rect x="66.3948%" y="789" width="0.0516%" height="15" fill="rgb(222,6,29)" fg:x="38588" fg:w="30"/><text x="66.6448%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (389 samples, 0.67%)</title><rect x="65.7960%" y="805" width="0.6693%" height="15" fill="rgb(208,186,3)" fg:x="38240" fg:w="389"/><text x="66.0460%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.02%)</title><rect x="66.4464%" y="789" width="0.0189%" height="15" fill="rgb(216,36,26)" fg:x="38618" fg:w="11"/><text x="66.6964%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (89 samples, 0.15%)</title><rect x="68.4320%" y="789" width="0.1531%" height="15" fill="rgb(248,201,23)" fg:x="39772" fg:w="89"/><text x="68.6820%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1,785 samples, 3.07%)</title><rect x="65.5190%" y="853" width="3.0713%" height="15" fill="rgb(251,170,31)" fg:x="38079" fg:w="1785"/><text x="65.7690%" y="863.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1,778 samples, 3.06%)</title><rect x="65.5311%" y="837" width="3.0592%" height="15" fill="rgb(207,110,25)" fg:x="38086" fg:w="1778"/><text x="65.7811%" y="847.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1,778 samples, 3.06%)</title><rect x="65.5311%" y="821" width="3.0592%" height="15" fill="rgb(250,54,15)" fg:x="38086" fg:w="1778"/><text x="65.7811%" y="831.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1,235 samples, 2.12%)</title><rect x="66.4654%" y="805" width="2.1250%" height="15" fill="rgb(227,68,33)" fg:x="38629" fg:w="1235"/><text x="66.7154%" y="815.50">&lt;..</text></g><g><title>[libc.so.6] (442 samples, 0.76%)</title><rect x="68.6385%" y="837" width="0.7605%" height="15" fill="rgb(238,34,41)" fg:x="39892" fg:w="442"/><text x="68.8885%" y="847.50"></text></g><g><title>[libc.so.6] (234 samples, 0.40%)</title><rect x="69.4007%" y="821" width="0.4026%" height="15" fill="rgb(220,11,15)" fg:x="40335" fg:w="234"/><text x="69.6507%" y="831.50"></text></g><g><title>[libc.so.6] (334 samples, 0.57%)</title><rect x="69.8550%" y="805" width="0.5747%" height="15" fill="rgb(246,111,35)" fg:x="40599" fg:w="334"/><text x="70.1050%" y="815.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (375 samples, 0.65%)</title><rect x="69.8033%" y="821" width="0.6452%" height="15" fill="rgb(209,88,53)" fg:x="40569" fg:w="375"/><text x="70.0533%" y="831.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (11 samples, 0.02%)</title><rect x="70.4296%" y="805" width="0.0189%" height="15" fill="rgb(231,185,47)" fg:x="40933" fg:w="11"/><text x="70.6796%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,085 samples, 1.87%)</title><rect x="68.5903%" y="853" width="1.8669%" height="15" fill="rgb(233,154,1)" fg:x="39864" fg:w="1085"/><text x="68.8403%" y="863.50">&lt;..</text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (615 samples, 1.06%)</title><rect x="69.3990%" y="837" width="1.0582%" height="15" fill="rgb(225,15,46)" fg:x="40334" fg:w="615"/><text x="69.6490%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (920 samples, 1.58%)</title><rect x="70.4916%" y="789" width="1.5830%" height="15" fill="rgb(211,135,41)" fg:x="40969" fg:w="920"/><text x="70.7416%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (920 samples, 1.58%)</title><rect x="70.4916%" y="773" width="1.5830%" height="15" fill="rgb(208,54,0)" fg:x="40969" fg:w="920"/><text x="70.7416%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (950 samples, 1.63%)</title><rect x="70.4864%" y="805" width="1.6346%" height="15" fill="rgb(244,136,14)" fg:x="40966" fg:w="950"/><text x="70.7364%" y="815.50"></text></g><g><title>core::slice::raw::from_raw_parts (27 samples, 0.05%)</title><rect x="72.0745%" y="789" width="0.0465%" height="15" fill="rgb(241,56,14)" fg:x="41889" fg:w="27"/><text x="72.3245%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts (27 samples, 0.05%)</title><rect x="72.0745%" y="773" width="0.0465%" height="15" fill="rgb(205,80,24)" fg:x="41889" fg:w="27"/><text x="72.3245%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (25 samples, 0.04%)</title><rect x="72.0780%" y="757" width="0.0430%" height="15" fill="rgb(220,57,4)" fg:x="41891" fg:w="25"/><text x="72.3280%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (958 samples, 1.65%)</title><rect x="70.4864%" y="821" width="1.6483%" height="15" fill="rgb(226,193,50)" fg:x="40966" fg:w="958"/><text x="70.7364%" y="831.50"></text></g><g><title>core::str::converts::from_utf8_unchecked (8 samples, 0.01%)</title><rect x="72.1210%" y="805" width="0.0138%" height="15" fill="rgb(231,168,22)" fg:x="41916" fg:w="8"/><text x="72.3710%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (27 samples, 0.05%)</title><rect x="73.2445%" y="725" width="0.0465%" height="15" fill="rgb(254,215,14)" fg:x="42569" fg:w="27"/><text x="73.4945%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (381 samples, 0.66%)</title><rect x="72.6406%" y="741" width="0.6556%" height="15" fill="rgb(211,115,16)" fg:x="42218" fg:w="381"/><text x="72.8906%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 0.03%)</title><rect x="73.2962%" y="741" width="0.0275%" height="15" fill="rgb(236,210,16)" fg:x="42599" fg:w="16"/><text x="73.5462%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,068 samples, 3.56%)</title><rect x="73.3237%" y="741" width="3.5582%" height="15" fill="rgb(221,94,12)" fg:x="42615" fg:w="2068"/><text x="73.5737%" y="751.50">core..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2,760 samples, 4.75%)</title><rect x="72.1365%" y="757" width="4.7489%" height="15" fill="rgb(235,218,49)" fg:x="41925" fg:w="2760"/><text x="72.3865%" y="767.50">&lt;core:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.06%)</title><rect x="77.3912%" y="709" width="0.0568%" height="15" fill="rgb(217,114,14)" fg:x="44979" fg:w="33"/><text x="77.6412%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (7,002 samples, 12.05%)</title><rect x="65.4192%" y="885" width="12.0477%" height="15" fill="rgb(216,145,22)" fg:x="38021" fg:w="7002"/><text x="65.6692%" y="895.50">hashbrown::map::ma..</text></g><g><title>core::hash::BuildHasher::hash_one (7,002 samples, 12.05%)</title><rect x="65.4192%" y="869" width="12.0477%" height="15" fill="rgb(217,112,39)" fg:x="38021" fg:w="7002"/><text x="65.6692%" y="879.50">core::hash::BuildH..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4,074 samples, 7.01%)</title><rect x="70.4572%" y="853" width="7.0098%" height="15" fill="rgb(225,85,32)" fg:x="40949" fg:w="4074"/><text x="70.7072%" y="863.50">core::has..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4,068 samples, 7.00%)</title><rect x="70.4675%" y="837" width="6.9994%" height="15" fill="rgb(245,209,47)" fg:x="40955" fg:w="4068"/><text x="70.7175%" y="847.50">&lt;alloc::s..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3,099 samples, 5.33%)</title><rect x="72.1348%" y="821" width="5.3322%" height="15" fill="rgb(218,220,15)" fg:x="41924" fg:w="3099"/><text x="72.3848%" y="831.50">core::h..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3,099 samples, 5.33%)</title><rect x="72.1348%" y="805" width="5.3322%" height="15" fill="rgb(222,202,31)" fg:x="41924" fg:w="3099"/><text x="72.3848%" y="815.50">&lt;std::c..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3,098 samples, 5.33%)</title><rect x="72.1365%" y="789" width="5.3304%" height="15" fill="rgb(243,203,4)" fg:x="41925" fg:w="3098"/><text x="72.3865%" y="799.50">&lt;core::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3,098 samples, 5.33%)</title><rect x="72.1365%" y="773" width="5.3304%" height="15" fill="rgb(237,92,17)" fg:x="41925" fg:w="3098"/><text x="72.3865%" y="783.50">&lt;core::..</text></g><g><title>core::hash::Hasher::write_u8 (338 samples, 0.58%)</title><rect x="76.8854%" y="757" width="0.5816%" height="15" fill="rgb(231,119,7)" fg:x="44685" fg:w="338"/><text x="77.1354%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (324 samples, 0.56%)</title><rect x="76.9094%" y="741" width="0.5575%" height="15" fill="rgb(237,82,41)" fg:x="44699" fg:w="324"/><text x="77.1594%" y="751.50"></text></g><g><title>core::hash::sip::u8to64_le (195 samples, 0.34%)</title><rect x="77.1314%" y="725" width="0.3355%" height="15" fill="rgb(226,81,48)" fg:x="44828" fg:w="195"/><text x="77.3814%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="77.4480%" y="709" width="0.0189%" height="15" fill="rgb(234,70,51)" fg:x="45012" fg:w="11"/><text x="77.6980%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="77.4480%" y="693" width="0.0189%" height="15" fill="rgb(251,86,4)" fg:x="45012" fg:w="11"/><text x="77.6980%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (11 samples, 0.02%)</title><rect x="77.4480%" y="677" width="0.0189%" height="15" fill="rgb(244,144,28)" fg:x="45012" fg:w="11"/><text x="77.6980%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (34 samples, 0.06%)</title><rect x="77.5788%" y="869" width="0.0585%" height="15" fill="rgb(232,161,39)" fg:x="45088" fg:w="34"/><text x="77.8288%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (34 samples, 0.06%)</title><rect x="77.5788%" y="853" width="0.0585%" height="15" fill="rgb(247,34,51)" fg:x="45088" fg:w="34"/><text x="77.8288%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (14 samples, 0.02%)</title><rect x="77.6132%" y="837" width="0.0241%" height="15" fill="rgb(225,132,2)" fg:x="45108" fg:w="14"/><text x="77.8632%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.02%)</title><rect x="77.6201%" y="821" width="0.0172%" height="15" fill="rgb(209,159,44)" fg:x="45112" fg:w="10"/><text x="77.8701%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.02%)</title><rect x="77.8455%" y="821" width="0.0224%" height="15" fill="rgb(251,214,1)" fg:x="45243" fg:w="13"/><text x="78.0955%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (83 samples, 0.14%)</title><rect x="77.7319%" y="853" width="0.1428%" height="15" fill="rgb(247,84,47)" fg:x="45177" fg:w="83"/><text x="77.9819%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (76 samples, 0.13%)</title><rect x="77.7439%" y="837" width="0.1308%" height="15" fill="rgb(240,111,43)" fg:x="45184" fg:w="76"/><text x="77.9939%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (51 samples, 0.09%)</title><rect x="78.6283%" y="837" width="0.0878%" height="15" fill="rgb(215,214,35)" fg:x="45698" fg:w="51"/><text x="78.8783%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.05%)</title><rect x="78.9105%" y="821" width="0.0533%" height="15" fill="rgb(248,207,23)" fg:x="45862" fg:w="31"/><text x="79.1605%" y="831.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (104 samples, 0.18%)</title><rect x="79.0499%" y="805" width="0.1789%" height="15" fill="rgb(214,186,4)" fg:x="45943" fg:w="104"/><text x="79.2999%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (331 samples, 0.57%)</title><rect x="78.7161%" y="837" width="0.5695%" height="15" fill="rgb(220,133,22)" fg:x="45749" fg:w="331"/><text x="78.9661%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (187 samples, 0.32%)</title><rect x="78.9639%" y="821" width="0.3218%" height="15" fill="rgb(239,134,19)" fg:x="45893" fg:w="187"/><text x="79.2139%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (33 samples, 0.06%)</title><rect x="79.2288%" y="805" width="0.0568%" height="15" fill="rgb(250,140,9)" fg:x="46047" fg:w="33"/><text x="79.4788%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.01%)</title><rect x="79.5781%" y="709" width="0.0120%" height="15" fill="rgb(225,59,14)" fg:x="46250" fg:w="7"/><text x="79.8281%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.01%)</title><rect x="79.5781%" y="693" width="0.0120%" height="15" fill="rgb(214,152,51)" fg:x="46250" fg:w="7"/><text x="79.8281%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (64 samples, 0.11%)</title><rect x="79.5729%" y="725" width="0.1101%" height="15" fill="rgb(251,227,43)" fg:x="46247" fg:w="64"/><text x="79.8229%" y="735.50"></text></g><g><title>core::slice::raw::from_raw_parts (54 samples, 0.09%)</title><rect x="79.5902%" y="709" width="0.0929%" height="15" fill="rgb(241,96,17)" fg:x="46257" fg:w="54"/><text x="79.8402%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts (54 samples, 0.09%)</title><rect x="79.5902%" y="693" width="0.0929%" height="15" fill="rgb(234,198,43)" fg:x="46257" fg:w="54"/><text x="79.8402%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (53 samples, 0.09%)</title><rect x="79.5919%" y="677" width="0.0912%" height="15" fill="rgb(220,108,29)" fg:x="46258" fg:w="53"/><text x="79.8419%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (122 samples, 0.21%)</title><rect x="79.4904%" y="741" width="0.2099%" height="15" fill="rgb(226,163,33)" fg:x="46199" fg:w="122"/><text x="79.7404%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.02%)</title><rect x="79.6831%" y="725" width="0.0172%" height="15" fill="rgb(205,194,45)" fg:x="46311" fg:w="10"/><text x="79.9331%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.02%)</title><rect x="79.6831%" y="709" width="0.0172%" height="15" fill="rgb(206,143,44)" fg:x="46311" fg:w="10"/><text x="79.9331%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (449 samples, 0.77%)</title><rect x="79.3648%" y="821" width="0.7726%" height="15" fill="rgb(236,136,36)" fg:x="46126" fg:w="449"/><text x="79.6148%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (444 samples, 0.76%)</title><rect x="79.3734%" y="805" width="0.7639%" height="15" fill="rgb(249,172,42)" fg:x="46131" fg:w="444"/><text x="79.6234%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (431 samples, 0.74%)</title><rect x="79.3957%" y="789" width="0.7416%" height="15" fill="rgb(216,139,23)" fg:x="46144" fg:w="431"/><text x="79.6457%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (396 samples, 0.68%)</title><rect x="79.4559%" y="773" width="0.6814%" height="15" fill="rgb(207,166,20)" fg:x="46179" fg:w="396"/><text x="79.7059%" y="783.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (387 samples, 0.67%)</title><rect x="79.4714%" y="757" width="0.6659%" height="15" fill="rgb(210,209,22)" fg:x="46188" fg:w="387"/><text x="79.7214%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (254 samples, 0.44%)</title><rect x="79.7003%" y="741" width="0.4370%" height="15" fill="rgb(232,118,20)" fg:x="46321" fg:w="254"/><text x="79.9503%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (254 samples, 0.44%)</title><rect x="79.7003%" y="725" width="0.4370%" height="15" fill="rgb(238,113,42)" fg:x="46321" fg:w="254"/><text x="79.9503%" y="735.50"></text></g><g><title>[libc.so.6] (211 samples, 0.36%)</title><rect x="79.7743%" y="709" width="0.3630%" height="15" fill="rgb(231,42,5)" fg:x="46364" fg:w="211"/><text x="80.0243%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (21 samples, 0.04%)</title><rect x="80.1373%" y="821" width="0.0361%" height="15" fill="rgb(243,166,24)" fg:x="46575" fg:w="21"/><text x="80.3873%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (21 samples, 0.04%)</title><rect x="80.1373%" y="805" width="0.0361%" height="15" fill="rgb(237,226,12)" fg:x="46575" fg:w="21"/><text x="80.3873%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (25 samples, 0.04%)</title><rect x="80.2956%" y="789" width="0.0430%" height="15" fill="rgb(229,133,24)" fg:x="46667" fg:w="25"/><text x="80.5456%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (10 samples, 0.02%)</title><rect x="80.3214%" y="773" width="0.0172%" height="15" fill="rgb(238,33,43)" fg:x="46682" fg:w="10"/><text x="80.5714%" y="783.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (104 samples, 0.18%)</title><rect x="80.1734%" y="805" width="0.1789%" height="15" fill="rgb(227,59,38)" fg:x="46596" fg:w="104"/><text x="80.4234%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.01%)</title><rect x="80.3386%" y="789" width="0.0138%" height="15" fill="rgb(230,97,0)" fg:x="46692" fg:w="8"/><text x="80.5886%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (621 samples, 1.07%)</title><rect x="79.2856%" y="837" width="1.0685%" height="15" fill="rgb(250,173,50)" fg:x="46080" fg:w="621"/><text x="79.5356%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (105 samples, 0.18%)</title><rect x="80.1734%" y="821" width="0.1807%" height="15" fill="rgb(240,15,50)" fg:x="46596" fg:w="105"/><text x="80.4234%" y="831.50"></text></g><g><title>hashbrown::raw::h2 (13 samples, 0.02%)</title><rect x="80.3593%" y="837" width="0.0224%" height="15" fill="rgb(221,93,22)" fg:x="46704" fg:w="13"/><text x="80.6093%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_undefined_si128 (7 samples, 0.01%)</title><rect x="81.0251%" y="805" width="0.0120%" height="15" fill="rgb(245,180,53)" fg:x="47091" fg:w="7"/><text x="81.2751%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (409 samples, 0.70%)</title><rect x="80.3816%" y="837" width="0.7037%" height="15" fill="rgb(231,88,51)" fg:x="46717" fg:w="409"/><text x="80.6316%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (360 samples, 0.62%)</title><rect x="80.4659%" y="821" width="0.6194%" height="15" fill="rgb(240,58,21)" fg:x="46766" fg:w="360"/><text x="80.7159%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.05%)</title><rect x="81.0372%" y="805" width="0.0482%" height="15" fill="rgb(237,21,10)" fg:x="47098" fg:w="28"/><text x="81.2872%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (149 samples, 0.26%)</title><rect x="81.4708%" y="821" width="0.2564%" height="15" fill="rgb(218,43,11)" fg:x="47350" fg:w="149"/><text x="81.7208%" y="831.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (38 samples, 0.07%)</title><rect x="81.6618%" y="805" width="0.0654%" height="15" fill="rgb(218,221,29)" fg:x="47461" fg:w="38"/><text x="81.9118%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (17 samples, 0.03%)</title><rect x="82.3999%" y="805" width="0.0293%" height="15" fill="rgb(214,118,42)" fg:x="47890" fg:w="17"/><text x="82.6499%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (450 samples, 0.77%)</title><rect x="81.7271%" y="821" width="0.7743%" height="15" fill="rgb(251,200,26)" fg:x="47499" fg:w="450"/><text x="81.9771%" y="831.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (42 samples, 0.07%)</title><rect x="82.4292%" y="805" width="0.0723%" height="15" fill="rgb(237,101,39)" fg:x="47907" fg:w="42"/><text x="82.6792%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,090 samples, 1.88%)</title><rect x="81.0854%" y="837" width="1.8755%" height="15" fill="rgb(251,117,11)" fg:x="47126" fg:w="1090"/><text x="81.3354%" y="847.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (267 samples, 0.46%)</title><rect x="82.5014%" y="821" width="0.4594%" height="15" fill="rgb(216,223,23)" fg:x="47949" fg:w="267"/><text x="82.7514%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (264 samples, 0.45%)</title><rect x="82.5066%" y="805" width="0.4542%" height="15" fill="rgb(251,54,12)" fg:x="47952" fg:w="264"/><text x="82.7566%" y="815.50"></text></g><g><title>core::core_arch::simd::i8x16::new (16 samples, 0.03%)</title><rect x="82.9333%" y="789" width="0.0275%" height="15" fill="rgb(254,176,54)" fg:x="48200" fg:w="16"/><text x="83.1833%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (124 samples, 0.21%)</title><rect x="83.2138%" y="805" width="0.2134%" height="15" fill="rgb(210,32,8)" fg:x="48363" fg:w="124"/><text x="83.4638%" y="815.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (39 samples, 0.07%)</title><rect x="83.3600%" y="789" width="0.0671%" height="15" fill="rgb(235,52,38)" fg:x="48448" fg:w="39"/><text x="83.6100%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (11 samples, 0.02%)</title><rect x="83.8710%" y="789" width="0.0189%" height="15" fill="rgb(231,4,44)" fg:x="48745" fg:w="11"/><text x="84.1210%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (297 samples, 0.51%)</title><rect x="83.4271%" y="805" width="0.5110%" height="15" fill="rgb(249,2,32)" fg:x="48487" fg:w="297"/><text x="83.6771%" y="815.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (28 samples, 0.05%)</title><rect x="83.8899%" y="789" width="0.0482%" height="15" fill="rgb(224,65,26)" fg:x="48756" fg:w="28"/><text x="84.1399%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12,639 samples, 21.75%)</title><rect x="62.5028%" y="1013" width="21.7468%" height="15" fill="rgb(250,73,40)" fg:x="36326" fg:w="12639"/><text x="62.7528%" y="1023.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12,612 samples, 21.70%)</title><rect x="62.5493%" y="997" width="21.7003%" height="15" fill="rgb(253,177,16)" fg:x="36353" fg:w="12612"/><text x="62.7993%" y="1007.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (11,135 samples, 19.16%)</title><rect x="65.0906%" y="981" width="19.1590%" height="15" fill="rgb(217,32,34)" fg:x="37830" fg:w="11135"/><text x="65.3406%" y="991.50">core::iter::traits::iterator::..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (11,063 samples, 19.04%)</title><rect x="65.2145%" y="965" width="19.0351%" height="15" fill="rgb(212,7,10)" fg:x="37902" fg:w="11063"/><text x="65.4645%" y="975.50">&lt;std::collections::hash::set::..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11,055 samples, 19.02%)</title><rect x="65.2282%" y="949" width="19.0213%" height="15" fill="rgb(245,89,8)" fg:x="37910" fg:w="11055"/><text x="65.4782%" y="959.50">std::collections::hash::set::H..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11,055 samples, 19.02%)</title><rect x="65.2282%" y="933" width="19.0213%" height="15" fill="rgb(237,16,53)" fg:x="37910" fg:w="11055"/><text x="65.4782%" y="943.50">hashbrown::set::HashSet&lt;T,S,A&gt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11,048 samples, 19.01%)</title><rect x="65.2403%" y="917" width="19.0093%" height="15" fill="rgb(250,204,30)" fg:x="37917" fg:w="11048"/><text x="65.4903%" y="927.50">hashbrown::map::HashMap&lt;K,V,S,..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11,010 samples, 18.94%)</title><rect x="65.3057%" y="901" width="18.9439%" height="15" fill="rgb(208,77,27)" fg:x="37955" fg:w="11010"/><text x="65.5557%" y="911.50">hashbrown::map::HashMap&lt;K,V,S,..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3,942 samples, 6.78%)</title><rect x="77.4669%" y="885" width="6.7826%" height="15" fill="rgb(250,204,28)" fg:x="45023" fg:w="3942"/><text x="77.7169%" y="895.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3,843 samples, 6.61%)</title><rect x="77.6373%" y="869" width="6.6123%" height="15" fill="rgb(244,63,21)" fg:x="45122" fg:w="3843"/><text x="77.8873%" y="879.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (3,705 samples, 6.37%)</title><rect x="77.8747%" y="853" width="6.3749%" height="15" fill="rgb(236,85,44)" fg:x="45260" fg:w="3705"/><text x="78.1247%" y="863.50">hashbrow..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (749 samples, 1.29%)</title><rect x="82.9608%" y="837" width="1.2887%" height="15" fill="rgb(215,98,4)" fg:x="48216" fg:w="749"/><text x="83.2108%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (711 samples, 1.22%)</title><rect x="83.0262%" y="821" width="1.2234%" height="15" fill="rgb(235,38,11)" fg:x="48254" fg:w="711"/><text x="83.2762%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (181 samples, 0.31%)</title><rect x="83.9381%" y="805" width="0.3114%" height="15" fill="rgb(254,186,25)" fg:x="48784" fg:w="181"/><text x="84.1881%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (179 samples, 0.31%)</title><rect x="83.9416%" y="789" width="0.3080%" height="15" fill="rgb(225,55,31)" fg:x="48786" fg:w="179"/><text x="84.1916%" y="799.50"></text></g><g><title>core::core_arch::simd::i8x16::new (7 samples, 0.01%)</title><rect x="84.2375%" y="773" width="0.0120%" height="15" fill="rgb(211,15,21)" fg:x="48958" fg:w="7"/><text x="84.4875%" y="783.50"></text></g><g><title>[libc.so.6] (110 samples, 0.19%)</title><rect x="84.2513%" y="997" width="0.1893%" height="15" fill="rgb(215,187,41)" fg:x="48966" fg:w="110"/><text x="84.5013%" y="1007.50"></text></g><g><title>[libc.so.6] (114 samples, 0.20%)</title><rect x="84.4474%" y="981" width="0.1961%" height="15" fill="rgb(248,69,32)" fg:x="49080" fg:w="114"/><text x="84.6974%" y="991.50"></text></g><g><title>[libc.so.6] (103 samples, 0.18%)</title><rect x="84.6453%" y="965" width="0.1772%" height="15" fill="rgb(252,102,52)" fg:x="49195" fg:w="103"/><text x="84.8953%" y="975.50"></text></g><g><title>[libc.so.6] (118 samples, 0.20%)</title><rect x="84.8776%" y="949" width="0.2030%" height="15" fill="rgb(253,140,32)" fg:x="49330" fg:w="118"/><text x="85.1276%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (96 samples, 0.17%)</title><rect x="85.2682%" y="933" width="0.1652%" height="15" fill="rgb(216,56,42)" fg:x="49557" fg:w="96"/><text x="85.5182%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (12 samples, 0.02%)</title><rect x="85.4127%" y="917" width="0.0206%" height="15" fill="rgb(216,184,14)" fg:x="49641" fg:w="12"/><text x="85.6627%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (43 samples, 0.07%)</title><rect x="85.4936%" y="917" width="0.0740%" height="15" fill="rgb(237,187,27)" fg:x="49688" fg:w="43"/><text x="85.7436%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (10 samples, 0.02%)</title><rect x="85.5675%" y="917" width="0.0172%" height="15" fill="rgb(219,65,3)" fg:x="49731" fg:w="10"/><text x="85.8175%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1,736 samples, 2.99%)</title><rect x="85.5847%" y="917" width="2.9870%" height="15" fill="rgb(245,83,25)" fg:x="49741" fg:w="1736"/><text x="85.8347%" y="927.50">has..</text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1,700 samples, 2.93%)</title><rect x="85.6467%" y="901" width="2.9250%" height="15" fill="rgb(214,205,45)" fg:x="49777" fg:w="1700"/><text x="85.8967%" y="911.50">co..</text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (6 samples, 0.01%)</title><rect x="88.6251%" y="901" width="0.0103%" height="15" fill="rgb(241,20,18)" fg:x="51508" fg:w="6"/><text x="88.8751%" y="911.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (6 samples, 0.01%)</title><rect x="89.1258%" y="869" width="0.0103%" height="15" fill="rgb(232,163,23)" fg:x="51799" fg:w="6"/><text x="89.3758%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2,175 samples, 3.74%)</title><rect x="85.4333%" y="933" width="3.7423%" height="15" fill="rgb(214,5,46)" fg:x="49653" fg:w="2175"/><text x="85.6833%" y="943.50">hash..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (351 samples, 0.60%)</title><rect x="88.5717%" y="917" width="0.6039%" height="15" fill="rgb(229,78,17)" fg:x="51477" fg:w="351"/><text x="88.8217%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (314 samples, 0.54%)</title><rect x="88.6354%" y="901" width="0.5403%" height="15" fill="rgb(248,89,10)" fg:x="51514" fg:w="314"/><text x="88.8854%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (304 samples, 0.52%)</title><rect x="88.6526%" y="885" width="0.5231%" height="15" fill="rgb(248,54,15)" fg:x="51524" fg:w="304"/><text x="88.9026%" y="895.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (23 samples, 0.04%)</title><rect x="89.1361%" y="869" width="0.0396%" height="15" fill="rgb(223,116,6)" fg:x="51805" fg:w="23"/><text x="89.3861%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2,758 samples, 4.75%)</title><rect x="84.8225%" y="965" width="4.7454%" height="15" fill="rgb(205,125,38)" fg:x="49298" fg:w="2758"/><text x="85.0725%" y="975.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2,608 samples, 4.49%)</title><rect x="85.0806%" y="949" width="4.4873%" height="15" fill="rgb(251,78,38)" fg:x="49448" fg:w="2608"/><text x="85.3306%" y="959.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (228 samples, 0.39%)</title><rect x="89.1757%" y="933" width="0.3923%" height="15" fill="rgb(253,78,28)" fg:x="51828" fg:w="228"/><text x="89.4257%" y="943.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (3,099 samples, 5.33%)</title><rect x="84.2496%" y="1013" width="5.3322%" height="15" fill="rgb(209,120,3)" fg:x="48965" fg:w="3099"/><text x="84.4996%" y="1023.50">std::co..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2,988 samples, 5.14%)</title><rect x="84.4405%" y="997" width="5.1412%" height="15" fill="rgb(238,229,9)" fg:x="49076" fg:w="2988"/><text x="84.6905%" y="1007.50">hashbr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2,870 samples, 4.94%)</title><rect x="84.6436%" y="981" width="4.9381%" height="15" fill="rgb(253,159,18)" fg:x="49194" fg:w="2870"/><text x="84.8936%" y="991.50">hashbr..</text></g><g><title>memcpy@plt (8 samples, 0.01%)</title><rect x="89.5680%" y="965" width="0.0138%" height="15" fill="rgb(244,42,34)" fg:x="52056" fg:w="8"/><text x="89.8180%" y="975.50"></text></g><g><title>aes_grinder::exaustive_search::update_queue (49,965 samples, 85.97%)</title><rect x="3.6270%" y="1141" width="85.9702%" height="15" fill="rgb(224,8,7)" fg:x="2108" fg:w="49965"/><text x="3.8770%" y="1151.50">aes_grinder::exaustive_search::update_queue</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::retain (27,458 samples, 47.24%)</title><rect x="42.3528%" y="1125" width="47.2444%" height="15" fill="rgb(210,201,45)" fg:x="24615" fg:w="27458"/><text x="42.6028%" y="1135.50">std::collections::hash::set::HashSet&lt;T,S&gt;::retain</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain (27,458 samples, 47.24%)</title><rect x="42.3528%" y="1109" width="47.2444%" height="15" fill="rgb(252,185,21)" fg:x="24615" fg:w="27458"/><text x="42.6028%" y="1119.50">hashbrown::set::HashSet&lt;T,S,A&gt;::retain</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (27,458 samples, 47.24%)</title><rect x="42.3528%" y="1093" width="47.2444%" height="15" fill="rgb(223,131,1)" fg:x="24615" fg:w="27458"/><text x="42.6028%" y="1103.50">hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}} (25,884 samples, 44.54%)</title><rect x="45.0610%" y="1077" width="44.5362%" height="15" fill="rgb(245,141,16)" fg:x="26189" fg:w="25884"/><text x="45.3110%" y="1087.50">hashbrown::set::HashSet&lt;T,S,A&gt;::retain::_{{closure}}</text></g><g><title>aes_grinder::exaustive_search::update_queue::_{{closure}} (25,802 samples, 44.40%)</title><rect x="45.2021%" y="1061" width="44.3951%" height="15" fill="rgb(229,55,45)" fg:x="26271" fg:w="25802"/><text x="45.4521%" y="1071.50">aes_grinder::exaustive_search::update_queue::_{{closure}}</text></g><g><title>aes_grinder::algo::Algo::compare1 (24,076 samples, 41.43%)</title><rect x="48.1719%" y="1045" width="41.4254%" height="15" fill="rgb(208,92,15)" fg:x="27997" fg:w="24076"/><text x="48.4219%" y="1055.50">aes_grinder::algo::Algo::compare1</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (24,018 samples, 41.33%)</title><rect x="48.2716%" y="1029" width="41.3256%" height="15" fill="rgb(234,185,47)" fg:x="28055" fg:w="24018"/><text x="48.5216%" y="1039.50">&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::len (9 samples, 0.02%)</title><rect x="89.5817%" y="1013" width="0.0155%" height="15" fill="rgb(253,104,50)" fg:x="52064" fg:w="9"/><text x="89.8317%" y="1023.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::len (9 samples, 0.02%)</title><rect x="89.5817%" y="997" width="0.0155%" height="15" fill="rgb(205,70,7)" fg:x="52064" fg:w="9"/><text x="89.8317%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::len (9 samples, 0.02%)</title><rect x="89.5817%" y="981" width="0.0155%" height="15" fill="rgb(240,178,43)" fg:x="52064" fg:w="9"/><text x="89.8317%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (9 samples, 0.02%)</title><rect x="89.5817%" y="965" width="0.0155%" height="15" fill="rgb(214,112,2)" fg:x="52064" fg:w="9"/><text x="89.8317%" y="975.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (6 samples, 0.01%)</title><rect x="89.6006%" y="853" width="0.0103%" height="15" fill="rgb(206,46,17)" fg:x="52075" fg:w="6"/><text x="89.8506%" y="863.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="89.6006%" y="837" width="0.0103%" height="15" fill="rgb(225,220,16)" fg:x="52075" fg:w="6"/><text x="89.8506%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6006%" y="885" width="0.0138%" height="15" fill="rgb(238,65,40)" fg:x="52075" fg:w="8"/><text x="89.8506%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6006%" y="869" width="0.0138%" height="15" fill="rgb(230,151,21)" fg:x="52075" fg:w="8"/><text x="89.8506%" y="879.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (17 samples, 0.03%)</title><rect x="89.5989%" y="917" width="0.0293%" height="15" fill="rgb(218,58,49)" fg:x="52074" fg:w="17"/><text x="89.8489%" y="927.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (17 samples, 0.03%)</title><rect x="89.5989%" y="901" width="0.0293%" height="15" fill="rgb(219,179,14)" fg:x="52074" fg:w="17"/><text x="89.8489%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6144%" y="885" width="0.0138%" height="15" fill="rgb(223,72,1)" fg:x="52083" fg:w="8"/><text x="89.8644%" y="895.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6144%" y="869" width="0.0138%" height="15" fill="rgb(238,126,10)" fg:x="52083" fg:w="8"/><text x="89.8644%" y="879.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6144%" y="853" width="0.0138%" height="15" fill="rgb(224,206,38)" fg:x="52083" fg:w="8"/><text x="89.8644%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6144%" y="837" width="0.0138%" height="15" fill="rgb(212,201,54)" fg:x="52083" fg:w="8"/><text x="89.8644%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.03%)</title><rect x="89.5989%" y="949" width="0.0327%" height="15" fill="rgb(218,154,48)" fg:x="52074" fg:w="19"/><text x="89.8489%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.03%)</title><rect x="89.5989%" y="933" width="0.0327%" height="15" fill="rgb(232,93,24)" fg:x="52074" fg:w="19"/><text x="89.8489%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (6 samples, 0.01%)</title><rect x="89.6333%" y="885" width="0.0103%" height="15" fill="rgb(245,30,21)" fg:x="52094" fg:w="6"/><text x="89.8833%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (6 samples, 0.01%)</title><rect x="89.6333%" y="869" width="0.0103%" height="15" fill="rgb(242,148,29)" fg:x="52094" fg:w="6"/><text x="89.8833%" y="879.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (27 samples, 0.05%)</title><rect x="89.5989%" y="981" width="0.0465%" height="15" fill="rgb(244,153,54)" fg:x="52074" fg:w="27"/><text x="89.8489%" y="991.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (27 samples, 0.05%)</title><rect x="89.5989%" y="965" width="0.0465%" height="15" fill="rgb(252,87,22)" fg:x="52074" fg:w="27"/><text x="89.8489%" y="975.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6316%" y="949" width="0.0138%" height="15" fill="rgb(210,51,29)" fg:x="52093" fg:w="8"/><text x="89.8816%" y="959.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6316%" y="933" width="0.0138%" height="15" fill="rgb(242,136,47)" fg:x="52093" fg:w="8"/><text x="89.8816%" y="943.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6316%" y="917" width="0.0138%" height="15" fill="rgb(238,68,4)" fg:x="52093" fg:w="8"/><text x="89.8816%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.01%)</title><rect x="89.6316%" y="901" width="0.0138%" height="15" fill="rgb(242,161,30)" fg:x="52093" fg:w="8"/><text x="89.8816%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.05%)</title><rect x="89.5989%" y="1013" width="0.0516%" height="15" fill="rgb(218,58,44)" fg:x="52074" fg:w="30"/><text x="89.8489%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.05%)</title><rect x="89.5989%" y="997" width="0.0516%" height="15" fill="rgb(252,125,32)" fg:x="52074" fg:w="30"/><text x="89.8489%" y="1007.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (35 samples, 0.06%)</title><rect x="89.5989%" y="1045" width="0.0602%" height="15" fill="rgb(219,178,0)" fg:x="52074" fg:w="35"/><text x="89.8489%" y="1055.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (35 samples, 0.06%)</title><rect x="89.5989%" y="1029" width="0.0602%" height="15" fill="rgb(213,152,7)" fg:x="52074" fg:w="35"/><text x="89.8489%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.06%)</title><rect x="89.5989%" y="1077" width="0.0619%" height="15" fill="rgb(249,109,34)" fg:x="52074" fg:w="36"/><text x="89.8489%" y="1087.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.06%)</title><rect x="89.5989%" y="1061" width="0.0619%" height="15" fill="rgb(232,96,21)" fg:x="52074" fg:w="36"/><text x="89.8489%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="89.6609%" y="1029" width="0.0103%" height="15" fill="rgb(228,27,39)" fg:x="52110" fg:w="6"/><text x="89.9109%" y="1039.50"></text></g><g><title>core::clone::Clone::clone (44 samples, 0.08%)</title><rect x="89.5972%" y="1141" width="0.0757%" height="15" fill="rgb(211,182,52)" fg:x="52073" fg:w="44"/><text x="89.8472%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.08%)</title><rect x="89.5972%" y="1125" width="0.0757%" height="15" fill="rgb(234,178,38)" fg:x="52073" fg:w="44"/><text x="89.8472%" y="1135.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (43 samples, 0.07%)</title><rect x="89.5989%" y="1109" width="0.0740%" height="15" fill="rgb(221,111,3)" fg:x="52074" fg:w="43"/><text x="89.8489%" y="1119.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::clone::Clone&gt;::clone (43 samples, 0.07%)</title><rect x="89.5989%" y="1093" width="0.0740%" height="15" fill="rgb(228,175,21)" fg:x="52074" fg:w="43"/><text x="89.8489%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="89.6609%" y="1077" width="0.0120%" height="15" fill="rgb(228,174,43)" fg:x="52110" fg:w="7"/><text x="89.9109%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="89.6609%" y="1061" width="0.0120%" height="15" fill="rgb(211,191,0)" fg:x="52110" fg:w="7"/><text x="89.9109%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.01%)</title><rect x="89.6609%" y="1045" width="0.0120%" height="15" fill="rgb(253,117,3)" fg:x="52110" fg:w="7"/><text x="89.9109%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (11 samples, 0.02%)</title><rect x="89.6781%" y="853" width="0.0189%" height="15" fill="rgb(241,127,19)" fg:x="52120" fg:w="11"/><text x="89.9281%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (11 samples, 0.02%)</title><rect x="89.6781%" y="837" width="0.0189%" height="15" fill="rgb(218,103,12)" fg:x="52120" fg:w="11"/><text x="89.9281%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (11 samples, 0.02%)</title><rect x="89.6781%" y="821" width="0.0189%" height="15" fill="rgb(236,214,43)" fg:x="52120" fg:w="11"/><text x="89.9281%" y="831.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (11 samples, 0.02%)</title><rect x="89.6781%" y="805" width="0.0189%" height="15" fill="rgb(244,144,19)" fg:x="52120" fg:w="11"/><text x="89.9281%" y="815.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="89.6798%" y="789" width="0.0172%" height="15" fill="rgb(246,188,10)" fg:x="52121" fg:w="10"/><text x="89.9298%" y="799.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="89.6798%" y="773" width="0.0172%" height="15" fill="rgb(212,193,33)" fg:x="52121" fg:w="10"/><text x="89.9298%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="89.6798%" y="757" width="0.0172%" height="15" fill="rgb(241,51,29)" fg:x="52121" fg:w="10"/><text x="89.9298%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (10 samples, 0.02%)</title><rect x="89.6798%" y="741" width="0.0172%" height="15" fill="rgb(211,58,19)" fg:x="52121" fg:w="10"/><text x="89.9298%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.02%)</title><rect x="89.6798%" y="725" width="0.0172%" height="15" fill="rgb(229,111,26)" fg:x="52121" fg:w="10"/><text x="89.9298%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (9 samples, 0.02%)</title><rect x="89.6815%" y="709" width="0.0155%" height="15" fill="rgb(213,115,40)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (9 samples, 0.02%)</title><rect x="89.6815%" y="693" width="0.0155%" height="15" fill="rgb(209,56,44)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (9 samples, 0.02%)</title><rect x="89.6815%" y="677" width="0.0155%" height="15" fill="rgb(230,108,32)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (9 samples, 0.02%)</title><rect x="89.6815%" y="661" width="0.0155%" height="15" fill="rgb(216,165,31)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.02%)</title><rect x="89.6815%" y="645" width="0.0155%" height="15" fill="rgb(218,122,21)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.02%)</title><rect x="89.6815%" y="629" width="0.0155%" height="15" fill="rgb(223,224,47)" fg:x="52122" fg:w="9"/><text x="89.9315%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.03%)</title><rect x="89.6729%" y="1141" width="0.0258%" height="15" fill="rgb(238,102,44)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="89.6729%" y="1125" width="0.0258%" height="15" fill="rgb(236,46,40)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="89.6729%" y="1109" width="0.0258%" height="15" fill="rgb(247,202,50)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="1093" width="0.0258%" height="15" fill="rgb(209,99,20)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="1077" width="0.0258%" height="15" fill="rgb(252,27,34)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1087.50"></text></g><g><title>aes_grinder::exaustive_search::exhaustive_search::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="1061" width="0.0258%" height="15" fill="rgb(215,206,23)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (15 samples, 0.03%)</title><rect x="89.6729%" y="1045" width="0.0258%" height="15" fill="rgb(212,135,36)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.03%)</title><rect x="89.6729%" y="1029" width="0.0258%" height="15" fill="rgb(240,189,1)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (15 samples, 0.03%)</title><rect x="89.6729%" y="1013" width="0.0258%" height="15" fill="rgb(242,56,20)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="997" width="0.0258%" height="15" fill="rgb(247,132,33)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="981" width="0.0258%" height="15" fill="rgb(208,149,11)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="991.50"></text></g><g><title>aes_grinder::exaustive_search::exhaustive_search::_{{closure}}::_{{closure}} (15 samples, 0.03%)</title><rect x="89.6729%" y="965" width="0.0258%" height="15" fill="rgb(211,33,11)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="975.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (15 samples, 0.03%)</title><rect x="89.6729%" y="949" width="0.0258%" height="15" fill="rgb(221,29,38)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="959.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="89.6729%" y="933" width="0.0258%" height="15" fill="rgb(206,182,49)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (15 samples, 0.03%)</title><rect x="89.6729%" y="917" width="0.0258%" height="15" fill="rgb(216,140,1)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (15 samples, 0.03%)</title><rect x="89.6729%" y="901" width="0.0258%" height="15" fill="rgb(232,57,40)" fg:x="52117" fg:w="15"/><text x="89.9229%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (14 samples, 0.02%)</title><rect x="89.6746%" y="885" width="0.0241%" height="15" fill="rgb(224,186,18)" fg:x="52118" fg:w="14"/><text x="89.9246%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (14 samples, 0.02%)</title><rect x="89.6746%" y="869" width="0.0241%" height="15" fill="rgb(215,121,11)" fg:x="52118" fg:w="14"/><text x="89.9246%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (7 samples, 0.01%)</title><rect x="89.7022%" y="997" width="0.0120%" height="15" fill="rgb(245,147,10)" fg:x="52134" fg:w="7"/><text x="89.9522%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (7 samples, 0.01%)</title><rect x="89.7022%" y="981" width="0.0120%" height="15" fill="rgb(238,153,13)" fg:x="52134" fg:w="7"/><text x="89.9522%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (7 samples, 0.01%)</title><rect x="89.7022%" y="965" width="0.0120%" height="15" fill="rgb(233,108,0)" fg:x="52134" fg:w="7"/><text x="89.9522%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (6 samples, 0.01%)</title><rect x="89.7176%" y="917" width="0.0103%" height="15" fill="rgb(212,157,17)" fg:x="52143" fg:w="6"/><text x="89.9676%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (18 samples, 0.03%)</title><rect x="89.6987%" y="1045" width="0.0310%" height="15" fill="rgb(225,213,38)" fg:x="52132" fg:w="18"/><text x="89.9487%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (17 samples, 0.03%)</title><rect x="89.7004%" y="1029" width="0.0293%" height="15" fill="rgb(248,16,11)" fg:x="52133" fg:w="17"/><text x="89.9504%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (16 samples, 0.03%)</title><rect x="89.7022%" y="1013" width="0.0275%" height="15" fill="rgb(241,33,4)" fg:x="52134" fg:w="16"/><text x="89.9522%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7142%" y="997" width="0.0155%" height="15" fill="rgb(222,26,43)" fg:x="52141" fg:w="9"/><text x="89.9642%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7142%" y="981" width="0.0155%" height="15" fill="rgb(243,29,36)" fg:x="52141" fg:w="9"/><text x="89.9642%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7142%" y="965" width="0.0155%" height="15" fill="rgb(241,9,27)" fg:x="52141" fg:w="9"/><text x="89.9642%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7142%" y="949" width="0.0155%" height="15" fill="rgb(205,117,26)" fg:x="52141" fg:w="9"/><text x="89.9642%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="89.7142%" y="933" width="0.0155%" height="15" fill="rgb(209,80,39)" fg:x="52141" fg:w="9"/><text x="89.9642%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (7 samples, 0.01%)</title><rect x="89.7297%" y="965" width="0.0120%" height="15" fill="rgb(239,155,6)" fg:x="52150" fg:w="7"/><text x="89.9797%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (26 samples, 0.04%)</title><rect x="89.6987%" y="1093" width="0.0447%" height="15" fill="rgb(212,104,12)" fg:x="52132" fg:w="26"/><text x="89.9487%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (26 samples, 0.04%)</title><rect x="89.6987%" y="1077" width="0.0447%" height="15" fill="rgb(234,204,3)" fg:x="52132" fg:w="26"/><text x="89.9487%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (26 samples, 0.04%)</title><rect x="89.6987%" y="1061" width="0.0447%" height="15" fill="rgb(251,218,7)" fg:x="52132" fg:w="26"/><text x="89.9487%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (8 samples, 0.01%)</title><rect x="89.7297%" y="1045" width="0.0138%" height="15" fill="rgb(221,81,32)" fg:x="52150" fg:w="8"/><text x="89.9797%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.01%)</title><rect x="89.7297%" y="1029" width="0.0138%" height="15" fill="rgb(214,152,26)" fg:x="52150" fg:w="8"/><text x="89.9797%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (8 samples, 0.01%)</title><rect x="89.7297%" y="1013" width="0.0138%" height="15" fill="rgb(223,22,3)" fg:x="52150" fg:w="8"/><text x="89.9797%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (8 samples, 0.01%)</title><rect x="89.7297%" y="997" width="0.0138%" height="15" fill="rgb(207,174,7)" fg:x="52150" fg:w="8"/><text x="89.9797%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="89.7297%" y="981" width="0.0138%" height="15" fill="rgb(224,19,52)" fg:x="52150" fg:w="8"/><text x="89.9797%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;,alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;)&gt; (30 samples, 0.05%)</title><rect x="89.6987%" y="1141" width="0.0516%" height="15" fill="rgb(228,24,14)" fg:x="52132" fg:w="30"/><text x="89.9487%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (30 samples, 0.05%)</title><rect x="89.6987%" y="1125" width="0.0516%" height="15" fill="rgb(230,153,43)" fg:x="52132" fg:w="30"/><text x="89.9487%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (30 samples, 0.05%)</title><rect x="89.6987%" y="1109" width="0.0516%" height="15" fill="rgb(231,106,12)" fg:x="52132" fg:w="30"/><text x="89.9487%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (13 samples, 0.02%)</title><rect x="89.7538%" y="965" width="0.0224%" height="15" fill="rgb(215,92,2)" fg:x="52164" fg:w="13"/><text x="90.0038%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (13 samples, 0.02%)</title><rect x="89.7538%" y="949" width="0.0224%" height="15" fill="rgb(249,143,25)" fg:x="52164" fg:w="13"/><text x="90.0038%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (13 samples, 0.02%)</title><rect x="89.7538%" y="933" width="0.0224%" height="15" fill="rgb(252,7,35)" fg:x="52164" fg:w="13"/><text x="90.0038%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7607%" y="917" width="0.0155%" height="15" fill="rgb(216,69,40)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7607%" y="901" width="0.0155%" height="15" fill="rgb(240,36,33)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7607%" y="885" width="0.0155%" height="15" fill="rgb(231,128,14)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (9 samples, 0.02%)</title><rect x="89.7607%" y="869" width="0.0155%" height="15" fill="rgb(245,143,14)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="89.7607%" y="853" width="0.0155%" height="15" fill="rgb(222,130,28)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (9 samples, 0.02%)</title><rect x="89.7607%" y="837" width="0.0155%" height="15" fill="rgb(212,10,48)" fg:x="52168" fg:w="9"/><text x="90.0107%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7 samples, 0.01%)</title><rect x="89.7641%" y="821" width="0.0120%" height="15" fill="rgb(254,118,45)" fg:x="52170" fg:w="7"/><text x="90.0141%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (7 samples, 0.01%)</title><rect x="89.7779%" y="885" width="0.0120%" height="15" fill="rgb(228,6,45)" fg:x="52178" fg:w="7"/><text x="90.0279%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (24 samples, 0.04%)</title><rect x="89.7521%" y="1013" width="0.0413%" height="15" fill="rgb(241,18,35)" fg:x="52163" fg:w="24"/><text x="90.0021%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (24 samples, 0.04%)</title><rect x="89.7521%" y="997" width="0.0413%" height="15" fill="rgb(227,214,53)" fg:x="52163" fg:w="24"/><text x="90.0021%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (23 samples, 0.04%)</title><rect x="89.7538%" y="981" width="0.0396%" height="15" fill="rgb(224,107,51)" fg:x="52164" fg:w="23"/><text x="90.0038%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (10 samples, 0.02%)</title><rect x="89.7761%" y="965" width="0.0172%" height="15" fill="rgb(248,60,28)" fg:x="52177" fg:w="10"/><text x="90.0261%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (10 samples, 0.02%)</title><rect x="89.7761%" y="949" width="0.0172%" height="15" fill="rgb(249,101,23)" fg:x="52177" fg:w="10"/><text x="90.0261%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (10 samples, 0.02%)</title><rect x="89.7761%" y="933" width="0.0172%" height="15" fill="rgb(228,51,19)" fg:x="52177" fg:w="10"/><text x="90.0261%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (10 samples, 0.02%)</title><rect x="89.7761%" y="917" width="0.0172%" height="15" fill="rgb(213,20,6)" fg:x="52177" fg:w="10"/><text x="90.0261%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="89.7779%" y="901" width="0.0155%" height="15" fill="rgb(212,124,10)" fg:x="52178" fg:w="9"/><text x="90.0279%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (28 samples, 0.05%)</title><rect x="89.7521%" y="1061" width="0.0482%" height="15" fill="rgb(248,3,40)" fg:x="52163" fg:w="28"/><text x="90.0021%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (28 samples, 0.05%)</title><rect x="89.7521%" y="1045" width="0.0482%" height="15" fill="rgb(223,178,23)" fg:x="52163" fg:w="28"/><text x="90.0021%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (28 samples, 0.05%)</title><rect x="89.7521%" y="1029" width="0.0482%" height="15" fill="rgb(240,132,45)" fg:x="52163" fg:w="28"/><text x="90.0021%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt;&gt; (34 samples, 0.06%)</title><rect x="89.7521%" y="1109" width="0.0585%" height="15" fill="rgb(245,164,36)" fg:x="52163" fg:w="34"/><text x="90.0021%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (34 samples, 0.06%)</title><rect x="89.7521%" y="1093" width="0.0585%" height="15" fill="rgb(231,188,53)" fg:x="52163" fg:w="34"/><text x="90.0021%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (34 samples, 0.06%)</title><rect x="89.7521%" y="1077" width="0.0585%" height="15" fill="rgb(237,198,39)" fg:x="52163" fg:w="34"/><text x="90.0021%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String&gt;&gt; (6 samples, 0.01%)</title><rect x="89.8002%" y="1061" width="0.0103%" height="15" fill="rgb(223,120,35)" fg:x="52191" fg:w="6"/><text x="90.0502%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.01%)</title><rect x="89.8002%" y="1045" width="0.0103%" height="15" fill="rgb(253,107,49)" fg:x="52191" fg:w="6"/><text x="90.0502%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),std::collections::hash::map::RandomState&gt;&gt; (6 samples, 0.01%)</title><rect x="89.8002%" y="1029" width="0.0103%" height="15" fill="rgb(216,44,31)" fg:x="52191" fg:w="6"/><text x="90.0502%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (6 samples, 0.01%)</title><rect x="89.8002%" y="1013" width="0.0103%" height="15" fill="rgb(253,87,21)" fg:x="52191" fg:w="6"/><text x="90.0502%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="89.8002%" y="997" width="0.0103%" height="15" fill="rgb(226,18,2)" fg:x="52191" fg:w="6"/><text x="90.0502%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;aes_grinder::algo::Algo&gt;&gt; (40 samples, 0.07%)</title><rect x="89.7503%" y="1141" width="0.0688%" height="15" fill="rgb(216,8,46)" fg:x="52162" fg:w="40"/><text x="90.0003%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aes_grinder::algo::Algo&gt; (39 samples, 0.07%)</title><rect x="89.7521%" y="1125" width="0.0671%" height="15" fill="rgb(226,140,39)" fg:x="52163" fg:w="39"/><text x="90.0021%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMask as core::iter::traits::collect::IntoIterator&gt;::into_iter (21 samples, 0.04%)</title><rect x="93.3946%" y="997" width="0.0361%" height="15" fill="rgb(221,194,54)" fg:x="54280" fg:w="21"/><text x="93.6446%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (7 samples, 0.01%)</title><rect x="94.4252%" y="981" width="0.0120%" height="15" fill="rgb(213,92,11)" fg:x="54879" fg:w="7"/><text x="94.6752%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (186 samples, 0.32%)</title><rect x="94.4373%" y="981" width="0.3200%" height="15" fill="rgb(229,162,46)" fg:x="54886" fg:w="186"/><text x="94.6873%" y="991.50"></text></g><g><title>core::num::nonzero::NonZeroU16::new (95 samples, 0.16%)</title><rect x="94.9276%" y="965" width="0.1635%" height="15" fill="rgb(214,111,36)" fg:x="55171" fg:w="95"/><text x="95.1776%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,061 samples, 1.83%)</title><rect x="93.4307%" y="997" width="1.8256%" height="15" fill="rgb(207,6,21)" fg:x="54301" fg:w="1061"/><text x="93.6807%" y="1007.50">&lt;..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (290 samples, 0.50%)</title><rect x="94.7573%" y="981" width="0.4990%" height="15" fill="rgb(213,127,38)" fg:x="55072" fg:w="290"/><text x="95.0073%" y="991.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::nonzero_trailing_zeros (96 samples, 0.17%)</title><rect x="95.0911%" y="965" width="0.1652%" height="15" fill="rgb(238,118,32)" fg:x="55266" fg:w="96"/><text x="95.3411%" y="975.50"></text></g><g><title>core::num::nonzero::NonZeroU16::trailing_zeros (27 samples, 0.05%)</title><rect x="95.2098%" y="949" width="0.0465%" height="15" fill="rgb(240,139,39)" fg:x="55335" fg:w="27"/><text x="95.4598%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.01%)</title><rect x="95.2580%" y="997" width="0.0120%" height="15" fill="rgb(235,10,37)" fg:x="55363" fg:w="7"/><text x="95.5080%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1,057 samples, 1.82%)</title><rect x="95.2700%" y="997" width="1.8187%" height="15" fill="rgb(249,171,38)" fg:x="55370" fg:w="1057"/><text x="95.5200%" y="1007.50">h..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (124 samples, 0.21%)</title><rect x="96.8754%" y="981" width="0.2134%" height="15" fill="rgb(242,144,32)" fg:x="56303" fg:w="124"/><text x="97.1254%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.03%)</title><rect x="97.0560%" y="965" width="0.0327%" height="15" fill="rgb(217,117,21)" fg:x="56408" fg:w="19"/><text x="97.3060%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (40 samples, 0.07%)</title><rect x="97.0887%" y="997" width="0.0688%" height="15" fill="rgb(249,87,1)" fg:x="56427" fg:w="40"/><text x="97.3387%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (12 samples, 0.02%)</title><rect x="97.1369%" y="981" width="0.0206%" height="15" fill="rgb(248,196,48)" fg:x="56455" fg:w="12"/><text x="97.3869%" y="991.50"></text></g><g><title>core::core_arch::simd::i8x16::splat (10 samples, 0.02%)</title><rect x="97.4931%" y="949" width="0.0172%" height="15" fill="rgb(251,206,33)" fg:x="56662" fg:w="10"/><text x="97.7431%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,222 samples, 5.54%)</title><rect x="91.9975%" y="1029" width="5.5438%" height="15" fill="rgb(232,141,28)" fg:x="53468" fg:w="3222"/><text x="92.2475%" y="1039.50">&lt;hashbr..</text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (2,999 samples, 5.16%)</title><rect x="92.3811%" y="1013" width="5.1601%" height="15" fill="rgb(209,167,14)" fg:x="53691" fg:w="2999"/><text x="92.6311%" y="1023.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::match_full (223 samples, 0.38%)</title><rect x="97.1576%" y="997" width="0.3837%" height="15" fill="rgb(225,11,50)" fg:x="56467" fg:w="223"/><text x="97.4076%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (186 samples, 0.32%)</title><rect x="97.2212%" y="981" width="0.3200%" height="15" fill="rgb(209,50,20)" fg:x="56504" fg:w="186"/><text x="97.4712%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (177 samples, 0.30%)</title><rect x="97.2367%" y="965" width="0.3045%" height="15" fill="rgb(212,17,46)" fg:x="56513" fg:w="177"/><text x="97.4867%" y="975.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (18 samples, 0.03%)</title><rect x="97.5103%" y="949" width="0.0310%" height="15" fill="rgb(216,101,39)" fg:x="56672" fg:w="18"/><text x="97.7603%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,818 samples, 8.29%)</title><rect x="90.0067%" y="1093" width="8.2899%" height="15" fill="rgb(212,228,48)" fg:x="52311" fg:w="4818"/><text x="90.2567%" y="1103.50">&lt;std::collec..</text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,817 samples, 8.29%)</title><rect x="90.0084%" y="1077" width="8.2882%" height="15" fill="rgb(250,6,50)" fg:x="52312" fg:w="4817"/><text x="90.2584%" y="1087.50">&lt;hashbrown::..</text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,798 samples, 8.26%)</title><rect x="90.0411%" y="1061" width="8.2555%" height="15" fill="rgb(250,160,48)" fg:x="52331" fg:w="4798"/><text x="90.2911%" y="1071.50">&lt;hashbrown:..</text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,410 samples, 7.59%)</title><rect x="90.7087%" y="1045" width="7.5879%" height="15" fill="rgb(244,216,33)" fg:x="52719" fg:w="4410"/><text x="90.9587%" y="1055.50">&lt;hashbrown..</text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (439 samples, 0.76%)</title><rect x="97.5413%" y="1029" width="0.7553%" height="15" fill="rgb(207,157,5)" fg:x="56690" fg:w="439"/><text x="97.7913%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (226 samples, 0.39%)</title><rect x="97.9077%" y="1013" width="0.3889%" height="15" fill="rgb(228,199,8)" fg:x="56903" fg:w="226"/><text x="98.1577%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (66 samples, 0.11%)</title><rect x="98.1830%" y="997" width="0.1136%" height="15" fill="rgb(227,80,20)" fg:x="57063" fg:w="66"/><text x="98.4330%" y="1007.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (59 samples, 0.10%)</title><rect x="98.2966%" y="1093" width="0.1015%" height="15" fill="rgb(222,9,33)" fg:x="57129" fg:w="59"/><text x="98.5466%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (59 samples, 0.10%)</title><rect x="98.2966%" y="1077" width="0.1015%" height="15" fill="rgb(239,44,28)" fg:x="57129" fg:w="59"/><text x="98.5466%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (5,239 samples, 9.01%)</title><rect x="89.8226%" y="1125" width="9.0143%" height="15" fill="rgb(249,187,43)" fg:x="52204" fg:w="5239"/><text x="90.0726%" y="1135.50">core::iter::t..</text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (5,237 samples, 9.01%)</title><rect x="89.8260%" y="1109" width="9.0108%" height="15" fill="rgb(216,141,28)" fg:x="52206" fg:w="5237"/><text x="90.0760%" y="1119.50">core::iter::t..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (255 samples, 0.44%)</title><rect x="98.3981%" y="1093" width="0.4388%" height="15" fill="rgb(230,154,53)" fg:x="57188" fg:w="255"/><text x="98.6481%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (250 samples, 0.43%)</title><rect x="98.4067%" y="1077" width="0.4302%" height="15" fill="rgb(227,82,4)" fg:x="57193" fg:w="250"/><text x="98.6567%" y="1087.50"></text></g><g><title>rand::seq::IteratorRandom::choose (5,242 samples, 9.02%)</title><rect x="89.8192%" y="1141" width="9.0194%" height="15" fill="rgb(220,107,16)" fg:x="52202" fg:w="5242"/><text x="90.0692%" y="1151.50">rand::seq::It..</text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="98.8455%" y="885" width="0.0103%" height="15" fill="rgb(207,187,2)" fg:x="57448" fg:w="6"/><text x="99.0955%" y="895.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="98.8455%" y="869" width="0.0103%" height="15" fill="rgb(210,162,52)" fg:x="57448" fg:w="6"/><text x="99.0955%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="98.8455%" y="949" width="0.0138%" height="15" fill="rgb(217,216,49)" fg:x="57448" fg:w="8"/><text x="99.0955%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="98.8455%" y="933" width="0.0138%" height="15" fill="rgb(218,146,49)" fg:x="57448" fg:w="8"/><text x="99.0955%" y="943.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="98.8455%" y="917" width="0.0138%" height="15" fill="rgb(216,55,40)" fg:x="57448" fg:w="8"/><text x="99.0955%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (8 samples, 0.01%)</title><rect x="98.8455%" y="901" width="0.0138%" height="15" fill="rgb(208,196,21)" fg:x="57448" fg:w="8"/><text x="99.0955%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="98.8455%" y="981" width="0.0155%" height="15" fill="rgb(242,117,42)" fg:x="57448" fg:w="9"/><text x="99.0955%" y="991.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (9 samples, 0.02%)</title><rect x="98.8455%" y="965" width="0.0155%" height="15" fill="rgb(210,11,23)" fg:x="57448" fg:w="9"/><text x="99.0955%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::hash::Hash&gt;::hash (10 samples, 0.02%)</title><rect x="98.8455%" y="997" width="0.0172%" height="15" fill="rgb(217,110,2)" fg:x="57448" fg:w="10"/><text x="99.0955%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.03%)</title><rect x="98.8386%" y="1093" width="0.0258%" height="15" fill="rgb(229,77,54)" fg:x="57444" fg:w="15"/><text x="99.0886%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.02%)</title><rect x="98.8403%" y="1077" width="0.0241%" height="15" fill="rgb(218,53,16)" fg:x="57445" fg:w="14"/><text x="99.0903%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.02%)</title><rect x="98.8420%" y="1061" width="0.0224%" height="15" fill="rgb(215,38,13)" fg:x="57446" fg:w="13"/><text x="99.0920%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (T,B)&gt;::hash (13 samples, 0.02%)</title><rect x="98.8420%" y="1045" width="0.0224%" height="15" fill="rgb(235,42,18)" fg:x="57446" fg:w="13"/><text x="99.0920%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (13 samples, 0.02%)</title><rect x="98.8420%" y="1029" width="0.0224%" height="15" fill="rgb(219,66,54)" fg:x="57446" fg:w="13"/><text x="99.0920%" y="1039.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="98.8438%" y="1013" width="0.0206%" height="15" fill="rgb(222,205,4)" fg:x="57447" fg:w="12"/><text x="99.0938%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (16 samples, 0.03%)</title><rect x="98.8954%" y="661" width="0.0275%" height="15" fill="rgb(227,213,46)" fg:x="57477" fg:w="16"/><text x="99.1454%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.03%)</title><rect x="98.8954%" y="645" width="0.0275%" height="15" fill="rgb(250,145,42)" fg:x="57477" fg:w="16"/><text x="99.1454%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (12 samples, 0.02%)</title><rect x="98.9023%" y="629" width="0.0206%" height="15" fill="rgb(219,15,2)" fg:x="57481" fg:w="12"/><text x="99.1523%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (11 samples, 0.02%)</title><rect x="98.9040%" y="613" width="0.0189%" height="15" fill="rgb(231,181,52)" fg:x="57482" fg:w="11"/><text x="99.1540%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (11 samples, 0.02%)</title><rect x="98.9040%" y="597" width="0.0189%" height="15" fill="rgb(235,1,42)" fg:x="57482" fg:w="11"/><text x="99.1540%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (11 samples, 0.02%)</title><rect x="98.9040%" y="581" width="0.0189%" height="15" fill="rgb(249,88,27)" fg:x="57482" fg:w="11"/><text x="99.1540%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.02%)</title><rect x="98.9040%" y="565" width="0.0189%" height="15" fill="rgb(235,145,16)" fg:x="57482" fg:w="11"/><text x="99.1540%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.02%)</title><rect x="98.9040%" y="549" width="0.0189%" height="15" fill="rgb(237,114,19)" fg:x="57482" fg:w="11"/><text x="99.1540%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.01%)</title><rect x="98.9109%" y="533" width="0.0120%" height="15" fill="rgb(238,51,50)" fg:x="57486" fg:w="7"/><text x="99.1609%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="98.9126%" y="517" width="0.0103%" height="15" fill="rgb(205,194,25)" fg:x="57487" fg:w="6"/><text x="99.1626%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.01%)</title><rect x="98.9126%" y="501" width="0.0103%" height="15" fill="rgb(215,203,17)" fg:x="57487" fg:w="6"/><text x="99.1626%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.04%)</title><rect x="98.8902%" y="741" width="0.0379%" height="15" fill="rgb(233,112,49)" fg:x="57474" fg:w="22"/><text x="99.1402%" y="751.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (22 samples, 0.04%)</title><rect x="98.8902%" y="725" width="0.0379%" height="15" fill="rgb(241,130,26)" fg:x="57474" fg:w="22"/><text x="99.1402%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.04%)</title><rect x="98.8902%" y="709" width="0.0379%" height="15" fill="rgb(252,223,19)" fg:x="57474" fg:w="22"/><text x="99.1402%" y="719.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (22 samples, 0.04%)</title><rect x="98.8902%" y="693" width="0.0379%" height="15" fill="rgb(211,95,25)" fg:x="57474" fg:w="22"/><text x="99.1402%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (19 samples, 0.03%)</title><rect x="98.8954%" y="677" width="0.0327%" height="15" fill="rgb(251,182,27)" fg:x="57477" fg:w="19"/><text x="99.1454%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="98.9332%" y="565" width="0.0103%" height="15" fill="rgb(238,24,4)" fg:x="57499" fg:w="6"/><text x="99.1832%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="98.9332%" y="549" width="0.0103%" height="15" fill="rgb(224,220,25)" fg:x="57499" fg:w="6"/><text x="99.1832%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.01%)</title><rect x="98.9332%" y="533" width="0.0103%" height="15" fill="rgb(239,133,26)" fg:x="57499" fg:w="6"/><text x="99.1832%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.03%)</title><rect x="98.9315%" y="597" width="0.0275%" height="15" fill="rgb(211,94,48)" fg:x="57498" fg:w="16"/><text x="99.1815%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16 samples, 0.03%)</title><rect x="98.9315%" y="581" width="0.0275%" height="15" fill="rgb(239,87,6)" fg:x="57498" fg:w="16"/><text x="99.1815%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (30 samples, 0.05%)</title><rect x="98.9281%" y="725" width="0.0516%" height="15" fill="rgb(227,62,0)" fg:x="57496" fg:w="30"/><text x="99.1781%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 0.05%)</title><rect x="98.9281%" y="709" width="0.0516%" height="15" fill="rgb(211,226,4)" fg:x="57496" fg:w="30"/><text x="99.1781%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (29 samples, 0.05%)</title><rect x="98.9298%" y="693" width="0.0499%" height="15" fill="rgb(253,38,52)" fg:x="57497" fg:w="29"/><text x="99.1798%" y="703.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (29 samples, 0.05%)</title><rect x="98.9298%" y="677" width="0.0499%" height="15" fill="rgb(229,126,40)" fg:x="57497" fg:w="29"/><text x="99.1798%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (29 samples, 0.05%)</title><rect x="98.9298%" y="661" width="0.0499%" height="15" fill="rgb(229,165,44)" fg:x="57497" fg:w="29"/><text x="99.1798%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (29 samples, 0.05%)</title><rect x="98.9298%" y="645" width="0.0499%" height="15" fill="rgb(247,95,47)" fg:x="57497" fg:w="29"/><text x="99.1798%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (29 samples, 0.05%)</title><rect x="98.9298%" y="629" width="0.0499%" height="15" fill="rgb(216,140,30)" fg:x="57497" fg:w="29"/><text x="99.1798%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.05%)</title><rect x="98.9315%" y="613" width="0.0482%" height="15" fill="rgb(246,214,8)" fg:x="57498" fg:w="28"/><text x="99.1815%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.02%)</title><rect x="98.9590%" y="597" width="0.0206%" height="15" fill="rgb(227,224,15)" fg:x="57514" fg:w="12"/><text x="99.2090%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.02%)</title><rect x="98.9590%" y="581" width="0.0206%" height="15" fill="rgb(233,175,4)" fg:x="57514" fg:w="12"/><text x="99.2090%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="98.9590%" y="565" width="0.0206%" height="15" fill="rgb(221,66,45)" fg:x="57514" fg:w="12"/><text x="99.2090%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (59 samples, 0.10%)</title><rect x="98.8850%" y="805" width="0.1015%" height="15" fill="rgb(221,178,18)" fg:x="57471" fg:w="59"/><text x="99.1350%" y="815.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (59 samples, 0.10%)</title><rect x="98.8850%" y="789" width="0.1015%" height="15" fill="rgb(213,81,29)" fg:x="57471" fg:w="59"/><text x="99.1350%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (56 samples, 0.10%)</title><rect x="98.8902%" y="773" width="0.0964%" height="15" fill="rgb(220,89,49)" fg:x="57474" fg:w="56"/><text x="99.1402%" y="783.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (56 samples, 0.10%)</title><rect x="98.8902%" y="757" width="0.0964%" height="15" fill="rgb(227,60,33)" fg:x="57474" fg:w="56"/><text x="99.1402%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (34 samples, 0.06%)</title><rect x="98.9281%" y="741" width="0.0585%" height="15" fill="rgb(205,113,12)" fg:x="57496" fg:w="34"/><text x="99.1781%" y="751.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="98.9934%" y="757" width="0.0120%" height="15" fill="rgb(211,32,1)" fg:x="57534" fg:w="7"/><text x="99.2434%" y="767.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="98.9934%" y="741" width="0.0120%" height="15" fill="rgb(246,2,12)" fg:x="57534" fg:w="7"/><text x="99.2434%" y="751.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="98.9934%" y="725" width="0.0120%" height="15" fill="rgb(243,37,27)" fg:x="57534" fg:w="7"/><text x="99.2434%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.02%)</title><rect x="99.0055%" y="661" width="0.0206%" height="15" fill="rgb(248,211,31)" fg:x="57541" fg:w="12"/><text x="99.2555%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.02%)</title><rect x="99.0055%" y="645" width="0.0206%" height="15" fill="rgb(242,146,47)" fg:x="57541" fg:w="12"/><text x="99.2555%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (40 samples, 0.07%)</title><rect x="98.9883%" y="789" width="0.0688%" height="15" fill="rgb(206,70,20)" fg:x="57531" fg:w="40"/><text x="99.2383%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.07%)</title><rect x="98.9883%" y="773" width="0.0688%" height="15" fill="rgb(215,10,51)" fg:x="57531" fg:w="40"/><text x="99.2383%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (30 samples, 0.05%)</title><rect x="99.0055%" y="757" width="0.0516%" height="15" fill="rgb(243,178,53)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (30 samples, 0.05%)</title><rect x="99.0055%" y="741" width="0.0516%" height="15" fill="rgb(233,221,20)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (30 samples, 0.05%)</title><rect x="99.0055%" y="725" width="0.0516%" height="15" fill="rgb(218,95,35)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (30 samples, 0.05%)</title><rect x="99.0055%" y="709" width="0.0516%" height="15" fill="rgb(229,13,5)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (30 samples, 0.05%)</title><rect x="99.0055%" y="693" width="0.0516%" height="15" fill="rgb(252,164,30)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.05%)</title><rect x="99.0055%" y="677" width="0.0516%" height="15" fill="rgb(232,68,36)" fg:x="57541" fg:w="30"/><text x="99.2555%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.03%)</title><rect x="99.0261%" y="661" width="0.0310%" height="15" fill="rgb(219,59,54)" fg:x="57553" fg:w="18"/><text x="99.2761%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (18 samples, 0.03%)</title><rect x="99.0261%" y="645" width="0.0310%" height="15" fill="rgb(250,92,33)" fg:x="57553" fg:w="18"/><text x="99.2761%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (15 samples, 0.03%)</title><rect x="99.0313%" y="629" width="0.0258%" height="15" fill="rgb(229,162,54)" fg:x="57556" fg:w="15"/><text x="99.2813%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="99.0468%" y="613" width="0.0103%" height="15" fill="rgb(244,114,52)" fg:x="57565" fg:w="6"/><text x="99.2968%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (108 samples, 0.19%)</title><rect x="98.8782%" y="869" width="0.1858%" height="15" fill="rgb(212,211,43)" fg:x="57467" fg:w="108"/><text x="99.1282%" y="879.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (108 samples, 0.19%)</title><rect x="98.8782%" y="853" width="0.1858%" height="15" fill="rgb(226,147,8)" fg:x="57467" fg:w="108"/><text x="99.1282%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (107 samples, 0.18%)</title><rect x="98.8799%" y="837" width="0.1841%" height="15" fill="rgb(226,23,13)" fg:x="57468" fg:w="107"/><text x="99.1299%" y="847.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (107 samples, 0.18%)</title><rect x="98.8799%" y="821" width="0.1841%" height="15" fill="rgb(240,63,4)" fg:x="57468" fg:w="107"/><text x="99.1299%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (45 samples, 0.08%)</title><rect x="98.9866%" y="805" width="0.0774%" height="15" fill="rgb(221,1,32)" fg:x="57530" fg:w="45"/><text x="99.2366%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="99.0829%" y="693" width="0.0275%" height="15" fill="rgb(242,117,10)" fg:x="57586" fg:w="16"/><text x="99.3329%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="99.0829%" y="677" width="0.0275%" height="15" fill="rgb(249,172,44)" fg:x="57586" fg:w="16"/><text x="99.3329%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (16 samples, 0.03%)</title><rect x="99.0829%" y="661" width="0.0275%" height="15" fill="rgb(244,46,45)" fg:x="57586" fg:w="16"/><text x="99.3329%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (6 samples, 0.01%)</title><rect x="99.1001%" y="645" width="0.0103%" height="15" fill="rgb(206,43,17)" fg:x="57596" fg:w="6"/><text x="99.3501%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (26 samples, 0.04%)</title><rect x="99.0812%" y="725" width="0.0447%" height="15" fill="rgb(239,218,39)" fg:x="57585" fg:w="26"/><text x="99.3312%" y="735.50"></text></g><g><title>core::hash::BuildHasher::hash_one (26 samples, 0.04%)</title><rect x="99.0812%" y="709" width="0.0447%" height="15" fill="rgb(208,169,54)" fg:x="57585" fg:w="26"/><text x="99.3312%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (47 samples, 0.08%)</title><rect x="99.0674%" y="853" width="0.0809%" height="15" fill="rgb(247,25,42)" fg:x="57577" fg:w="47"/><text x="99.3174%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.08%)</title><rect x="99.0674%" y="837" width="0.0809%" height="15" fill="rgb(226,23,31)" fg:x="57577" fg:w="47"/><text x="99.3174%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (41 samples, 0.07%)</title><rect x="99.0778%" y="821" width="0.0705%" height="15" fill="rgb(247,16,28)" fg:x="57583" fg:w="41"/><text x="99.3278%" y="831.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (40 samples, 0.07%)</title><rect x="99.0795%" y="805" width="0.0688%" height="15" fill="rgb(231,147,38)" fg:x="57584" fg:w="40"/><text x="99.3295%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (39 samples, 0.07%)</title><rect x="99.0812%" y="789" width="0.0671%" height="15" fill="rgb(253,81,48)" fg:x="57585" fg:w="39"/><text x="99.3312%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (39 samples, 0.07%)</title><rect x="99.0812%" y="773" width="0.0671%" height="15" fill="rgb(249,222,43)" fg:x="57585" fg:w="39"/><text x="99.3312%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (39 samples, 0.07%)</title><rect x="99.0812%" y="757" width="0.0671%" height="15" fill="rgb(221,3,27)" fg:x="57585" fg:w="39"/><text x="99.3312%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.07%)</title><rect x="99.0812%" y="741" width="0.0671%" height="15" fill="rgb(228,180,5)" fg:x="57585" fg:w="39"/><text x="99.3312%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.02%)</title><rect x="99.1259%" y="725" width="0.0224%" height="15" fill="rgb(227,131,42)" fg:x="57611" fg:w="13"/><text x="99.3759%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.02%)</title><rect x="99.1259%" y="709" width="0.0224%" height="15" fill="rgb(212,3,39)" fg:x="57611" fg:w="13"/><text x="99.3759%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.02%)</title><rect x="99.1277%" y="693" width="0.0206%" height="15" fill="rgb(226,45,5)" fg:x="57612" fg:w="12"/><text x="99.3777%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (161 samples, 0.28%)</title><rect x="98.8764%" y="933" width="0.2770%" height="15" fill="rgb(215,167,45)" fg:x="57466" fg:w="161"/><text x="99.1264%" y="943.50"></text></g><g><title>&lt;T as core::option::SpecOptionPartialEq&gt;::eq (161 samples, 0.28%)</title><rect x="98.8764%" y="917" width="0.2770%" height="15" fill="rgb(250,218,53)" fg:x="57466" fg:w="161"/><text x="99.1264%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (160 samples, 0.28%)</title><rect x="98.8782%" y="901" width="0.2753%" height="15" fill="rgb(207,140,0)" fg:x="57467" fg:w="160"/><text x="99.1282%" y="911.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (160 samples, 0.28%)</title><rect x="98.8782%" y="885" width="0.2753%" height="15" fill="rgb(238,133,51)" fg:x="57467" fg:w="160"/><text x="99.1282%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (52 samples, 0.09%)</title><rect x="99.0640%" y="869" width="0.0895%" height="15" fill="rgb(218,203,53)" fg:x="57575" fg:w="52"/><text x="99.3140%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="99.1638%" y="821" width="0.0120%" height="15" fill="rgb(226,184,25)" fg:x="57633" fg:w="7"/><text x="99.4138%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (7 samples, 0.01%)</title><rect x="99.1638%" y="805" width="0.0120%" height="15" fill="rgb(231,121,21)" fg:x="57633" fg:w="7"/><text x="99.4138%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="99.1621%" y="885" width="0.0172%" height="15" fill="rgb(251,14,34)" fg:x="57632" fg:w="10"/><text x="99.4121%" y="895.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="99.1621%" y="869" width="0.0172%" height="15" fill="rgb(249,193,11)" fg:x="57632" fg:w="10"/><text x="99.4121%" y="879.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="99.1621%" y="853" width="0.0172%" height="15" fill="rgb(220,172,37)" fg:x="57632" fg:w="10"/><text x="99.4121%" y="863.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="99.1638%" y="837" width="0.0155%" height="15" fill="rgb(231,229,43)" fg:x="57633" fg:w="9"/><text x="99.4138%" y="847.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="99.1844%" y="757" width="0.0224%" height="15" fill="rgb(250,161,5)" fg:x="57645" fg:w="13"/><text x="99.4344%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="99.1844%" y="741" width="0.0224%" height="15" fill="rgb(218,225,18)" fg:x="57645" fg:w="13"/><text x="99.4344%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.02%)</title><rect x="99.1844%" y="725" width="0.0224%" height="15" fill="rgb(245,45,42)" fg:x="57645" fg:w="13"/><text x="99.4344%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="99.1948%" y="709" width="0.0120%" height="15" fill="rgb(211,115,1)" fg:x="57651" fg:w="7"/><text x="99.4448%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.03%)</title><rect x="99.1844%" y="789" width="0.0344%" height="15" fill="rgb(248,133,52)" fg:x="57645" fg:w="20"/><text x="99.4344%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20 samples, 0.03%)</title><rect x="99.1844%" y="773" width="0.0344%" height="15" fill="rgb(238,100,21)" fg:x="57645" fg:w="20"/><text x="99.4344%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (11 samples, 0.02%)</title><rect x="99.2309%" y="725" width="0.0189%" height="15" fill="rgb(247,144,11)" fg:x="57672" fg:w="11"/><text x="99.4809%" y="735.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (11 samples, 0.02%)</title><rect x="99.2309%" y="709" width="0.0189%" height="15" fill="rgb(206,164,16)" fg:x="57672" fg:w="11"/><text x="99.4809%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (10 samples, 0.02%)</title><rect x="99.2326%" y="693" width="0.0172%" height="15" fill="rgb(222,34,3)" fg:x="57673" fg:w="10"/><text x="99.4826%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (10 samples, 0.02%)</title><rect x="99.2326%" y="677" width="0.0172%" height="15" fill="rgb(248,82,4)" fg:x="57673" fg:w="10"/><text x="99.4826%" y="687.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (10 samples, 0.02%)</title><rect x="99.2326%" y="661" width="0.0172%" height="15" fill="rgb(228,81,46)" fg:x="57673" fg:w="10"/><text x="99.4826%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (14 samples, 0.02%)</title><rect x="99.2309%" y="741" width="0.0241%" height="15" fill="rgb(227,67,47)" fg:x="57672" fg:w="14"/><text x="99.4809%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.01%)</title><rect x="99.2584%" y="741" width="0.0120%" height="15" fill="rgb(215,93,53)" fg:x="57688" fg:w="7"/><text x="99.5084%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.01%)</title><rect x="99.2584%" y="725" width="0.0120%" height="15" fill="rgb(248,194,39)" fg:x="57688" fg:w="7"/><text x="99.5084%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (72 samples, 0.12%)</title><rect x="99.1621%" y="917" width="0.1239%" height="15" fill="rgb(215,5,19)" fg:x="57632" fg:w="72"/><text x="99.4121%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (72 samples, 0.12%)</title><rect x="99.1621%" y="901" width="0.1239%" height="15" fill="rgb(226,215,51)" fg:x="57632" fg:w="72"/><text x="99.4121%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::_{{closure}} (62 samples, 0.11%)</title><rect x="99.1793%" y="885" width="0.1067%" height="15" fill="rgb(225,56,26)" fg:x="57642" fg:w="62"/><text x="99.4293%" y="895.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::_{{closure}} (60 samples, 0.10%)</title><rect x="99.1827%" y="869" width="0.1032%" height="15" fill="rgb(222,75,29)" fg:x="57644" fg:w="60"/><text x="99.4327%" y="879.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (60 samples, 0.10%)</title><rect x="99.1827%" y="853" width="0.1032%" height="15" fill="rgb(236,139,6)" fg:x="57644" fg:w="60"/><text x="99.4327%" y="863.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (60 samples, 0.10%)</title><rect x="99.1827%" y="837" width="0.1032%" height="15" fill="rgb(223,137,36)" fg:x="57644" fg:w="60"/><text x="99.4327%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (60 samples, 0.10%)</title><rect x="99.1827%" y="821" width="0.1032%" height="15" fill="rgb(226,99,2)" fg:x="57644" fg:w="60"/><text x="99.4327%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (60 samples, 0.10%)</title><rect x="99.1827%" y="805" width="0.1032%" height="15" fill="rgb(206,133,23)" fg:x="57644" fg:w="60"/><text x="99.4327%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (39 samples, 0.07%)</title><rect x="99.2188%" y="789" width="0.0671%" height="15" fill="rgb(243,173,15)" fg:x="57665" fg:w="39"/><text x="99.4688%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (39 samples, 0.07%)</title><rect x="99.2188%" y="773" width="0.0671%" height="15" fill="rgb(228,69,28)" fg:x="57665" fg:w="39"/><text x="99.4688%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (38 samples, 0.07%)</title><rect x="99.2206%" y="757" width="0.0654%" height="15" fill="rgb(212,51,22)" fg:x="57666" fg:w="38"/><text x="99.4706%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (247 samples, 0.42%)</title><rect x="98.8696%" y="1045" width="0.4250%" height="15" fill="rgb(227,113,0)" fg:x="57462" fg:w="247"/><text x="99.1196%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (246 samples, 0.42%)</title><rect x="98.8713%" y="1029" width="0.4233%" height="15" fill="rgb(252,84,27)" fg:x="57463" fg:w="246"/><text x="99.1213%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (244 samples, 0.42%)</title><rect x="98.8747%" y="1013" width="0.4198%" height="15" fill="rgb(223,145,39)" fg:x="57465" fg:w="244"/><text x="99.1247%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (244 samples, 0.42%)</title><rect x="98.8747%" y="997" width="0.4198%" height="15" fill="rgb(239,219,30)" fg:x="57465" fg:w="244"/><text x="99.1247%" y="1007.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (244 samples, 0.42%)</title><rect x="98.8747%" y="981" width="0.4198%" height="15" fill="rgb(224,196,39)" fg:x="57465" fg:w="244"/><text x="99.1247%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (244 samples, 0.42%)</title><rect x="98.8747%" y="965" width="0.4198%" height="15" fill="rgb(205,35,43)" fg:x="57465" fg:w="244"/><text x="99.1247%" y="975.50"></text></g><g><title>&lt;aes_grinder::algo::Algo as core::cmp::PartialEq&gt;::eq (243 samples, 0.42%)</title><rect x="98.8764%" y="949" width="0.4181%" height="15" fill="rgb(228,201,21)" fg:x="57466" fg:w="243"/><text x="99.1264%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (82 samples, 0.14%)</title><rect x="99.1535%" y="933" width="0.1411%" height="15" fill="rgb(237,118,16)" fg:x="57627" fg:w="82"/><text x="99.4035%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (252 samples, 0.43%)</title><rect x="98.8644%" y="1077" width="0.4336%" height="15" fill="rgb(241,17,19)" fg:x="57459" fg:w="252"/><text x="99.1144%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (252 samples, 0.43%)</title><rect x="98.8644%" y="1061" width="0.4336%" height="15" fill="rgb(214,10,25)" fg:x="57459" fg:w="252"/><text x="99.1144%" y="1071.50"></text></g><g><title>aes_grinder::exaustive_search::exhaustive_search (57,650 samples, 99.19%)</title><rect x="0.1067%" y="1157" width="99.1930%" height="15" fill="rgb(238,37,29)" fg:x="62" fg:w="57650"/><text x="0.3567%" y="1167.50">aes_grinder::exaustive_search::exhaustive_search</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::take (268 samples, 0.46%)</title><rect x="98.8386%" y="1141" width="0.4611%" height="15" fill="rgb(253,83,25)" fg:x="57444" fg:w="268"/><text x="99.0886%" y="1151.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::take (268 samples, 0.46%)</title><rect x="98.8386%" y="1125" width="0.4611%" height="15" fill="rgb(234,192,12)" fg:x="57444" fg:w="268"/><text x="99.0886%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (268 samples, 0.46%)</title><rect x="98.8386%" y="1109" width="0.4611%" height="15" fill="rgb(241,216,45)" fg:x="57444" fg:w="268"/><text x="99.0886%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (253 samples, 0.44%)</title><rect x="98.8644%" y="1093" width="0.4353%" height="15" fill="rgb(242,22,33)" fg:x="57459" fg:w="253"/><text x="99.1144%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="99.3118%" y="981" width="0.0206%" height="15" fill="rgb(231,105,49)" fg:x="57719" fg:w="12"/><text x="99.5618%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.02%)</title><rect x="99.3118%" y="965" width="0.0206%" height="15" fill="rgb(218,204,15)" fg:x="57719" fg:w="12"/><text x="99.5618%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (11 samples, 0.02%)</title><rect x="99.3135%" y="949" width="0.0189%" height="15" fill="rgb(235,138,41)" fg:x="57720" fg:w="11"/><text x="99.5635%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.02%)</title><rect x="99.3135%" y="933" width="0.0189%" height="15" fill="rgb(246,0,9)" fg:x="57720" fg:w="11"/><text x="99.5635%" y="943.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_column (16 samples, 0.03%)</title><rect x="99.3066%" y="1109" width="0.0275%" height="15" fill="rgb(210,74,4)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.03%)</title><rect x="99.3066%" y="1093" width="0.0275%" height="15" fill="rgb(250,60,41)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="99.3066%" y="1077" width="0.0275%" height="15" fill="rgb(220,115,12)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="99.3066%" y="1061" width="0.0275%" height="15" fill="rgb(237,100,13)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.03%)</title><rect x="99.3066%" y="1045" width="0.0275%" height="15" fill="rgb(213,55,26)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (16 samples, 0.03%)</title><rect x="99.3066%" y="1029" width="0.0275%" height="15" fill="rgb(216,17,4)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (16 samples, 0.03%)</title><rect x="99.3066%" y="1013" width="0.0275%" height="15" fill="rgb(220,153,47)" fg:x="57716" fg:w="16"/><text x="99.5566%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="99.3100%" y="997" width="0.0241%" height="15" fill="rgb(215,131,9)" fg:x="57718" fg:w="14"/><text x="99.5600%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (18 samples, 0.03%)</title><rect x="99.3513%" y="933" width="0.0310%" height="15" fill="rgb(233,46,42)" fg:x="57742" fg:w="18"/><text x="99.6013%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.03%)</title><rect x="99.3531%" y="917" width="0.0293%" height="15" fill="rgb(226,86,7)" fg:x="57743" fg:w="17"/><text x="99.6031%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.03%)</title><rect x="99.3513%" y="965" width="0.0327%" height="15" fill="rgb(239,226,21)" fg:x="57742" fg:w="19"/><text x="99.6013%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (19 samples, 0.03%)</title><rect x="99.3513%" y="949" width="0.0327%" height="15" fill="rgb(244,137,22)" fg:x="57742" fg:w="19"/><text x="99.6013%" y="959.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_column (28 samples, 0.05%)</title><rect x="99.3410%" y="1093" width="0.0482%" height="15" fill="rgb(211,139,35)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.05%)</title><rect x="99.3410%" y="1077" width="0.0482%" height="15" fill="rgb(214,62,50)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.05%)</title><rect x="99.3410%" y="1061" width="0.0482%" height="15" fill="rgb(212,113,44)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.05%)</title><rect x="99.3410%" y="1045" width="0.0482%" height="15" fill="rgb(226,150,43)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.05%)</title><rect x="99.3410%" y="1029" width="0.0482%" height="15" fill="rgb(250,71,37)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.05%)</title><rect x="99.3410%" y="1013" width="0.0482%" height="15" fill="rgb(219,76,19)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 0.05%)</title><rect x="99.3410%" y="997" width="0.0482%" height="15" fill="rgb(250,39,11)" fg:x="57736" fg:w="28"/><text x="99.5910%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.04%)</title><rect x="99.3479%" y="981" width="0.0413%" height="15" fill="rgb(230,64,31)" fg:x="57740" fg:w="24"/><text x="99.5979%" y="991.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_column (16 samples, 0.03%)</title><rect x="99.3892%" y="1093" width="0.0275%" height="15" fill="rgb(208,222,23)" fg:x="57764" fg:w="16"/><text x="99.6392%" y="1103.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_empty_colums (51 samples, 0.09%)</title><rect x="99.3341%" y="1109" width="0.0878%" height="15" fill="rgb(227,125,18)" fg:x="57732" fg:w="51"/><text x="99.5841%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.02%)</title><rect x="99.4288%" y="949" width="0.0155%" height="15" fill="rgb(234,210,9)" fg:x="57787" fg:w="9"/><text x="99.6788%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.02%)</title><rect x="99.4288%" y="933" width="0.0155%" height="15" fill="rgb(217,127,24)" fg:x="57787" fg:w="9"/><text x="99.6788%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="99.4288%" y="981" width="0.0172%" height="15" fill="rgb(239,141,48)" fg:x="57787" fg:w="10"/><text x="99.6788%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (10 samples, 0.02%)</title><rect x="99.4288%" y="965" width="0.0172%" height="15" fill="rgb(227,109,8)" fg:x="57787" fg:w="10"/><text x="99.6788%" y="975.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_row (19 samples, 0.03%)</title><rect x="99.4219%" y="1109" width="0.0327%" height="15" fill="rgb(235,184,23)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.03%)</title><rect x="99.4219%" y="1093" width="0.0327%" height="15" fill="rgb(227,226,48)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="99.4219%" y="1077" width="0.0327%" height="15" fill="rgb(206,150,11)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="99.4219%" y="1061" width="0.0327%" height="15" fill="rgb(254,2,33)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 0.03%)</title><rect x="99.4219%" y="1045" width="0.0327%" height="15" fill="rgb(243,160,20)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (19 samples, 0.03%)</title><rect x="99.4219%" y="1029" width="0.0327%" height="15" fill="rgb(218,208,30)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (19 samples, 0.03%)</title><rect x="99.4219%" y="1013" width="0.0327%" height="15" fill="rgb(224,120,49)" fg:x="57783" fg:w="19"/><text x="99.6719%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.03%)</title><rect x="99.4270%" y="997" width="0.0275%" height="15" fill="rgb(246,12,2)" fg:x="57786" fg:w="16"/><text x="99.6770%" y="1007.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::Index&lt;(usize,usize)&gt;&gt;::index (11 samples, 0.02%)</title><rect x="99.4752%" y="1093" width="0.0189%" height="15" fill="rgb(236,117,3)" fg:x="57814" fg:w="11"/><text x="99.7252%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="99.4838%" y="1077" width="0.0103%" height="15" fill="rgb(216,128,52)" fg:x="57819" fg:w="6"/><text x="99.7338%" y="1087.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::ops::index::IndexMut&lt;(usize,usize)&gt;&gt;::index_mut (8 samples, 0.01%)</title><rect x="99.4941%" y="1093" width="0.0138%" height="15" fill="rgb(246,145,19)" fg:x="57825" fg:w="8"/><text x="99.7441%" y="1103.50"></text></g><g><title>aes_grinder::matrix::Matrix::remove_variable (128 samples, 0.22%)</title><rect x="99.3049%" y="1125" width="0.2202%" height="15" fill="rgb(222,11,46)" fg:x="57715" fg:w="128"/><text x="99.5549%" y="1135.50"></text></g><g><title>aes_grinder::matrix::Matrix::solve_on (41 samples, 0.07%)</title><rect x="99.4546%" y="1109" width="0.0705%" height="15" fill="rgb(245,82,36)" fg:x="57802" fg:w="41"/><text x="99.7046%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="99.5475%" y="837" width="0.0120%" height="15" fill="rgb(250,73,51)" fg:x="57856" fg:w="7"/><text x="99.7975%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.03%)</title><rect x="99.5337%" y="869" width="0.0310%" height="15" fill="rgb(221,189,23)" fg:x="57848" fg:w="18"/><text x="99.7837%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (15 samples, 0.03%)</title><rect x="99.5389%" y="853" width="0.0258%" height="15" fill="rgb(210,33,7)" fg:x="57851" fg:w="15"/><text x="99.7889%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.04%)</title><rect x="99.5286%" y="901" width="0.0447%" height="15" fill="rgb(210,107,22)" fg:x="57845" fg:w="26"/><text x="99.7786%" y="911.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.04%)</title><rect x="99.5286%" y="885" width="0.0447%" height="15" fill="rgb(222,116,37)" fg:x="57845" fg:w="26"/><text x="99.7786%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.05%)</title><rect x="99.5268%" y="917" width="0.0482%" height="15" fill="rgb(254,17,48)" fg:x="57844" fg:w="28"/><text x="99.7768%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="99.5871%" y="821" width="0.0120%" height="15" fill="rgb(224,36,32)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.01%)</title><rect x="99.5871%" y="805" width="0.0120%" height="15" fill="rgb(232,90,46)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.01%)</title><rect x="99.5871%" y="789" width="0.0120%" height="15" fill="rgb(241,66,40)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.01%)</title><rect x="99.5871%" y="773" width="0.0120%" height="15" fill="rgb(249,184,29)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="99.5871%" y="757" width="0.0120%" height="15" fill="rgb(231,181,1)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="767.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.01%)</title><rect x="99.5871%" y="741" width="0.0120%" height="15" fill="rgb(224,94,2)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="751.50"></text></g><g><title>malloc (7 samples, 0.01%)</title><rect x="99.5871%" y="725" width="0.0120%" height="15" fill="rgb(229,170,15)" fg:x="57879" fg:w="7"/><text x="99.8371%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (45 samples, 0.08%)</title><rect x="99.5251%" y="965" width="0.0774%" height="15" fill="rgb(240,127,35)" fg:x="57843" fg:w="45"/><text x="99.7751%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (45 samples, 0.08%)</title><rect x="99.5251%" y="949" width="0.0774%" height="15" fill="rgb(248,196,34)" fg:x="57843" fg:w="45"/><text x="99.7751%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.08%)</title><rect x="99.5251%" y="933" width="0.0774%" height="15" fill="rgb(236,137,7)" fg:x="57843" fg:w="45"/><text x="99.7751%" y="943.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (16 samples, 0.03%)</title><rect x="99.5750%" y="917" width="0.0275%" height="15" fill="rgb(235,127,16)" fg:x="57872" fg:w="16"/><text x="99.8250%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12 samples, 0.02%)</title><rect x="99.5819%" y="901" width="0.0206%" height="15" fill="rgb(250,192,54)" fg:x="57876" fg:w="12"/><text x="99.8319%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="99.5871%" y="885" width="0.0155%" height="15" fill="rgb(218,98,20)" fg:x="57879" fg:w="9"/><text x="99.8371%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.02%)</title><rect x="99.5871%" y="869" width="0.0155%" height="15" fill="rgb(230,176,47)" fg:x="57879" fg:w="9"/><text x="99.8371%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.02%)</title><rect x="99.5871%" y="853" width="0.0155%" height="15" fill="rgb(244,2,33)" fg:x="57879" fg:w="9"/><text x="99.8371%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.02%)</title><rect x="99.5871%" y="837" width="0.0155%" height="15" fill="rgb(231,100,17)" fg:x="57879" fg:w="9"/><text x="99.8371%" y="847.50"></text></g><g><title>aes_grinder::matrix::Matrix::get_all_variables (48 samples, 0.08%)</title><rect x="99.5251%" y="1045" width="0.0826%" height="15" fill="rgb(245,23,12)" fg:x="57843" fg:w="48"/><text x="99.7751%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (48 samples, 0.08%)</title><rect x="99.5251%" y="1029" width="0.0826%" height="15" fill="rgb(249,55,22)" fg:x="57843" fg:w="48"/><text x="99.7751%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (48 samples, 0.08%)</title><rect x="99.5251%" y="1013" width="0.0826%" height="15" fill="rgb(207,134,9)" fg:x="57843" fg:w="48"/><text x="99.7751%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (48 samples, 0.08%)</title><rect x="99.5251%" y="997" width="0.0826%" height="15" fill="rgb(218,134,0)" fg:x="57843" fg:w="48"/><text x="99.7751%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (48 samples, 0.08%)</title><rect x="99.5251%" y="981" width="0.0826%" height="15" fill="rgb(213,212,33)" fg:x="57843" fg:w="48"/><text x="99.7751%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (17 samples, 0.03%)</title><rect x="99.6077%" y="1045" width="0.0293%" height="15" fill="rgb(252,106,18)" fg:x="57891" fg:w="17"/><text x="99.8577%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="99.6077%" y="1029" width="0.0293%" height="15" fill="rgb(208,126,42)" fg:x="57891" fg:w="17"/><text x="99.8577%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (17 samples, 0.03%)</title><rect x="99.6077%" y="1013" width="0.0293%" height="15" fill="rgb(246,175,29)" fg:x="57891" fg:w="17"/><text x="99.8577%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (17 samples, 0.03%)</title><rect x="99.6077%" y="997" width="0.0293%" height="15" fill="rgb(215,13,50)" fg:x="57891" fg:w="17"/><text x="99.8577%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 0.03%)</title><rect x="99.6077%" y="981" width="0.0293%" height="15" fill="rgb(216,172,15)" fg:x="57891" fg:w="17"/><text x="99.8577%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.02%)</title><rect x="99.6129%" y="965" width="0.0241%" height="15" fill="rgb(212,103,13)" fg:x="57894" fg:w="14"/><text x="99.8629%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="99.6146%" y="949" width="0.0224%" height="15" fill="rgb(231,171,36)" fg:x="57895" fg:w="13"/><text x="99.8646%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (6 samples, 0.01%)</title><rect x="99.6266%" y="933" width="0.0103%" height="15" fill="rgb(250,123,20)" fg:x="57902" fg:w="6"/><text x="99.8766%" y="943.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (6 samples, 0.01%)</title><rect x="99.6387%" y="997" width="0.0103%" height="15" fill="rgb(212,53,50)" fg:x="57909" fg:w="6"/><text x="99.8887%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.01%)</title><rect x="99.6387%" y="981" width="0.0103%" height="15" fill="rgb(243,54,12)" fg:x="57909" fg:w="6"/><text x="99.8887%" y="991.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (6 samples, 0.01%)</title><rect x="99.6387%" y="965" width="0.0103%" height="15" fill="rgb(234,101,34)" fg:x="57909" fg:w="6"/><text x="99.8887%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain (73 samples, 0.13%)</title><rect x="99.5251%" y="1125" width="0.1256%" height="15" fill="rgb(254,67,22)" fg:x="57843" fg:w="73"/><text x="99.7751%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut (73 samples, 0.13%)</title><rect x="99.5251%" y="1109" width="0.1256%" height="15" fill="rgb(250,35,47)" fg:x="57843" fg:w="73"/><text x="99.7751%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain_mut::process_loop (73 samples, 0.13%)</title><rect x="99.5251%" y="1093" width="0.1256%" height="15" fill="rgb(226,126,38)" fg:x="57843" fg:w="73"/><text x="99.7751%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::retain::_{{closure}} (73 samples, 0.13%)</title><rect x="99.5251%" y="1077" width="0.1256%" height="15" fill="rgb(216,138,53)" fg:x="57843" fg:w="73"/><text x="99.7751%" y="1087.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables::_{{closure}} (73 samples, 0.13%)</title><rect x="99.5251%" y="1061" width="0.1256%" height="15" fill="rgb(246,199,43)" fg:x="57843" fg:w="73"/><text x="99.7751%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (8 samples, 0.01%)</title><rect x="99.6370%" y="1045" width="0.0138%" height="15" fill="rgb(232,125,11)" fg:x="57908" fg:w="8"/><text x="99.8870%" y="1055.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (8 samples, 0.01%)</title><rect x="99.6370%" y="1029" width="0.0138%" height="15" fill="rgb(218,219,45)" fg:x="57908" fg:w="8"/><text x="99.8870%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (8 samples, 0.01%)</title><rect x="99.6370%" y="1013" width="0.0138%" height="15" fill="rgb(216,102,54)" fg:x="57908" fg:w="8"/><text x="99.8870%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (6 samples, 0.01%)</title><rect x="99.6714%" y="981" width="0.0103%" height="15" fill="rgb(250,228,7)" fg:x="57928" fg:w="6"/><text x="99.9214%" y="991.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.01%)</title><rect x="99.7058%" y="965" width="0.0120%" height="15" fill="rgb(226,125,25)" fg:x="57948" fg:w="7"/><text x="99.9558%" y="975.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.01%)</title><rect x="99.7058%" y="949" width="0.0120%" height="15" fill="rgb(224,165,27)" fg:x="57948" fg:w="7"/><text x="99.9558%" y="959.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (10 samples, 0.02%)</title><rect x="99.7299%" y="869" width="0.0172%" height="15" fill="rgb(233,86,3)" fg:x="57962" fg:w="10"/><text x="99.9799%" y="879.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (9 samples, 0.02%)</title><rect x="99.7316%" y="853" width="0.0155%" height="15" fill="rgb(228,116,20)" fg:x="57963" fg:w="9"/><text x="99.9816%" y="863.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.01%)</title><rect x="99.7367%" y="837" width="0.0103%" height="15" fill="rgb(209,192,17)" fg:x="57966" fg:w="6"/><text x="99.9867%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (6 samples, 0.01%)</title><rect x="99.7367%" y="821" width="0.0103%" height="15" fill="rgb(224,88,34)" fg:x="57966" fg:w="6"/><text x="99.9867%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6 samples, 0.01%)</title><rect x="99.7471%" y="869" width="0.0103%" height="15" fill="rgb(233,38,6)" fg:x="57972" fg:w="6"/><text x="99.9971%" y="879.50"></text></g><g><title>core::fmt::write (36 samples, 0.06%)</title><rect x="99.6972%" y="981" width="0.0619%" height="15" fill="rgb(212,59,30)" fg:x="57943" fg:w="36"/><text x="99.9472%" y="991.50"></text></g><g><title>core::fmt::rt::Argument::fmt (24 samples, 0.04%)</title><rect x="99.7178%" y="965" width="0.0413%" height="15" fill="rgb(213,80,3)" fg:x="57955" fg:w="24"/><text x="99.9678%" y="975.50"></text></g><g><title>&lt;aes_grinder::utils::Number as core::fmt::Display&gt;::fmt (24 samples, 0.04%)</title><rect x="99.7178%" y="949" width="0.0413%" height="15" fill="rgb(251,178,7)" fg:x="57955" fg:w="24"/><text x="99.9678%" y="959.50"></text></g><g><title>core::fmt::write (19 samples, 0.03%)</title><rect x="99.7264%" y="933" width="0.0327%" height="15" fill="rgb(213,154,26)" fg:x="57960" fg:w="19"/><text x="99.9764%" y="943.50"></text></g><g><title>core::fmt::rt::Argument::fmt (18 samples, 0.03%)</title><rect x="99.7281%" y="917" width="0.0310%" height="15" fill="rgb(238,165,49)" fg:x="57961" fg:w="18"/><text x="99.9781%" y="927.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (18 samples, 0.03%)</title><rect x="99.7281%" y="901" width="0.0310%" height="15" fill="rgb(248,91,46)" fg:x="57961" fg:w="18"/><text x="99.9781%" y="911.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (17 samples, 0.03%)</title><rect x="99.7299%" y="885" width="0.0293%" height="15" fill="rgb(244,21,52)" fg:x="57962" fg:w="17"/><text x="99.9799%" y="895.50"></text></g><g><title>&lt;&amp;mut T as core::fmt::Display&gt;::fmt (62 samples, 0.11%)</title><rect x="99.6542%" y="1013" width="0.1067%" height="15" fill="rgb(247,122,20)" fg:x="57918" fg:w="62"/><text x="99.9042%" y="1023.50"></text></g><g><title>&lt;aes_grinder::matrix::Matrix as core::fmt::Display&gt;::fmt (62 samples, 0.11%)</title><rect x="99.6542%" y="997" width="0.1067%" height="15" fill="rgb(218,27,9)" fg:x="57918" fg:w="62"/><text x="99.9042%" y="1007.50"></text></g><g><title>aes_grinder::matrix::Matrix::delete_alone_variables (269 samples, 0.46%)</title><rect x="99.2997%" y="1141" width="0.4628%" height="15" fill="rgb(246,7,6)" fg:x="57712" fg:w="269"/><text x="99.5497%" y="1151.50"></text></g><g><title>std::io::stdio::_print (63 samples, 0.11%)</title><rect x="99.6542%" y="1125" width="0.1084%" height="15" fill="rgb(227,135,54)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1135.50"></text></g><g><title>std::io::stdio::print_to (63 samples, 0.11%)</title><rect x="99.6542%" y="1109" width="0.1084%" height="15" fill="rgb(247,14,11)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1119.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (63 samples, 0.11%)</title><rect x="99.6542%" y="1093" width="0.1084%" height="15" fill="rgb(206,149,34)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1103.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (63 samples, 0.11%)</title><rect x="99.6542%" y="1077" width="0.1084%" height="15" fill="rgb(227,228,4)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1087.50"></text></g><g><title>std::io::Write::write_fmt (63 samples, 0.11%)</title><rect x="99.6542%" y="1061" width="0.1084%" height="15" fill="rgb(238,218,28)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1071.50"></text></g><g><title>core::fmt::write (63 samples, 0.11%)</title><rect x="99.6542%" y="1045" width="0.1084%" height="15" fill="rgb(252,86,40)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (63 samples, 0.11%)</title><rect x="99.6542%" y="1029" width="0.1084%" height="15" fill="rgb(251,225,11)" fg:x="57918" fg:w="63"/><text x="99.9042%" y="1039.50"></text></g><g><title>aes_grinder::matrix::Matrix::drop_linear_variable (270 samples, 0.46%)</title><rect x="99.2997%" y="1157" width="0.4646%" height="15" fill="rgb(206,46,49)" fg:x="57712" fg:w="270"/><text x="99.5497%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.02%)</title><rect x="99.7952%" y="1045" width="0.0206%" height="15" fill="rgb(245,128,24)" fg:x="58000" fg:w="12"/><text x="100.0452%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.01%)</title><rect x="99.8968%" y="1029" width="0.0138%" height="15" fill="rgb(219,177,34)" fg:x="58059" fg:w="8"/><text x="100.1468%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="99.9105%" y="1029" width="0.0258%" height="15" fill="rgb(218,60,48)" fg:x="58067" fg:w="15"/><text x="100.1605%" y="1039.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (99 samples, 0.17%)</title><rect x="99.7694%" y="1061" width="0.1703%" height="15" fill="rgb(221,11,5)" fg:x="57985" fg:w="99"/><text x="100.0194%" y="1071.50"></text></g><g><title>core::str::validations::next_code_point (72 samples, 0.12%)</title><rect x="99.8159%" y="1045" width="0.1239%" height="15" fill="rgb(220,148,13)" fg:x="58012" fg:w="72"/><text x="100.0659%" y="1055.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="99.9398%" y="1061" width="0.0103%" height="15" fill="rgb(210,16,3)" fg:x="58084" fg:w="6"/><text x="100.1898%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.01%)</title><rect x="99.9398%" y="1045" width="0.0103%" height="15" fill="rgb(236,80,2)" fg:x="58084" fg:w="6"/><text x="100.1898%" y="1055.50"></text></g><g><title>aes_grinder::parser::Parser::get_term (123 samples, 0.21%)</title><rect x="99.7677%" y="1125" width="0.2116%" height="15" fill="rgb(239,129,19)" fg:x="57984" fg:w="123"/><text x="100.0177%" y="1135.50"></text></g><g><title>aes_grinder::parser::Reader::next_char (123 samples, 0.21%)</title><rect x="99.7677%" y="1109" width="0.2116%" height="15" fill="rgb(220,106,35)" fg:x="57984" fg:w="123"/><text x="100.0177%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (123 samples, 0.21%)</title><rect x="99.7677%" y="1093" width="0.2116%" height="15" fill="rgb(252,139,45)" fg:x="57984" fg:w="123"/><text x="100.0177%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (123 samples, 0.21%)</title><rect x="99.7677%" y="1077" width="0.2116%" height="15" fill="rgb(229,8,36)" fg:x="57984" fg:w="123"/><text x="100.0177%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (17 samples, 0.03%)</title><rect x="99.9501%" y="1061" width="0.0293%" height="15" fill="rgb(230,126,33)" fg:x="58090" fg:w="17"/><text x="100.2001%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (15 samples, 0.03%)</title><rect x="99.9535%" y="1045" width="0.0258%" height="15" fill="rgb(239,140,21)" fg:x="58092" fg:w="15"/><text x="100.2035%" y="1055.50"></text></g><g><title>aes_grinder::parser::Parser::parse_line (125 samples, 0.22%)</title><rect x="99.7677%" y="1141" width="0.2151%" height="15" fill="rgb(254,104,9)" fg:x="57984" fg:w="125"/><text x="100.0177%" y="1151.50"></text></g><g><title>aes_grinder::parser::Parser::parse_system (134 samples, 0.23%)</title><rect x="99.7643%" y="1157" width="0.2306%" height="15" fill="rgb(239,52,14)" fg:x="57982" fg:w="134"/><text x="100.0143%" y="1167.50"></text></g><g><title>aes_grinder::parser::Parser::skip_whitespaces (7 samples, 0.01%)</title><rect x="99.9828%" y="1141" width="0.0120%" height="15" fill="rgb(208,227,44)" fg:x="58109" fg:w="7"/><text x="100.2328%" y="1151.50"></text></g><g><title>aes_grinder::parser::Reader::next_char (7 samples, 0.01%)</title><rect x="99.9828%" y="1125" width="0.0120%" height="15" fill="rgb(246,18,19)" fg:x="58109" fg:w="7"/><text x="100.2328%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::nth (7 samples, 0.01%)</title><rect x="99.9828%" y="1109" width="0.0120%" height="15" fill="rgb(235,228,25)" fg:x="58109" fg:w="7"/><text x="100.2328%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (7 samples, 0.01%)</title><rect x="99.9828%" y="1093" width="0.0120%" height="15" fill="rgb(240,156,20)" fg:x="58109" fg:w="7"/><text x="100.2328%" y="1103.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="99.9845%" y="1077" width="0.0103%" height="15" fill="rgb(224,8,20)" fg:x="58110" fg:w="6"/><text x="100.2345%" y="1087.50"></text></g><g><title>all (58,119 samples, 100%)</title><rect x="0.0000%" y="1477" width="100.0000%" height="15" fill="rgb(214,12,52)" fg:x="0" fg:w="58119"/><text x="0.2500%" y="1487.50"></text></g><g><title>aes_grinder (58,119 samples, 100.00%)</title><rect x="0.0000%" y="1461" width="100.0000%" height="15" fill="rgb(211,220,47)" fg:x="0" fg:w="58119"/><text x="0.2500%" y="1471.50">aes_grinder</text></g><g><title>_start (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1445" width="99.8933%" height="15" fill="rgb(250,173,5)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1455.50">_start</text></g><g><title>__libc_start_main (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1429" width="99.8933%" height="15" fill="rgb(250,125,52)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1439.50">__libc_start_main</text></g><g><title>[libc.so.6] (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1413" width="99.8933%" height="15" fill="rgb(209,133,18)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1423.50">[libc.so.6]</text></g><g><title>main (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1397" width="99.8933%" height="15" fill="rgb(216,173,22)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1407.50">main</text></g><g><title>std::rt::lang_start (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1381" width="99.8933%" height="15" fill="rgb(205,3,22)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1391.50">std::rt::lang_start</text></g><g><title>std::rt::lang_start_internal (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1365" width="99.8933%" height="15" fill="rgb(248,22,20)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1375.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1349" width="99.8933%" height="15" fill="rgb(233,6,29)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1359.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1333" width="99.8933%" height="15" fill="rgb(240,22,54)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1343.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1317" width="99.8933%" height="15" fill="rgb(231,133,32)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1327.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::_{{closure}} (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1301" width="99.8933%" height="15" fill="rgb(248,193,4)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1311.50">std::rt::lang_start_internal::_{{closure}}</text></g><g><title>std::panic::catch_unwind (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1285" width="99.8933%" height="15" fill="rgb(211,178,46)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1295.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1269" width="99.8933%" height="15" fill="rgb(224,5,42)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1279.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1253" width="99.8933%" height="15" fill="rgb(239,176,25)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1263.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1237" width="99.8933%" height="15" fill="rgb(245,187,50)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1247.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1221" width="99.8933%" height="15" fill="rgb(248,24,15)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1231.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1205" width="99.8933%" height="15" fill="rgb(205,166,13)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1215.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1189" width="99.8933%" height="15" fill="rgb(208,114,23)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1199.50">core::ops::function::FnOnce::call_once</text></g><g><title>aes_grinder::main (58,057 samples, 99.89%)</title><rect x="0.1067%" y="1173" width="99.8933%" height="15" fill="rgb(239,127,18)" fg:x="62" fg:w="58057"/><text x="0.3567%" y="1183.50">aes_grinder::main</text></g></svg></svg>