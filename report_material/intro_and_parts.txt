The research project we had to work on was about the AES cryptographic protocol that is used in our everyday life to secure our communications and make them private.
AES is a quiet robust protocol which can t be broken in a resonnable time (the best complexity find in an full key-recovering attack is 2 126.0 for AES-128, 2 189.9 for AES-192 and 2 254.3 for AES-256).

Part of the reseach, called  Meet-In-The-Middle Attacks, is focused on reduced round protocols, that is the case in our paper. This paper "Automatic Search of Attacks on round-reduced AES and Applications" was produced by Charles Bouillaguet, Patrick Derbez, and Pierre-Alain Fouque and publised in 2012.

Our aim was to redevelop a software (initialy developped for the paper) that can find the possible solutions of AES, represented as an equation system. Our supervisor, Patrick Derbez, would like we did that in a most modern way and that the code could be reused later. He suggested us to developp it in C++ but the team would like to challenge themself and decided to develop the project with the Rust programming language (the only constraint was to have speedy language for all the matrix computations, our supervisor gave us his approval to use the programming language).

Literature Review
Papers in relation
For our projet, we just add to study the current paper.
But as this paper is a bit dated, we decide to look further and to look to find others to put them into relation.

//Mention du papier de 2018 pour comparer avec ce qui se fait actuellement ??????
	relation with more recent papers published this 5 last years.


During our reseaches, we found that our paper was part of the thesis of our supervisor. His thesis was divided into several works that we can list below :

- Automated Tool For Low Data Complexity Attacks on AES and Derivatives : This part is in relation with our tool that is a tool to find algorithms to find the most efficient solution to solve a sub equation system

- Low Data Complexity Attacks on Round-Reduced AES-128 : this show all the ettacks founded by the developped software on the reduced versions of AES 128 (with couples of pairs cipher/plan text)

- Low Data Complexity Attacks on AES : Describe the results on algortihms based on AES

- Fault Attacks on the AES : Describe some fault attacks where the attacker could modify one or several bytes on the internal state of AES

- Fatser Chosen-Key Distinguishers on Reduced-Round AES : The objective is here to generate triplets of messages couples and one key witch as some particular properties

- Exhausting Demirci-Selcuk Meet in the Middle Attacks agains Reduced-Round AES : this is a description of an improvment in data of the attacks of Denirci and Selcuk (use the tool to find the attacks)

- The differential Enumeration Technique : Improvement (chen the plan test is choosen) on 7, 8. 9 rounds (on different versions od AES) of the attacks already known

All this works were published in this papers (but we are not currently give here more details about them) :
- Automated Search of Attacks on Round-Reduced AES and Applications (CRYPTO 2011)
- Meet-in-The-Middle and Impossible Differential Fault Analysis on AES (CHES 2011)
- Faster Chosen-Key Distinguishers on Reduced-Round AES (INDOCRYPT 2012)
- Low Data Complexity Attacks on AES (IEE Transactions on Information Theory 58)
- Improved Key Recovery Attacks on Reduced-Round AES in the Simple-Key Setting (Eurocrypt 2013)
- Exausting Demirci-Selcuk Meet-in-the-middle Attacks against Reduced-Round AES (FSE 2013)



Methodology
As our projet was to develop a tool, we needed to understand the mathematical concepts behind it.
The first step in our journey was to well understand the core concepts of the AES algorithm that we studied during the first semester in the cryptography lecture.
The steps of the AES protocol could be described as below :

-
-
-
-

In this project, a set of equation represent the AES equation system. Our supervisor give us a file when in each line, we can find elements where each of us represent a different step state of a variable of the equation system.

Results & Discussion
The result of our development is as ask by our supervisor, a graph a tree represented the base solvers and the potential relation betwenn them (a node link to one or two others). Each node owns one or several solutions of the equations. At the time I write the report, our results for finding solutions of the equation system are false due to a problem in the linear variables eliminitation (change this sentense when the problem will be solved)

As our project is a first prototype in Rust, we didn t really optimise it, but we could certainly improve it if we had more time to do it.

Moreover, we test our program on only one round of AES in the specific field of AES. This could be interesting to improve it and to modify the program to make it working on others corps and for more rounds and maybe to combine it with the work of our supervisor on finding the solutions of AES equations on several rounds.

Conclusion

Bibliography
Thesis of Patrick Derbez
